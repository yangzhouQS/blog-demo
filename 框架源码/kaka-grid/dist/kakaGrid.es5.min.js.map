{"version":3,"file":"kakaGrid.es5.min.js","sources":["tslib/tslib.es6.js","src/internal/utils.ts","src/columns/action/action-utils.ts","src/core/draw-grid/DG_EVENT_TYPE.ts","src/core/draw-grid/KEY_CODE.ts","src/internal/symbolManager.ts","src/columns/action/actionBind.ts","src/columns/action/BaseAction.ts","src/columns/action/Action.ts","src/columns/action/Editor.ts","src/columns/action/BaseInputEditor.ts","src/columns/action/BaseActionInput.ts","src/internal/animate.ts","src/columns/action/BaseCheckEditor.ts","src/columns/action/ButtonAction.ts","src/columns/action/CheckEditor.ts","src/columns/action/SwitchEditor.ts","src/internal/dom.ts","src/internal/EventHandler.ts","src/internal/style.ts","src/columns/action/internal/input-value-handler.ts","src/columns/utils/index.ts","src/columns/action/internal/InlineInputElement.ts","src/columns/action/InlineInputEditor.ts","src/columns/action/internal/InlineLookupElement.ts","src/columns/action/InlineLookupEditor.ts","src/internal/menu-items.ts","src/columns/action/internal/InlineMenuElement.ts","src/internal/icons.ts","src/internal/Rect.ts","src/columns/type/columnUtils.ts","src/core/EventTarget.ts","src/columns/style/BaseStyle.ts","src/columns/style/BaseStdStyle.ts","src/columns/style/BaseCheckStyle.ts","src/columns/style/Style.ts","src/columns/style/ButtonStyle.ts","src/columns/style/CheckStyle.ts","src/columns/style/SwitchStyle.ts","src/columns/style/DateStyle.ts","src/columns/style/DrawStyle.ts","src/columns/style/IconStyle.ts","src/columns/style/ImageStyle.ts","src/columns/style/LookupStyle.ts","src/columns/style/MenuStyle.ts","src/columns/style/MultilineTextStyle.ts","src/columns/style/NumberStyle.ts","src/columns/style/PercentCompleteBarStyle.ts","src/columns/style/RadioStyle.ts","src/columns/style/TreeStyle.ts","src/columns/style.ts","src/columns/type/BaseColumn.ts","src/columns/type/MenuColumn.ts","src/columns/action/InlineMenuEditor.ts","src/columns/action/internal/InlineTextAreaElement.ts","src/columns/action/InlineTextAreaEditor.ts","src/columns/action/RadioEditor.ts","src/columns/action/internal/SmallDialogInputElement.ts","src/columns/action/SmallDialogInputEditor.ts","src/columns/immutable/ImmutableCheckEditor.ts","src/columns/immutable/ImmutableRadioEditor.ts","src/columns/immutable/ImmutableInputEditor.ts","src/columns/immutable/ImmutableSwitchEditor.ts","src/columns/action.ts","src/columns/type/BaseCheckColumn.ts","src/columns/style/BranchGraphStyle.ts","src/columns/type/branch/BranchLine.ts","src/columns/type/branch/BranchPoint.ts","src/columns/type/BranchGraphColumn.ts","src/columns/type/DateColumn.ts","src/columns/type/Column.ts","src/columns/type/ButtonColumn.ts","src/columns/type/CheckColumn.ts","src/columns/type/SwitchColumn.ts","src/columns/type/DrawColumn.ts","src/columns/type/IconColumn.ts","src/internal/canvases.ts","src/internal/LRUCache.ts","src/internal/imgs.ts","src/columns/type/ImageColumn.ts","src/columns/type/NumberColumn.ts","src/columns/type/LookupColumn.ts","src/columns/type/MultilineTextColumn.ts","src/columns/type/PercentCompleteBarColumn.ts","src/internal/sort.ts","src/data/DataSource.ts","src/data/TreeDataSource.ts","src/columns/type/TreeColumn.ts","src/columns/type/RadioColumn.ts","src/columns/type.ts","src/columns.ts","src/internal/calc.ts","src/internal/hiDPI.ts","src/internal/NumberMap.ts","src/internal/Scrollbar.ts","src/internal/Scrollable.ts","src/core/draw-grid/BaseMouseDownMover.ts","src/core/draw-grid/CellSelector.ts","src/core/draw-grid/ColumnResizer.ts","src/core/draw-grid/DrawCellContext.ts","src/core/draw-grid/DrawLayer.ts","src/core/draw-grid/DrawLayers.ts","src/core/draw-grid/FocusControl.ts","src/core/draw-grid/Selection.ts","src/core/draw-grid/SelectionResizer.ts","src/internal/paste-utils.ts","src/core/DrawGrid.ts","src/core.ts","src/data/CachedDataSource.ts","src/data/PivotDataSource.ts","src/data/filter/DataSourceIterator.ts","src/data/filter/FilterData.ts","src/data/FilterDataSource.ts","src/data.ts","src/header/action/BaseAction.ts","src/header/action/actionBind.ts","src/header/action/action-utils.ts","src/header/action/BaseCheckAction.ts","src/header/action/CheckHeaderAction.ts","src/header/action/SwitchHeaderAction.ts","src/header/action/SortHeaderAction.ts","src/header/immutable/ImmutableCheckHeaderAction.ts","src/header/immutable/ImmutableSortHeaderAction.ts","src/header/immutable/ImmutableSwitchHeaderAction.ts","src/header/action.ts","src/header/style/BaseStyle.ts","src/header/style/BaseStdStyle.ts","src/header/style/Style.ts","src/header/style/BaseCheckStyle.ts","src/header/style/CheckHeaderStyle.ts","src/header/style/SortHeaderStyle.ts","src/header/style/SwitchHeaderStyle.ts","src/header/style/MultilineTextHeaderStyle.ts","src/header/style.ts","src/header/type/BaseHeader.ts","src/header/type/BaseCheckHeader.ts","src/header/type/CheckHeader.ts","src/header/type/headerUtils.ts","src/header/type/Header.ts","src/header/type/SortHeader.ts","src/header/type/SwitchHeader.ts","src/header/type/MultilineTextHeader.ts","src/header/type.ts","src/headers.ts","src/plugins/themes.ts","src/themes/BASIC.ts","src/themes/MATERIAL_DESIGN.ts","src/themes/theme.ts","src/themes.ts","src/internal/color.ts","src/tools/canvasHelper.ts","src/tools.ts","src/list-grid/layout-map/internal/utils.ts","src/list-grid/layout-map/internal/simple-header-layout.ts","src/list-grid/layout-map/internal/multi-layout.ts","src/list-grid/LayoutMap.ts","src/list-grid/LG_EVENT_TYPE.ts","src/columns/message/BaseMessage.ts","src/columns/message/internal/MessageElement.ts","src/columns/message/internal/ErrorMessageElement.ts","src/columns/message/messageUtils.ts","src/columns/message/ErrorMessage.ts","src/columns/message/InfoMessage.ts","src/columns/message/internal/WarningMessageElement.ts","src/columns/message/WarningMessage.ts","src/columns/message/MessageHandler.ts","src/plugins/icons.ts","src/tools/Svg.ts","src/tools/svgToIcon.ts","src/icons.ts","src/internal/legacy/canvas/PathCommands.ts","src/internal/legacy/canvas/PathCommandsParser.ts","src/internal/legacy/canvas/Path2DShim.ts","src/internal/path2DManager.ts","src/element/Inline.ts","src/element/InlineDrawer.ts","src/internal/legacy/fontwatch/FontRuler.ts","src/internal/legacy/fontwatch/FontWatchRunner.ts","src/internal/fonts.ts","src/element/InlineIcon.ts","src/element/InlineImage.ts","src/element/InlinePath2D.ts","src/element/InlineSvg.ts","src/element/inlines.ts","src/GridThemeHelper.ts","src/GridCanvasHelper.ts","src/tooltip/BaseTooltip.ts","src/tooltip/internal/TooltipElement.ts","src/tooltip/Tooltip.ts","src/tooltip/internal/HtmlTooltipElement.ts","src/tooltip/HtmlTooltip.ts","src/tooltip/TooltipHandler.ts","src/ListGrid.ts","src/register.ts","src/kakaGrid.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { CellAddress, CellRange, MaybeCall, MaybePromise } from '../ts-types'\n\nconst isNode =\n  typeof window === 'undefined' || typeof window.window === 'undefined'\n\ntype ArrayElementPredicate<E> = (t: E, i: number, arr: E[]) => boolean\n// type ObjectElementPredicate<T, K extends keyof T> = (\n//   t: T[K],\n//   key?: K,\n//   obj?: T\n// ) => boolean;\n\ntype ArrayElementFunction<E> = (t: E, i: number, arr: E[]) => void\ntype ObjectElementFunction<T, K extends keyof T> = (\n  t: T[K],\n  key: K,\n  obj: T\n) => void\nlet arrayFind: <T>(\n  arr: T[],\n  predicate: ArrayElementPredicate<T>\n) => T | undefined\nlet arrayFindIndex: <T>(arr: T[], predicate: ArrayElementPredicate<T>) => number\nconst array = {\n  get find(): typeof arrayFind {\n    if (arrayFind) {\n      return arrayFind\n    }\n    if (Array.prototype.find) {\n      arrayFind = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): T | undefined => Array.prototype.find.call(arr, predicate)\n    } else {\n      arrayFind = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): T | undefined => {\n        const index = array.findIndex(arr, predicate)\n        return index >= 0 ? arr[index] : undefined\n      }\n    }\n    return arrayFind\n  },\n  get findIndex(): typeof arrayFindIndex {\n    if (arrayFindIndex) {\n      return arrayFindIndex\n    }\n    if (Array.prototype.findIndex) {\n      arrayFindIndex = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): number => Array.prototype.findIndex.call(arr, predicate)\n    } else {\n      arrayFindIndex = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): number => {\n        const { length } = arr\n        for (let i = 0; i < length; i++) {\n          const value = arr[i]\n          if (predicate(value, i, arr)) {\n            return i\n          }\n        }\n        return -1\n      }\n    }\n    return arrayFindIndex\n  },\n}\n\nconst isDef = <T>(data: T | null | undefined | void): data is T => {\n  return data !== null && typeof data !== 'undefined'\n}\n\nconst isDefString = <T>(data: T | null | undefined | void): data is T => {\n  return isDef(data) && (typeof data !== 'string' || data !== '')\n}\n\nfunction analyzeUserAgent(): {\n  IE: boolean\n  Edge: boolean\n  Chrome: boolean\n  Firefox: boolean\n  Safari: boolean\n} {\n  if (isNode) {\n    return {\n      Chrome: false,\n      Edge: false,\n      Firefox: false,\n      IE: false,\n      Safari: false,\n    }\n  } else {\n    const ua = window.navigator.userAgent.toLowerCase()\n    return {\n      IE: !!/(msie|trident)/.exec(ua),\n      Edge: ua.indexOf('edge') > -1,\n      Chrome: ua.indexOf('chrome') > -1 && ua.indexOf('edge') === -1,\n      Firefox: ua.indexOf('firefox') > -1,\n      Safari: ua.indexOf('safari') > -1 && ua.indexOf('edge') === -1,\n    }\n  }\n}\nconst { IE, Chrome, Firefox, Edge, Safari } = analyzeUserAgent()\n\nfunction setReadonly<T, K extends keyof T>(obj: T, name: K, value: T[K]): void {\n  Object.defineProperty(obj, name, {\n    enumerable: false,\n    configurable: true,\n    value,\n  })\n}\n\nexport function each<E>(obj: E[], fn: ArrayElementFunction<E>): void\nexport function each<T, K extends keyof T>(\n  obj: T,\n  fn: ObjectElementFunction<T, K>\n): void\n\nexport function each(obj: any, fn: any): void {\n  for (const key in obj) {\n    fn(obj[key], key, obj)\n  }\n}\n\nfunction isObject(obj: any): obj is Record<string, any> {\n  return obj === Object(obj)\n}\n\nexport function omit<T, K extends keyof T>(source: T, omits: K[]): Omit<T, K> {\n  const result = {} as Omit<T, K>\n  for (const key in source) {\n    if (omits.indexOf(key as never) >= 0) {\n      continue\n    }\n    Object.defineProperty(result, key, {\n      get() {\n        return source[key]\n      },\n      set(val) {\n        source[key] = val\n      },\n      configurable: true,\n      enumerable: true,\n    })\n  }\n  return result\n}\n\nexport function defaults<T>(source: T, defs: Partial<T>): T {\n  const keys: string[] = []\n  const result = {} as T\n  for (const key in source) {\n    keys.push(key)\n    Object.defineProperty(result, key, {\n      get() {\n        const val = source[key]\n        return val === undefined ? defs[key] : val\n      },\n      set(val) {\n        source[key] = val\n      },\n      configurable: true,\n      enumerable: true,\n    })\n  }\n  for (const key in defs) {\n    if (keys.indexOf(key) >= 0) {\n      continue\n    }\n    Object.defineProperty(result, key, {\n      get() {\n        const val = source[key]\n        return val === undefined ? defs[key] : val\n      },\n      set(val) {\n        source[key] = val\n      },\n      configurable: true,\n      enumerable: true,\n    })\n  }\n  return result\n}\n\nfunction extend<T, U>(t: T, u: U): T & U\nfunction extend<T, U, V>(t: T, u: U, v: V): T & U & V\nfunction extend<T>(...args: T[]): T\nfunction extend<T>(...args: T[]): T {\n  const result = {} as T\n  args.forEach((source) => {\n    for (const key in source) {\n      Object.defineProperty(result, key, {\n        get() {\n          return source[key]\n        },\n        set(val) {\n          source[key] = val\n        },\n        configurable: true,\n        enumerable: true,\n      })\n    }\n  })\n  return result\n}\n\nfunction isDescendantElement(root: HTMLElement, target: HTMLElement): boolean {\n  while (target && target.parentElement) {\n    const p = target.parentElement\n    if (root === p) {\n      return true\n    }\n    target = p\n  }\n  return false\n}\n\nfunction applyChainSafe(\n  obj: any,\n  fn: (value: any, name: string) => any,\n  ...names: string[]\n): any {\n  let value = obj\n  for (let i = 0; i < names.length && isDef(value); i++) {\n    value = fn(value, names[i])\n  }\n  return value\n}\n\nfunction getChainSafe(obj: any, ...names: string[]): any {\n  return applyChainSafe(obj, (val, name) => val[name], ...names)\n}\n\nfunction getOrApply<T, A extends any[]>(value: undefined, ...args: A): undefined\nfunction getOrApply<T, A extends any[]>(value: null, ...args: A): null\nfunction getOrApply<T, A extends any[]>(value: MaybeCall<T, A>, ...args: A): T\nfunction getOrApply<T, A extends any[]>(value: MaybeCall<T, A>, ...args: A): T {\n  if (typeof value === 'function') {\n    return (value as any)(...args)\n  } else {\n    return value\n  }\n}\n\nfunction endsWith(\n  str: string,\n  searchString: string,\n  position?: number\n): boolean {\n  const subjectString = str.toString()\n  if (\n    typeof position !== 'number' ||\n    !isFinite(position) ||\n    Math.floor(position) !== position ||\n    position > subjectString.length\n  ) {\n    position = subjectString.length\n  }\n  position -= searchString.length\n  const lastIndex = subjectString.lastIndexOf(searchString, position)\n  return lastIndex !== -1 && lastIndex === position\n}\n\nfunction genChars(s: string): { next(): string | null } {\n  // Surrogate Code Point\n  // [\\uD800-\\uDBFF]\n  // Variation Selectors\n  // FVS [\\u180B-\\u180D]\n  // VS1～VS16 [\\uFE00-\\uFE0F]\n  // VS17～VS256 \\uDB40[\\uDD00-\\uDDEF]\n  const re = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\r\\n|[^\\uD800-\\uDFFF])([\\u180B-\\u180D]|[\\uFE00-\\uFE0F]|\\uDB40[\\uDD00-\\uDDEF])?/g\n  return {\n    next(): string | null {\n      const res = re.exec(s)\n      return res !== null ? res[0] : null\n    },\n  }\n}\n\nexport type GenWordsResult = {\n  next(): string | null\n}\nfunction genWords(s: string): GenWordsResult {\n  const re = /[!-~]+|[^!-~\\s]+|\\s+/g\n  return {\n    next(): string | null {\n      const res = re.exec(s)\n      return res !== null ? res[0] : null\n    },\n  }\n}\n\nconst template = (strings: TemplateStringsArray, ...keys: any[]) => {\n  return (...values: any[]) => {\n    const dict = values[values.length - 1] || {}\n    const result = [strings[0]]\n    keys.forEach((key, i) => {\n      const isInteger = Number.isInteger\n        ? Number.isInteger(key)\n        : typeof key === 'number' && key !== Infinity && Math.floor(key) === key\n      const value = isInteger ? values[key] : dict[key]\n      result.push(value, strings[i + 1])\n    })\n    return result.join('')\n  }\n}\n\nconst escape = (html: string) => {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\nfunction isPromise<T>(data: T | Promise<T> | undefined): data is Promise<T> {\n  return Boolean(data && typeof (data as Promise<T>).then === 'function')\n}\nfunction then<T, R>(\n  result: MaybePromise<T>,\n  callback: (arg: T) => MaybePromise<R>\n): MaybePromise<R>\nfunction then<T, R>(\n  result: MaybePromise<T>,\n  callback: (arg: T) => R\n): MaybePromise<R>\nfunction then<T, R>(\n  result: MaybePromise<T>,\n  callback: (arg: T) => R\n): MaybePromise<R> {\n  return isPromise(result) ? result.then((r) => callback(r)) : callback(result)\n}\n\nfunction getMouseButtons(e: MouseEvent): number {\n  if (isDef(e.buttons)) {\n    return e.buttons\n  }\n  /* for legacy */\n  if (isDef(e.which)) {\n    if (e.which === 3) {\n      // right?\n      return 4\n    }\n    if (e.which === 2) {\n      // middle?\n      return 4\n    }\n    return e.which // left or no\n  }\n\n  if (e.button === 0 || e.button === 1) {\n    return 1 // candidate left\n  }\n  if (e.button === 2) {\n    return 2 // right\n  }\n  return 0 // no or middle?\n}\n\nfunction getKeyCode(e: KeyboardEvent): number {\n  return e.keyCode || e.which\n}\n\nfunction isTouchEvent(e: Event): e is TouchEvent {\n  return !!(e as TouchEvent).changedTouches\n}\n\nfunction getIgnoreCase(obj: any, name: string): any {\n  if (obj[name]) {\n    return obj[name]\n  }\n  const l = name.toLowerCase()\n  if (obj[l]) {\n    return obj[l]\n  }\n  const u = name.toLowerCase()\n  if (obj[u]) {\n    return obj[u]\n  }\n  for (const k in obj) {\n    if (k.toLowerCase() === l) {\n      return obj[k]\n    }\n  }\n  return undefined\n}\n\nfunction cancel(e: Event): void {\n  e.preventDefault()\n  e.stopPropagation()\n  e.stopImmediatePropagation()\n}\n\nfunction toBoxArray<T>(obj: T | T[]): [T, T, T, T] {\n  if (!Array.isArray(obj)) {\n    return [obj /*top*/, obj /*right*/, obj /*bottom*/, obj /*left*/]\n  }\n  if (obj.length === 3) {\n    return [\n      obj[0] /*top*/,\n      obj[1] /*right*/,\n      obj[2] /*bottom*/,\n      obj[1] /*left*/,\n    ]\n  }\n  if (obj.length === 2) {\n    return [\n      obj[0] /*top*/,\n      obj[1] /*right*/,\n      obj[0] /*bottom*/,\n      obj[1] /*left*/,\n    ]\n  }\n  if (obj.length === 1) {\n    return [\n      obj[0] /*top*/,\n      obj[0] /*right*/,\n      obj[0] /*bottom*/,\n      obj[0] /*left*/,\n    ]\n  }\n  return obj as [T, T, T, T]\n}\n\nexport {\n  isNode,\n  isDef,\n  isDefString,\n  extend,\n  isDescendantElement,\n  getChainSafe,\n  applyChainSafe,\n  getOrApply,\n  getIgnoreCase,\n  isPromise,\n  then,\n  array,\n}\n\nexport function cellEquals(a: CellAddress, b: CellAddress): boolean {\n  return a.col === b.col && a.row === b.row\n}\n\nexport function cellInRange(\n  range: CellRange,\n  col: number,\n  row: number\n): boolean {\n  return (\n    range.start.col <= col &&\n    col <= range.end.col &&\n    range.start.row <= row &&\n    row <= range.end.row\n  )\n}\n\nexport function cellMerge(a: CellRange, b: CellRange): CellRange {\n  const startCol = Math.min(a.start.col, a.end.col, b.start.col, b.end.col)\n  const startRow = Math.min(a.start.row, a.end.row, b.start.row, b.end.row)\n  const endCol = Math.max(a.start.col, a.end.col, b.start.col, b.end.col)\n  const endRow = Math.max(a.start.row, a.end.row, b.start.row, b.end.row)\n  return {\n    start: {\n      col: startCol,\n      row: startRow,\n    },\n    end: {\n      col: endCol,\n      row: endRow,\n    },\n  }\n}\n\nexport const browser = {\n  IE,\n  Edge,\n  Chrome,\n  Firefox,\n  Safari,\n  // Chrome 33554431\n  // FireFox 17895588\n  // IE 10737433\n  heightLimit: Chrome ? 33554431 : Firefox ? 17895588 : 10737433, // default IE limit\n}\n\nexport const obj = {\n  setReadonly,\n  isObject,\n}\nexport const str = {\n  endsWith,\n  genChars,\n  genWords,\n  escape,\n  template,\n}\nexport const event = {\n  getMouseButtons,\n  getKeyCode,\n  isTouchEvent,\n  cancel,\n}\nexport const style = {\n  toBoxArray,\n}\nexport const emptyFn = () => {}\n","import { ListGridAPI } from '../../ts-types'\nimport { isPromise } from '../../internal/utils'\n\nexport function toggleValue(val: number): number\nexport function toggleValue(val: string): string\nexport function toggleValue(val: unknown): boolean\nexport function toggleValue(\n  val: number | string | unknown\n): number | string | boolean {\n  if (typeof val === 'number') {\n    if (val === 0) {\n      return 1\n    } else {\n      return 0\n    }\n  } else if (typeof val === 'string') {\n    if (val === 'false') {\n      return 'true'\n    } else if (val === 'off') {\n      return 'on'\n    } else if (/^0+$/.exec(val)) {\n      return val.replace(/^(0*)0$/, '$11')\n    } else if (val === 'true') {\n      return 'false'\n    } else if (val === 'on') {\n      return 'off'\n    } else if (/^0*1$/.exec(val)) {\n      return val.replace(/^(0*)1$/, '$10')\n    }\n  }\n  return !val\n}\n\nconst getBooleanOptionOfRecord = <T>(\n  option: boolean | ((record?: T) => boolean),\n  grid: ListGridAPI<T>,\n  row: number\n) => {\n  if (typeof option === 'function') {\n    const record = grid.getRowRecord(row)\n    if (isPromise(record)) {\n      return true\n    }\n    return !!option(record)\n  }\n  return !!option\n}\n\nexport const isDisabledRecord = <T>(\n  option: boolean | ((record: T) => boolean),\n  grid: ListGridAPI<T>,\n  row: number\n) => {\n  return (\n    getBooleanOptionOfRecord(grid.disabled, grid, row) ||\n    getBooleanOptionOfRecord(option, grid, row)\n  )\n}\n\nexport const isReadOnlyRecord = <T>(\n  option: boolean | ((record: T) => boolean),\n  grid: ListGridAPI<T>,\n  row: number\n) => {\n  return (\n    getBooleanOptionOfRecord(grid.readOnly, grid, row) ||\n    getBooleanOptionOfRecord(option, grid, row)\n  )\n}\n","export interface DrawGridEvents {\n  /**\n   * Indicates when the cell was clicked.\n   */\n  CLICK_CELL: 'click_cell'\n  /**\n   * Indicates when the cell was double-clicked.\n   */\n  DBLCLICK_CELL: 'dblclick_cell'\n  /**\n   * Indicates when the cell was double-taped.\n   */\n  DBLTAP_CELL: 'dbltap_cell'\n  /**\n   * Indicates when pointing device button is pressed in a cell.\n   */\n  MOUSEDOWN_CELL: 'mousedown_cell'\n  /**\n   * Indicates when pointing device button is released in a cell.\n   */\n  MOUSEUP_CELL: 'mouseup_cell'\n  /**\n   * Indicates the cell selection state has changed.\n   */\n  SELECTED_CELL: 'selected_cell'\n  MOUSE_SELECTED_START: 'mouse_selected_start'\n  MOUSE_SELECTED_END: 'mouse_selected_end'\n  /**\n   * Indicates key-downed.\n   */\n  KEYDOWN: 'keydown'\n  MOUSEMOVE_CELL: 'mousemove_cell'\n  MOUSEENTER_CELL: 'mouseenter_cell'\n  MOUSELEAVE_CELL: 'mouseleave_cell'\n  MOUSEOVER_CELL: 'mouseover_cell'\n  MOUSEOUT_CELL: 'mouseout_cell'\n  /**\n   * Indicates when the user attempts to open a context menu in the cell.\n   */\n  CONTEXTMENU_CELL: 'contextmenu_cell'\n  INPUT_CELL: 'input_cell'\n  PASTE_CELL: 'paste_cell'\n  DELETE_CELL: 'delete_cell'\n  EDITABLEINPUT_CELL: 'editableinput_cell'\n  MODIFY_STATUS_EDITABLEINPUT_CELL: 'modify_status_editableinput_cell'\n  /**\n   * Indicates when the column width has changed.\n   */\n  RESIZE_COLUMN: 'resize_column'\n  /**\n   * Indicates when scrolled.\n   */\n  SCROLL: 'scroll'\n  FOCUS_GRID: 'focus_grid'\n  BLUR_GRID: 'blur_grid'\n\n  CAN_DRAG_SELECTION: 'can_drag_selection'\n  DRAG_SELECTION: 'drag_selection'\n  CLICK_UNDERLAY: 'click_underlay'\n  DBLCLICK_UNDERLAY: 'dblclick_underlay'\n  DBLTAP_UNDERLAY: 'dbltap_underlay'\n  COPY: 'copydata'\n  CUT: 'cutdata'\n  PASTE: 'pastedata'\n}\n\nexport const DG_EVENT_TYPE: DrawGridEvents = {\n  CLICK_CELL: 'click_cell',\n  DBLCLICK_CELL: 'dblclick_cell',\n  DBLTAP_CELL: 'dbltap_cell',\n  MOUSEDOWN_CELL: 'mousedown_cell',\n  MOUSEUP_CELL: 'mouseup_cell',\n  SELECTED_CELL: 'selected_cell',\n  MOUSE_SELECTED_START: 'mouse_selected_start',\n  MOUSE_SELECTED_END: 'mouse_selected_end',\n  KEYDOWN: 'keydown',\n  MOUSEMOVE_CELL: 'mousemove_cell',\n  MOUSEENTER_CELL: 'mouseenter_cell',\n  MOUSELEAVE_CELL: 'mouseleave_cell',\n  MOUSEOVER_CELL: 'mouseover_cell',\n  MOUSEOUT_CELL: 'mouseout_cell',\n  CONTEXTMENU_CELL: 'contextmenu_cell',\n  INPUT_CELL: 'input_cell',\n  PASTE_CELL: 'paste_cell',\n  DELETE_CELL: 'delete_cell',\n  EDITABLEINPUT_CELL: 'editableinput_cell',\n  MODIFY_STATUS_EDITABLEINPUT_CELL: 'modify_status_editableinput_cell',\n  RESIZE_COLUMN: 'resize_column',\n  SCROLL: 'scroll',\n  FOCUS_GRID: 'focus_grid',\n  BLUR_GRID: 'blur_grid',\n\n  CAN_DRAG_SELECTION: 'can_drag_selection',\n  DRAG_SELECTION: 'drag_selection',\n  CLICK_UNDERLAY: 'click_underlay',\n  DBLCLICK_UNDERLAY: 'dblclick_underlay',\n  DBLTAP_UNDERLAY: 'dbltap_underlay',\n  COPY: 'copydata',\n  CUT: 'cutdata',\n  PASTE: 'pastedata',\n}\n","export const KEY_BS = 8\nexport const KEY_TAB = 9\nexport const KEY_ENTER = 13\nexport const KEY_ESC = 27\nexport const KEY_SPACE = 32\nexport const KEY_END = 35\nexport const KEY_HOME = 36\nexport const KEY_LEFT = 37\nexport const KEY_UP = 38\nexport const KEY_RIGHT = 39\nexport const KEY_DOWN = 40\nexport const KEY_DEL = 46\nexport const KEY_ALPHA_A = 65\nexport const KEY_ALPHA_C = 67\nexport const KEY_ALPHA_V = 86\nexport const KEY_F2 = 113\n","// import utils from \"./utils\";\n\n// type SymbolType = (description?: string | number) => symbol;\n\n// const Symbol: SymbolType = utils.isNode\n//   ? (global.Symbol as SymbolType)\n//   : (window.Symbol as SymbolType)\n//   ? (window.Symbol as SymbolType)\n//   : ((): SymbolType => {\n//       function random(): string {\n//         const c = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n//         const cl = c.length;\n//         let r = \"\";\n//         for (let i = 0; i < 10; i++) {\n//           r += c[Math.floor(Math.random() * cl)];\n//         }\n//         return r;\n//       }\n//       return (name?: string | number): symbol => {\n//         if (name) {\n//           return `#${name}_${random()}` as any;\n//         } else {\n//           return `#_${random()}` as any;\n//         }\n//       };\n//     })();\n// const mem: { [key: string]: symbol } = {};\n\nfunction get(name?: string): '$$$$private symbol$$$$' {\n  // if (name) {\n  //   return (mem[name] ? mem[name] : (mem[name] = Symbol(name))) as any;\n  // } else {\n  //   return Symbol() as any;\n  // }\n  return (name || '_') as any\n}\n\nexport function getEventTargetSymbol(): '$$$$event_target_symbol$$$$' {\n  return get('protected.event_target') as any\n}\nexport function getThemeSymbol(): '$$$$theme_symbol$$$$' {\n  return get('protected.theme') as any\n}\nexport function getDrawGridSymbol(): '$$$$draw_grid_symbol$$$$' {\n  return get('protected.draw_grid') as any\n}\nexport function getListGridSymbol(): '$$$$list_grid_symbol$$$$' {\n  return get('protected.list_grid') as any\n}\nexport function getCheckColumnStateId(): '$$$$chkcol.stateID symbol$$$$' {\n  return get('chkcol.stateID') as any\n}\nexport function getRadioColumnStateId(): '$$$$rdcol.stateID symbol$$$$' {\n  return get('rdcol.stateID') as any\n}\nexport function getSwitchColumnStateId(): '$$$$swtcol.stateID symbol$$$$' {\n  return get('swtcol.stateID') as any\n}\nexport function getButtonColumnStateId(): '$$$$btncol.stateID symbol$$$$' {\n  return get('btncol.stateID') as any\n}\nexport function getColumnActionStateId(): '$$$$col.action_stateID symbol$$$$' {\n  return get('col.action.stateID') as any\n}\nexport function getColumnFadeinStateId(): '$$$$col.fadein_stateID symbol$$$$' {\n  return get('col.fadein_stateID') as any\n}\nexport function getInlineEditingStateId(): '$$$$col.inline_editing_stateID symbol$$$$' {\n  return get('col.inline_editing_stateID') as any\n}\nexport function getBranchGraphColumnStateId(): '$$$$branch_graph_col.stateID symbol$$$$' {\n  return get('branch_graph_col.stateID') as any\n}\nexport function getSmallDialogInputEditorStateId(): '$$$$small_dialog_input_editor.stateID symbol$$$$' {\n  return get('small_dialog_input_editor.stateID') as any\n}\nexport function getInlineInputEditorStateId(): '$$$$inline_input_editor.stateID symbol$$$$' {\n  return get('inline_input_editor.stateID') as any\n}\nexport function getInlineTextareaEditorStateId(): '$$$$inline_textarea_editor.stateID symbol$$$$' {\n  return get('inline_textarea_editor.stateID') as any\n}\nexport function getInlineLookupEditorStateId(): '$$$$inline_lookup_editor.stateID symbol$$$$' {\n  return get('inline_lookup_editor.stateID') as any\n}\nexport function getInlineMenuEditorStateId(): '$$$$inline_menu_editor.stateID symbol$$$$' {\n  return get('inline_menu_editor.stateID') as any\n}\nexport function getCheckHeaderStateId(): '$$$$check_header.stateID symbol$$$$' {\n  return get('check_header.stateID') as any\n}\nexport function getSwitchHeaderStateId(): '$$$$switch_header.stateID symbol$$$$' {\n  return get('switch_header.stateID') as any\n}\n","import {\n  ListGridAPI,\n  CellAddress,\n  LayoutObjectId,\n  EventListenerId,\n} from '../../ts-types'\nimport { event, isPromise, obj } from '../../internal/utils'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\nimport { getColumnActionStateId } from '../../internal/symbolManager'\n\nconst COLUMN_ACTION_STATE_ID = getColumnActionStateId()\n\nexport function bindCellClickAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    mouseOver,\n    mouseMove,\n    mouseOut,\n  }: {\n    action: (cell: CellAddress) => void\n    mouseOver: (cell: CellAddress, event: any) => boolean\n    mouseMove?: (cell: CellAddress, event: any) => boolean\n    mouseOut: (cell: CellAddress) => void\n  }\n): EventListenerId[] {\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n\n  if (!(grid as any)[COLUMN_ACTION_STATE_ID]) {\n    obj.setReadonly(grid as any, COLUMN_ACTION_STATE_ID, {})\n  }\n\n  const actionState = (grid as any)[COLUMN_ACTION_STATE_ID]\n\n  return [\n    // click\n    grid.listen(DG_EVENT_TYPE.CLICK_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      action({\n        col: e.col,\n        row: e.row,\n      })\n    }),\n    // mouse move\n    grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      if (mouseMove) {\n        if (\n          !mouseMove(\n            {\n              col: e.col,\n              row: e.row,\n            },\n            e.event\n          )\n        ) {\n          grid.getElement().style.cursor = ''\n          actionState.mouseActive = false\n          return\n        }\n      }\n      grid.getElement().style.cursor = 'pointer'\n      actionState.mouseActive = true\n    }),\n    grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      if (mouseOver) {\n        if (\n          !mouseOver(\n            {\n              col: e.col,\n              row: e.row,\n            },\n            e.event\n          )\n        ) {\n          grid.getElement().style.cursor = ''\n          actionState.mouseActive = false\n          return\n        }\n      }\n      grid.getElement().style.cursor = 'pointer'\n      actionState.mouseActive = true\n    }),\n    grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (mouseOut) {\n        mouseOut({\n          col: e.col,\n          row: e.row,\n        })\n      }\n      grid.getElement().style.cursor = ''\n      actionState.mouseActive = false\n    }),\n  ]\n}\nexport function bindCellKeyAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    acceptKeys = [],\n  }: {\n    action: (option: CellAddress) => void\n    acceptKeys?: number[]\n  }\n) {\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n  acceptKeys = [...acceptKeys, KEY_ENTER, KEY_SPACE]\n  return [\n    // enter key down\n    grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n      if (acceptKeys.indexOf(e.keyCode) === -1) {\n        return\n      }\n      if (grid.keyboardOptions?.moveCellOnEnter && e.keyCode === KEY_ENTER) {\n        // When moving with the enter key, no action is taken with the enter key.\n        return\n      }\n      const sel = grid.selection.select\n      if (!isTarget(sel.col, sel.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(sel.row))) {\n        return\n      }\n      action({\n        col: sel.col,\n        row: sel.row,\n      })\n      event.cancel(e.event)\n    }),\n  ]\n}\n","import {\n  BaseActionOption,\n  ListGridAPI,\n  EventListenerId,\n  LayoutObjectId,\n  CellAddress,\n} from '../../ts-types'\n\nexport abstract class BaseAction<T> {\n  protected _disabled: boolean | ((record: T) => boolean)\n  public constructor(options: BaseActionOption<T> = {}) {\n    this._disabled = options.disabled || false\n  }\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public set disabled(disabled) {\n    if (this._disabled !== disabled) {\n      this._disabled = disabled\n      this.onChangeDisabledInternal()\n    }\n  }\n  public abstract get editable(): boolean\n  public abstract clone(): BaseAction<T>\n  public abstract bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[]\n\n  public abstract onPasteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    value: string\n  ): void\n  public abstract onDeleteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ): void\n  protected onChangeDisabledInternal(): void {\n    // nothing\n  }\n}\n","import {\n  ActionListener,\n  ActionOption,\n  ListGridAPI,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { emptyFn, isDef } from '../../internal/utils'\nimport { isDisabledRecord } from './action-utils'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { BaseAction } from './BaseAction'\n\nexport class Action<T> extends BaseAction<T> {\n  private _action: ActionListener<T>\n  public constructor(options: ActionOption<T> = {}) {\n    super(options)\n    this._action = options.action || emptyFn\n  }\n  get editable(): boolean {\n    return false\n  }\n  public get action() {\n    return this._action\n  }\n  public set action(action) {\n    this._action = action\n  }\n  public clone(): Action<T> {\n    return new Action(this)\n  }\n  public getState(_grid: any): any {\n    return {}\n  }\n  public bindGridEvent(grid: ListGridAPI<T>, cellId: LayoutObjectId): any[] {\n    const state = this.getState(grid)\n    const action = (cell: CellAddress) => {\n      if (isDisabledRecord(this.disabled, grid, cell.row)) {\n        return\n      }\n      const record = grid.getRowRecord(cell.row)\n      this._action.apply(this, [\n        record,\n        {\n          cell,\n          grid,\n        },\n      ])\n    }\n    const actionMouse = (cell: CellAddress) => {\n      if (state.mouseActive) {\n        action(cell)\n      }\n    }\n    const mouseOut = (cell: CellAddress) => {\n      delete state.mouseRelativePos\n      delete state.mouseActiveCell\n      delete state.mouseActive\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n    }\n    const mouseMove = (cell: CellAddress, event: any) => {\n      if (isDisabledRecord(this.disabled, grid, cell.row)) {\n        return false\n      }\n      state.mouseRelativePos = grid._getMouseRelativePoint(event)\n      state.mouseActiveCell = {\n        col: cell.col,\n        row: cell.row,\n      }\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n      return isDef(state.mouseActive) ? state.mouseActive : true\n    }\n\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action: actionMouse,\n        mouseMove,\n        mouseOut,\n        mouseOver: mouseMove,\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action,\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(): void {\n    // noop\n  }\n  public onDeleteCellRangeBox(): void {\n    // noop\n  }\n}\n","import { BaseAction } from './BaseAction'\nimport { EditorOption } from '../../ts-types'\n\nexport abstract class Editor<T> extends BaseAction<T> {\n  protected _readOnly: boolean | ((record: T) => boolean)\n  public constructor(options: EditorOption<T> = {}) {\n    super(options)\n    this._readOnly = options.readOnly || (options as any).readonly || false\n  }\n  public get editable(): boolean {\n    return true\n  }\n  public get readOnly() {\n    return this._readOnly\n  }\n  public set readOnly(readOnly) {\n    if (this._readOnly !== readOnly) {\n      this._readOnly = readOnly\n      this.onChangeReadOnlyInternal()\n    }\n  }\n  public get readonly() {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    return this.readOnly\n  }\n  public set readonly(readOnly) {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    this.readOnly = readOnly\n  }\n  protected onChangeReadOnlyInternal() {\n    // nothing\n  }\n}\n","import {\n  EditorOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { KEY_ENTER, KEY_F2 } from '../../core/draw-grid/KEY_CODE'\nimport { event, cellEquals } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { Editor } from './Editor'\n\nimport Rect from '../../internal/Rect'\n\nfunction _inAttachCellArea<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number,\n  event: TouchEvent | MouseEvent\n) {\n  let bool = false\n  const relativePos = grid._getMouseRelativePoint(event)\n  const rect = grid.getAttachCellsArea(grid.getCellRange(col, row)).rect\n  if (relativePos) {\n    if ((rect as Rect).inPoint(relativePos.x, relativePos.y)) {\n      bool = true\n    }\n  }\n  return bool\n}\n\nexport abstract class BaseInputEditor<T> extends Editor<T> {\n  public constructor(options: EditorOption<T> = {}) {\n    super(options)\n  }\n  public open(grid: ListGridAPI<T>, cell: CellAddress): boolean {\n    const allowOpen =\n      !isReadOnlyRecord(this.readOnly, grid, cell.row) &&\n      !isDisabledRecord(this.disabled, grid, cell.row)\n    if (allowOpen) {\n      this.onOpenCellInternal(grid, cell)\n    }\n    return allowOpen\n  }\n  public abstract clone(): BaseInputEditor<T>\n  abstract onInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ): void\n  abstract onOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress): void\n  abstract onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    selected: boolean\n  ): void\n  abstract onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    input: HTMLInputElement\n  ): void\n  abstract onGridScrollInternal(grid: ListGridAPI<T>): void\n  public onBeforeKeydownInternal(\n    _grid: ListGridAPI<T>,\n    _keyCode: number,\n    _e: KeyboardEvent,\n    _cellId: LayoutObjectId\n  ) {\n    return true\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const open = (cell: CellAddress): boolean => {\n      return this.open(grid, cell)\n    }\n\n    const input = (cell: CellAddress, value: any) => {\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row)\n      ) {\n        return\n      }\n      this.onInputCellInternal(grid, cell, value)\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      grid.listen(DG_EVENT_TYPE.INPUT_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        input(\n          {\n            col: e.col,\n            row: e.row,\n          },\n          e.value\n        )\n      }),\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        event.cancel(e.event)\n        input(\n          {\n            col: e.col,\n            row: e.row,\n          },\n          e.normalizeValue\n        )\n      }),\n      grid.listen(DG_EVENT_TYPE.DBLCLICK_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (!_inAttachCellArea(grid, e.col, e.row, e.event)) {\n          return\n        }\n        open({\n          col: e.col,\n          row: e.row,\n        })\n        event.cancel(e.event)\n      }),\n      grid.listen(DG_EVENT_TYPE.DBLTAP_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (!_inAttachCellArea(grid, e.col, e.row, e.event)) {\n          return\n        }\n        open({\n          col: e.col,\n          row: e.row,\n        })\n        event.cancel(e.event)\n      }),\n      grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n        if (\n          (e.keyCode !== KEY_F2 && e.keyCode !== KEY_ENTER) ||\n          (e.keyCode === KEY_ENTER && e.event.shiftKey)\n        ) {\n          return\n        }\n        const sel = grid.selection.select\n        if (!isTarget(sel.col, sel.row)) {\n          return\n        }\n        if (\n          this.onBeforeKeydownInternal(grid, e.keyCode, e.event, cellId) ===\n          false\n        ) {\n          return false\n        }\n        if (e.event.ctrlKey || e.event.metaKey) {\n          return\n        }\n        if (\n          open({\n            col: sel.col,\n            row: sel.row,\n          })\n        ) {\n          event.cancel(e.event)\n          e.stopCellMoving()\n        }\n      }),\n      grid.listen(DG_EVENT_TYPE.SELECTED_CELL, (e) => {\n        this.onChangeSelectCellInternal(\n          grid,\n          { col: e.col, row: e.row },\n          e.selected\n        )\n      }),\n      grid.listen(DG_EVENT_TYPE.SCROLL, () => {\n        this.onGridScrollInternal(grid)\n      }),\n      grid.listen(DG_EVENT_TYPE.EDITABLEINPUT_CELL, (cell) => {\n        if (!isTarget(cell.col, cell.row)) {\n          return false\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n          isDisabledRecord(this.disabled, grid, cell.row)\n        ) {\n          return false\n        }\n        return true\n      }),\n      grid.listen(DG_EVENT_TYPE.MODIFY_STATUS_EDITABLEINPUT_CELL, (cell) => {\n        if (!isTarget(cell.col, cell.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n          isDisabledRecord(this.disabled, grid, cell.row)\n        ) {\n          return\n        }\n        const range = grid.getCellRange(cell.col, cell.row)\n        if (\n          range.start.col !== range.end.col ||\n          range.start.row !== range.end.row\n        ) {\n          const { input } = cell\n          const baseRect = grid.getCellRect(cell.col, cell.row)\n          const rangeRect = grid.getCellRangeRect(range)\n          input.style.top = `${(\n            parseFloat(input.style.top) +\n            (rangeRect.top - baseRect.top)\n          ).toFixed()}px`\n          input.style.left = `${(\n            parseFloat(input.style.left) +\n            (rangeRect.left - baseRect.left)\n          ).toFixed()}px`\n          input.style.width = `${rangeRect.width.toFixed()}px`\n          input.style.height = `${rangeRect.height.toFixed()}px`\n        }\n        this.onSetInputAttrsInternal(\n          grid,\n          {\n            col: cell.col,\n            row: cell.row,\n          },\n          cell.input\n        )\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    grid.doChangeValue(cell.col, cell.row, () => value)\n  }\n  public onDeleteCellRangeBox(grid: ListGridAPI<T>, cell: CellAddress): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    grid.doChangeValue(cell.col, cell.row, () => '')\n  }\n}\n","import { KEY_ENTER } from '../../core/draw-grid/KEY_CODE'\nimport { event, isDef } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { bindCellClickAction } from './actionBind'\nimport { BaseInputEditor } from './BaseInputEditor'\nimport {\n  ActionListener,\n  BaseActionInputOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\n\nexport abstract class BaseActionInput<T> extends BaseInputEditor<T> {\n  private _disableInput: boolean | ActionListener<T>\n  private _disableAction: boolean | ActionListener<T>\n  private _action?: ActionListener<T>\n  public constructor(options: BaseActionInputOption<T> = {}) {\n    super(options)\n    this._disableInput = options.disableInput || false\n    this._disableAction = options.disableAction || false\n    this._action = options.action\n  }\n  public get disableInput() {\n    return this._disableInput\n  }\n  public set disableInput(disableInput) {\n    this._disableInput = disableInput\n  }\n  public get disableAction() {\n    return this._disableAction\n  }\n  public set disableAction(disableAction) {\n    this._disableAction = disableAction\n  }\n  public get action() {\n    return this._action\n  }\n  public set action(action) {\n    this._action = action\n  }\n  public onBeforeKeydownInternal(\n    grid: ListGridAPI<T>,\n    keyCode: number,\n    e: KeyboardEvent,\n    cellId: LayoutObjectId\n  ) {\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    const sel = grid.selection.select\n    if (\n      isReadOnlyRecord(this.readOnly, grid, sel.row) ||\n      isDisabledRecord(this.disabled, grid, sel.row) ||\n      !isTarget(sel.col, sel.row) ||\n      !this._action ||\n      this.isDisabledAction(grid, sel)\n    ) {\n      return true\n    }\n    if (\n      (this.isDisabledInput(grid, sel) &&\n        keyCode === KEY_ENTER &&\n        !e.ctrlKey &&\n        !e.metaKey) ||\n      (keyCode === KEY_ENTER && (e.ctrlKey || e.metaKey))\n    ) {\n      const record = grid.getRowRecord(sel.row)\n      if (this._action) {\n        this._action.apply(this, [\n          record,\n          {\n            cell: {\n              col: sel.col,\n              row: sel.row,\n            },\n            grid,\n          },\n        ])\n        event.cancel(e)\n        return false\n      }\n    }\n    return true\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const state = this.getState(grid)\n    const action = (cell: CellAddress) => {\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row) ||\n        !this._action ||\n        this.isDisabledAction(grid, cell)\n      ) {\n        return\n      }\n      if (state.mouseActive) {\n        const record = grid.getRowRecord(cell.row)\n        if (this._action) {\n          this._action.apply(this, [\n            record,\n            {\n              cell,\n              grid,\n            },\n          ])\n        }\n      }\n    }\n    const mouseOut = (cell: CellAddress) => {\n      delete state.mouseRelativePos\n      delete state.mouseActiveCell\n      delete state.mouseActive\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n    }\n    const mouseMove = (cell: CellAddress, event: any) => {\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row) ||\n        !this._action ||\n        this.isDisabledAction(grid, cell)\n      ) {\n        return false\n      }\n      state.mouseRelativePos = grid._getMouseRelativePoint(event)\n      state.mouseActiveCell = {\n        col: cell.col,\n        row: cell.row,\n      }\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n      return isDef(state.mouseActive) ? state.mouseActive : true\n    }\n    let ids = super.bindGridEvent(grid, cellId)\n    ids = ids.concat(\n      bindCellClickAction(grid, cellId, {\n        action,\n        mouseMove,\n        mouseOut,\n        mouseOver: mouseMove,\n      })\n    )\n    return ids\n  }\n  public onInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    if (this.isDisabledInput(grid, cell)) {\n      return\n    }\n    this.onActionInputCellInternal(grid, cell, inputValue)\n  }\n  public onOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    if (this.isDisabledInput(grid, cell)) {\n      return\n    }\n    this.onActionOpenCellInternal(grid, cell)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    throw new Error()\n  }\n  public onActionOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    throw new Error()\n  }\n  protected abstract getState(grid: any): any\n  private isDisabledInput(grid: ListGridAPI<T>, cell: CellAddress) {\n    return this.isDisabled(this._disableInput, grid, cell)\n  }\n  private isDisabledAction(grid: ListGridAPI<T>, cell: CellAddress) {\n    return this.isDisabled(this._disableAction, grid, cell)\n  }\n  private isDisabled(\n    p: boolean | ActionListener<T>,\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ) {\n    let isDisabled = false\n    if (p) {\n      if (typeof p === 'function') {\n        const record = grid.getRowRecord(cell.row)\n        if (\n          p.apply(this, [\n            record,\n            {\n              cell,\n              grid,\n            },\n          ])\n        ) {\n          isDisabled = true\n        }\n      } else {\n        isDisabled = true\n      }\n    }\n    return isDisabled\n  }\n}\n","import { isNode } from './utils'\n\nfunction cubicBezier(\n  x2: number,\n  y2: number,\n  x3: number,\n  y3: number\n): EasingFunction {\n  let step: number\n  const err = 0.0001\n\n  x2 *= 3\n  y2 *= 3\n  x3 *= 3\n  y3 *= 3\n\n  return function (t: number): number {\n    let p, a, b, c, d, x, s\n    if (t < 0 || 1 < t) {\n      throw new Error(`${t}`)\n    }\n\n    p = step || t\n\n    do {\n      a = 1 - p\n      b = a * a\n      c = p * p\n      d = c * p\n\n      x = x2 * b * p + x3 * a * c + d\n      s = t - x\n      p += s * 0.5\n    } while (err < Math.abs(s))\n\n    step = p\n    return y2 * b * p + y3 * a * c + d\n  }\n}\n\nconst EASINGS = {\n  linear(p: number): number {\n    return p\n  },\n  easeIn: cubicBezier(0.42, 0.0, 1.0, 1.0),\n  easeOut: cubicBezier(0.0, 0.0, 0.58, 1.0),\n  easeInOut: cubicBezier(0.42, 0.0, 0.58, 1.0),\n}\n\nconst raf: typeof requestAnimationFrame = (isNode\n  ? (): void => {}\n  : window.requestAnimationFrame ||\n    ((fn: () => void): any =>\n      setTimeout(fn, 1))) as typeof requestAnimationFrame\n\nfunction now(): number {\n  return Date.now()\n}\n\nexport type EasingFunction = (t: number) => number\nexport type EasingKind = keyof typeof EASINGS\nexport type StepFunction = (s: number) => void\n/**\n * <pre>\n * Animates.\n * </pre>\n * @param duration - animation time.\n * @param step - step\n * @param easing - easing\n * @returns Deferred object.\n */\nexport function animate(\n  duration: number,\n  step: StepFunction,\n  easing?: EasingKind | EasingFunction\n): {\n  cancel: () => void\n} {\n  const startedAt = now()\n\n  const easingFn: EasingFunction =\n    easing == null\n      ? EASINGS.easeInOut\n      : typeof easing === 'string'\n      ? EASINGS[easing]\n      : easing\n\n  let canceledFlg = false\n  const createAnim = (\n    resolve: (value: any) => void,\n    reject: () => void\n  ): (() => void) => {\n    const anim = (): void => {\n      const point = now() - startedAt\n      if (canceledFlg) {\n        //cancel\n        if (reject) {\n          reject()\n        }\n      } else if (point >= duration) {\n        //end\n        step(1)\n        if (resolve) {\n          resolve(undefined)\n        }\n      } else {\n        step(easingFn(point / duration))\n\n        raf(anim)\n      }\n    }\n    return anim\n  }\n  const cancel = (): void => {\n    canceledFlg = true\n  }\n  if (typeof Promise !== 'undefined') {\n    const result: any = new Promise<unknown>((resolve, reject) => {\n      const anim = createAnim(resolve, reject)\n      step(0)\n      anim()\n    })\n    result.cancel = cancel\n    return result\n  } else {\n    const anim = createAnim(\n      () => {},\n      () => {}\n    )\n    step(0)\n    anim()\n    return {\n      cancel,\n    }\n  }\n}\n","import {\n  EditorOption,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { GridInternal, CheckColumnState } from '../../ts-types-internal'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\nimport { animate } from '../../internal/animate'\nimport { isPromise, event, cellEquals } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord, toggleValue } from './action-utils'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { Editor } from './Editor'\n\nexport abstract class BaseCheckEditor<T> extends Editor<T> {\n  public constructor(options: EditorOption<T> = {}) {\n    super(options)\n  }\n  public bindGridEvent(\n    grid: GridInternal<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const state = this.getState(grid)\n\n    const action = (cell: CellAddress) => {\n      const range = grid.getCellRange(cell.col, cell.row)\n      const cellKey = `${range.start.col}:${range.start.row}`\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row) ||\n        state.block[cellKey]\n      ) {\n        return\n      }\n      const ret = grid.doChangeValue(cell.col, cell.row, toggleValue)\n      if (ret) {\n        const onChange = () => {\n          // checkbox animation\n          animate(200, (point) => {\n            if (point === 1) {\n              delete state.elapsed[cellKey]\n            } else {\n              state.elapsed[cellKey] = point\n            }\n            grid.invalidateCellRange(range)\n          })\n        }\n        if (isPromise(ret)) {\n          state.block[cellKey] = true\n          ret.then(() => {\n            delete state.block[cellKey]\n            onChange()\n          })\n        } else {\n          onChange()\n        }\n      }\n    }\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          if (isDisabledRecord(this.disabled, grid, e.row)) {\n            return false\n          }\n          state.mouseActiveCell = {\n            col: e.col,\n            row: e.row,\n          }\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n          return true\n        },\n        mouseOut: (e) => {\n          delete state.mouseActiveCell\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n        },\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action: (e) => {\n          const selRange = grid.selection.range\n          const col = grid.selection.select.col\n          for (let row = selRange.start.row; row <= selRange.end.row; row++) {\n            if (!isTarget(col, row)) {\n              continue\n            }\n            action({\n              col,\n              row,\n            })\n          }\n        },\n        acceptKeys: [KEY_ENTER, KEY_SPACE],\n      }),\n      // paste value\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        const pasteValue = e.normalizeValue.trim()\n        grid.doGetCellValue(e.col, e.row, (value) => {\n          const newValue = toggleValue(value)\n          if (`${newValue}`.trim() === pasteValue) {\n            event.cancel(e.event)\n\n            action({\n              col: e.col,\n              row: e.row,\n            })\n          }\n        })\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: GridInternal<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const pasteValue = value.trim()\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      const newValue = toggleValue(value)\n      if (`${newValue}`.trim() === pasteValue) {\n        grid.doChangeValue(cell.col, cell.row, toggleValue)\n      }\n    })\n  }\n  public onDeleteCellRangeBox(): void {\n    // noop\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckColumnState\n}\n","import { ButtonActionOption } from '../../ts-types'\nimport { obj } from '../../internal/utils'\nimport { Action } from './Action'\nimport { getButtonColumnStateId } from '../../internal/symbolManager'\n\nconst BUTTON_COLUMN_STATE_ID = getButtonColumnStateId()\n\nexport class ButtonAction<T> extends Action<T> {\n  public constructor(options: ButtonActionOption<T> = {}) {\n    super(options)\n  }\n  public getState(grid: any): any {\n    if (!grid[BUTTON_COLUMN_STATE_ID]) {\n      obj.setReadonly(grid, BUTTON_COLUMN_STATE_ID, {})\n    }\n    return grid[BUTTON_COLUMN_STATE_ID]\n  }\n}\n","import { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckEditor } from './BaseCheckEditor'\nimport { getCheckColumnStateId } from '../../internal/symbolManager'\n\nconst CHECK_COLUMN_STATE_ID = getCheckColumnStateId()\n\nexport class CheckEditor<T> extends BaseCheckEditor<T> {\n  public clone(): CheckEditor<T> {\n    return new CheckEditor(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[CHECK_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, CHECK_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { getSwitchColumnStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckEditor } from './BaseCheckEditor'\n\nconst SWITCH_COLUMN_STATE_ID = getSwitchColumnStateId()\n\nexport class SwitchEditor<T> extends BaseCheckEditor<T> {\n  public clone(): SwitchEditor<T> {\n    return new SwitchEditor(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[SWITCH_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, SWITCH_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import { isDef } from './utils'\n\nexport function createElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  {\n    classList,\n    text,\n    html,\n  }: { classList?: string[] | string; text?: string; html?: string } = {}\n): HTMLElementTagNameMap[K] {\n  const element = document.createElement(tagName)\n  if (classList) {\n    if (Array.isArray(classList)) {\n      element.classList.add(...classList)\n    } else {\n      element.classList.add(classList)\n    }\n  }\n  if (text) {\n    element.textContent = text\n  } else if (html) {\n    element.innerHTML = html\n  }\n  return element\n}\n\nexport function empty(dom: HTMLElement): void {\n  let c\n  while ((c = dom.firstChild)) {\n    dom.removeChild(c)\n  }\n}\n\nfunction isNode(arg: HTMLElement | string): arg is HTMLElement {\n  return !!((arg as any).nodeType && (arg as any).nodeName)\n}\n\nfunction toNode(arg: HTMLElement | string): HTMLElement | HTMLElement[] {\n  if (isNode(arg)) {\n    return arg\n  }\n  const dom = createElement('div', { html: arg })\n  return Array.prototype.slice.call(dom.childNodes) as HTMLElement[]\n}\n\nexport function toNodeList(\n  arg: HTMLElement | HTMLElement[] | string\n): HTMLElement[] {\n  if (Array.isArray(arg)) {\n    const result: HTMLElement[] = []\n    arg.forEach((e) => {\n      result.push(...toNodeList(e))\n    })\n    return result\n  }\n  const node = toNode(arg)\n  return Array.isArray(node) ? (node as HTMLElement[]) : [node]\n}\n\nexport function appendHtml(\n  dom: HTMLElement,\n  inner: HTMLElement | HTMLElement[] | string\n): void {\n  toNodeList(inner).forEach((node) => {\n    dom.appendChild(node)\n  })\n}\n\nexport function disableFocus(el: HTMLElement): void {\n  el.dataset.disableBeforeTabIndex = `${el.tabIndex}`\n  el.tabIndex = -1\n  Array.prototype.slice\n    .call(el.children || el.childNodes, 0)\n    .forEach(disableFocus)\n}\n\nexport function enableFocus(el: HTMLElement): void {\n  if ('disableBeforeTabIndex' in el.dataset) {\n    el.tabIndex = Number(el.dataset.disableBeforeTabIndex)\n  }\n  Array.prototype.slice\n    .call(el.children || el.childNodes, 0)\n    .forEach(enableFocus)\n}\n\nexport function isFocusable(el: Node): el is HTMLElement {\n  return (\n    isDef((el as HTMLElement).tabIndex) && (el as HTMLElement).tabIndex > -1\n  )\n}\n\nexport function findPrevSiblingFocusable(el: HTMLElement): HTMLElement | null {\n  let n = el.previousSibling\n  while (n && !isFocusable(n)) {\n    n = n.previousSibling\n  }\n  return n\n}\n\nexport function findNextSiblingFocusable(el: HTMLElement): HTMLElement | null {\n  let n = el.nextSibling\n  while (n && !isFocusable(n)) {\n    n = n.nextSibling\n  }\n  return n\n}\n","import { AnyFunction, EventListenerId } from '../ts-types'\nimport { EventTarget as CustomEventTarget } from '../core/EventTarget'\nimport { each } from './utils'\n\nlet eventHandlerNextId = 1\n\ntype EventHandlerTarget = EventTarget | CustomEventTarget\ntype Listener = AnyFunction\ntype EventListenerObject = {\n  target: EventHandlerTarget\n  type: string\n  listener: Listener\n  options: any[]\n}\n\nexport class EventHandler {\n  private _listeners: {\n    [key: string]: EventListenerObject\n  } = {}\n  public on<TYPE extends keyof GlobalEventHandlersEventMap>(\n    target: EventHandlerTarget,\n    type: TYPE,\n    listener: (event: GlobalEventHandlersEventMap[TYPE]) => any,\n    ...options: any[]\n  ): EventListenerId\n  public on(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: any[]\n  ): EventListenerId\n  public on(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: any[]\n  ): EventListenerId {\n    if (target.addEventListener) {\n      target.addEventListener(type, listener, ...(options as []))\n    }\n    const obj = {\n      target,\n      type,\n      listener,\n      options,\n    }\n    const id = eventHandlerNextId++\n    this._listeners[id] = obj\n    return id\n  }\n  public once<TYPE extends keyof GlobalEventHandlersEventMap>(\n    target: EventHandlerTarget,\n    type: TYPE,\n    listener: (event: GlobalEventHandlersEventMap[TYPE]) => any,\n    ...options: any[]\n  ): EventListenerId\n  public once(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: (boolean | AddEventListenerOptions)[]\n  ): EventListenerId\n  public once(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: (boolean | AddEventListenerOptions)[]\n  ): EventListenerId {\n    const id = this.on(\n      target,\n      type,\n      (...args) => {\n        this.off(id)\n        listener(...args)\n      },\n      ...options\n    )\n    return id\n  }\n  public tryWithOffEvents(\n    target: EventHandlerTarget,\n    type: string,\n    call: () => void\n  ): void {\n    const list: EventListenerObject[] = []\n    try {\n      each(this._listeners, (obj) => {\n        if (obj.target === target && obj.type === type) {\n          if (obj.target.removeEventListener) {\n            obj.target.removeEventListener(\n              obj.type,\n              obj.listener,\n              ...(obj.options as [])\n            )\n          }\n          list.push(obj)\n        }\n      })\n      call()\n    } finally {\n      list.forEach((obj) => {\n        if (obj.target.addEventListener) {\n          obj.target.addEventListener(\n            obj.type,\n            obj.listener,\n            ...(obj.options as [])\n          )\n        }\n      })\n    }\n  }\n  public off(id: EventListenerId | null | undefined): void {\n    if (id == null) {\n      return\n    }\n    const obj = this._listeners[id]\n    if (!obj) {\n      return\n    }\n    delete this._listeners[id]\n    if (obj.target.removeEventListener) {\n      obj.target.removeEventListener(\n        obj.type,\n        obj.listener,\n        ...(obj.options as [])\n      )\n    }\n  }\n  public fire(target: EventTarget, type: string, ...args: any[]): void {\n    each(this._listeners, (obj) => {\n      if (obj.target === target && obj.type === type) {\n        obj.listener.call(obj.target, ...args)\n      }\n    })\n  }\n  public hasListener(target: EventTarget, type: string): boolean {\n    let result = false\n    each(this._listeners, (obj) => {\n      if (obj.target === target && obj.type === type) {\n        result = true\n      }\n    })\n    return result\n  }\n  public clear(): void {\n    each(this._listeners, (obj) => {\n      if (obj.target.removeEventListener) {\n        obj.target.removeEventListener(\n          obj.type,\n          obj.listener,\n          ...(obj.options as [])\n        )\n      }\n    })\n    this._listeners = {}\n  }\n  public dispose(): void {\n    this.clear()\n  }\n}\n","import styleCss from './style.css'\n\nfunction styleInject(id: string, css: string) {\n  if (css && typeof document !== 'undefined') {\n    let styleElement\n    if (id) {\n      const el = document.getElementById(id)\n      if (el instanceof HTMLStyleElement) {\n        styleElement = el as HTMLStyleElement\n      }\n    }\n    if (!styleElement) {\n      styleElement = document.createElement('style')\n      styleElement.type = 'text/css'\n      styleElement.id = id\n      const headElement =\n        document.head || document.getElementsByTagName('head')[0]\n      headElement.appendChild(styleElement)\n    }\n    if ((styleElement as any).styleSheet) {\n      ;(styleElement as any).styleSheet.cssText = css\n    } else {\n      styleElement.innerHTML = ''\n      styleElement.appendChild(document.createTextNode(css))\n    }\n  }\n}\n\nfunction getScrollBarWidth() {\n  // https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n  const inner = document.createElement('p')\n  inner.style.width = '100%'\n  inner.style.height = '200px'\n\n  const outer = document.createElement('div')\n  outer.style.position = 'absolute'\n  outer.style.top = '0px'\n  outer.style.left = '0px'\n  outer.style.visibility = 'hidden'\n  outer.style.width = '200px'\n  outer.style.height = '150px'\n  outer.style.overflow = 'hidden'\n  outer.appendChild(inner)\n\n  document.body.appendChild(outer)\n  const w1 = inner.offsetWidth\n  outer.style.overflow = 'scroll'\n  let w2 = inner.offsetWidth\n  if (w1 === w2) {\n    w2 = outer.clientWidth\n  }\n\n  document.body.removeChild(outer)\n\n  return w1 - w2\n}\n\nlet SCROLLBAR_SIZE: number = 0\n\nconst isPerfectScrollbar = () => !!(window as any).PerfectScrollbar\n\nconst initDocument = () => {\n  let css = styleCss\n  if (isPerfectScrollbar()) {\n    css += `\n      .kaka-grid .grid-scroll-end-point {\n        width: 1px;\n        height: 1px;\n      }`\n  } else {\n    SCROLLBAR_SIZE = getScrollBarWidth() || 10\n    css += `\n      .kaka-grid .grid-scrollable {\n        overflow: scroll;\n      }\n      .kaka-grid .grid-scroll-end-point {\n        width: ${SCROLLBAR_SIZE}px;\n        height: ${SCROLLBAR_SIZE}px;\n      }\n      .kaka-grid > canvas {\n        width: -webkit-calc(100% - ${SCROLLBAR_SIZE}px);\n        width: calc(100% - ${SCROLLBAR_SIZE}px);\n        height: -webkit-calc(100% - ${SCROLLBAR_SIZE}px);\n        height: calc(100% - ${SCROLLBAR_SIZE}px);\n      }`\n  }\n  styleInject('style', css)\n}\n\nconst style = {\n  initDocument() {\n    style.initDocument = () => {\n      // nothing\n    }\n    initDocument()\n  },\n  getScrollBarSize() {\n    return SCROLLBAR_SIZE\n  },\n  inject: styleInject,\n  isPerfectScrollbar,\n}\n\nexport default style\n","import { EventHandler } from '../../../internal/EventHandler'\n\nexport function setInputValue(input: HTMLInputElement, value: string): void {\n  const sign = input.type === 'number' && value === '-'\n  if (sign) {\n    // When `type=\"number\"`, the minus sign is not accepted, so change it to `type=\"text\"` once.\n    input.type = ''\n    let handler: EventHandler | null = new EventHandler()\n    const dispose = (): void => {\n      if (handler) {\n        handler.dispose()\n        handler = null\n      }\n    }\n    handler.once(input, 'input', (_e) => {\n      input.type = 'number'\n      dispose()\n    })\n    handler.once(input, 'blur', (_e) => {\n      dispose()\n    })\n  }\n\n  input.value = value ?? ''\n}\n","import { getInlineEditingStateId } from '../../internal/symbolManager'\nimport { GridInternal, InlineEditingState } from 'src/ts-types-internal'\nimport { obj } from '../../internal/utils'\n\nconst INLINE_EDITING_STATE_ID = getInlineEditingStateId()\n\nexport function getInlineEditingState<T>(\n  grid: GridInternal<T>\n): InlineEditingState {\n  let state = grid[INLINE_EDITING_STATE_ID]\n  if (!state) {\n    state = {}\n    obj.setReadonly(grid, INLINE_EDITING_STATE_ID, state)\n  }\n  return state\n}\n\nexport function toBoolean(val: unknown): boolean {\n  if (typeof val === 'string') {\n    if (val === 'false') {\n      return false\n    } else if (val === 'off') {\n      return false\n    } else if (/^0+$/.exec(val)) {\n      return false\n    }\n  }\n  return Boolean(val)\n}\n","import { ListGridAPI } from '../../../ts-types'\nimport { KEY_ENTER, KEY_ESC, KEY_TAB } from '../../../core/draw-grid/KEY_CODE'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport { isDef, event } from '../../../internal/utils'\nimport inlineInputElementCss from './InlineInputElement.css'\nimport { setInputValue } from './input-value-handler'\nimport { getInlineEditingState } from '../../../columns/utils'\n\nconst CLASSNAME_IIE = 'kaka-grid__inline-input'\n\nfunction createInputElement() {\n  style.inject('inlineInputElement', inlineInputElementCss)\n  return createElement('input', { classList: CLASSNAME_IIE })\n}\n\nconst INPUT_EDITOR_TYPE = 'editor_type'\nconst BEFORE_INPUT_VALUE = 'before_value'\n\nfunction setInlineInputValue(\n  type: string = '',\n  input: HTMLInputElement,\n  value: any,\n  inputValue?: string\n) {\n  input.dataset[INPUT_EDITOR_TYPE] = type\n  if (type === 'date') {\n    if (value instanceof Date) {\n      if (input.type === 'text') {\n        input.value = value.toJSON().slice(0, 10)\n      } else {\n        input.valueAsDate = value\n      }\n    } else {\n      input.value = ''\n    }\n  } else if (type === 'number') {\n    if (typeof value === 'number' || typeof value === 'string') {\n      input.value = String(value)\n    } else {\n      input.value = ''\n    }\n  } else if (isDef(value)) {\n    input.value = value\n  } else {\n    input.value = ''\n  }\n  input.dataset[BEFORE_INPUT_VALUE] = input.value\n  if (inputValue) {\n    setInputValue(input, inputValue)\n  }\n}\n\nfunction getInlineInputValue(input: HTMLInputElement) {\n  let value: any\n  switch (input.dataset[INPUT_EDITOR_TYPE]) {\n    case 'date':\n      if (\n        /(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)/.test(\n          input.value\n        )\n      ) {\n        value = new Date(input.value)\n      } else {\n        value = null\n      }\n      break\n    case 'number':\n      value = input.value ? Number(input.value) : null\n      if (isNaN(value)) {\n        value = null\n      }\n      break\n    default:\n      value = input.value\n      break\n  }\n  return value\n}\n\nfunction isInputValueChanged(input: HTMLInputElement) {\n  return input.value !== input.dataset[BEFORE_INPUT_VALUE]\n}\n\ntype EditorProps = {\n  type?: string\n  classList?: string[]\n  enabledMouseWheel: boolean\n}\n\ntype ActiveData<T> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps\n}\n\nfunction setInputAttrs<T>(\n  editor: EditorProps,\n  _grid: ListGridAPI<T>,\n  input: HTMLInputElement,\n  fixedType?: string\n): void {\n  const { classList, type } = editor\n  if (classList) {\n    input.classList.add(...classList)\n  }\n  try {\n    input.type = fixedType || type || ''\n  } catch (e) {\n    input.type = ''\n  }\n}\n\nexport class InlineInputElement<T> {\n  public static setInputAttrs<T>(\n    editor: EditorProps,\n    grid: ListGridAPI<T>,\n    input: HTMLInputElement,\n    fixedType?: string\n  ) {\n    setInputAttrs(editor, grid, input, fixedType)\n  }\n  private _handler: EventHandler\n  private _input: HTMLInputElement\n  private _beforePropEditor?: EditorProps | null\n  private _activeData?: ActiveData<T> | null\n  private _attaching: boolean\n  private _enabledMouseWheel: boolean = false\n  public constructor() {\n    this._handler = new EventHandler()\n    this._input = createInputElement()\n    this._bindInputEvents()\n  }\n  public dispose(): void {\n    const input = this._input\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    input.parentElement?.removeChild(input)\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps,\n    col: number,\n    row: number,\n    value: string,\n    inputValue?: string\n  ): void {\n    const input = this._input\n    this._enabledMouseWheel = editor.enabledMouseWheel\n\n    if (input.parentElement) {\n      // 解决 chrome 下 Failed to execute 'appendChild' on 'Node': The node to be removed is no longer a child of this node. Perhaps it was moved in a 'blur' event handler? 问题\n      // 问题原因：\n      //  正在输入的时候，双击其他单元格，正常情况要先触发 blur 再执行此方法，但 chrome 有时会延后执行 blur\n      //  element.appendChild(input) 执行此行代码的过程中会执行 blur 事件内容，导致此错误\n      // 解决办法：\n      //  如果发现 blur 还没有执行，则不执行此方法\n      return\n    }\n\n    const handler = this._handler\n\n    if (this._beforePropEditor) {\n      const { classList } = this._beforePropEditor\n      if (classList) {\n        input.classList.remove(...classList)\n      }\n    }\n\n    input.style.font = grid.font || '16px sans-serif'\n\n    const { element, rect, padding } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    input.style.top = `${rect.top.toFixed()}px`\n    input.style.left = `${rect.left.toFixed()}px`\n    input.style.width = `${rect.width.toFixed()}px`\n    input.style.height = `${rect.height.toFixed()}px`\n    input.style.paddingTop = `${padding[0]}px`\n    input.style.paddingRight = `${padding[1]}px`\n    input.style.paddingBottom = `${padding[2]}px`\n    input.style.paddingLeft = `${padding[3]}px`\n    element.appendChild(input)\n\n    setInputAttrs(editor, grid, input)\n    setInlineInputValue(editor.type, input, value, inputValue)\n\n    this._activeData = { grid, col, row, editor }\n    this._beforePropEditor = editor\n\n    const focus = () => {\n      input.focus()\n\n      const end = input.value.length\n      try {\n        if (typeof input.selectionStart !== 'undefined') {\n          input.selectionStart = end\n          input.selectionEnd = end\n          return\n        }\n      } catch (e) {\n        // ignore\n      }\n      if ((document as any).selection) {\n        const range = (input as any).createTextRange()\n        range.collapse()\n        range.moveEnd('character', end)\n        range.moveStart('character', end)\n        range.select()\n      }\n    }\n    const safeInputFocus = () => {\n      handler.tryWithOffEvents(input, 'blur', () => {\n        focus()\n      })\n      const state = getInlineEditingState(grid)\n      state.cellRange = grid.getCellRange(col, row)\n      grid.invalidateCellRange(state.cellRange)\n    }\n\n    this._attaching = true\n    setTimeout(() => {\n      safeInputFocus()\n      this._attaching = false\n    })\n  }\n  public detach(gridFocus?: boolean) {\n    if (this._isActive()) {\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      const input = this._input\n      this._handler.tryWithOffEvents(input, 'blur', () => {\n        if (input.parentElement) {\n          input.parentElement.removeChild(input)\n        }\n      })\n      const state = getInlineEditingState(grid)\n      delete state.cellRange\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    delete this._activeData\n    this._enabledMouseWheel = false\n  }\n  public doChangeValue() {\n    if (!this._isActive()) {\n      return\n    }\n    if (isInputValueChanged(this._input)) {\n      const value = getInlineInputValue(this._input)\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      grid.doChangeValue(col, row, () => value)\n    }\n  }\n  private _isActive() {\n    const input = this._input\n    if (!input || !input.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindInputEvents() {\n    const handler = this._handler\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 终止事件传播\n    handler.on(input, 'click', stopPropagationOnly)\n    handler.on(input, 'mousedown', stopPropagationOnly)\n    handler.on(input, 'touchstart', stopPropagationOnly)\n    handler.on(input, 'dblclick', stopPropagationOnly)\n    handler.on(input, 'mousewheel', (e) => {\n      if (!this._enabledMouseWheel) {\n        e.preventDefault()\n      }\n    })\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n    })\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      }\n    })\n    handler.on(input, 'blur', (e) => {\n      this.doChangeValue()\n      this.detach()\n    })\n  }\n  private _onKeydownEnter(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n\n    const { grid } = this._activeData!\n\n    this.doChangeValue()\n    this.detach(true)\n\n    event.cancel(e)\n\n    if (grid.keyboardOptions?.moveCellOnEnter) {\n      grid.onKeyDownMove(e)\n    }\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n\n    const { grid } = this._activeData!\n    if (!grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    this.doChangeValue()\n    this.detach(true)\n    grid.onKeyDownMove(e)\n  }\n}\n","import {\n  InlineInputEditorOption,\n  ListGridAPI,\n  CellAddress,\n} from '../../ts-types'\nimport { obj } from '../../internal/utils'\nimport { BaseActionInput } from './BaseActionInput'\nimport { InlineInputElement } from './internal/InlineInputElement'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nlet globalInlineInputElement: InlineInputElement<any> | null = null\nlet globalInlineInputBindGridCount = 0\n\nfunction attachInput<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineInputEditor<T>,\n  value: any,\n  inputValue?: string\n) {\n  if (!globalInlineInputElement) {\n    globalInlineInputElement = new InlineInputElement()\n  }\n  const state = (editor as any).getState(grid)\n  if (!state.element) {\n    state.element = globalInlineInputElement\n    globalInlineInputBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineInputBindGridCount--\n        if (!globalInlineInputBindGridCount && globalInlineInputElement) {\n          globalInlineInputElement.dispose()\n          globalInlineInputElement = null\n        }\n      },\n    })\n  }\n\n  globalInlineInputElement.attach(\n    grid,\n    editor,\n    cell.col,\n    cell.row,\n    value,\n    inputValue\n  )\n}\nfunction detachInput(gridFocus?: boolean) {\n  if (globalInlineInputElement) {\n    globalInlineInputElement.detach(gridFocus)\n  }\n}\nfunction doChangeValue<T>(_grid: ListGridAPI<T>) {\n  if (globalInlineInputElement) {\n    globalInlineInputElement.doChangeValue()\n  }\n}\n\nexport class InlineInputEditor<T> extends BaseActionInput<T> {\n  private _classList?: string | string[]\n  private _type?: string\n  private _enabledMouseWheel: boolean\n  public constructor(options: InlineInputEditorOption<T> = {}) {\n    super(options)\n    this._classList = options.classList\n    this._type = options.type\n    this._enabledMouseWheel = !!options.enabledMouseWheel\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get type() {\n    return this._type\n  }\n  public set type(type) {\n    this._type = type\n  }\n  public get enabledMouseWheel() {\n    return this._enabledMouseWheel\n  }\n  public set enabledMouseWheel(enabled) {\n    this._enabledMouseWheel = enabled\n  }\n  public clone(): InlineInputEditor<T> {\n    return new InlineInputEditor(this)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ): void {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value, inputValue)\n    })\n  }\n  public onActionOpenCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ): void {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    _selected: boolean\n  ): void {\n    doChangeValue(grid)\n    detachInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    doChangeValue(grid)\n    detachInput(true)\n  }\n  public onChangeDisabledInternal(): void {\n    // cancel input\n    detachInput(true)\n  }\n  public onChangeReadOnlyInternal(): void {\n    // cancel input\n    detachInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    input: HTMLInputElement\n  ): void {\n    InlineInputElement.setInputAttrs(this, grid, input, 'text')\n  }\n  protected getState(grid: any): any {\n    if (!grid[INLINE_INPUT_EDITOR_STATE_ID]) {\n      obj.setReadonly(grid, INLINE_INPUT_EDITOR_STATE_ID, {})\n    }\n    return grid[INLINE_INPUT_EDITOR_STATE_ID]\n  }\n}\n","import { ListGridAPI } from '../../../ts-types'\nimport {\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_ESC,\n  KEY_UP,\n  KEY_TAB,\n} from '../../../core/draw-grid/KEY_CODE'\nimport {\n  createElement,\n  findPrevSiblingFocusable,\n  isFocusable,\n  appendHtml,\n  empty,\n  findNextSiblingFocusable,\n} from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport {\n  isDef,\n  isDefString,\n  getOrApply,\n  str,\n  event,\n} from '../../../internal/utils'\nimport InlineLookupElementCss from './InlineLookupElement.css'\nimport { getInlineEditingState } from '../../../columns/utils'\n\ntype EditorProps<T, L> = {\n  type?: string\n  classList?: string[]\n  valueField?: string\n  valueType: 'string' | 'number'\n  captionField?: string\n  filterFields: string | string[]\n  filter?: (lookupRecord: L, record: T) => boolean\n  allowOtherInput: boolean | ((rec: T) => boolean)\n  disableFilterRecords: boolean\n  disableFilterSort: boolean\n  dropdownTemplate?: (...values: any[]) => string\n  dropdownEmptyTemplate?: (...values: any[]) => string\n}\n\ntype ActiveData<T, L> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps<T, L>\n  dropdownInfo: {\n    records: L[]\n    valueField: string\n    valueType: 'string' | 'number'\n    filterFields: string[]\n    captionField: string\n    allowOtherInput: boolean\n    disableFilterRecords: boolean\n    disableFilterSort: boolean\n    beforeRecord?: L\n    emptyRecord?: L\n    dropdownTemplate: (...values: any[]) => string\n    dropdownEmptyTemplate: (...values: any[]) => string\n  }\n}\n\nconst CLASSNAME_ILE = 'kaka-grid__inline-lookup'\nconst INPUT_CLASSNAME_ILE = `${CLASSNAME_ILE}__input`\nconst DROPDOWN_CLASSNAME_ILE = `${CLASSNAME_ILE}__dropdown`\nconst DROPDOWN_HIDDEN_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--hidden`\nconst DROPDOWN_SHOWN_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--shown`\nconst DROPDOWN_RIGHT_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--right`\nconst DROPDOWN_BOTTOM_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--bottom`\nconst DROPDOWN_ITEM_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}-item`\nconst DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE = `${DROPDOWN_ITEM_CLASSNAME_ILE}--empty`\nconst DROPDOWN_ITEM_OTHER_CLASSNAME_ILE = `${DROPDOWN_ITEM_CLASSNAME_ILE}--other`\nconst DROPDOWN_ITEM_FIRST_CLASSNAME_ILE = `${DROPDOWN_ITEM_CLASSNAME_ILE}--first`\nconst DEFAULT_DROPDOWN_VALUE_FIELD = 'id'\n\nfunction highlight(data: string, search: string) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: booeyOH\n  // +   improved by: Ates Goral (http://magnetiq.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   bugfixed by: Onno Marsman\n  // *     example 1: preg_quote(\"$40\");\n  // *     returns 1: '\\$40'\n  // *     example 2: preg_quote(\"*RRRING* Hello?\");\n  // *     returns 2: '\\*RRRING\\* Hello\\?'\n  // *     example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\");\n  // *     returns 3: '\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}\\=\\!\\<\\>\\|\\:'\n  const s = (search + '').replace(/([\\\\.+*?[^\\]$(){}=!<>|:])/g, '\\\\$1')\n  return s ? data.replace(new RegExp('(' + s + ')', 'gi'), '<b>$1</b>') : data\n}\n\nfunction createLookupElement() {\n  style.inject('InlineLookupElement', InlineLookupElementCss)\n  const element = createElement('div', { classList: CLASSNAME_ILE })\n  const input = createElement('input', { classList: INPUT_CLASSNAME_ILE })\n  const ul = createElement('ul', { classList: DROPDOWN_CLASSNAME_ILE })\n  ul.tabIndex = -1\n  element.appendChild(input)\n  element.appendChild(ul)\n  return element\n}\n\nconst LOOKUP_BEFORE_VALUE = 'before_value'\nconst LOOKUP_SELECT_VALUE = 'select_value'\nconst LOOKUP_VALUE_TYPE = 'value_type'\n\nfunction setLookupInputValue(\n  type: 'string' | 'number',\n  input: HTMLInputElement,\n  value: any,\n  captionValue: string,\n  inputValue?: string\n) {\n  input.value = captionValue\n  input.dataset[LOOKUP_VALUE_TYPE] = type\n  input.dataset[LOOKUP_BEFORE_VALUE] = JSON.stringify(value)\n  input.dataset[LOOKUP_SELECT_VALUE] = JSON.stringify(value)\n  if (inputValue) {\n    input.value = inputValue\n  }\n}\n\nfunction getLookupInputValue(input: HTMLInputElement) {\n  let value = JSON.parse(input.dataset[LOOKUP_SELECT_VALUE] || 'null')\n  if (input.dataset[LOOKUP_VALUE_TYPE] === 'number' && isDef(value)) {\n    value = value - 0\n    if (isNaN(value)) {\n      value = null\n    }\n  }\n  return value\n}\n\nfunction isLookupInputValueChanged(input: HTMLInputElement) {\n  return (\n    input.dataset[LOOKUP_BEFORE_VALUE] !== input.dataset[LOOKUP_SELECT_VALUE]\n  )\n}\n\nfunction findDropdownItemParents(target: HTMLElement) {\n  let el: HTMLElement | null = target\n  while (!el.classList.contains(DROPDOWN_ITEM_CLASSNAME_ILE)) {\n    el = el.parentElement\n    if (!el || el.classList.contains(DROPDOWN_CLASSNAME_ILE)) {\n      return undefined\n    }\n  }\n  return el\n}\n\nexport class InlineLookupElement<T, L> {\n  public static setInputAttrs<T, L>(\n    _editor: EditorProps<T, L>,\n    _grid: ListGridAPI<T>,\n    input: HTMLInputElement\n  ): void {\n    input.type = 'text'\n  }\n  private _handler: EventHandler\n  private _lookup: HTMLDivElement\n  private _input: HTMLInputElement\n  private _dropdown: HTMLUListElement\n  private _attaching: boolean = false\n  private _beforeValue?: string\n  private _activeData?: ActiveData<T, L>\n  private _beforePropEditor?: EditorProps<T, L> | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._lookup = createLookupElement()\n    this._input = this._lookup.querySelector(\n      `.${INPUT_CLASSNAME_ILE}`\n    ) as HTMLInputElement\n    this._dropdown = this._lookup.querySelector(\n      `.${DROPDOWN_CLASSNAME_ILE}`\n    ) as HTMLUListElement\n    this._bindInputEvents()\n  }\n  public dispose(): void {\n    const lookup = this._lookup\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    lookup.parentElement?.removeChild(lookup)\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps<T, L>,\n    col: number,\n    row: number,\n    value: any,\n    lookupRecords: L[],\n    inputValue?: string\n  ) {\n    const handler = this._handler\n    const lookup = this._lookup\n    const input = this._input\n\n    if (this._beforePropEditor) {\n      this._unbindLookupProps(grid, lookup, input, this._beforePropEditor)\n    }\n\n    const { element, rect, padding } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    lookup.style.top = `${rect.top.toFixed()}px`\n    lookup.style.left = `${rect.left.toFixed()}px`\n    lookup.style.width = `${rect.width.toFixed()}px`\n    lookup.style.height = `${rect.height.toFixed()}px`\n    input.style.width = lookup.style.width\n    input.style.height = lookup.style.height\n    input.style.paddingTop = `${padding[0]}px`\n    input.style.paddingRight = `${padding[1]}px`\n    input.style.paddingBottom = `${padding[2]}px`\n    input.style.paddingLeft = `${padding[3]}px`\n    element.appendChild(lookup)\n\n    input.style.font = grid.font || '16px sans-serif'\n    const valueField = editor.valueField || DEFAULT_DROPDOWN_VALUE_FIELD\n    const captionField = editor.captionField || valueField\n\n    // 让 valueField 和 captionField 默认在 filterFields 中\n    const filterFields =\n      !isDefString(editor.filterFields) ||\n      (Array.isArray(editor.filterFields) && editor.filterFields.length === 0)\n        ? [valueField, captionField]\n        : []\n    if (Array.isArray(editor.filterFields)) {\n      editor.filterFields.forEach((field) => {\n        if (filterFields.indexOf(field) < 0 && field) {\n          filterFields.push(field)\n        }\n      })\n    } else if (\n      isDef(editor.filterFields) &&\n      filterFields.indexOf(editor.filterFields) < 0 &&\n      editor.filterFields\n    ) {\n      filterFields.push(editor.filterFields)\n    }\n\n    const gridRecord = grid.getRowRecord(row) as T\n    const records: L[] = []\n    let emptyRecord: any // 找到表示空的记录\n    let beforeRecord: any // 找到上一个值对应的记录\n    const filter =\n      typeof editor.filter === 'function' ? editor.filter : () => true\n    for (const record of lookupRecords) {\n      if (filter(record, gridRecord)) {\n        records.push(record)\n        if (!isDefString((record as any)[valueField])) {\n          emptyRecord = record\n          if (!isDefString(value)) {\n            beforeRecord = record\n          }\n        } else if ((record as any)[valueField] === value) {\n          beforeRecord = record\n        }\n      }\n    }\n    // 进入编辑状态时，输入框中显示 captionField 的值\n    // 如果 captionField 没有值则显示 valueField 的值\n    // 如果 valueField 为空，显示空格\n    let captionValue = isDef(value) ? value + '' : ''\n    if (beforeRecord) {\n      if (beforeRecord !== emptyRecord) {\n        captionValue = beforeRecord[captionField] + '' || captionValue\n      } else {\n        captionValue = ''\n      }\n    }\n\n    const allowOtherInput = getOrApply(editor.allowOtherInput, gridRecord)\n\n    const activeData: ActiveData<T, L> = {\n      col,\n      dropdownInfo: {\n        allowOtherInput,\n        beforeRecord: isDef(inputValue) ? undefined : beforeRecord,\n        captionField,\n        disableFilterRecords: editor.disableFilterRecords,\n        disableFilterSort: editor.disableFilterSort,\n        dropdownEmptyTemplate: editor.dropdownEmptyTemplate\n          ? editor.dropdownEmptyTemplate\n          : str.template`${captionField}`,\n        dropdownTemplate: editor.dropdownTemplate\n          ? editor.dropdownTemplate\n          : str.template`${captionField}`,\n        emptyRecord,\n        filterFields,\n        records,\n        valueField,\n        valueType: editor.valueType,\n      },\n      editor,\n      grid,\n      row,\n    }\n\n    setLookupInputValue(\n      editor.valueType,\n      input,\n      value,\n      captionValue,\n      inputValue\n    )\n    this._onInputValue(input, activeData)\n\n    this._bindLookupProps(grid, lookup, input, editor)\n\n    this._activeData = activeData\n    this._beforePropEditor = editor\n\n    const focus = () => {\n      input.focus()\n\n      const end = input.value.length\n      try {\n        if (typeof input.selectionStart !== 'undefined') {\n          input.selectionStart = end\n          input.selectionEnd = end\n          return\n        }\n      } catch (e) {\n        // ignore\n      }\n      if ((document as any).selection) {\n        const range = (input as any).createTextRange()\n        range.collapse()\n        range.moveEnd('character', end)\n        range.moveStart('character', end)\n        range.select()\n      }\n    }\n    const safeInputFocus = () => {\n      handler.tryWithOffEvents(input, 'blur', () => {\n        focus()\n      })\n      const state = getInlineEditingState(grid)\n      state.cellRange = grid.getCellRange(col, row)\n      grid.invalidateCellRange(state.cellRange)\n    }\n\n    this._attaching = true\n    setTimeout(() => {\n      safeInputFocus()\n      this._attaching = false\n    })\n  }\n  public detach(gridFocus?: boolean) {\n    if (this._isActive()) {\n      const lookup = this._lookup\n      const input = this._input\n      this._handler.tryWithOffEvents(input, 'blur', () => {\n        if (lookup.parentElement) {\n          this._onInputValue(input)\n          lookup.parentElement.removeChild(lookup)\n        }\n      })\n      const { grid, col, row } = this._activeData!\n      const state = getInlineEditingState(grid)\n      delete state.cellRange\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    delete this._beforeValue\n    delete this._activeData\n  }\n  public doChangeValue(changeOnlyWhenAllowOtherInput?: boolean) {\n    if (!this._isActive()) {\n      return\n    }\n    if (\n      changeOnlyWhenAllowOtherInput &&\n      this._activeData &&\n      !this._activeData.dropdownInfo.allowOtherInput\n    ) {\n      return\n    }\n    if (isLookupInputValueChanged(this._input)) {\n      const value = getLookupInputValue(this._input)\n      const { grid, col, row } = this._activeData!\n      grid.doChangeValue(col, row, () => value)\n    }\n  }\n  private _isActive() {\n    const lookup = this._lookup\n    if (!lookup || !lookup.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindInputEvents() {\n    const handler = this._handler\n    const dropdown = this._dropdown\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 终止事件传播\n    handler.on(input, 'click', stopPropagationOnly)\n    handler.on(input, 'mousedown', stopPropagationOnly)\n    handler.on(input, 'touchstart', stopPropagationOnly)\n    handler.on(input, 'dblclick', stopPropagationOnly)\n    handler.on(dropdown, 'mousedown', stopPropagationOnly)\n    handler.on(dropdown, 'touchstart', stopPropagationOnly)\n    handler.on(dropdown, 'dblclick', stopPropagationOnly)\n\n    handler.on(dropdown, 'click', (e) => {\n      e.stopPropagation()\n      const item = findDropdownItemParents(e.target as HTMLElement)\n      if (item) {\n        this._selectNode(item)\n        this.doChangeValue()\n        this.detach(true)\n      } else {\n        this._input.focus()\n      }\n    })\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n      this._onInputValue(input)\n    })\n    const onKeyupAndPress = (e: Event) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      this._onInputValue(input)\n    }\n    handler.on(input, 'keyup', onKeyupAndPress)\n    handler.on(input, 'keypress', onKeyupAndPress)\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      } else if (keyCode === KEY_UP) {\n        const n = this._dropdown.querySelector(\n          '[data-select=true]'\n        ) as HTMLLIElement\n        if (n) {\n          this._selectNode(n, false)\n          let next = findPrevSiblingFocusable(n) as HTMLElement\n          if (!next) {\n            const items = this._dropdown.querySelectorAll(\n              `.${DROPDOWN_ITEM_CLASSNAME_ILE}`\n            )\n            next = items[items.length - 1] as HTMLElement\n            if (!isFocusable(next)) {\n              next = findPrevSiblingFocusable(next) as HTMLElement\n            }\n          }\n          if (next) {\n            this._selectNode(next)\n            event.cancel(e)\n          }\n        }\n      } else if (keyCode === KEY_DOWN) {\n        const n = this._dropdown.querySelector(\n          '[data-select=true]'\n        ) as HTMLLIElement\n        if (n) {\n          this._selectNode(n, false)\n          let next = findNextSiblingFocusable(n) as HTMLElement\n          if (!next) {\n            next = this._dropdown.querySelector(\n              `.${DROPDOWN_ITEM_CLASSNAME_ILE}`\n            ) as HTMLElement\n            if (!isFocusable(next)) {\n              next = findNextSiblingFocusable(next) as HTMLElement\n            }\n          }\n          if (next) {\n            this._selectNode(next)\n            event.cancel(e)\n          }\n        }\n      } else {\n        this._onInputValue(input)\n      }\n    })\n    handler.on(input, 'blur', () => setTimeout(() => this.detach(), 300))\n  }\n  private _onKeydownEnter(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    this.doChangeValue()\n    this.detach(true)\n    if (grid.keyboardOptions?.moveCellOnEnter) {\n      grid.onKeyDownMove(e)\n    } else {\n      event.cancel(e)\n    }\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    if (!grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    this.doChangeValue()\n    this.detach(true)\n    grid.onKeyDownMove(e)\n  }\n  private _onInputValue(\n    input: HTMLInputElement,\n    activeData?: ActiveData<T, L>\n  ) {\n    const before = this._beforeValue\n    const value = input.value\n    if (before !== value) {\n      this._onInputValueChange(value, before as string, activeData)\n    }\n    this._beforeValue = value\n  }\n  private _onInputValueChange(\n    after: string,\n    before: string,\n    activeData?: ActiveData<T, L>\n  ) {\n    activeData = activeData || this._activeData!\n    const grid = activeData.grid\n    const dropdownInfo = activeData.dropdownInfo\n    const isFirstChange = !isDef(before)\n\n    // 过滤下拉数据\n    const filterInfo = this._filterRecords(\n      dropdownInfo.records,\n      dropdownInfo.filterFields,\n      after,\n      dropdownInfo.valueField,\n      dropdownInfo.disableFilterRecords,\n      dropdownInfo.disableFilterSort,\n      dropdownInfo.emptyRecord,\n      isFirstChange ? dropdownInfo.beforeRecord : undefined\n    )\n    const isAll = filterInfo.isAll\n    const filterRecords = filterInfo.filterRecords\n    const itemNodes: HTMLElement[] = []\n    let beforeNode: any\n    let firstMatchedNode: any\n    // 只在有输入内容时显示输入内容选项\n    let isEmptyValue = false\n    if (dropdownInfo.allowOtherInput) {\n      let saveValue: any = after\n      let displayValue: string = str.escape(after)\n      if (dropdownInfo.valueType === 'number') {\n        if (saveValue.trim()) {\n          saveValue = Number(after)\n          if (isNaN(saveValue)) {\n            saveValue = null\n          }\n        } else {\n          saveValue = null\n        }\n        if (saveValue === null) {\n          displayValue = str.escape('<null>')\n          isEmptyValue = true\n        }\n      } else {\n        if (!saveValue) {\n          displayValue = str.escape('<Empty>')\n          isEmptyValue = true\n        }\n      }\n      if (\n        (dropdownInfo.valueType === 'number' &&\n          (saveValue !== null ||\n            (isAll && isEmptyValue && !dropdownInfo.emptyRecord))) ||\n        (dropdownInfo.valueType !== 'number' &&\n          (saveValue || (isEmptyValue && !dropdownInfo.emptyRecord)))\n      ) {\n        const otherLi = createElement('li', {\n          classList: [\n            DROPDOWN_ITEM_CLASSNAME_ILE,\n            isEmptyValue\n              ? DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE\n              : DROPDOWN_ITEM_OTHER_CLASSNAME_ILE,\n          ],\n        })\n        otherLi.tabIndex = 0\n        otherLi.dataset.value = JSON.stringify(saveValue)\n        appendHtml(otherLi, displayValue)\n        itemNodes.push(otherLi)\n      }\n    }\n    if (itemNodes.length === 0 || isEmptyValue || !isAll) {\n      // 当 allowOtherInput === true 并\"有非空输入内容\"且\"无匹配\"时，不显示参照列表、只显示其他值\n      // 显示过滤后的选项\n      filterRecords.forEach((record: any) => {\n        const classList = [DROPDOWN_ITEM_CLASSNAME_ILE]\n        let html\n        if (record.__isEmpty) {\n          classList.push(DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE)\n          html = dropdownInfo.dropdownEmptyTemplate(record)\n        } else {\n          html = dropdownInfo.dropdownTemplate(record)\n        }\n        const li = createElement('li', {\n          classList,\n        })\n        if (record.__isBefore) {\n          beforeNode = li\n        }\n        if (!isDef(firstMatchedNode) && record.__isMatched) {\n          firstMatchedNode = li\n        }\n        li.tabIndex = 0\n        li.dataset.value = JSON.stringify(record.__value)\n        appendHtml(li, html)\n        itemNodes.push(li)\n      })\n    }\n\n    empty(this._dropdown)\n    const offset = this._dropdown.scrollHeight + 2\n    if (itemNodes.length > 0) {\n      itemNodes[0].classList.add(DROPDOWN_ITEM_FIRST_CLASSNAME_ILE)\n      let selectedNode\n      if (isFirstChange && dropdownInfo.beforeRecord && beforeNode) {\n        selectedNode = beforeNode\n      } else if (firstMatchedNode) {\n        selectedNode = firstMatchedNode\n      } else {\n        selectedNode = itemNodes[0]\n      }\n      this._selectNode(selectedNode)\n      this._dropdown.style.maxHeight = ''\n      appendHtml(this._dropdown, itemNodes)\n      // 确定下拉框显示位置\n      if (\n        this._lookup.offsetTop +\n          this._lookup.offsetHeight +\n          this._dropdown.offsetHeight >\n          grid.getElement().clientHeight &&\n        this._lookup.offsetTop >\n          grid.getElement().clientHeight -\n            this._lookup.offsetTop -\n            this._lookup.offsetHeight\n      ) {\n        // 上方显示\n        this._dropdown.classList.add(DROPDOWN_BOTTOM_CLASSNAME_ILE)\n        this._dropdown.style.maxHeight = this._lookup.offsetTop - offset + 'px'\n      } else {\n        // 下方显示\n        this._dropdown.style.maxHeight =\n          grid.getElement().clientHeight -\n          this._lookup.offsetTop -\n          this._lookup.offsetHeight -\n          offset +\n          'px'\n        this._dropdown.classList.remove(DROPDOWN_BOTTOM_CLASSNAME_ILE)\n      }\n      if (\n        this._lookup.offsetLeft +\n          this._lookup.offsetWidth +\n          this._dropdown.offsetWidth >\n          grid.getElement().clientWidth &&\n        this._lookup.offsetLeft >\n          grid.getElement().clientWidth -\n            this._lookup.offsetLeft -\n            this._lookup.offsetWidth\n      ) {\n        this._dropdown.classList.add(DROPDOWN_RIGHT_CLASSNAME_ILE)\n      } else {\n        this._dropdown.classList.remove(DROPDOWN_RIGHT_CLASSNAME_ILE)\n      }\n      this._dropdown.classList.remove(DROPDOWN_HIDDEN_CLASSNAME_ILE)\n      this._dropdown.classList.add(DROPDOWN_SHOWN_CLASSNAME_ILE)\n    } else {\n      this._selectNode()\n      this._dropdown.classList.remove(DROPDOWN_SHOWN_CLASSNAME_ILE)\n      this._dropdown.classList.add(DROPDOWN_HIDDEN_CLASSNAME_ILE)\n    }\n  }\n  private _selectNode(node?: HTMLElement, isSelected?: boolean) {\n    if (node) {\n      if (isSelected !== false) {\n        node.dataset.select = 'true'\n        this._input.dataset[LOOKUP_SELECT_VALUE] = node.dataset.value\n        // 滚动到可视位置\n        if (node.parentElement) {\n          if (node.offsetTop < node.parentElement.scrollTop) {\n            node.parentElement.scrollTop = node.offsetTop\n          } else if (\n            node.offsetTop + node.offsetHeight >\n            node.parentElement.scrollTop + node.parentElement.clientHeight\n          ) {\n            node.parentElement.scrollTop =\n              node.offsetTop +\n              node.offsetHeight -\n              node.parentElement.clientHeight\n          }\n        }\n      } else {\n        delete node.dataset.select\n        this._input.dataset[LOOKUP_SELECT_VALUE] = this._input.dataset[\n          LOOKUP_BEFORE_VALUE\n        ]\n      }\n    } else {\n      this._input.dataset[LOOKUP_SELECT_VALUE] = this._input.dataset[\n        LOOKUP_BEFORE_VALUE\n      ]\n    }\n  }\n  private _filterRecords(\n    records: L[],\n    filterFields: string[],\n    inputValue: string,\n    valueField: string,\n    disableFilterRecords: boolean,\n    disableFilterSort: boolean,\n    emptyRecord?: L,\n    beforeRecord?: L\n  ) {\n    const filterRecords: L[] = []\n    const allRecords: L[] = []\n    const otherRecords: L[] = []\n    records.forEach((record) => {\n      const filterRecord: any = {}\n      let matched = false\n      for (const key in record) {\n        const value = isDef(record[key]) ? record[key] + '' : ''\n        if (filterFields.indexOf(key) >= 0) {\n          const matchValue = highlight(value, inputValue)\n          filterRecord[key] = matchValue\n          matched = matched || matchValue !== value || !inputValue\n        } else {\n          filterRecord[key] = value\n        }\n      }\n      filterRecord.__isMatched = matched\n      filterRecord.__value = (record as any)[valueField]\n      filterRecord.__isBefore = beforeRecord === record\n      filterRecord.__isEmpty = emptyRecord === record\n      if (matched || filterRecord.__isBefore || disableFilterSort) {\n        filterRecords.push(filterRecord)\n      } else if (disableFilterRecords) {\n        otherRecords.push(filterRecord)\n      }\n      allRecords.push(filterRecord)\n    })\n    const isAll =\n      filterFields.length === 0 ||\n      (!inputValue && !beforeRecord) ||\n      filterRecords.length === 0\n    if (!isAll && disableFilterRecords) {\n      for (const record of otherRecords) {\n        filterRecords.push(record)\n      }\n    }\n    return {\n      filterRecords: isAll ? allRecords : filterRecords,\n      isAll,\n    }\n  }\n  private _bindLookupProps(\n    grid: ListGridAPI<T>,\n    lookup: HTMLDivElement,\n    input: HTMLInputElement,\n    editor: EditorProps<T, L>\n  ) {\n    const classList = editor.classList\n    if (classList) {\n      lookup.classList.add(...classList)\n    }\n    InlineLookupElement.setInputAttrs(editor, grid, input)\n  }\n  private _unbindLookupProps(\n    _grid: ListGridAPI<T>,\n    lookup: HTMLDivElement,\n    _input: HTMLInputElement,\n    editor: EditorProps<T, L>\n  ) {\n    const classList = editor.classList\n    if (classList) {\n      lookup.classList.remove(...classList)\n    }\n  }\n}\n","import {\n  InlineLookupEditorOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { getOrApply, isPromise, isDef, obj } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { BaseActionInput } from './BaseActionInput'\nimport { InlineLookupElement } from './internal/InlineLookupElement'\nimport { getInlineLookupEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_LOOKUP_EDITOR_STATE_ID = getInlineLookupEditorStateId()\n\nlet globalInlineLookupElement: InlineLookupElement<any, any> | null = null\nlet globalInlineLookupBindGridCount = 0\n\nfunction attachLookupInput<T, L>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineLookupEditor<T, L>,\n  value: any,\n  inputValue?: string\n) {\n  if (!globalInlineLookupElement) {\n    globalInlineLookupElement = new InlineLookupElement()\n  }\n  const state = (editor as any).getState(grid)\n  if (!state.element) {\n    state.element = globalInlineLookupElement\n    globalInlineLookupBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineLookupBindGridCount--\n        if (!globalInlineLookupBindGridCount && globalInlineLookupElement) {\n          globalInlineLookupElement.dispose()\n          globalInlineLookupElement = null\n        }\n      },\n    })\n  }\n\n  const records = getOrApply(\n    editor.records || [],\n    grid.getRowRecord(cell.row) as any\n  )\n  if (isPromise(records)) {\n    records.then((rs) => {\n      if (globalInlineLookupElement) {\n        globalInlineLookupElement.attach(\n          grid,\n          editor,\n          cell.col,\n          cell.row,\n          value,\n          rs,\n          inputValue\n        )\n      }\n    })\n  } else {\n    globalInlineLookupElement.attach(\n      grid,\n      editor,\n      cell.col,\n      cell.row,\n      value,\n      records,\n      inputValue\n    )\n  }\n}\nfunction detachLookupInput(gridFocus?: boolean) {\n  if (globalInlineLookupElement) {\n    globalInlineLookupElement.detach(gridFocus)\n  }\n}\n\nfunction doChangeLookupValue() {\n  if (globalInlineLookupElement) {\n    globalInlineLookupElement.doChangeValue(true)\n  }\n}\n\nexport class InlineLookupEditor<T, L> extends BaseActionInput<T> {\n  private _classList?: string | string[]\n  private _records: L[] | ((rec: T) => L[] | Promise<L[]>)\n  private _valueField: string\n  private _valueType: 'string' | 'number'\n  private _captionField: string\n  private _filterFields: string | string[]\n  private _allowOtherInput: boolean | ((rec: T) => boolean)\n  private _disableFilterRecords: boolean\n  private _disableFilterSort: boolean\n  private _filter?: (lookupRecord: L, record: T) => boolean\n  private _dropdownTemplate?: (...values: any[]) => string\n  private _dropdownEmptyTemplate?: (...values: any[]) => string\n  public constructor(options: InlineLookupEditorOption<T, L> = {}) {\n    super(options)\n    this.action =\n      this.action ||\n      ((me) => (\n        _record: T,\n        data: {\n          grid: ListGridAPI<T>\n          cell: CellAddress\n        }\n      ) => {\n        if (\n          isReadOnlyRecord(me.readOnly, data.grid, data.cell.row) ||\n          isDisabledRecord(me.disabled, data.grid, data.cell.row)\n        ) {\n          return\n        }\n        me.onOpenCellInternal(data.grid, data.cell)\n      })(this)\n    this._classList = options.classList\n    this._records = options.records || []\n    this._valueField = options.valueField || ''\n    this._valueType = options.valueType || 'string'\n    this._captionField = options.captionField || ''\n    this._filterFields = options.filterFields || ''\n    this._allowOtherInput = options.allowOtherInput || false\n    this._disableFilterRecords = !!options.disableFilterRecords\n    this._disableFilterSort = !!options.disableFilterSort\n\n    if (isDef(options.disableDropdown)) {\n      this.disableDropdown = !!options.disableDropdown\n    }\n\n    this._filter = options.filter\n    this._dropdownTemplate = options.dropdownTemplate\n    this._dropdownEmptyTemplate = options.dropdownEmptyTemplate\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get records() {\n    return this._records\n  }\n  public set records(records) {\n    this._records = records\n  }\n  public get valueField() {\n    return this._valueField\n  }\n  public set valueField(valueField) {\n    this._valueField = valueField\n  }\n  public get valueType() {\n    return this._valueType\n  }\n  public set valueType(valueType) {\n    this._valueType = valueType\n  }\n  public get captionField() {\n    return this._captionField\n  }\n  public set captionField(captionField) {\n    this._captionField = captionField\n  }\n  public get filterFields() {\n    return this._filterFields\n  }\n  public set filterFields(filterFields) {\n    this._filterFields = filterFields\n  }\n  public get allowOtherInput() {\n    return this._allowOtherInput\n  }\n  public set allowOtherInput(allowOtherInput) {\n    this._allowOtherInput = allowOtherInput || false\n  }\n  public get disableFilterRecords() {\n    return this._disableFilterRecords\n  }\n  public set disableFilterRecords(disableFilterRecords) {\n    this._disableFilterRecords = !!disableFilterRecords\n  }\n  public get disableFilterSort() {\n    return this._disableFilterSort\n  }\n  public set disableFilterSort(disableFilterSort) {\n    this._disableFilterSort = !!disableFilterSort\n  }\n  public get disableDropdown() {\n    window.console.warn(\n      \"'disableDropdown' is deprecated, please use 'disableInput' instead\"\n    )\n    return !!this.disableInput\n  }\n  public set disableDropdown(disableDropdown) {\n    window.console.warn(\n      \"'disableDropdown' is deprecated, please use 'disableInput' instead\"\n    )\n    this.disableInput = !!disableDropdown\n  }\n  public get filter() {\n    return this._filter\n  }\n  public set filter(filter) {\n    this._filter = filter\n  }\n  public get dropdownTemplate() {\n    return this._dropdownTemplate\n  }\n  public set dropdownTemplate(dropdownTemplate) {\n    this._dropdownTemplate = dropdownTemplate\n  }\n  public get dropdownEmptyTemplate() {\n    return this._dropdownEmptyTemplate\n  }\n  public set dropdownEmptyTemplate(dropdownEmptyTemplate) {\n    this._dropdownEmptyTemplate = dropdownEmptyTemplate\n  }\n  public clone(): InlineLookupEditor<T, L> {\n    return new InlineLookupEditor(this)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachLookupInput(grid, cell, this, value, inputValue)\n    })\n  }\n  public onActionOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachLookupInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    _grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    _selected: boolean\n  ) {\n    // cancel input\n    doChangeLookupValue()\n    detachLookupInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    // cancel input\n    doChangeLookupValue()\n    detachLookupInput(true)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachLookupInput(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachLookupInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    input: HTMLInputElement\n  ) {\n    InlineLookupElement.setInputAttrs(this, grid, input)\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const ids = super.bindGridEvent(grid, cellId)\n    const detach = () => {\n      doChangeLookupValue()\n      detachLookupInput(true)\n    }\n    ids.push(grid.listen(DG_EVENT_TYPE.CLICK_UNDERLAY, detach))\n    ids.push(grid.listen(DG_EVENT_TYPE.DBLCLICK_UNDERLAY, detach))\n    ids.push(grid.listen(DG_EVENT_TYPE.DBLTAP_UNDERLAY, detach))\n    return ids\n  }\n  protected getState(grid: any): any {\n    if (!(grid as any)[INLINE_LOOKUP_EDITOR_STATE_ID]) {\n      obj.setReadonly(grid, INLINE_LOOKUP_EDITOR_STATE_ID, {})\n    }\n    return grid[INLINE_LOOKUP_EDITOR_STATE_ID]\n  }\n}\n","import { ColumnMenuItemOption, ColumnMenuItemOptions } from '../ts-types'\n\nfunction extend<T, U>(a: T, b: U): T & U {\n  const o: any = {}\n  for (const k in a) {\n    o[k] = a[k]\n  }\n  for (const k in b) {\n    o[k] = b[k]\n  }\n  return o\n}\n\n/**\n * Normalize the given menu options.\n * @param options - menu options to given\n * @returns Normalized options\n */\nfunction normalize(\n  options: ColumnMenuItemOptions | undefined\n): ColumnMenuItemOption[] {\n  if (!options) {\n    return []\n  }\n  if (Array.isArray(options)) {\n    return (options as any).map(\n      (e: any): ColumnMenuItemOption =>\n        extend(e, { label: e.caption || e.label })\n    )\n  }\n  if (typeof options === 'string') {\n    return normalize(JSON.parse(options))\n  }\n  const result = []\n  for (const k in options) {\n    if (options.hasOwnProperty(k)) {\n      result.push({\n        label: options[k],\n        value: k,\n      })\n    }\n  }\n  return result\n}\n\n/**\n * Normalize the given menu options.\n * @param options - menu options to given\n * @returns Normalized options\n */\nfunction normalizeToFn<T>(\n  options:\n    | ColumnMenuItemOptions\n    | ((record: T | undefined) => ColumnMenuItemOptions)\n    | undefined\n): (record: T | undefined) => ColumnMenuItemOption[] {\n  if (typeof options === 'function') {\n    return (record: T | undefined): ColumnMenuItemOption[] =>\n      normalize(options(record))\n  }\n  return (): ColumnMenuItemOption[] => normalize(options)\n}\n\nexport default {\n  normalize,\n  normalizeToFn,\n}\n","import { ListGridAPI, ColumnMenuItemOption, RectProps } from '../../../ts-types'\nimport {\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_ESC,\n  KEY_TAB,\n  KEY_UP,\n} from '../../../core/draw-grid/KEY_CODE'\nimport {\n  createElement,\n  appendHtml,\n  empty,\n  disableFocus,\n  findPrevSiblingFocusable,\n  findNextSiblingFocusable,\n  isFocusable,\n} from '../../../internal/dom'\nimport { isDef, event } from '../../../internal/utils'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport Rect from '../../../internal/Rect'\nimport style from '../../../internal/style'\n\nimport inlineMenuElementCss from './InlineMenuElement.css'\n\nconst CLASSNAME_IME = 'kaka-grid__inline-menu'\nconst ITEM_CLASSNAME_IME = `${CLASSNAME_IME}__menu-item`\nconst HIDDEN_CLASSNAME_IME = `${CLASSNAME_IME}--hidden`\nconst SHOWN_CLASSNAME_IME = `${CLASSNAME_IME}--shown`\nconst EMPTY_ITEM_CLASSNAME_IME = `${ITEM_CLASSNAME_IME}--empty`\n\nfunction findItemParents(target: HTMLElement) {\n  let el: HTMLElement | null = target\n  while (!el.classList.contains(ITEM_CLASSNAME_IME)) {\n    el = el.parentElement\n    if (!el || el.classList.contains(CLASSNAME_IME)) {\n      return undefined\n    }\n  }\n  return el\n}\n\nfunction createMenuElement() {\n  style.inject('inlineMenuElement', inlineMenuElementCss)\n  return createElement('ul', { classList: CLASSNAME_IME })\n}\nfunction attachElement(\n  element: HTMLElement,\n  rect: RectProps,\n  menu: HTMLUListElement,\n  autoWidth?: boolean\n) {\n  menu.style.top = `${rect.top.toFixed()}px`\n  menu.style.left = `${rect.left.toFixed()}px`\n  menu.style.width = autoWidth ? '' : `${rect.width.toFixed()}px`\n  menu.style.lineHeight = `${rect.height.toFixed()}px`\n  element.appendChild(menu)\n}\n\nfunction optionToLi(\n  { classList, label, value, html }: ColumnMenuItemOption,\n  index: number\n) {\n  const item = createElement('li', { classList: ITEM_CLASSNAME_IME })\n  item.tabIndex = 0\n  item.setAttribute('data-value-index', index + '')\n  if (classList) {\n    item.classList.add(...(Array.isArray(classList) ? classList : [classList]))\n  }\n\n  if (label) {\n    const span = createElement('span', { text: label })\n    item.appendChild(span)\n  } else if (html) {\n    appendHtml(item, html)\n  }\n\n  if (value === '' || !isDef(value)) {\n    item.classList.add(EMPTY_ITEM_CLASSNAME_IME)\n  }\n\n  return item\n}\n\nfunction openMenu<T>(\n  grid: ListGridAPI<T>,\n  editor: EditorProps<T>,\n  col: number,\n  row: number,\n  value: any,\n  options: ColumnMenuItemOption[],\n  menu: HTMLUListElement\n) {\n  const { classList } = editor\n  menu.classList.remove(SHOWN_CLASSNAME_IME)\n  menu.classList.add(HIDDEN_CLASSNAME_IME)\n  empty(menu)\n  menu.style.font = grid.font || '16px sans-serif'\n  let emptyItemEl: HTMLLIElement | null = null\n  let valueItemEl: HTMLLIElement | null = null\n\n  options.forEach((option, i) => {\n    const item = optionToLi(option, i)\n    menu.appendChild(item)\n    if (option.value === value) {\n      valueItemEl = item\n      item.dataset.select = 'select'\n    }\n    if (item.classList.contains(EMPTY_ITEM_CLASSNAME_IME)) {\n      emptyItemEl = item\n    }\n  })\n  const focusEl =\n    valueItemEl ||\n    emptyItemEl ||\n    ((menu.children || menu.childNodes)[0] as HTMLLIElement)\n  if (classList) {\n    menu.classList.add(...classList)\n  }\n  const children = Array.prototype.slice.call(\n    menu.children || menu.childNodes,\n    0\n  )\n  const focusIndex = children.indexOf(focusEl)\n  const { element, rect } = grid.getAttachCellsArea(grid.getCellRange(col, row))\n\n  // Cover the right line\n  rect.width++\n\n  // append for calculation\n  attachElement(element, rect, menu, editor.autoWidth)\n\n  // Make the selection item at the middle\n  let offset = 0\n  let allHeight = 0\n  for (let i = 0; i < children.length; i++) {\n    const offsetHeight = children[i].offsetHeight\n    if (i < focusIndex) {\n      offset += offsetHeight\n    }\n    allHeight += offsetHeight\n  }\n  ;(rect as Rect).offsetTop(-offset)\n  menu.style.transformOrigin = `center ${\n    offset + Math.ceil(children[focusIndex].offsetHeight / 2)\n  }px 0px`\n  attachElement(element, rect, menu, editor.autoWidth)\n\n  // Control not to overflow the screen range\n  const menuClientRect = menu.getBoundingClientRect()\n  const scaleDiff = (allHeight - menuClientRect.height) / 2\n  const orgMenuTop = menuClientRect.top - scaleDiff\n  let menuTop = orgMenuTop\n  const menuBottom = menuTop + allHeight\n  const winBottom = window.innerHeight\n  const winMargin = 20\n  if (menuBottom > winBottom - winMargin) {\n    const diff = menuBottom - winBottom + winMargin\n    menuTop -= diff\n  }\n  if (menuTop < 0 /*winTop*/ + winMargin) {\n    menuTop = winMargin\n  }\n  if (menuTop !== orgMenuTop) {\n    ;(rect as Rect).offsetTop(-(orgMenuTop - menuTop))\n    // re update\n    attachElement(element, rect, menu, editor.autoWidth)\n  }\n\n  if (focusEl) {\n    focusEl.focus()\n  }\n  menu.classList.remove(HIDDEN_CLASSNAME_IME)\n  menu.classList.add(SHOWN_CLASSNAME_IME)\n}\n\nfunction closeMenu<T>(\n  _grid: ListGridAPI<T>,\n  _col: number,\n  _row: number,\n  menu: HTMLUListElement\n) {\n  menu.classList.remove(SHOWN_CLASSNAME_IME)\n  menu.classList.add(HIDDEN_CLASSNAME_IME)\n  disableFocus(menu)\n}\n\ntype EditorProps<T> = {\n  classList?: string[]\n  options: (record: T | undefined) => ColumnMenuItemOption[]\n  autoWidth?: boolean\n}\ntype ActiveData<T> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps<T>\n  options: ColumnMenuItemOption[]\n}\n\nexport class InlineMenuElement<T> {\n  private _handler: EventHandler\n  private _menu: HTMLUListElement\n  private _beforePropEditor?: EditorProps<T> | null\n  private _activeData?: ActiveData<T> | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._menu = createMenuElement()\n    this._bindMenuEvents()\n  }\n  public dispose(): void {\n    const menu = this._menu\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    menu.parentElement?.removeChild(menu)\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps<T>,\n    col: number,\n    row: number,\n    value: string,\n    record: T | undefined\n  ): void {\n    const menu = this._menu\n\n    if (this._beforePropEditor) {\n      const classList = this._beforePropEditor.classList\n      if (classList) {\n        menu.classList.remove(...classList)\n      }\n    }\n\n    const options = editor.options(record)\n\n    openMenu(grid, editor, col, row, value, options, menu)\n\n    // 当焦点离开菜单时，关闭菜单\n    const owner: any = menu\n    for (let i = 0; i < menu.childNodes.length; i++) {\n      const el = menu.childNodes[i]\n      this._handler.on(el, 'focus', () => {\n        owner._focus = true\n      })\n      this._handler.on(el, 'blur', () => {\n        owner._focus = false\n        setTimeout(() => {\n          if (!owner._focus) {\n            this.detach()\n          }\n        }, 0)\n      })\n    }\n\n    this._activeData = { grid, col, row, editor, options }\n    this._beforePropEditor = editor\n  }\n  public detach(gridFocus?: boolean): void {\n    if (this._isActive()) {\n      const { grid, col, row } = this._activeData!\n      const menu = this._menu\n      closeMenu(grid, col, row, menu)\n\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    this._activeData = null\n  }\n  private _doChangeValue(valueIndex: string | null): void {\n    if (this._isActive() && valueIndex) {\n      const { grid, col, row, options } = this._activeData!\n      const option = options[parseInt(valueIndex, 10)]\n      if (option) {\n        const { value } = option\n        grid.doChangeValue(col, row, () => value)\n      }\n    }\n  }\n  private _isActive() {\n    const menu = this._menu\n    if (!menu || !menu.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindMenuEvents() {\n    const handler = this._handler\n    const menu = this._menu\n\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 为了不在grid中传播\n\n    handler.on(menu, 'mousedown', stopPropagationOnly)\n    handler.on(menu, 'touchstart', stopPropagationOnly)\n    handler.on(menu, 'dblclick', stopPropagationOnly)\n\n    handler.on(menu, 'click', (e) => {\n      e.stopPropagation()\n      const item = findItemParents(e.target as HTMLElement)\n      if (!item) {\n        return\n      }\n      const valueIndex = item.getAttribute('data-value-index')\n      this._doChangeValue(valueIndex)\n      this.detach(true)\n    })\n    handler.on(menu, 'keydown', (e) => {\n      const item = findItemParents(e.target as HTMLElement)\n      if (!item || !this._isActive()) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(menu, item, e)\n      } else if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_UP) {\n        const n = findPrevSiblingFocusable(item)\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      } else if (keyCode === KEY_DOWN) {\n        const n = findNextSiblingFocusable(item)\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(menu, item, e)\n      }\n    })\n  }\n  private _onKeydownEnter(\n    _menu: HTMLUListElement,\n    item: HTMLElement,\n    e: KeyboardEvent\n  ): void {\n    const grid = this._isActive() ? this._activeData!.grid : null\n\n    const valueIndex = item.getAttribute('data-value-index')\n    this._doChangeValue(valueIndex)\n    this.detach(true)\n    event.cancel(e)\n    if (grid) {\n      if (grid.keyboardOptions?.moveCellOnEnter) {\n        grid.onKeyDownMove(e)\n      }\n    }\n  }\n  private _onKeydownTab(\n    menu: HTMLUListElement,\n    item: HTMLElement,\n    e: KeyboardEvent\n  ): void {\n    if (this._isActive()) {\n      const { grid } = this._activeData!\n      if (grid.keyboardOptions?.moveCellOnTab) {\n        const valueIndex = item.getAttribute('data-value-index')\n        this._doChangeValue(valueIndex || '')\n        this.detach(true)\n        grid.onKeyDownMove(e)\n        return\n      }\n    }\n    if (!e.shiftKey) {\n      if (!findNextSiblingFocusable(item)) {\n        let n: HTMLElement | null = menu.querySelector(\n          `.${ITEM_CLASSNAME_IME}`\n        ) as HTMLElement\n        if (!isFocusable(n)) {\n          n = findNextSiblingFocusable(n)\n        }\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      }\n    } else {\n      if (!findPrevSiblingFocusable(item)) {\n        const items = menu.querySelectorAll(`.${ITEM_CLASSNAME_IME}`)\n        let n: HTMLElement | null = items[items.length - 1] as HTMLElement\n        if (!isFocusable(n)) {\n          n = findPrevSiblingFocusable(n)\n        }\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      }\n    }\n  }\n}\n","import {\n  ColumnIconOption,\n  FontIcon,\n  ImageIcon,\n  NamedIcon,\n  PathIcon,\n  SvgIcon,\n} from '../ts-types'\nimport { SimpleColumnIconOption } from '../ts-types-internal'\nimport { isDef } from './utils'\n\ntype ColumnIconArrayOption = {\n  content?: (string | null)[]\n  font?: (string | null)[]\n  color?: (string | null)[]\n  className?: (string | null)[]\n  tagName?: (string | null)[]\n  isLiga?: (boolean | null)[]\n  width?: (number | null)[]\n  src?: (string | null)[]\n  svg?: (string | null)[]\n  name?: (string | null)[]\n  path?: (string | null)[]\n}\n\ntype IconPropKey = (\n  | keyof FontIcon<unknown>\n  | keyof ImageIcon<unknown>\n  | keyof PathIcon<unknown>\n  | keyof SvgIcon<unknown>\n  | keyof NamedIcon<unknown>\n) &\n  keyof SimpleColumnIconOption\n\nconst ICON_PROP_KEYS: IconPropKey[] = [\n  'content',\n  'font',\n  'color',\n  'className',\n  'tagName',\n  'isLiga',\n  'width',\n  'src',\n  'svg',\n  'name',\n  'path',\n]\n\nfunction quote(name: string): string {\n  const quoted = []\n  const split = name.split(/,\\s*/)\n  for (let i = 0; i < split.length; i++) {\n    const part = split[i].replace(/['\"]/g, '')\n    if (part.indexOf(' ') === -1 && !/^\\d/.test(part)) {\n      quoted.push(part)\n    } else {\n      quoted.push(`'${part}'`)\n    }\n  }\n  return quoted.join(',')\n}\n\nconst doms: {\n  [tagName: string]: HTMLElement\n} = {}\nconst props: {\n  [tagName: string]: {\n    [className: string]: {}\n  }\n} = {}\n\nfunction getIconProps(\n  tagName: string,\n  className: string\n): SimpleColumnIconOption {\n  const tagProps = props[tagName] || (props[tagName] = {})\n  if (tagProps[className]) {\n    return tagProps[className]\n  }\n  const dom = doms[tagName] || (doms[tagName] = document.createElement(tagName))\n  dom.className = className\n  document.body.appendChild(dom)\n  try {\n    const beforeStyle = (document.defaultView || window).getComputedStyle(\n      dom,\n      '::before'\n    )\n    let content = beforeStyle.getPropertyValue('content')\n    if (content === 'none') {\n      content = '' // 解决部分IE11浏览器显示\"none\"的问题，并不是所有的IE11都有此问题，原因未知、暂无法解决\n    }\n    if (content.length >= 3 && (content[0] === '\"' || content[0] === \"'\")) {\n      if (content[0] === content[content.length - 1]) {\n        content = content.substr(1, content.length - 2)\n      }\n    }\n    let font = beforeStyle.getPropertyValue('font')\n    if (!font) {\n      font = `${beforeStyle.getPropertyValue(\n        'font-style'\n      )} ${beforeStyle.getPropertyValue(\n        'font-variant'\n      )} ${beforeStyle.getPropertyValue(\n        'font-weight'\n      )} ${beforeStyle.getPropertyValue(\n        'font-size'\n      )}/${beforeStyle.getPropertyValue('line-height')} ${quote(\n        beforeStyle.getPropertyValue('font-family')\n      )}`\n    }\n    const color = beforeStyle.getPropertyValue('color')\n    const width = dom.clientWidth\n    const isLiga =\n      (beforeStyle.getPropertyValue('font-feature-settings') || '').indexOf(\n        'liga'\n      ) > -1\n\n    return (tagProps[className] = {\n      color,\n      content,\n      font,\n      isLiga,\n      width,\n    })\n  } finally {\n    document.body.removeChild(dom)\n  }\n}\n\nfunction toPropArray<T>(prop: T, count: number): (T | null)[] {\n  const result: (T | null)[] = []\n  if (Array.isArray(prop)) {\n    result.push(...prop)\n    for (let i = prop.length; i < count; i++) {\n      result.push(null)\n    }\n  } else {\n    for (let i = 0; i < count; i++) {\n      result.push(prop)\n    }\n  }\n  return result\n}\n\nfunction toSimpleArray(\n  iconProps: ColumnIconOption<unknown> | ColumnIconOption<unknown>[]\n): SimpleColumnIconOption[] {\n  if (!iconProps) {\n    return iconProps\n  } else if (Array.isArray(iconProps)) {\n    return iconProps\n  }\n\n  const workData = {} as Required<ColumnIconArrayOption>\n\n  let count = 0\n  ICON_PROP_KEYS.forEach((k) => {\n    const prop = (iconProps as any)[k]\n    if (prop) {\n      if (Array.isArray(prop)) {\n        count = Math.max(count, prop.length)\n      } else {\n        count = Math.max(count, 1)\n      }\n    }\n  })\n\n  ICON_PROP_KEYS.forEach((k) => {\n    const arr = toPropArray((iconProps as any)[k], count)\n    ;(workData as any)[k] = arr\n  })\n\n  const result: SimpleColumnIconOption[] = []\n  for (let i = 0; i < count; i++) {\n    const data = {} as SimpleColumnIconOption\n    ICON_PROP_KEYS.forEach((k) => {\n      const val = (workData as any)[k][i]\n      ;(data as any)[k] = val\n    })\n    result.push(data)\n  }\n  return result\n}\n\nfunction normarize(iconProps: SimpleColumnIconOption): SimpleColumnIconOption {\n  const data: SimpleColumnIconOption = {}\n  for (const k in iconProps) {\n    if (k === 'className') {\n      continue\n    }\n    if (isIconKey(k)) {\n      data[k] = iconProps[k] as any\n    }\n  }\n  if (iconProps.className) {\n    const prop = getIconProps(iconProps.tagName || 'i', iconProps.className)\n    for (const k in prop) {\n      if (isIconKey(k)) {\n        if (!isDef(iconProps[k])) {\n          data[k] = prop[k] as any\n        }\n      }\n    }\n  }\n  return data\n}\n\nfunction toNormarizeArray(\n  iconProps: ColumnIconOption<unknown> | ColumnIconOption<unknown>[]\n): SimpleColumnIconOption[] {\n  const icons = toSimpleArray(iconProps)\n  if (!icons) {\n    return icons\n  }\n  return icons.map((icon) => normarize(icon))\n}\nconst iconPropKeys = ICON_PROP_KEYS\n\nfunction isIconKey(k: string): k is IconPropKey {\n  return ICON_PROP_KEYS.indexOf(k as any) >= 0\n}\n\nexport const icons = {\n  toNormarizeArray,\n  iconPropKeys,\n}\n","export default class Rect {\n  public static bounds(\n    left: number,\n    top: number,\n    right: number,\n    bottom: number\n  ) {\n    return new Rect(left, top, right - left, bottom - top)\n  }\n  public static max(rect1: Rect, rect2: Rect) {\n    return Rect.bounds(\n      Math.min(rect1.left, rect2.left),\n      Math.min(rect1.top, rect2.top),\n      Math.max(rect1.right, rect2.right),\n      Math.max(rect1.bottom, rect2.bottom)\n    )\n  }\n  private _left: number\n  private _top: number\n  private _width: number\n  private _height: number\n  private _right: number | undefined\n  private _bottom: number | undefined\n  public constructor(left: number, top: number, width: number, height: number) {\n    this._left = left\n    this._top = top\n    this._width = width\n    this._height = height\n    this._right = undefined\n  }\n  public get left() {\n    return this._left\n  }\n  public set left(left) {\n    const right = this.right\n    this._left = left\n    this.right = right\n  }\n  public get top() {\n    return this._top\n  }\n  public set top(top) {\n    const bottom = this.bottom\n    this._top = top\n    this.bottom = bottom\n  }\n  public get width() {\n    return this._width\n  }\n  public set width(width) {\n    this._width = width\n    this._right = undefined\n  }\n  public get height() {\n    return this._height\n  }\n  public set height(height) {\n    this._height = height\n    this._bottom = undefined\n  }\n  public get right() {\n    return this._right !== undefined\n      ? this._right\n      : (this._right = this.left + this.width)\n  }\n  public set right(right) {\n    this._right = right\n    this.width = right - this.left\n  }\n  public get bottom() {\n    return this._bottom !== undefined\n      ? this._bottom\n      : (this._bottom = this.top + this.height)\n  }\n  public set bottom(bottom) {\n    this._bottom = bottom\n    this.height = bottom - this.top\n  }\n  public offsetLeft(offset: number) {\n    this._left += offset\n    this._right = undefined\n  }\n  public offsetTop(offset: number) {\n    this._top += offset\n    this._bottom = undefined\n  }\n  public copy() {\n    return new Rect(this.left, this.top, this.width, this.height)\n  }\n  public intersection(rect: Rect) {\n    const x0 = Math.max(this.left, rect.left)\n    const x1 = Math.min(this.left + this.width, rect.left + rect.width)\n    if (x0 <= x1) {\n      const y0 = Math.max(this.top, rect.top)\n      const y1 = Math.min(this.top + this.height, rect.top + rect.height)\n      if (y0 <= y1) {\n        return Rect.bounds(x0, y0, x1, y1)\n      }\n    }\n    return null\n  }\n  public contains(another: Rect) {\n    return (\n      this.left <= another.left &&\n      this.left + this.width >= another.left + another.width &&\n      this.top <= another.top &&\n      this.top + this.height >= another.top + another.height\n    )\n  }\n  public inPoint(x: number, y: number) {\n    return (\n      this.left <= x &&\n      this.left + this.width >= x &&\n      this.top <= y &&\n      this.top + this.height >= y\n    )\n  }\n}\n","import { icons } from '../../internal/icons'\nimport {\n  MaybePromise,\n  ColumnIconOption,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  DrawCallback,\n  CellStyle,\n  AttachCellStyle,\n} from '../../ts-types'\nimport { SimpleColumnIconOption } from '../../ts-types-internal'\nimport Rect from '../../internal/Rect'\nimport { cellInRange, obj, isPromise, isDefString } from '../../internal/utils'\nimport { Style } from '../style'\n\nexport function loadIcons(\n  icon: MaybePromise<ColumnIconOption<any> | ColumnIconOption<any>[]> | null,\n  context: CellContext,\n  helper: GridCanvasHelperAPI,\n  callback: (\n    icon: SimpleColumnIconOption[] | undefined,\n    context: CellContext\n  ) => void\n): void {\n  let argIcon = undefined\n  if (icon) {\n    if (isPromise(icon)) {\n      icon.then((i) => {\n        loadIcons(i, context.toCurrentContext(), helper, callback)\n      })\n    } else {\n      const iconList = icons.toNormarizeArray(icon)\n      iconList.forEach((i) => {\n        if (i.font && i.content) {\n          helper.testFontLoad(i.font, i.content, context)\n        }\n      })\n      argIcon = iconList\n    }\n  }\n  callback(argIcon, context)\n}\nexport function getActionTextPadding(\n  context: CellContext,\n  helper: GridCanvasHelperAPI,\n  style: Style\n) {\n  const font = style.font\n  const padding = style.padding\n  const appearance = style.appearance\n\n  const basePadding = helper.toBoxPixelArray(padding || 0, context, font)\n  const textPadding = basePadding.slice(0)\n  if (appearance !== 'none' && isDefString(appearance)) {\n    textPadding[1] += 26 // 文字距离有边框位置，右侧图标\n  }\n  return textPadding\n}\nexport function drawActionButton<T>(\n  grid: ListGridAPI<T>,\n  context: CellContext,\n  stateId: any,\n  helper: GridCanvasHelperAPI,\n  style: Style\n) {\n  const textBaseline = style.textBaseline\n  const font = style.font\n  const padding = style.padding\n  const appearance = style.appearance\n  const color = style.color\n\n  let active = false\n  const state = (grid as any)[stateId]\n  if (state) {\n    if (\n      state.mouseActiveCell &&\n      cellInRange(context.range, state.mouseActiveCell.col, state.mouseActiveCell.row)\n    ) {\n      if (state.mouseRelativePos) {\n        let rect = context.getRect()\n        const btnWidth = 32\n        rect = new Rect(\n          rect.left + rect.width - btnWidth,\n          rect.top,\n          btnWidth,\n          rect.height\n        )\n        active =\n          rect.left <= state.mouseRelativePos.x &&\n          rect.right >= state.mouseRelativePos.x &&\n          rect.top <= state.mouseRelativePos.y &&\n          rect.bottom >= state.mouseRelativePos.y\n        state.mouseActive = active\n      }\n    }\n  }\n  if (appearance !== 'none' && isDefString(appearance)) {\n    const basePadding = helper.toBoxPixelArray(padding || 0, context, font)\n    const iconPadding = basePadding.slice(0)\n    iconPadding[1] += 8 // 图标距离右边框位置\n    let icon\n    if (appearance === 'menulist-button') {\n      // draw dropdown arrow icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        path: 'M0 2 5 7 10 2z',\n        width: 10,\n      }\n    } else if (appearance === 'lookup-button') {\n      // draw lookup icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        // tslint:disable-next-line:max-line-length\n        path:\n          'M4.7997924,9.6 C2.15326327,9.6 0,7.44655046 0,4.79937714 C0,2.15261906 2.15326327,0 4.7997924,0 C7.44673673,0 9.6,2.15261906 9.6,4.79937714 C9.6,7.44655046 7.44673673,9.6 4.7997924,9.6 Z M4.79959481,0.9 C2.64922597,0.9 0.9,2.64900249 0.9,4.79918953 C0.9,6.95018703 2.64922597,8.7 4.79959481,8.7 C6.95036883,8.7 8.7,6.95018703 8.7,4.79918953 C8.7,2.64940773 6.95036883,0.9 4.79959481,0.9 Z M11.579002,12 C11.4749824,12 11.3709629,11.9593028 11.289322,11.8774707 L7.93168591,8.56830498 C7.76260228,8.39851441 7.75555713,8.11713467 7.91510908,7.93902961 C8.07631871,7.76136216 8.34237677,7.75261007 8.51104597,7.92065022 L11.8686821,11.2315664 C12.0373513,11.4004817 12.0443964,11.6822991 11.8848445,11.8608417 C11.8019603,11.9527387 11.6904812,12 11.579002,12 Z',\n        width: 12,\n      }\n    } else if (appearance === 'clear-button') {\n      // draw clear icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        // tslint:disable-next-line:max-line-length\n        path:\n          'M5.26896659,6.00000686 L0.152356675,11.1166168 C-0.048420546,11.317394 -0.0501211184,11.6463861 0.151753253,11.8482467 C0.355026465,12.05152 0.681179729,12.0498468 0.883383238,11.8476433 L5.99999314,6.73103342 L11.1166168,11.8476433 C11.317394,12.0484205 11.6463861,12.0501211 11.8482467,11.8482467 C12.05152,11.6449735 12.0498468,11.3188203 11.8476433,11.1166168 L6.73103341,6.00000686 L11.8476433,0.883383238 C12.0484205,0.682606017 12.0501074,0.3536139 11.8482467,0.151753253 C11.6449598,-0.0515199596 11.3188065,-0.0498468209 11.1166168,0.152356675 L6.00000686,5.2689803 L0.883383238,0.152356688 C0.682606017,-0.0484205326 0.3536139,-0.0501073814 0.151753253,0.151753266 C-0.0515199596,0.355040202 -0.0498468209,0.681193466 0.152356675,0.883383252 L5.26896659,6.00000686 Z',\n        width: 12,\n      }\n    } else if (appearance === 'date-button') {\n      // draw date icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        // tslint:disable-next-line:max-line-length\n        path:\n          'M5.6,6.8h0.9c0.2,0,0.4-0.2,0.4-0.4C6.8,6.2,6.7,6,6.4,6c0,0,0,0,0,0H5.6C5.3,6,5.1,6.2,5.1,6.4c0,0,0,0,0,0C5.1,6.7,5.3,6.8,5.6,6.8L5.6,6.8z M5.6,8.6h0.9c0.2,0,0.4-0.2,0.4-0.4c0-0.2-0.2-0.4-0.4-0.4c0,0,0,0,0,0H5.6c-0.2,0-0.4,0.2-0.4,0.4c0,0,0,0,0,0C5.1,8.4,5.3,8.6,5.6,8.6L5.6,8.6z M10.3,0.9H8.6V0.4C8.6,0.2,8.4,0,8.1,0c0,0,0,0,0,0C7.9,0,7.7,0.2,7.7,0.4c0,0,0,0,0,0v0.4H4.3V0.4C4.3,0.2,4.1,0,3.9,0c0,0,0,0,0,0C3.6,0,3.4,0.2,3.4,0.4c0,0,0,0,0,0v0.4H1.7C0.8,0.9,0,1.6,0,2.6v6.8c0,0.9,0.8,1.7,1.7,1.7h8.6c0.9,0,1.7-0.8,1.7-1.7V2.6C12,1.6,11.2,0.9,10.3,0.9L10.3,0.9z M11.1,9.4c0,0.5-0.4,0.9-0.9,0.9H1.7c-0.5,0-0.9-0.4-0.9-0.9V4.3h10.3V9.4z M11.1,3.4H0.9V2.6c0-0.5,0.4-0.9,0.9-0.9h1.7v0.4c0,0.2,0.2,0.4,0.4,0.4s0.4-0.2,0.4-0.4V1.7h3.4v0.4c0,0.2,0.2,0.4,0.4,0.4c0.2,0,0.4-0.2,0.4-0.4V1.7h1.7c0.5,0,0.9,0.4,0.9,0.9L11.1,3.4L11.1,3.4z M3,8.6h0.9c0.2,0,0.4-0.2,0.4-0.4c0-0.2-0.2-0.4-0.4-0.4c0,0,0,0,0,0H3c-0.2,0-0.4,0.2-0.4,0.4c0,0,0,0,0,0C2.6,8.4,2.8,8.6,3,8.6z M8.1,6.8H9c0.2,0,0.4-0.2,0.4-0.4C9.4,6.2,9.2,6,9,6c0,0,0,0,0,0H8.1C7.9,6,7.7,6.2,7.7,6.4c0,0,0,0,0,0C7.7,6.7,7.9,6.8,8.1,6.8L8.1,6.8z M3,6.8h0.9c0.2,0,0.4-0.2,0.4-0.4C4.3,6.2,4.1,6,3.9,6c0,0,0,0,0,0H3C2.8,6,2.6,6.2,2.6,6.4c0,0,0,0,0,0C2.6,6.7,2.8,6.8,3,6.8z M8.1,8.6H9c0.2,0,0.4-0.2,0.4-0.4c0-0.2-0.2-0.4-0.4-0.4c0,0,0,0,0,0H8.1c-0.2,0-0.4,0.2-0.4,0.4c0,0,0,0,0,0C7.7,8.4,7.9,8.6,8.1,8.6z',\n        width: 12,\n      }\n    } else if (typeof appearance === 'function') {\n      icon = appearance(active)\n    } else if (obj.isObject(appearance)) {\n      icon = appearance\n    } else {\n      window.console.warn(`unsupported appearance:${appearance}`)\n    }\n    if (icon) {\n      // 绘制按钮图标时，不应影响到 overflowText\n      const cellOverflowText =\n        grid.getCellOverflowText(context.col, context.row) || ''\n      helper.text('', context, {\n        color,\n        font,\n        icons: [icon],\n        padding: iconPadding,\n        textAlign: 'right',\n        textBaseline,\n      })\n      grid.setCellOverflowText(context.col, context.row, cellOverflowText)\n    }\n  }\n}\nexport function customDraw<T>(\n  helper: GridCanvasHelperAPI,\n  draw: DrawCallback | undefined,\n  value: any,\n  context: CellContext,\n  grid: ListGridAPI<T>,\n  record: unknown\n) {\n  let b = false\n  if (draw) {\n    const rect = context.getRect()\n    const row = context.row\n    const col = context.col\n    const selection = context.getSelection()\n    const opt = {\n      grid,\n      record,\n      rect,\n      row,\n      col,\n      selection,\n    }\n    helper.drawWithClip(context, (ctx) => {\n      b = draw(value, ctx, opt) === false\n    })\n  }\n  return b\n}\nexport function isAttachArea<T>(record: T, cellStyle?: CellStyle) {\n  let s: AttachCellStyle | undefined\n  if (typeof cellStyle === 'function') {\n    s = cellStyle(record)\n  } else {\n    s = cellStyle\n  }\n  let b = false\n  if (s && s.innerBox === 'dashed') {\n    b = true\n  }\n  return b\n}\n\nexport function reviseAttachCellsArea<T>(\n  rect: Rect,\n  row: number,\n  grid: ListGridAPI<T>,\n  cellStyle?: CellStyle\n) {\n  const record = grid.getRowRecord(row)\n  if (isAttachArea(record, cellStyle)) {\n    rect.left += 4\n    rect.top += 4\n    rect.right -= 4\n    rect.bottom -= 4\n  }\n}\nexport function reviseAttachCellsPadding<T>(\n  padding: [number, number, number, number],\n  row: number,\n  grid: ListGridAPI<T>,\n  cellStyle?: CellStyle\n) {\n  const record = grid.getRowRecord(row)\n  if (isAttachArea(record, cellStyle)) {\n    padding[3] -= 4\n    if (padding[3] < 0) {\n      padding[3] = 0\n    }\n    padding[1] -= 4\n    if (padding[1] < 0) {\n      padding[1] = 0\n    }\n  }\n}\nexport function drawAttachArea<T>(\n  grid: ListGridAPI<T>,\n  record: unknown,\n  context: CellContext,\n  helper: GridCanvasHelperAPI,\n  cellStyle?: CellStyle\n) {\n  if (isAttachArea(record, cellStyle)) {\n    const rect = context.getRect()\n    rect.top += 4\n    rect.right -= 4\n    rect.bottom -= 4\n    rect.left += 4\n    helper.attachArea(rect, context)\n  }\n}\n","import { AnyListener, EventListenerId } from '../ts-types'\nimport { each, isDef } from '../internal/utils'\n\nimport { getEventTargetSymbol } from '../internal/symbolManager'\nconst _ = getEventTargetSymbol()\n\nlet eventTargetNextId = 1\n\n/**\n * event target.\n */\nexport class EventTarget {\n  private [_]: {\n    listeners: { [type: string]: AnyListener[] }\n    listenerData: {\n      [id: number]: {\n        type: string\n        listener: AnyListener\n        remove: () => void\n      }\n    }\n  } = {\n    listeners: {},\n    listenerData: {},\n  }\n  /**\n   * Adds an event listener.\n   * @param type - The event type id.\n   * @param listener - Callback method.\n   * @returns unique id for the listener.\n   */\n  public listen(type: string, listener: AnyListener): EventListenerId {\n    const list = this[_].listeners[type] || (this[_].listeners[type] = [])\n    list.push(listener)\n\n    const id = eventTargetNextId++\n    this[_].listenerData[id] = {\n      listener,\n      remove: () => {\n        delete this[_].listenerData[id]\n        const index = list.indexOf(listener)\n        list.splice(index, 1)\n        if (!this[_].listeners[type].length) {\n          delete this[_].listeners[type]\n        }\n      },\n      type,\n    }\n    return id\n  }\n  /**\n   * Removes an event listener which was added with listen() by the id returned by listen().\n   * @param id - the id returned by listen().\n   * @returns\n   */\n  public unlisten(id: EventListenerId): void {\n    if (!this[_]) {\n      return\n    }\n    this[_].listenerData[id].remove()\n  }\n  /**\n   * Adds an event listener.\n   * @param type - The event type id.\n   * @param listener - Callback method.\n   * @returns\n   */\n  public addEventListener(type: string, listener: AnyListener): void {\n    this.listen(type, listener)\n  }\n  /**\n   * Removes an event listener.\n   * @param type - The event type id.\n   * @param listener - Callback method.\n   * @returns\n   */\n  public removeEventListener(type: string, listener: AnyListener): void {\n    if (!this[_]) {\n      return\n    }\n    each(this[_].listenerData, (obj, id) => {\n      if (obj.type === type && obj.listener === listener) {\n        this.unlisten(id as number)\n      }\n    })\n  }\n  /**\n   * @param type - The event type id.\n   * @returns\n   */\n  public hasListeners(type: string): boolean {\n    return !!this[_].listeners[type]\n  }\n  /**\n   * Fires all registered listeners\n   * @param type - The type of the listeners to fire.\n   * @param args - fire arguments\n   * @returns the result of the last listener\n   */\n  public fireListeners(type: string, ...args: any[]): any[] {\n    const list = this[_].listeners[type]\n    if (!list) {\n      return []\n    }\n    return list.map((listener) => listener.call(this, ...args)).filter(isDef)\n  }\n  /**\n   * @returns\n   */\n  public dispose(): void {}\n}\n","import { ColumnStyle, ColorDef, BaseStyleOption } from '../../ts-types'\nimport { EventTarget } from '../../core/EventTarget'\n\nconst BASE_STYLE_EVENT_TYPE = {\n  CHANGE_STYLE: 'change_style' as const,\n}\n\nlet defaultBaseStyle: BaseStyle\n\nexport class BaseStyle extends EventTarget implements ColumnStyle {\n  public static get EVENT_TYPE(): { CHANGE_STYLE: 'change_style' } {\n    return BASE_STYLE_EVENT_TYPE\n  }\n  public static get DEFAULT(): BaseStyle {\n    return defaultBaseStyle\n      ? defaultBaseStyle\n      : (defaultBaseStyle = new BaseStyle())\n  }\n  private _bgColor?: ColorDef\n  public constructor({ bgColor }: BaseStyleOption = {}) {\n    super()\n    this._bgColor = bgColor\n  }\n  public get bgColor(): ColorDef | undefined {\n    return this._bgColor\n  }\n  public set bgColor(bgColor) {\n    this._bgColor = bgColor\n    this.doChangeStyle()\n  }\n  public doChangeStyle(): void {\n    this.fireListeners(BASE_STYLE_EVENT_TYPE.CHANGE_STYLE)\n  }\n  public clone(): BaseStyle {\n    return new BaseStyle(this)\n  }\n}\n","import { BaseStdStyleOption } from '../../ts-types'\nimport { BaseStyle } from './BaseStyle'\n\nlet defaultBaseStdStyle: BaseStdStyle\n\nexport class BaseStdStyle extends BaseStyle {\n  public static get DEFAULT(): BaseStdStyle {\n    return defaultBaseStdStyle\n      ? defaultBaseStdStyle\n      : (defaultBaseStdStyle = new BaseStdStyle())\n  }\n  private _textAlign: CanvasTextAlign\n  private _textBaseline: CanvasTextBaseline\n  public constructor(style: BaseStdStyleOption = {}) {\n    super(style)\n    this._textAlign = style.textAlign || 'left'\n    this._textBaseline = style.textBaseline || 'middle'\n  }\n  public get textAlign(): CanvasTextAlign {\n    return this._textAlign\n  }\n  public set textAlign(textAlign) {\n    this._textAlign = textAlign\n    this.doChangeStyle()\n  }\n  public get textBaseline(): CanvasTextBaseline {\n    return this._textBaseline\n  }\n  public set textBaseline(textBaseline) {\n    this._textBaseline = textBaseline\n    this.doChangeStyle()\n  }\n  public clone(): BaseStdStyle {\n    return new BaseStdStyle(this)\n  }\n}\n","import { ColorDef, BaseCheckStyleOption } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\nimport { defaults } from '../../internal/utils'\n\nlet defaultBaseCheckStyle: BaseCheckStyle\n\nexport class BaseCheckStyle extends BaseStdStyle {\n  public static get DEFAULT(): BaseCheckStyle {\n    return defaultBaseCheckStyle\n      ? defaultBaseCheckStyle\n      : (defaultBaseCheckStyle = new BaseCheckStyle())\n  }\n  private _uncheckBgColor?: ColorDef\n  private _checkBgColor?: ColorDef\n  private _borderColor?: ColorDef\n  public constructor(style: BaseCheckStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    const { uncheckBgColor, checkBgColor, borderColor } = style\n    this._uncheckBgColor = uncheckBgColor\n    this._checkBgColor = checkBgColor\n    this._borderColor = borderColor\n  }\n  public get uncheckBgColor(): ColorDef | undefined {\n    return this._uncheckBgColor\n  }\n  public set uncheckBgColor(uncheckBgColor) {\n    this._uncheckBgColor = uncheckBgColor\n    this.doChangeStyle()\n  }\n  public get checkBgColor(): ColorDef | undefined {\n    return this._checkBgColor\n  }\n  public set checkBgColor(checkBgColor) {\n    this._checkBgColor = checkBgColor\n    this.doChangeStyle()\n  }\n  public get borderColor(): ColorDef | undefined {\n    return this._borderColor\n  }\n  public set borderColor(borderColor) {\n    this._borderColor = borderColor\n    this.doChangeStyle()\n  }\n  public clone(): BaseCheckStyle {\n    return new BaseCheckStyle(this)\n  }\n}\n","import { ColorDef, TextOverflow, StyleOption, Appearance } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\n\nlet defaultStyle: Style\n\nexport class Style extends BaseStdStyle {\n  public static get DEFAULT(): Style {\n    return defaultStyle ? defaultStyle : (defaultStyle = new Style())\n  }\n  private _color?: ColorDef\n  private _font?: string\n  private _padding?: number | string | (number | string)[]\n  private _inputPadding?: number | string | (number | string)[]\n  private _textOverflow: TextOverflow\n  private _appearance: Appearance\n  public constructor(style: StyleOption = {}) {\n    super(style)\n    this._color = style.color\n    this._font = style.font\n    this._padding = style.padding\n    this._inputPadding = style.inputPadding\n    this._textOverflow = style.textOverflow || 'clip'\n    this._appearance = style.appearance || 'none'\n  }\n  public get color(): ColorDef | undefined {\n    return this._color\n  }\n  public set color(color) {\n    this._color = color\n    this.doChangeStyle()\n  }\n  public get font(): string | undefined {\n    return this._font\n  }\n  public set font(font) {\n    this._font = font\n    this.doChangeStyle()\n  }\n  public get padding(): number | string | (number | string)[] | undefined {\n    return this._padding\n  }\n  public set padding(padding) {\n    this._padding = padding\n    this.doChangeStyle()\n  }\n  public get inputPadding(): number | string | (number | string)[] | undefined {\n    return this._inputPadding\n  }\n  public set inputPadding(inputPadding) {\n    this._inputPadding = inputPadding\n    this.doChangeStyle()\n  }\n  public get textOverflow(): TextOverflow {\n    return this._textOverflow\n  }\n  public set textOverflow(textOverflow) {\n    this._textOverflow = textOverflow\n    this.doChangeStyle()\n  }\n  public get appearance(): Appearance {\n    return this._appearance\n  }\n  public set appearance(appearance) {\n    this._appearance = appearance\n    this.doChangeStyle()\n  }\n  public clone(): Style {\n    return new Style(this)\n  }\n}\n","import { ButtonStyleOption, ColorDef } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultButtonStyle: ButtonStyle\n\nexport class ButtonStyle extends Style {\n  public static get DEFAULT() {\n    return defaultButtonStyle\n      ? defaultButtonStyle\n      : (defaultButtonStyle = new ButtonStyle())\n  }\n  private _buttonBgColor?: ColorDef\n  public constructor(style: ButtonStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    this._buttonBgColor = style.buttonBgColor\n  }\n  public get buttonBgColor(): ColorDef | undefined {\n    return this._buttonBgColor\n  }\n  public set buttonBgColor(buttonBgColor) {\n    this._buttonBgColor = buttonBgColor\n    this.doChangeStyle()\n  }\n  public clone(): ButtonStyle {\n    return new ButtonStyle(this)\n  }\n}\n","import { CheckStyleOption } from '../../ts-types'\nimport { BaseCheckStyle } from './BaseCheckStyle'\n\nlet defaultCheckStyle: CheckStyle\n\nexport class CheckStyle extends BaseCheckStyle {\n  public static get DEFAULT(): CheckStyle {\n    return defaultCheckStyle\n      ? defaultCheckStyle\n      : (defaultCheckStyle = new CheckStyle())\n  }\n  public constructor(style: CheckStyleOption = {}) {\n    super(style)\n  }\n  public clone(): CheckStyle {\n    return new CheckStyle(this)\n  }\n}\n","import { SwitchStyleOption } from '../../ts-types'\nimport { BaseCheckStyle } from './BaseCheckStyle'\n\nlet defaultSwitchStyle: SwitchStyle\n\nexport class SwitchStyle extends BaseCheckStyle {\n  public static get DEFAULT(): SwitchStyle {\n    return defaultSwitchStyle\n      ? defaultSwitchStyle\n      : (defaultSwitchStyle = new SwitchStyle())\n  }\n  public constructor(style: SwitchStyleOption = {}) {\n    super(style)\n  }\n  public clone(): SwitchStyle {\n    return new SwitchStyle(this)\n  }\n}\n","import { DateStyleOption } from '../../ts-types'\nimport { Style } from './Style'\n\nfunction adjustDateTimeStyleOption(style: DateStyleOption): DateStyleOption {\n  style.textAlign = style.textAlign || 'right'\n  return style\n}\n\nlet defaultDateStyle: DateStyle\n\nexport class DateStyle extends Style {\n  public static get DEFAULT(): DateStyle {\n    return defaultDateStyle\n      ? defaultDateStyle\n      : (defaultDateStyle = new DateStyle())\n  }\n  public constructor(style: DateStyleOption = {}) {\n    super(adjustDateTimeStyleOption(style))\n  }\n  public clone(): DateStyle {\n    return new DateStyle(this)\n  }\n}\n","import { DrawStyleOption, Appearance } from '../../ts-types'\nimport { BaseStyle } from './BaseStyle'\n\nlet defaultDrawStyle: DrawStyle\n\nexport class DrawStyle extends BaseStyle {\n  private _appearance: Appearance\n  public static get DEFAULT(): DrawStyle {\n    return defaultDrawStyle\n      ? defaultDrawStyle\n      : (defaultDrawStyle = new DrawStyle())\n  }\n  public constructor(style: DrawStyleOption = {}) {\n    super(style)\n    this._appearance = style.appearance || 'none'\n  }\n  public get appearance(): Appearance {\n    return this._appearance\n  }\n  public set appearance(appearance) {\n    this._appearance = appearance\n    this.doChangeStyle()\n  }\n  public clone(): DrawStyle {\n    return new DrawStyle(this)\n  }\n}\n","import { IconStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultIconStyle: IconStyle\n\nexport class IconStyle extends Style {\n  public static get DEFAULT() {\n    return defaultIconStyle\n      ? defaultIconStyle\n      : (defaultIconStyle = new IconStyle())\n  }\n  public constructor(style: IconStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n  }\n  public clone(): IconStyle {\n    return new IconStyle(this)\n  }\n}\n","import { ImageStyleOption, Appearance } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\nimport { defaults } from '../../internal/utils'\n\nlet defaultImageStyle: ImageStyle\n\nexport class ImageStyle extends BaseStdStyle {\n  public static get DEFAULT(): ImageStyle {\n    return defaultImageStyle\n      ? defaultImageStyle\n      : (defaultImageStyle = new ImageStyle())\n  }\n  private _margin: number\n  private _imageSizing?: 'keep-aspect-ratio'\n  private _appearance?: Appearance\n  public constructor(style: ImageStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    this._imageSizing = style.imageSizing\n    this._margin = style.margin || 4\n    this._appearance = style.appearance || 'none'\n  }\n  public get imageSizing(): 'keep-aspect-ratio' | undefined {\n    return this._imageSizing\n  }\n  public set imageSizing(imageSizing) {\n    this._imageSizing = imageSizing\n    this.doChangeStyle()\n  }\n  public get margin(): number {\n    return this._margin\n  }\n  public set margin(margin) {\n    this._margin = margin\n    this.doChangeStyle()\n  }\n  public get appearance(): Appearance | undefined {\n    return this._appearance\n  }\n  public set appearance(appearance) {\n    this._appearance = appearance\n    this.doChangeStyle()\n  }\n  public clone(): ImageStyle {\n    return new ImageStyle(this)\n  }\n}\n","import { LookupStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultLookupStyle: LookupStyle\n\nexport class LookupStyle extends Style {\n  public static get DEFAULT() {\n    return defaultLookupStyle\n      ? defaultLookupStyle\n      : (defaultLookupStyle = new LookupStyle())\n  }\n  public constructor(style: LookupStyleOption = {}) {\n    super(defaults(style, { textAlign: 'left' }))\n    this.appearance = style.appearance || 'menulist-button'\n  }\n  public clone(): LookupStyle {\n    return new LookupStyle(this)\n  }\n}\n","import { MenuStyleOption } from '../../ts-types'\nimport { Style } from './Style'\n\nlet defaultMenuStyle: MenuStyle\n\nexport class MenuStyle extends Style {\n  public static get DEFAULT(): MenuStyle {\n    return defaultMenuStyle\n      ? defaultMenuStyle\n      : (defaultMenuStyle = new MenuStyle())\n  }\n  public constructor(style: MenuStyleOption = {}) {\n    super(style)\n    this.appearance = style.appearance || 'menulist-button'\n  }\n  public clone(): MenuStyle {\n    return new MenuStyle(this)\n  }\n}\n","import { LineClamp, MultilineTextStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultMultilineTextStyle: MultilineTextStyle\n\nexport class MultilineTextStyle extends Style {\n  public static get DEFAULT() {\n    return defaultMultilineTextStyle\n      ? defaultMultilineTextStyle\n      : (defaultMultilineTextStyle = new MultilineTextStyle())\n  }\n  private _lineHeight: string | number\n  private _autoWrapText: boolean\n  private _lineClamp: LineClamp\n  public constructor(style: MultilineTextStyleOption = {}) {\n    super(defaults(style, { textBaseline: 'middle', textOverflow: 'ellipsis' }))\n    this._lineHeight = style.lineHeight || '1em'\n    this._autoWrapText = style.autoWrapText || false\n    this._lineClamp = style.lineClamp || 'auto'\n  }\n  public clone() {\n    return new MultilineTextStyle(this)\n  }\n  public get lineHeight(): string | number {\n    return this._lineHeight\n  }\n  public set lineHeight(lineHeight) {\n    this._lineHeight = lineHeight\n    this.doChangeStyle()\n  }\n  public get lineClamp(): LineClamp {\n    return this._lineClamp\n  }\n  public set lineClamp(lineClamp) {\n    this._lineClamp = lineClamp\n    this.doChangeStyle()\n  }\n  public get autoWrapText(): boolean {\n    return this._autoWrapText\n  }\n  public set autoWrapText(autoWrapText) {\n    this._autoWrapText = autoWrapText\n    this.doChangeStyle()\n  }\n}\n","import { NumberStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultNumberStyle: NumberStyle\n\nexport class NumberStyle extends Style {\n  public static get DEFAULT() {\n    return defaultNumberStyle\n      ? defaultNumberStyle\n      : (defaultNumberStyle = new NumberStyle())\n  }\n  public constructor(style: NumberStyleOption = {}) {\n    super(defaults(style, { textAlign: 'right' }))\n  }\n  public clone(): NumberStyle {\n    return new NumberStyle(this)\n  }\n}\n","import { PercentCompleteBarStyleOption, ColorDef } from '../../ts-types'\nimport { Style } from './Style'\n\nlet defaultPercentCompleteBarStyle: PercentCompleteBarStyle\n\nconst DEFAULT_BAR_COLOR = (num: number): string => {\n  if (num > 80) {\n    return '#20a8d8'\n  }\n  if (num > 50) {\n    return '#4dbd74'\n  }\n  if (num > 20) {\n    return '#ffc107'\n  }\n  return '#f86c6b'\n}\n\nexport class PercentCompleteBarStyle extends Style {\n  public static get DEFAULT(): PercentCompleteBarStyle {\n    return defaultPercentCompleteBarStyle\n      ? defaultPercentCompleteBarStyle\n      : (defaultPercentCompleteBarStyle = new PercentCompleteBarStyle())\n  }\n  private _barColor: ColorDef | ((num: number) => ColorDef)\n  private _barBgColor: ColorDef\n  private _barHeight: number\n  public constructor(style: PercentCompleteBarStyleOption = {}) {\n    super(style)\n    this._barColor = style.barColor || DEFAULT_BAR_COLOR\n    this._barBgColor = style.barBgColor || '#f0f3f5'\n    this._barHeight = style.barHeight || 3\n  }\n  public get barColor(): ColorDef | ((num: number) => ColorDef) {\n    return this._barColor\n  }\n  public set barColor(barColor) {\n    this._barColor = barColor\n    this.doChangeStyle()\n  }\n  public get barBgColor(): ColorDef {\n    return this._barBgColor\n  }\n  public set barBgColor(barBgColor) {\n    this._barBgColor = barBgColor\n    this.doChangeStyle()\n  }\n  public get barHeight(): number {\n    return this._barHeight\n  }\n  public set barHeight(barHeight) {\n    this._barHeight = barHeight\n    this.doChangeStyle()\n  }\n  public clone(): PercentCompleteBarStyle {\n    return new PercentCompleteBarStyle(this)\n  }\n}\n","import { ColorDef, RadioStyleOption } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\nimport { defaults } from '../../internal/utils'\n\nlet defaultRadioStyle: RadioStyle\nexport class RadioStyle extends BaseStdStyle {\n  public static get DEFAULT(): RadioStyle {\n    return defaultRadioStyle\n      ? defaultRadioStyle\n      : (defaultRadioStyle = new RadioStyle())\n  }\n  private _checkColor?: ColorDef\n  private _uncheckBorderColor?: ColorDef\n  private _checkBorderColor?: ColorDef\n  private _uncheckBgColor?: ColorDef\n  private _checkBgColor?: ColorDef\n  public constructor(style: RadioStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    const {\n      checkColor,\n      uncheckBorderColor,\n      checkBorderColor,\n      uncheckBgColor,\n      checkBgColor,\n    } = style\n    this._checkColor = checkColor\n    this._uncheckBorderColor = uncheckBorderColor\n    this._checkBorderColor = checkBorderColor\n    this._uncheckBgColor = uncheckBgColor\n    this._checkBgColor = checkBgColor\n  }\n  public get checkColor(): ColorDef | undefined {\n    return this._checkColor\n  }\n  public set checkColor(checkColor) {\n    this._checkColor = checkColor\n    this.doChangeStyle()\n  }\n  public get uncheckBorderColor(): ColorDef | undefined {\n    return this._uncheckBorderColor\n  }\n  public set uncheckBorderColor(uncheckBorderColor) {\n    this._uncheckBorderColor = uncheckBorderColor\n    this.doChangeStyle()\n  }\n  public get checkBorderColor(): ColorDef | undefined {\n    return this._checkBorderColor\n  }\n  public set checkBorderColor(checkBorderColor) {\n    this._checkBorderColor = checkBorderColor\n    this.doChangeStyle()\n  }\n  public get uncheckBgColor(): ColorDef | undefined {\n    return this._uncheckBgColor\n  }\n  public set uncheckBgColor(uncheckBgColor) {\n    this._uncheckBgColor = uncheckBgColor\n    this.doChangeStyle()\n  }\n  public get checkBgColor(): ColorDef | undefined {\n    return this._checkBgColor\n  }\n  public set checkBgColor(checkBgColor) {\n    this._checkBgColor = checkBgColor\n    this.doChangeStyle()\n  }\n  public clone(): RadioStyle {\n    return new RadioStyle(this)\n  }\n}\n","import { TreeStyleOption, ColorDef, LineClamp } from '../../ts-types'\nimport { Style } from './Style'\n\nfunction adjustTreeStyleOption(style: TreeStyleOption) {\n  style.textAlign = style.textAlign || 'left'\n  return style\n}\n\nlet defaultTreeStyle: TreeStyle\n\nexport class TreeStyle extends Style {\n  public static get DEFAULT(): TreeStyle {\n    return defaultTreeStyle\n      ? defaultTreeStyle\n      : (defaultTreeStyle = new TreeStyle())\n  }\n  private _lineColor?: ColorDef\n  private _buttonColor?: ColorDef\n  private _buttonBgColor?: ColorDef\n  private _buttonBorderColor?: ColorDef\n  private _linkColor?: ColorDef\n  private _lineHeight: string | number\n  private _autoWrapText: boolean\n  private _lineClamp: LineClamp\n  public constructor(style: TreeStyleOption = {}) {\n    super(adjustTreeStyleOption(style))\n    this._lineColor = style.lineColor\n    this._buttonColor = style.buttonColor\n    this._buttonBgColor = style.buttonBgColor\n    this._buttonBorderColor = style.buttonBorderColor\n    this._linkColor = style.linkColor\n    this._lineHeight = style.lineHeight || '1em'\n    this._autoWrapText = style.autoWrapText || false\n    this._lineClamp = style.lineClamp || 'auto'\n  }\n  public get lineColor(): ColorDef | undefined {\n    return this._lineColor\n  }\n  public set lineColor(lineColor) {\n    this._lineColor = lineColor\n    this.doChangeStyle()\n  }\n  public get buttonColor(): ColorDef | undefined {\n    return this._buttonColor\n  }\n  public set buttonColor(buttonColor) {\n    this._buttonColor = buttonColor\n    this.doChangeStyle()\n  }\n  public get buttonBgColor(): ColorDef | undefined {\n    return this._buttonBgColor\n  }\n  public set buttonBgColor(buttonBgColor) {\n    this._buttonBgColor = buttonBgColor\n    this.doChangeStyle()\n  }\n  public get buttonBorderColor(): ColorDef | undefined {\n    return this._buttonBorderColor\n  }\n  public set buttonBorderColor(buttonBorderColor) {\n    this._buttonBorderColor = buttonBorderColor\n    this.doChangeStyle()\n  }\n  public get linkColor(): ColorDef | undefined {\n    return this._linkColor\n  }\n  public set linkColor(linkColor) {\n    this._linkColor = linkColor\n    this.doChangeStyle()\n  }\n  public get lineHeight(): string | number {\n    return this._lineHeight\n  }\n  public set lineHeight(lineHeight) {\n    this._lineHeight = lineHeight\n    this.doChangeStyle()\n  }\n  public get lineClamp(): LineClamp {\n    return this._lineClamp\n  }\n  public set lineClamp(lineClamp) {\n    this._lineClamp = lineClamp\n    this.doChangeStyle()\n  }\n  public get autoWrapText(): boolean {\n    return this._autoWrapText\n  }\n  public set autoWrapText(autoWrapText) {\n    this._autoWrapText = autoWrapText\n    this.doChangeStyle()\n  }\n  public clone(): TreeStyle {\n    return new TreeStyle(this)\n  }\n}\n","import { ColumnStyleOption } from '../ts-types'\nimport { BaseStyle } from './style/BaseStyle'\nimport { BaseStdStyle } from './style/BaseStdStyle'\nimport { BaseCheckStyle } from './style/BaseCheckStyle'\nimport { ButtonStyle } from './style/ButtonStyle'\nimport { CheckStyle } from './style/CheckStyle'\nimport { SwitchStyle } from './style/SwitchStyle'\nimport { DateStyle } from './style/DateStyle'\nimport { DrawStyle } from './style/DrawStyle'\nimport { IconStyle } from './style/IconStyle'\nimport { ImageStyle } from './style/ImageStyle'\nimport { LookupStyle } from './style/LookupStyle'\nimport { MenuStyle } from './style/MenuStyle'\nimport { MultilineTextStyle } from './style/MultilineTextStyle'\nimport { NumberStyle } from './style/NumberStyle'\nimport { PercentCompleteBarStyle } from './style/PercentCompleteBarStyle'\nimport { RadioStyle } from './style/RadioStyle'\nimport { Style } from './style/Style'\nimport { TreeStyle } from './style/TreeStyle'\n\nconst { EVENT_TYPE } = BaseStyle\nexport {\n  EVENT_TYPE,\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  NumberStyle,\n  CheckStyle,\n  RadioStyle,\n  SwitchStyle,\n  ButtonStyle,\n  ImageStyle,\n  IconStyle,\n  PercentCompleteBarStyle,\n  MultilineTextStyle,\n  MenuStyle,\n  DateStyle,\n  LookupStyle,\n  TreeStyle,\n  DrawStyle,\n}\n\nexport function of(\n  columnStyle: ColumnStyleOption | null | undefined,\n  record: any,\n  StyleClassDef: typeof BaseStyle = Style\n): BaseStyle {\n  if (columnStyle) {\n    if (columnStyle instanceof BaseStyle) {\n      return columnStyle\n    } else if (typeof columnStyle === 'function') {\n      return of(columnStyle(record), record, StyleClassDef)\n    } else if (\n      typeof columnStyle === 'string' &&\n      record &&\n      columnStyle in record\n    ) {\n      return of(record[columnStyle], record, StyleClassDef)\n    }\n    return new StyleClassDef(columnStyle as any)\n  } else {\n    return StyleClassDef.DEFAULT\n  }\n}\n","import * as styleContents from '../style'\nimport {\n  BaseColumnOption,\n  CellAddress,\n  CellContext,\n  ColumnTypeAPI,\n  EventListenerId,\n  GridCanvasHelperAPI,\n  LayoutObjectId,\n  ListGridAPI,\n  MaybePromise,\n  Message,\n  Convert,\n} from '../../ts-types'\nimport {\n  DrawCellInfo,\n  ColumnFadeinState,\n  GridInternal,\n} from '../../ts-types-internal'\nimport {\n  obj,\n  isDef,\n  getOrApply,\n  isPromise,\n  cellInRange,\n} from '../../internal/utils'\nimport { BaseStyle } from '../style/BaseStyle'\nimport { Style } from '../style/Style'\nimport { animate } from '../../internal/animate'\nimport Rect from '../../internal/Rect'\nimport { getColumnFadeinStateId } from '../../internal/symbolManager'\nimport { getInlineEditingState } from '../utils'\n\nconst COLUMN_FADEIN_STATE_ID = getColumnFadeinStateId()\n\nfunction getFadinState<T>(grid: GridInternal<T>): ColumnFadeinState {\n  let state = grid[COLUMN_FADEIN_STATE_ID]\n  if (!state) {\n    state = { cells: {} }\n    obj.setReadonly(grid, COLUMN_FADEIN_STATE_ID, state)\n  }\n  return state\n}\nfunction _generateFadinPointAction<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number,\n  context: CellContext,\n  drawInternal: () => void,\n  drawCellBase: () => void\n): (point: number) => void {\n  return (point: number) => {\n    const state = getFadinState(grid)\n    const stateKey = `${col}:${row}`\n    if (point === 1) {\n      delete state.cells[stateKey]\n    } else {\n      state.cells[stateKey] = {\n        opacity: point,\n      }\n    }\n    drawCellBase()\n\n    drawInternal()\n\n    const cellState = state.cells[stateKey]\n    if (cellState) {\n      // 透明背景覆盖透明度\n      const ctx = context.getContext()\n      ctx.globalAlpha = 1 - cellState.opacity\n      try {\n        drawCellBase()\n      } finally {\n        ctx.globalAlpha = 1\n      }\n    }\n  }\n}\nconst fadinMgr = {\n  animate<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    context: CellContext,\n    drawInternal: () => void,\n    drawCellBase: () => void\n  ): void {\n    // fadein animation\n    const state = getFadinState(grid)\n\n    const activeFadeins = [\n      _generateFadinPointAction(\n        grid,\n        col,\n        row,\n        context,\n        drawInternal,\n        drawCellBase\n      ),\n    ]\n    state.activeFadeins = activeFadeins\n\n    animate(500, (point) => {\n      activeFadeins.forEach((f) => f(point))\n      if (point === 1) {\n        delete state.activeFadeins\n      }\n    })\n  },\n  margeAnimate<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    context: CellContext,\n    drawInternal: () => void,\n    drawCellBase: () => void\n  ): void {\n    const state = getFadinState(grid)\n    if (state.activeFadeins) {\n      state.activeFadeins.push(\n        _generateFadinPointAction(\n          grid,\n          col,\n          row,\n          context,\n          drawInternal,\n          drawCellBase\n        )\n      )\n    } else {\n      drawInternal()\n    }\n  },\n}\n\nexport abstract class BaseColumn<T, V> implements ColumnTypeAPI {\n  private _convert?: Convert\n  private _convertCopy?: Convert\n  private _fadeinWhenCallbackInPromise: boolean\n  private _hidden?: boolean | ((record: T) => boolean)\n  public constructor(options: BaseColumnOption<T> = {}) {\n    this.onDrawCell = this.onDrawCell.bind(this) // 修复范围\n\n    this._convert = options.convert\n    this._convertCopy = options.convertCopy\n    this._hidden = options.hidden\n\n    // 使用Promise的回调显示淡入\n    this._fadeinWhenCallbackInPromise =\n      options.fadeinWhenCallbackInPromise || false\n  }\n  public get StyleClass(): typeof BaseStyle {\n    return BaseStyle\n  }\n  public get fadeinWhenCallbackInPromise(): boolean | undefined {\n    return this._fadeinWhenCallbackInPromise\n  }\n  public get convert(): Convert | undefined {\n    return this._convert\n  }\n  public get convertCopy(): Convert | undefined {\n    return this._convertCopy\n  }\n  public get hidden(): boolean | ((record: T) => boolean) | undefined {\n    return this._hidden\n  }\n  public set hidden(hidden) {\n    this._hidden = hidden\n  }\n  public reviseAttachCellsArea(\n    _rect: Rect,\n    _row: number,\n    _grid: ListGridAPI<T>\n  ) {\n    // nothing\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    const state = getInlineEditingState(grid)\n    if (state.inputPadding) {\n      padding[0] += state.inputPadding[0]\n      padding[1] += state.inputPadding[1]\n      padding[2] += state.inputPadding[2]\n      padding[3] += state.inputPadding[3]\n    }\n  }\n  public reviseFocusRect(_rect: Rect, _row: number, _grid: ListGridAPI<T>) {\n    // nothing\n  }\n  public onDrawCell(\n    cellValue: MaybePromise<unknown>,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: ListGridAPI<T>\n  ): void | Promise<void> {\n    const {\n      style,\n      getRecord,\n      clearCellBase,\n      drawCellBase,\n      getCell,\n      getContentHidden,\n    } = info\n\n    const record = getRecord() as T\n    const helper = grid.getGridCanvasHelper()\n    const state = getInlineEditingState(grid)\n    if (\n      state.cellRange &&\n      cellInRange(state.cellRange, context.col, context.row)\n    ) {\n      // 被编辑单元格\n      drawCellBase({ bgColor: '#FFF' })\n      const actStyle = styleContents.of(style, record, this.StyleClass)\n      this.drawEditingInternal(context, actStyle, helper, grid, info)\n      return\n    }\n    if (!state.cellRange) {\n      // 在绘制单元格时，在编辑前，顺便保存当前焦点单元格的 inputPadding\n      const sel = context.getSelection()\n      const { col, row } = context\n      if (\n        !sel.dragged &&\n        cellInRange(context.range, sel.select.col, sel.select.row) &&\n        cellInRange(sel.range, col, row)\n      ) {\n        // 焦点单元格\n        const actStyle = styleContents.of(style, record, this.StyleClass)\n        if (actStyle instanceof Style && actStyle.inputPadding) {\n          state.inputPadding = helper.toBoxPixelArray(\n            actStyle.inputPadding,\n            context,\n            actStyle.font\n          )\n        } else {\n          delete state.inputPadding\n        }\n      }\n    }\n    clearCellBase()\n\n    let promise\n    if (!record) {\n      return // 过滤过程中 record 可能没有值\n    } else if (isPromise(record)) {\n      promise = record.then(() => cellValue)\n    } else if (isPromise(cellValue)) {\n      promise = cellValue\n    }\n    // 文字\n    if (promise) {\n      const start = Date.now()\n      return promise.then((val: any) => {\n        const currentContext = context.toCurrentContext()\n        const drawRect = currentContext.getDrawRect()\n        if (!drawRect) {\n          return\n        }\n        const time = Date.now() - start\n\n        const drawInternal = () => {\n          const _currentContext = context.toCurrentContext()\n          const _drawRect = _currentContext.getDrawRect()\n          if (!_drawRect) {\n            return\n          }\n          const _record = getRecord() as T\n          if (isPromise(_record)) {\n            return\n          }\n\n          const actStyle = styleContents.of(style, _record, this.StyleClass)\n          if (actStyle.bgColor) {\n            drawCellBase({ bgColor: actStyle.bgColor })\n          } else {\n            drawCellBase()\n          }\n\n          if (this.isContentHidden(_record, getContentHidden)) {\n            return\n          }\n\n          this.drawInternal(\n            this.doConvertInternal(val, getCell(), grid),\n            _currentContext,\n            actStyle,\n            helper,\n            grid,\n            info\n          )\n          this.drawMessageInternal(\n            info.getMessage(),\n            context,\n            actStyle,\n            helper,\n            grid,\n            info\n          )\n        }\n\n        let isFadeinWhenCallbackInPromise = this._fadeinWhenCallbackInPromise\n        if (!isDef(isFadeinWhenCallbackInPromise)) {\n          isFadeinWhenCallbackInPromise = !!grid.configure(\n            'fadeinWhenCallbackInPromise'\n          )\n        }\n\n        if (!isFadeinWhenCallbackInPromise) {\n          drawInternal() // 简单的绘图\n        } else {\n          const col = context.col\n          const row = context.row\n          if (time < 80) {\n            // 80 ms内的PromiseCallback被集成到之前的动画中\n            fadinMgr.margeAnimate(\n              grid,\n              col,\n              row,\n              context,\n              drawInternal,\n              drawCellBase\n            )\n          } else {\n            // 动画\n            fadinMgr.animate(\n              grid,\n              col,\n              row,\n              context,\n              drawInternal,\n              drawCellBase\n            )\n          }\n        }\n      })\n    } else {\n      const actStyle = styleContents.of(style, record, this.StyleClass)\n      if (actStyle.bgColor) {\n        drawCellBase({ bgColor: actStyle.bgColor })\n      } else {\n        drawCellBase()\n      }\n      if (this.isContentHidden(record, getContentHidden)) {\n        return\n      }\n      this.drawInternal(\n        this.doConvertInternal(cellValue, getCell(), grid),\n        context,\n        actStyle,\n        helper,\n        grid,\n        info\n      )\n      this.drawMessageInternal(\n        info.getMessage(),\n        context,\n        actStyle,\n        helper,\n        grid,\n        info\n      )\n      // 在淡入的情况下透明背景覆盖透明度\n      const col = context.col\n      const row = context.row\n      const stateKey = `${col}:${row}`\n      const cellState =\n        (grid as any)[COLUMN_FADEIN_STATE_ID] &&\n        (grid as any)[COLUMN_FADEIN_STATE_ID][stateKey]\n      if (cellState) {\n        const ctx = context.getContext()\n        ctx.globalAlpha = 1 - cellState.opacity\n        try {\n          drawCellBase()\n        } finally {\n          ctx.globalAlpha = 1\n        }\n      }\n      return\n    }\n  }\n  public abstract clone(): BaseColumn<T, V>\n  public abstract drawInternal(\n    value: V,\n    context: CellContext,\n    style: BaseStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void\n  public drawMessageInternal(\n    message: Message,\n    context: CellContext,\n    style: BaseStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    info.messageHandler.drawCellMessage(\n      message,\n      context,\n      style,\n      helper,\n      grid,\n      info\n    )\n  }\n  public bindGridEvent(\n    _grid: ListGridAPI<T>,\n    _cellId: LayoutObjectId\n  ): EventListenerId[] {\n    return []\n  }\n  public getCopyCellValue(\n    value: V,\n    _grid: ListGridAPI<T>,\n    _cell: CellAddress\n  ): string {\n    return value as any\n  }\n  public convertCopyValue(\n    value: unknown,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ) {\n    let displayValue = this.convertCopyInternal(value)\n    if (this.convertCopy) {\n      displayValue = this.convertCopy(value, displayValue, cell, grid)\n    }\n    return displayValue\n  }\n  protected doConvertInternal(\n    value: unknown,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ) {\n    let displayValue = this.convertInternal(value)\n    if (this.convert) {\n      displayValue = this.convert(value, displayValue, cell, grid)\n    }\n    return displayValue\n  }\n  protected convertInternal(value: unknown): V {\n    return (isDef(value) ? value : '') as V\n  }\n  protected convertCopyInternal(value: unknown): V {\n    return this.convertInternal(value)\n  }\n  protected drawEditingInternal(\n    _context: CellContext,\n    _style: BaseStyle,\n    _helper: GridCanvasHelperAPI,\n    _grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    // nothing\n  }\n  private isContentHidden(record: T, getContentHidden: () => boolean) {\n    let contentHidden = getOrApply(this.hidden, record)\n    if (!isDef(contentHidden)) {\n      contentHidden = getContentHidden()\n    }\n    return contentHidden\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  CellAddress,\n  MenuColumnOption,\n  ColumnMenuItemOptions,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  SimpleColumnMenuItemOption,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { BaseColumn } from './BaseColumn'\nimport { MenuStyle } from '../style/MenuStyle'\nimport { isDef } from '../../internal/utils'\nimport menuItems from '../../internal/menu-items'\n\nexport class MenuColumn<T> extends BaseColumn<T, unknown> {\n  private _options: SimpleColumnMenuItemOption[]\n  public constructor(options: MenuColumnOption<T> = {}) {\n    super(options)\n    this._options = menuItems.normalize(options.options)\n  }\n  public get StyleClass(): typeof MenuStyle {\n    return MenuStyle\n  }\n  public get options(): SimpleColumnMenuItemOption[] {\n    return this._options\n  }\n  public clone(): MenuColumn<T> {\n    return new MenuColumn(this)\n  }\n  public withOptions(options: ColumnMenuItemOptions): MenuColumn<T> {\n    const c = this.clone()\n    c._options = menuItems.normalize(options)\n    return c\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: MenuStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getCell, getIcon }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      font,\n      padding,\n      textOverflow,\n      appearance,\n    } = style\n    let { color } = style\n    const text = this._convertInternal(value, getCell(), grid)\n    helper.testFontLoad(font, text, context)\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const basePadding = helper.toBoxPixelArray(padding || 0, context, font)\n      const textPadding = basePadding.slice(0)\n      textPadding[1] += 26 // icon padding\n      const iconPadding = basePadding.slice(0)\n      iconPadding[1] += 8\n      if (!isDef(color) && (!isDef(value) || value === '')) {\n        color = 'rgba(0, 0, 0, .38)'\n      }\n      helper.text(text, ctx, {\n        color,\n        font,\n        icons,\n        padding: textPadding,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n      if (appearance === 'menulist-button') {\n        // draw dropdown arrow icon\n        helper.text('', context, {\n          color,\n          font,\n          icons: [\n            {\n              color: 'rgba(0, 0, 0, .54)',\n              path: 'M0 2 5 7 10 2z',\n              width: 10,\n            },\n          ],\n          padding: iconPadding,\n          textAlign: 'right',\n          textBaseline,\n        })\n      } else if (appearance !== 'none') {\n        window.console.warn(`unsupported appearance:${appearance}`)\n      }\n    })\n  }\n  protected convertInternal(value: unknown) {\n    return value\n  }\n  private _convertInternal(\n    value: unknown,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ): string {\n    const options = this._options\n    for (const option of options) {\n      if (option.value === value) {\n        value = option.label\n        break\n      }\n    }\n    return super.doConvertInternal(value, cell, grid) as string\n  }\n  public getCopyCellValue(\n    value: unknown,\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ): string {\n    return this._convertInternal(value, cell, grid)\n  }\n}\n","import {\n  InlineMenuEditorOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n  SimpleColumnMenuItemOption,\n  ColumnTypeAPI,\n  ColumnMenuItemOption,\n} from '../../ts-types'\nimport { KEY_ENTER, KEY_F2 } from '../../core/draw-grid/KEY_CODE'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport menuItems from '../../internal/menu-items'\nimport {\n  obj,\n  event,\n  array,\n  then,\n  isPromise,\n  cellEquals,\n} from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { Editor } from './Editor'\nimport { InlineMenuElement } from './internal/InlineMenuElement'\n\nimport { GridInternal, InputEditorState } from '../../ts-types-internal'\nimport { getInlineMenuEditorStateId } from '../../internal/symbolManager'\nimport { MenuColumn } from '../type/MenuColumn'\n\nconst INLINE_MENU_EDITOR_STATE_ID = getInlineMenuEditorStateId()\n\nlet globalInlineMenuElement: InlineMenuElement<any> | null = null\nlet globalInlineMenuBindGridCount = 0\n\nfunction getState<T>(grid: GridInternal<T>): InputEditorState {\n  let state = grid[INLINE_MENU_EDITOR_STATE_ID]\n  if (!state) {\n    state = {}\n    obj.setReadonly(grid, INLINE_MENU_EDITOR_STATE_ID, state)\n  }\n  return state\n}\n\nfunction attachMenu<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineMenuEditor<T>,\n  value: any,\n  record: T | undefined\n) {\n  const state = getState(grid as any)\n  if (!globalInlineMenuElement) {\n    globalInlineMenuElement = new InlineMenuElement()\n  }\n  if (!state.element) {\n    state.element = globalInlineMenuElement\n    globalInlineMenuBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineMenuBindGridCount--\n        if (!globalInlineMenuBindGridCount && globalInlineMenuElement) {\n          globalInlineMenuElement.dispose()\n          globalInlineMenuElement = null\n        }\n      },\n    })\n  }\n\n  globalInlineMenuElement.attach(\n    grid,\n    editor,\n    cell.col,\n    cell.row,\n    value,\n    record\n  )\n}\nfunction detachMenu(gridFocus?: boolean) {\n  if (globalInlineMenuElement) {\n    globalInlineMenuElement.detach(gridFocus)\n  }\n}\n\nexport class InlineMenuEditor<T> extends Editor<T> {\n  private _classList?: string | string[]\n  private _options: (record: T | undefined) => ColumnMenuItemOption[]\n  private _autoWidth: boolean\n  public constructor(options: InlineMenuEditorOption<T> = {}) {\n    super(options)\n    this._classList = options.classList || ''\n    this._options = menuItems.normalizeToFn(options.options)\n    this._autoWidth = options.autoWidth || false\n  }\n  public dispose() {\n    // nothing\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get options(): (record: T | undefined) => ColumnMenuItemOption[] {\n    return this._options\n  }\n  public set options(options) {\n    this._options = menuItems.normalizeToFn(options)\n  }\n  public get autoWidth(): boolean {\n    return this._autoWidth\n  }\n  public set autoWidth(autoWidth) {\n    this._autoWidth = autoWidth\n  }\n  public clone(): InlineMenuEditor<T> {\n    return new InlineMenuEditor(this)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachMenu(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachMenu(true)\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const open = (cell: CellAddress): boolean => {\n      const allowOpen =\n        !isReadOnlyRecord(this.readOnly, grid, cell.row) &&\n        !isDisabledRecord(this.disabled, grid, cell.row)\n      if (allowOpen) {\n        grid.doGetCellValue(cell.col, cell.row, (value) => {\n          const record = grid.getRowRecord(cell.row)\n          if (isPromise(record)) {\n            return\n          }\n          attachMenu(grid, cell, this, value, record)\n        })\n      }\n      return allowOpen\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      grid.listen(DG_EVENT_TYPE.CLICK_CELL, (cell) => {\n        if (!isTarget(cell.col, cell.row)) {\n          return\n        }\n        open({\n          col: cell.col,\n          row: cell.row,\n        })\n      }),\n      grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n        if (\n          (e.keyCode !== KEY_F2 && e.keyCode !== KEY_ENTER) ||\n          (e.keyCode === KEY_ENTER && e.event.shiftKey)\n        ) {\n          return\n        }\n        const sel = grid.selection.select\n        if (!isTarget(sel.col, sel.row)) {\n          return\n        }\n        if (\n          open({\n            col: sel.col,\n            row: sel.row,\n          })\n        ) {\n          event.cancel(e.event)\n          e.stopCellMoving()\n        }\n      }),\n      grid.listen(DG_EVENT_TYPE.SELECTED_CELL, (e) => {\n        detachMenu()\n      }),\n      grid.listen(DG_EVENT_TYPE.SCROLL, () => {\n        detachMenu(true)\n      }),\n\n      // mouse move\n      grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, e.row) ||\n          isDisabledRecord(this.disabled, grid, e.row)\n        ) {\n          return\n        }\n        grid.getElement().style.cursor = 'pointer'\n      }),\n      grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, e.row) ||\n          isDisabledRecord(this.disabled, grid, e.row)\n        ) {\n          return\n        }\n        if (!grid.getElement().style.cursor) {\n          grid.getElement().style.cursor = 'pointer'\n        }\n      }),\n      grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        grid.getElement().style.cursor = ''\n      }),\n\n      // paste value\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, e.row) ||\n          isDisabledRecord(this.disabled, grid, e.row)\n        ) {\n          return\n        }\n        const record = grid.getRowRecord(e.row)\n        if (isPromise(record)) {\n          return\n        }\n        const pasteOpt = this._pasteDataToOptionValue(\n          e.normalizeValue,\n          grid,\n          e,\n          record\n        )\n        if (pasteOpt) {\n          event.cancel(e.event)\n          then(\n            grid.doChangeValue(e.col, e.row, () => pasteOpt.value),\n            () => {\n              const range = grid.getCellRange(e.col, e.row)\n              grid.invalidateCellRange(range)\n            }\n          )\n        }\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const record = grid.getRowRecord(cell.row)\n    if (isPromise(record)) {\n      return\n    }\n    const pasteOpt = this._pasteDataToOptionValue(value, grid, cell, record)\n    if (pasteOpt) {\n      grid.doChangeValue(cell.col, cell.row, () => pasteOpt.value)\n    }\n  }\n  public onDeleteCellRangeBox(grid: ListGridAPI<T>, cell: CellAddress): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const record = grid.getRowRecord(cell.row)\n    if (isPromise(record)) {\n      return\n    }\n    const pasteOpt = this._pasteDataToOptionValue('', grid, cell, record)\n    if (pasteOpt) {\n      grid.doChangeValue(cell.col, cell.row, () => pasteOpt.value)\n    }\n  }\n  private _pasteDataToOptionValue(\n    value: string,\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    record: T | undefined\n  ): SimpleColumnMenuItemOption | undefined {\n    const options = this._options(record)\n    const pasteOpt = _textToOptionValue(value, options)\n    if (pasteOpt) {\n      return pasteOpt\n    }\n    const columnType = grid.getColumnType(cell.col, cell.row)\n    if (hasOptions(columnType)) {\n      // Find with caption.\n      const pasteValue = normalizePasteValueStr(value)\n      const captionOpt = array.find(\n        columnType.options,\n        (opt) => normalizePasteValueStr(opt.label) === pasteValue\n      )\n      if (captionOpt) {\n        return _textToOptionValue(captionOpt.value, options)\n      }\n    }\n    return undefined\n  }\n}\n\nfunction _textToOptionValue<T>(\n  value: string,\n  options: SimpleColumnMenuItemOption[]\n): SimpleColumnMenuItemOption | undefined {\n  const pasteValue = normalizePasteValueStr(value)\n  const pasteOpt = array.find(\n    options,\n    (opt) => normalizePasteValueStr(opt.value) === pasteValue\n  )\n  if (pasteOpt) {\n    return pasteOpt\n  }\n  return undefined\n}\n\nfunction normalizePasteValueStr(value: any): string {\n  if (value == null) {\n    return ''\n  }\n  return `${value}`.trim()\n}\n\nfunction hasOptions(columnType: ColumnTypeAPI): columnType is MenuColumn<any> {\n  if (columnType instanceof MenuColumn) {\n    return true\n  }\n  if (Array.isArray((columnType as any).options)) {\n    return true\n  }\n\n  return false\n}\n","import { ListGridAPI } from '../../../ts-types'\nimport { KEY_ENTER, KEY_ESC, KEY_TAB } from '../../../core/draw-grid/KEY_CODE'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport { event, isDef } from '../../../internal/utils'\n\nimport { InlineTextAreaEditor } from '../InlineTextAreaEditor'\nimport InlineTextAreaElementCss from './InlineTextAreaElement.css'\nimport { getInlineEditingState } from '../../../columns/utils'\n\nconst CLASSNAME_ITAE = 'kaka-grid__inline-textarea'\n\nfunction createInputElement() {\n  style.inject('InlineTextAreaElement', InlineTextAreaElementCss)\n  return createElement('textarea', { classList: CLASSNAME_ITAE })\n}\n\nconst BEFORE_TEXTAREA_VALUE = 'before_value'\n\nfunction inputAutoHeight(input: HTMLTextAreaElement) {\n  const h = input.style.minHeight\n  input.style.minHeight = '0px'\n  input.style.height = '0px'\n  input.style.height = input.scrollHeight + 'px'\n  input.style.minHeight = h\n}\n\nfunction setTextInputValue(\n  input: HTMLTextAreaElement,\n  value: any,\n  inputValue?: string\n) {\n  if (isDef(value)) {\n    input.value = value\n  } else {\n    input.value = ''\n  }\n  input.dataset[BEFORE_TEXTAREA_VALUE] = input.value\n  if (inputValue) {\n    input.value = inputValue\n  }\n  inputAutoHeight(input)\n}\n\nfunction getTextInputValue(input: HTMLTextAreaElement) {\n  return input.value\n}\n\nfunction isTextInputValueChanged(input: HTMLTextAreaElement) {\n  return input.value !== input.dataset[BEFORE_TEXTAREA_VALUE]\n}\n\ninterface ActiveData<T> {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: InlineTextAreaEditor<T>\n}\n\nexport class InlineTextAreaElement<T> {\n  public static setInputAttrs<T>(\n    editor: InlineTextAreaEditor<T>,\n    _grid: ListGridAPI<T>,\n    input: HTMLElement\n  ) {\n    const classList = editor.classList\n    if (classList) {\n      input.classList.add(...classList)\n    }\n  }\n  private _handler: EventHandler\n  private _input: HTMLTextAreaElement\n  private _attaching: boolean = false\n  private _activeData?: ActiveData<T>\n  private _beforePropEditor?: InlineTextAreaEditor<T>\n  public constructor() {\n    this._handler = new EventHandler()\n    this._input = createInputElement()\n    this._bindInputEvents()\n  }\n  public dispose() {\n    this.detach()\n    this._handler.dispose()\n    delete this._beforePropEditor\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: InlineTextAreaEditor<T>,\n    col: number,\n    row: number,\n    value: any,\n    inputValue?: string\n  ) {\n    const input = this._input\n\n    if (input.parentElement) {\n      // 参见 InlineInputElement.ts\n      return\n    }\n\n    const handler = this._handler\n\n    if (this._beforePropEditor) {\n      const classList = this._beforePropEditor.classList\n      if (classList) {\n        input.classList.remove(...classList)\n      }\n    }\n\n    input.style.font = grid.font || '16px sans-serif'\n\n    const { element, rect, padding } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    input.style.top = `${rect.top.toFixed()}px`\n    input.style.left = `${rect.left.toFixed()}px`\n    input.style.minWidth = `${rect.width.toFixed()}px`\n    input.style.width = input.style.minWidth\n    input.style.minHeight = `${rect.height.toFixed()}px`\n    input.style.height = input.style.minHeight\n    input.style.paddingTop = `${padding[0]}px`\n    input.style.paddingRight = `${padding[1]}px`\n    input.style.paddingBottom = `${padding[2]}px`\n    input.style.paddingLeft = `${padding[3]}px`\n    element.appendChild(input)\n\n    InlineTextAreaElement.setInputAttrs(editor, grid, input)\n    setTextInputValue(input, value, inputValue)\n\n    this._activeData = { grid, col, row, editor }\n    this._beforePropEditor = editor\n\n    const focus = () => {\n      input.focus()\n\n      const end = input.value.length\n      try {\n        if (typeof input.selectionStart !== 'undefined') {\n          input.selectionStart = end\n          input.selectionEnd = end\n          return\n        }\n      } catch (e) {\n        // ignore\n      }\n      if ((document as any).selection) {\n        const range = (input as any).createTextRange()\n        range.collapse()\n        range.moveEnd('character', end)\n        range.moveStart('character', end)\n        range.select()\n      }\n    }\n    const safeInputFocus = () => {\n      handler.tryWithOffEvents(input, 'blur', () => {\n        focus()\n      })\n      const state = getInlineEditingState(grid)\n      state.cellRange = grid.getCellRange(col, row)\n      grid.invalidateCellRange(state.cellRange)\n    }\n\n    this._attaching = true\n    setTimeout(() => {\n      safeInputFocus()\n      this._attaching = false\n    })\n  }\n  public detach(gridFocus?: boolean) {\n    if (this._isActive()) {\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      const input = this._input\n      this._handler.tryWithOffEvents(input, 'blur', () => {\n        if (input.parentElement) {\n          input.parentElement.removeChild(input)\n        }\n      })\n      const state = getInlineEditingState(grid)\n      delete state.cellRange\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    delete this._activeData\n  }\n  public doChangeValue() {\n    if (!this._isActive()) {\n      return\n    }\n    if (isTextInputValueChanged(this._input)) {\n      const value = getTextInputValue(this._input)\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      grid.doChangeValue(col, row, () => value)\n    }\n  }\n  private _isActive() {\n    const input = this._input\n    if (!input || !input.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindInputEvents() {\n    const handler = this._handler\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // grid为了不在活动中传播\n    handler.on(input, 'click', stopPropagationOnly)\n    handler.on(input, 'mousedown', stopPropagationOnly)\n    handler.on(input, 'touchstart', stopPropagationOnly)\n    handler.on(input, 'dblclick', stopPropagationOnly)\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n    })\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e, input)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      }\n    })\n    handler.on(input, 'blur', (e) => {\n      this.doChangeValue()\n      this.detach()\n    })\n    handler.on(input, 'input', (e) => {\n      inputAutoHeight(input)\n    })\n  }\n  private _onKeydownEnter(e: KeyboardEvent, input: HTMLTextAreaElement): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    if (e.altKey || e.ctrlKey) {\n      input.setRangeText('\\n')\n      input.selectionStart++\n      setTimeout(() => {\n        inputAutoHeight(input)\n      }, 0)\n      event.cancel(e)\n    } else {\n      const { grid } = this._activeData!\n      this.doChangeValue()\n      this.detach(true)\n      if (grid.keyboardOptions?.moveCellOnEnter) {\n        grid.onKeyDownMove(e)\n      }\n      event.cancel(e)\n    }\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    if (grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    this.doChangeValue()\n    this.detach(true)\n    grid.onKeyDownMove(e)\n  }\n}\n","import { obj } from '../../internal/utils'\nimport { BaseActionInput } from './BaseActionInput'\nimport { InlineTextAreaElement } from './internal/InlineTextAreaElement'\nimport { getInlineTextareaEditorStateId } from '../../internal/symbolManager'\nimport {\n  InlineTextAreaEditorOption,\n  ListGridAPI,\n  CellAddress,\n} from '../../ts-types'\n\nconst INLINE_TEXTAREA_EDITOR_STATE_ID = getInlineTextareaEditorStateId()\n\nlet globalInlineTextAreaElement: InlineTextAreaElement<any> | null = null\nlet globalInlineInputBindGridCount = 0\n\nfunction attachInput<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineTextAreaEditor<T>,\n  value: any,\n  inputValue?: string\n) {\n  if (!globalInlineTextAreaElement) {\n    globalInlineTextAreaElement = new InlineTextAreaElement()\n  }\n  const state = (editor as any).getState(grid)\n  if (!state.element) {\n    state.element = globalInlineTextAreaElement\n    globalInlineInputBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineInputBindGridCount--\n        if (!globalInlineInputBindGridCount && globalInlineTextAreaElement) {\n          globalInlineTextAreaElement.dispose()\n          globalInlineTextAreaElement = null\n        }\n      },\n    })\n  }\n\n  globalInlineTextAreaElement.attach(\n    grid,\n    editor,\n    cell.col,\n    cell.row,\n    value,\n    inputValue\n  )\n}\nfunction detachInput(gridFocus?: boolean) {\n  if (globalInlineTextAreaElement) {\n    globalInlineTextAreaElement.detach(gridFocus)\n  }\n}\nfunction doChangeValue<T>(grid: ListGridAPI<T>) {\n  if (globalInlineTextAreaElement) {\n    globalInlineTextAreaElement.doChangeValue()\n  }\n}\n\nexport class InlineTextAreaEditor<T> extends BaseActionInput<T> {\n  private _classList: string | string[]\n  public constructor(options: InlineTextAreaEditorOption<T> = {}) {\n    super(options)\n    this._classList = options.classList || ''\n  }\n  public get classList() {\n    return (\n      this._classList &&\n      (Array.isArray(this._classList) ? this._classList : [this._classList])\n    )\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public clone(): InlineTextAreaEditor<T> {\n    return new InlineTextAreaEditor(this)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value, inputValue)\n    })\n  }\n  public onActionOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    selected: any\n  ) {\n    doChangeValue(grid)\n    detachInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    doChangeValue(grid)\n    detachInput(true)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachInput(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    input: HTMLInputElement\n  ) {\n    InlineTextAreaElement.setInputAttrs(this, grid, input)\n  }\n  protected getState(grid: any): any {\n    if (!(grid as any)[INLINE_TEXTAREA_EDITOR_STATE_ID]) {\n      obj.setReadonly(grid, INLINE_TEXTAREA_EDITOR_STATE_ID, {})\n    }\n    return grid[INLINE_TEXTAREA_EDITOR_STATE_ID]\n  }\n}\n","import {\n  CellAddress,\n  EventListenerId,\n  GetRadioEditorGroup,\n  LayoutObjectId,\n  RadioEditorOption,\n} from '../../ts-types'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { cellEquals, event, isPromise, obj } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord, toggleValue } from './action-utils'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { Editor } from './Editor'\nimport { GridInternal } from '../../ts-types-internal'\nimport { animate } from '../../internal/animate'\nimport { getRadioColumnStateId } from '../../internal/symbolManager'\nimport { toBoolean } from '../utils'\n\nconst RADIO_COLUMN_STATE_ID = getRadioColumnStateId()\n\nconst defaultGroupResolver: GetRadioEditorGroup<any> = ({ grid, col, row }) => {\n  const cellId = grid.getLayoutCellId(col, row)\n  const recordStartRow = grid.getRecordStartRowByRecordIndex(\n    grid.getRecordIndexByRow(row)\n  )\n  const offsetRow = row - recordStartRow\n\n  const result = []\n  const { rowCount, recordRowCount } = grid\n  for (\n    let targetRow = grid.frozenRowCount + offsetRow;\n    targetRow < rowCount;\n    targetRow += recordRowCount\n  ) {\n    if (grid.getLayoutCellId(col, targetRow) === cellId) {\n      result.push({ col, row: targetRow })\n    }\n  }\n  return result\n}\n\nexport class RadioEditor<T> extends Editor<T> {\n  protected _group: GetRadioEditorGroup<T>\n  public constructor(option: RadioEditorOption<T> = {}) {\n    super(option)\n    this._group = option.group || defaultGroupResolver\n  }\n  public clone(): RadioEditor<T> {\n    return new RadioEditor(this)\n  }\n  public get group(): GetRadioEditorGroup<T> {\n    return this._group\n  }\n  public set group(group) {\n    this._group = group\n  }\n  public bindGridEvent(\n    grid: GridInternal<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    let _state = grid[RADIO_COLUMN_STATE_ID]\n    if (!_state) {\n      _state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, RADIO_COLUMN_STATE_ID, _state)\n    }\n    const state = _state\n\n    const action = (cell: CellAddress): void => {\n      this._action(grid, cell)\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          if (isDisabledRecord(this.disabled, grid, e.row)) {\n            return false\n          }\n          state.mouseActiveCell = {\n            col: e.col,\n            row: e.row,\n          }\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n          return true\n        },\n        mouseOut: (e) => {\n          delete state.mouseActiveCell\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n        },\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action,\n      }),\n\n      // paste value\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n\n        const pasteValue = e.normalizeValue.trim()\n        if (!toBoolean(pasteValue)) {\n          return\n        }\n        event.cancel(e.event)\n\n        action({\n          col: e.col,\n          row: e.row,\n        })\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: GridInternal<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const pasteValue = value.trim()\n    if (!toBoolean(pasteValue)) {\n      return\n    }\n    this._action(grid, {\n      col: cell.col,\n      row: cell.row,\n    })\n  }\n  public onDeleteCellRangeBox(): void {\n    // noop\n  }\n  private _action(grid: GridInternal<T>, cell: CellAddress): void {\n    const state = grid[RADIO_COLUMN_STATE_ID]!\n    const range = grid.getCellRange(cell.col, cell.row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row) ||\n      state.block[cellKey]\n    ) {\n      return\n    }\n\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      if (toBoolean(value)) {\n        return\n      }\n\n      const targets = this._group({ grid, col: cell.col, row: cell.row })\n      targets.forEach(({ col, row }) => {\n        const range = grid.getCellRange(col, row)\n        const cellKey = `${range.start.col}:${range.start.row}`\n\n        if (\n          isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n          isDisabledRecord(this.disabled, grid, cell.row) ||\n          state.block[cellKey]\n        ) {\n          return\n        }\n\n        actionCell(grid, col, row, col === cell.col && row === cell.row)\n      })\n    })\n  }\n}\n\nfunction actionCell<T>(\n  grid: GridInternal<T>,\n  col: number,\n  row: number,\n  flag: boolean\n): void {\n  grid.doGetCellValue(col, row, (value) => {\n    if (toBoolean(value) === flag) {\n      return\n    }\n\n    const state = grid[RADIO_COLUMN_STATE_ID]!\n    const range = grid.getCellRange(col, row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n    const ret = grid.doChangeValue(col, row, toggleValue)\n    if (ret) {\n      const onChange = (): void => {\n        // checkbox animation\n        animate(200, (point) => {\n          if (point === 1) {\n            delete state.elapsed[cellKey]\n          } else {\n            state.elapsed[cellKey] = point\n          }\n          grid.invalidateCellRange(range)\n        })\n      }\n      if (isPromise(ret)) {\n        state.block[cellKey] = true\n        ret.then(() => {\n          delete state.block[cellKey]\n          onChange()\n        })\n      } else {\n        onChange()\n      }\n    }\n  })\n}\n","import { ListGridAPI, MaybePromise } from '../../../ts-types'\nimport { KEY_ENTER, KEY_ESC, KEY_TAB } from '../../../core/draw-grid/KEY_CODE'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport { event, then, browser } from '../../../internal/utils'\nimport smallDialogInputElementCss from './SmallDialogInputElement.css'\nimport { setInputValue } from './input-value-handler'\n\nconst CLASSNAME_SDE = 'kaka-grid__small-dialog-input'\nconst INPUT_CLASSNAME_SDE = `${CLASSNAME_SDE}__input`\nconst HIDDEN_CLASSNAME_SDE = `${CLASSNAME_SDE}--hidden`\nconst SHOWN_CLASSNAME_SDE = `${CLASSNAME_SDE}--shown`\n\nfunction _focus(input: HTMLInputElement, handler: EventHandler): void {\n  const focus = () => {\n    input.focus()\n\n    const end = input.value.length\n    try {\n      if (typeof input.selectionStart !== 'undefined') {\n        input.selectionStart = end\n        input.selectionEnd = end\n        return\n      }\n    } catch (e) {\n      // ignore\n    }\n    if ((document as any).selection) {\n      const range = (input as any).createTextRange()\n      range.collapse()\n      range.moveEnd('character', end)\n      range.moveStart('character', end)\n      range.select()\n    }\n  }\n  handler.tryWithOffEvents(input, 'blur', () => {\n    focus()\n  })\n}\n\nfunction createDialogElement(): HTMLDivElement {\n  style.inject('smallDialogInputElement', smallDialogInputElementCss)\n  const element = createElement('div', {\n    classList: [CLASSNAME_SDE, HIDDEN_CLASSNAME_SDE],\n  })\n  const input = createElement('input', { classList: INPUT_CLASSNAME_SDE })\n  // input.readOnly = true;\n  input.tabIndex = -1\n  element.appendChild(input)\n  return element\n}\n\ntype GetValueResult<T, R> = (\n  value: string,\n  info: { grid: ListGridAPI<T>; col: number; row: number }\n) => R\n\ntype EditorProps<T> = {\n  type?: string\n  classList?: string[]\n  helperText?: string | GetValueResult<T, string>\n  inputValidator?: GetValueResult<T, MaybePromise<string>>\n  validator?: GetValueResult<T, MaybePromise<string>>\n}\n\ntype ActiveData<T> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps<T>\n}\n\nfunction bindProps<T>(\n  grid: ListGridAPI<T>,\n  dialog: HTMLDivElement,\n  input: HTMLInputElement,\n  editor: EditorProps<T>\n): void {\n  const { classList, helperText } = editor\n  if (classList) {\n    dialog.classList.add(...classList)\n  }\n  if (helperText && typeof helperText !== 'function') {\n    dialog.dataset.helperText = helperText\n  }\n  setInputAttrs(editor, grid, input)\n}\n\nfunction unbindProps<T>(\n  _grid: ListGridAPI<T>,\n  dialog: HTMLDivElement,\n  input: HTMLInputElement,\n  editor: EditorProps<T>\n): void {\n  const { classList } = editor\n  if (classList) {\n    dialog.classList.remove(...classList)\n  }\n  delete dialog.dataset.helperText\n  input.type = ''\n}\n\nfunction setInputAttrs<T>(\n  editor: EditorProps<T>,\n  _grid: ListGridAPI<T>,\n  input: HTMLInputElement\n): void {\n  const { type } = editor\n  input.type = type || ''\n}\n\nexport class SmallDialogInputElement<T> {\n  public static setInputAttrs<T>(\n    editor: EditorProps<T>,\n    grid: ListGridAPI<T>,\n    input: HTMLInputElement\n  ) {\n    setInputAttrs(editor, grid, input)\n  }\n  private _handler: EventHandler\n  private _dialog: HTMLDivElement\n  private _input: HTMLInputElement\n  private _beforePropEditor?: EditorProps<T> | null\n  private _activeData?: ActiveData<T> | null\n  private _attaching?: boolean\n  private _beforeValue?: string | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._dialog = createDialogElement()\n    this._input = this._dialog.querySelector(\n      `.${INPUT_CLASSNAME_SDE}`\n    ) as HTMLInputElement\n    this._bindDialogEvents()\n  }\n  public dispose(): void {\n    const dialog = this._dialog\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    if (dialog.parentElement) {\n      dialog.parentElement.removeChild(dialog)\n    }\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps<T>,\n    col: number,\n    row: number,\n    value: string\n  ): void {\n    const handler = this._handler\n    const dialog = this._dialog\n    const input = this._input\n\n    if (this._beforePropEditor) {\n      unbindProps(grid, dialog, input, this._beforePropEditor)\n    }\n\n    delete dialog.dataset.errorMessage\n    dialog.classList.remove(SHOWN_CLASSNAME_SDE)\n    dialog.classList.add(HIDDEN_CLASSNAME_SDE)\n    // input.readOnly = false;\n    input.tabIndex = 0\n    const { element, rect } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    dialog.style.top = `${rect.top.toFixed()}px`\n    dialog.style.left = `${rect.left.toFixed()}px`\n    dialog.style.width = `${rect.width.toFixed()}px`\n    input.style.height = `${rect.height.toFixed()}px`\n    element.appendChild(dialog)\n\n    setInputValue(input, value)\n\n    input.style.font = grid.font || '16px sans-serif'\n    const activeData = { grid, col, row, editor }\n    this._onInputValue(input, activeData)\n    if (!browser.IE) {\n      _focus(input, handler)\n    } else {\n      // On the paste-event on IE, since it may not be focused, it will be delayed and focused.\n      setTimeout(() => _focus(input, handler))\n    }\n    dialog.classList.add(SHOWN_CLASSNAME_SDE)\n    dialog.classList.remove(HIDDEN_CLASSNAME_SDE)\n    // input.readOnly = true;\n\n    bindProps(grid, dialog, input, editor)\n\n    this._activeData = activeData\n    this._beforePropEditor = editor\n\n    this._attaching = true\n    setTimeout(() => {\n      delete this._attaching\n    })\n  }\n  public detach(gridFocus?: boolean): void {\n    if (this._isActive()) {\n      const dialog = this._dialog\n      const input = this._input\n\n      dialog.classList.remove(SHOWN_CLASSNAME_SDE)\n      dialog.classList.add(HIDDEN_CLASSNAME_SDE)\n      // input.readOnly = false;\n      input.tabIndex = -1\n\n      const { grid, col, row } = this._activeData!\n\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    this._activeData = null\n    this._beforeValue = null\n  }\n  private _doChangeValue(): MaybePromise<boolean> {\n    if (!this._isActive()) {\n      return false\n    }\n    const input = this._input\n    const { value } = input\n    return then(this._validate(value), (res: boolean) => {\n      if (res && value === input.value) {\n        const { grid, col, row } = this._activeData!\n        grid.doChangeValue(col, row, () => value)\n        return true\n      }\n      return false\n    })\n  }\n  private _isActive(): boolean {\n    const dialog = this._dialog\n    if (!dialog || !dialog.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindDialogEvents(): void {\n    const handler = this._handler\n    const dialog = this._dialog\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 终止事件传播\n    handler.on(dialog, 'click', stopPropagationOnly)\n    handler.on(dialog, 'dblclick', stopPropagationOnly)\n    handler.on(dialog, 'mousedown', stopPropagationOnly)\n    handler.on(dialog, 'touchstart', stopPropagationOnly)\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n      this._onInputValue(input)\n    })\n    const onKeyupAndPress = (_e: KeyboardEvent): void => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      this._onInputValue(input)\n    }\n    handler.on(input, 'keyup', onKeyupAndPress)\n    handler.on(input, 'keypress', onKeyupAndPress)\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      } else {\n        this._onInputValue(input)\n      }\n    })\n  }\n  private _onKeydownEnter(e: KeyboardEvent): void {\n    if (this._attaching) {\n      return\n    }\n    const input = this._input\n    const { value } = input\n    then(this._doChangeValue(), (r) => {\n      if (r && value === input.value) {\n        const grid = this._isActive() ? this._activeData!.grid : null\n        this.detach(true)\n\n        if (grid?.keyboardOptions?.moveCellOnEnter) {\n          grid.onKeyDownMove(e)\n        }\n      }\n    })\n    event.cancel(e)\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    if (!grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    const input = this._input\n    const { value } = input\n    then(this._doChangeValue(), (r) => {\n      if (r && value === input.value) {\n        this.detach(true)\n        grid.onKeyDownMove(e)\n      }\n    })\n    event.cancel(e)\n  }\n  private _onInputValue(\n    input: HTMLInputElement,\n    activeData?: ActiveData<T>\n  ): void {\n    const before = this._beforeValue\n    const { value } = input\n    if (before !== value) {\n      this._onInputValueChange(value, activeData)\n    }\n    this._beforeValue = value\n  }\n  private _onInputValueChange(after: string, activeData?: ActiveData<T>): void {\n    activeData = (activeData || this._activeData)!\n    const dialog = this._dialog\n    const { grid, col, row, editor } = activeData\n    if (typeof editor.helperText === 'function') {\n      const helperText = editor.helperText(after, { grid, col, row })\n      if (helperText) {\n        dialog.dataset.helperText = helperText\n      } else {\n        delete dialog.dataset.helperText\n      }\n    }\n    if ('errorMessage' in dialog.dataset) {\n      this._validate(after, true)\n    }\n  }\n  private _validate(value: any, inputOnly?: boolean): MaybePromise<boolean> {\n    const dialog = this._dialog\n    const input = this._input\n    const { grid, col, row, editor } = this._activeData!\n    let message: MaybePromise<string> = ''\n    if (editor.inputValidator) {\n      message = editor.inputValidator(value, { grid, col, row })\n    }\n    return then(message, (msg: MaybePromise<string>) => {\n      if (!msg && editor.validator && !inputOnly) {\n        msg = editor.validator(value, { grid, col, row })\n      }\n      return then(msg, (mess) => {\n        if (mess && value === input.value) {\n          dialog.dataset.errorMessage = mess\n        } else {\n          delete dialog.dataset.errorMessage\n        }\n        return !mess\n      })\n    })\n  }\n}\n","import { obj } from '../../internal/utils'\nimport { BaseInputEditor } from './BaseInputEditor'\nimport { SmallDialogInputElement } from './internal/SmallDialogInputElement'\n\nimport { GridInternal, InputEditorState } from '../../ts-types-internal'\nimport { getSmallDialogInputEditorStateId } from '../../internal/symbolManager'\nimport {\n  SmallDialogInputEditorOption,\n  ListGridAPI,\n  MaybePromise,\n  CellAddress,\n} from '../../ts-types'\n\nconst SMALL_DIALOG_INPUT_EDITOR_STATE_ID = getSmallDialogInputEditorStateId()\n\nlet globalSmallDialogInputElement: SmallDialogInputElement<any> | null = null\nlet globalSmallDialogInputBindGridCount = 0\n\nfunction getState<T>(grid: GridInternal<T>): InputEditorState {\n  let state = grid[SMALL_DIALOG_INPUT_EDITOR_STATE_ID]\n  if (!state) {\n    state = {}\n    obj.setReadonly(grid, SMALL_DIALOG_INPUT_EDITOR_STATE_ID, state)\n  }\n  return state\n}\n\nfunction attachDialogInput<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: SmallDialogInputEditor<T>,\n  value: string\n): void {\n  const state = getState(grid as any)\n  if (!globalSmallDialogInputElement) {\n    globalSmallDialogInputElement = new SmallDialogInputElement()\n  }\n  if (!state.element) {\n    state.element = globalSmallDialogInputElement\n    globalSmallDialogInputBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalSmallDialogInputBindGridCount--\n        if (\n          !globalSmallDialogInputBindGridCount &&\n          globalSmallDialogInputElement\n        ) {\n          globalSmallDialogInputElement.dispose()\n          globalSmallDialogInputElement = null\n        }\n      },\n    })\n  }\n\n  globalSmallDialogInputElement.attach(grid, editor, cell.col, cell.row, value)\n}\n\nfunction detachDialogInput(gridFocus?: boolean) {\n  if (globalSmallDialogInputElement) {\n    globalSmallDialogInputElement.detach(gridFocus)\n  }\n}\ntype GetValueResult<T, R> = (\n  value: string,\n  info: { grid: ListGridAPI<T>; col: number; row: number }\n) => R\n\nexport class SmallDialogInputEditor<T> extends BaseInputEditor<T> {\n  private _helperText?: string | GetValueResult<T, string>\n  private _inputValidator?: GetValueResult<T, MaybePromise<string>>\n  private _validator?: GetValueResult<T, MaybePromise<string>>\n  private _classList?: string | string[]\n  private _type?: string\n  public constructor(options: SmallDialogInputEditorOption<T> = {}) {\n    super(options)\n    this._helperText = options.helperText\n    this._inputValidator = options.inputValidator\n    this._validator = options.validator\n    this._classList = options.classList || ''\n    this._type = options.type || ''\n  }\n  public dispose() {\n    // noop\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get type() {\n    return this._type\n  }\n  public set type(type) {\n    this._type = type\n  }\n  public get helperText() {\n    return this._helperText\n  }\n  public get inputValidator() {\n    return this._inputValidator\n  }\n  public get validator() {\n    return this._validator\n  }\n  public clone(): SmallDialogInputEditor<T> {\n    return new SmallDialogInputEditor(this)\n  }\n  public onInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    attachDialogInput(grid, cell, this, inputValue)\n  }\n  public onOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachDialogInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    selected: any\n  ) {\n    // cancel input\n    detachDialogInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    // cancel input\n    detachDialogInput(true)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachDialogInput(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachDialogInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    input: HTMLInputElement\n  ) {\n    SmallDialogInputElement.setInputAttrs(this, grid, input)\n  }\n}\n","import { CheckEditor } from '../action/CheckEditor'\n\nexport class ImmutableCheckEditor<T> extends CheckEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { RadioEditor } from '../action/RadioEditor'\n\nexport class ImmutableRadioEditor<T> extends RadioEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { SmallDialogInputEditor } from '../action/SmallDialogInputEditor'\n\nexport class ImmutableInputEditor<T> extends SmallDialogInputEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { SwitchEditor } from '../action/SwitchEditor'\n\nexport class ImmutableSwitchEditor<T> extends SwitchEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { ColumnActionOption } from '../ts-types'\nimport { Action } from './action/Action'\nimport { BaseAction } from './action/BaseAction'\nimport { BaseActionInput } from './action/BaseActionInput'\nimport { BaseInputEditor } from './action/BaseInputEditor'\nimport { BaseCheckEditor } from './action/BaseCheckEditor'\nimport { ButtonAction } from './action/ButtonAction'\nimport { CheckEditor } from './action/CheckEditor'\nimport { Editor } from './action/Editor'\nimport { SwitchEditor } from './action/SwitchEditor'\nimport { InlineInputEditor } from './action/InlineInputEditor'\nimport { InlineLookupEditor } from './action/InlineLookupEditor'\nimport { InlineMenuEditor } from './action/InlineMenuEditor'\nimport { InlineTextAreaEditor } from './action/InlineTextAreaEditor'\nimport { RadioEditor } from './action/RadioEditor'\nimport { SmallDialogInputEditor } from './action/SmallDialogInputEditor'\n\nimport { ImmutableCheckEditor } from './immutable/ImmutableCheckEditor'\nimport { ImmutableRadioEditor } from './immutable/ImmutableRadioEditor'\nimport { ImmutableInputEditor } from './immutable/ImmutableInputEditor'\nimport { ImmutableSwitchEditor } from './immutable/ImmutableSwitchEditor'\n\nexport interface ImmutableActions {\n  CHECK: ImmutableCheckEditor<any>\n  RADIO: ImmutableRadioEditor<any>\n  INPUT: ImmutableInputEditor<any>\n  SWITCH: ImmutableSwitchEditor<any>\n}\n\nexport const ACTIONS: ImmutableActions = {\n  CHECK: new ImmutableCheckEditor<any>(),\n  RADIO: new ImmutableRadioEditor<any>(),\n  INPUT: new ImmutableInputEditor<any>(),\n  SWITCH: new ImmutableSwitchEditor<any>(),\n}\n\nexport {\n  BaseAction,\n  Editor,\n  BaseCheckEditor,\n  BaseInputEditor,\n  BaseActionInput,\n  Action,\n  CheckEditor,\n  RadioEditor,\n  SwitchEditor,\n  ButtonAction,\n  SmallDialogInputEditor,\n  InlineInputEditor,\n  InlineTextAreaEditor,\n  InlineLookupEditor,\n  InlineMenuEditor,\n}\n\nexport function of<T>(\n  columnAction: ColumnActionOption | BaseAction<T> | null | undefined\n): BaseAction<T> | undefined {\n  if (!columnAction) {\n    return undefined\n  } else if (typeof columnAction === 'string') {\n    const key = columnAction.toUpperCase() as keyof typeof ACTIONS\n    return ACTIONS[key] || of(null)\n  } else {\n    return columnAction\n  }\n}\n","import * as utils from './columnUtils'\nimport {\n  CellContext,\n  GridCanvasHelperAPI,\n  InlineCheckOption,\n  DrawCallback,\n  BaseCheckColumnOption,\n} from '../../ts-types'\nimport {\n  GridInternal,\n  DrawCellInfo,\n  CheckColumnState,\n} from '../../ts-types-internal'\nimport { isDef } from '../../internal/utils'\nimport { BaseColumn } from './BaseColumn'\nimport { CheckStyle } from '../style'\nimport { toBoolean } from '../utils'\n\nexport abstract class BaseCheckColumn<T> extends BaseColumn<T, boolean> {\n  private _draw?: DrawCallback\n  public constructor(options: BaseCheckColumnOption<T> = {}) {\n    super(options)\n    this._draw = options.draw\n  }\n  public get draw() {\n    return this._draw\n  }\n  public drawInternal(\n    value: boolean,\n    context: CellContext,\n    style: CheckStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    { getRecord }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n    } = style\n\n    const isCustomDraw = utils.customDraw(\n      helper,\n      this.draw,\n      value,\n      context,\n      grid,\n      getRecord()\n    )\n    if (!isCustomDraw) {\n      const { col, row } = context\n      const range = grid.getCellRange(col, row)\n      const cellKey = `${range.start.col}:${range.start.row}`\n      const state = this.getState(grid)\n      const elapsed = state?.elapsed[cellKey]\n\n      const opt: InlineCheckOption = {\n        borderColor,\n        checkBgColor,\n        textAlign,\n        textBaseline,\n        uncheckBgColor,\n      }\n      if (isDef(elapsed)) {\n        opt.animElapsedTime = elapsed\n      }\n      this.doDrawInternal(helper, value, context, opt)\n    }\n  }\n  protected convertInternal(value: any) {\n    return toBoolean(value)\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckColumnState\n  protected abstract doDrawInternal(\n    helper: GridCanvasHelperAPI,\n    value: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): void\n}\n","import { BranchGraphStyleOption, ColorDef } from '../../ts-types'\nimport { BaseStyle } from './BaseStyle'\n\nlet defaultBranchGraphStyle: BranchGraphStyle\n\nconst DEFAULT_BRANCH_COLORS = (_name: string, index: number): string => {\n  switch (index % 3) {\n    case 0:\n      return '#979797'\n    case 1:\n      return '#008fb5'\n    case 2:\n      return '#f1c109'\n    default:\n  }\n  return '#979797'\n}\n\nexport class BranchGraphStyle extends BaseStyle {\n  private _branchColors: ColorDef | ((name: string, index: number) => ColorDef)\n  private _margin: number\n  private _circleSize: number\n  private _branchLineWidth: number\n  private _mergeStyle: 'straight' | 'bezier'\n  public static get DEFAULT(): BranchGraphStyle {\n    return defaultBranchGraphStyle\n      ? defaultBranchGraphStyle\n      : (defaultBranchGraphStyle = new BranchGraphStyle())\n  }\n  public constructor(style: BranchGraphStyleOption = {}) {\n    super(style)\n    this._branchColors = style.branchColors || DEFAULT_BRANCH_COLORS\n    this._margin = style.margin || 4\n    this._circleSize = style.circleSize || 16\n    this._branchLineWidth = style.branchLineWidth || 4\n    this._mergeStyle = style.mergeStyle === 'straight' ? 'straight' : 'bezier'\n  }\n  public get branchColors():\n    | ColorDef\n    | ((name: string, index: number) => ColorDef) {\n    return this._branchColors\n  }\n  public set branchColors(branchColors) {\n    this._branchColors = branchColors\n    this.doChangeStyle()\n  }\n  public get margin(): number {\n    return this._margin\n  }\n  public set margin(margin) {\n    this._margin = margin\n    this.doChangeStyle()\n  }\n  public get circleSize(): number {\n    return this._circleSize\n  }\n  public set circleSize(circleSize) {\n    this._circleSize = circleSize\n    this.doChangeStyle()\n  }\n  public get branchLineWidth(): number {\n    return this._branchLineWidth\n  }\n  public set branchLineWidth(branchLineWidth) {\n    this._branchLineWidth = branchLineWidth\n    this.doChangeStyle()\n  }\n  public get mergeStyle(): 'straight' | 'bezier' {\n    return this._mergeStyle\n  }\n  public set mergeStyle(mergeStyle) {\n    this._mergeStyle = mergeStyle\n    this.doChangeStyle()\n  }\n  public clone(): BranchGraphStyle {\n    return new BranchGraphStyle(this)\n  }\n}\n","import { BranchPoint } from './BranchPoint'\n\nexport class BranchLine {\n  public fromIndex?: number\n  public toIndex?: number\n  public colorIndex: number\n  public point?: BranchPoint\n  public constructor({\n    fromIndex,\n    toIndex,\n    colorIndex,\n    point,\n  }: {\n    fromIndex?: number\n    toIndex?: number\n    colorIndex: number\n    point?: BranchPoint\n  }) {\n    this.fromIndex = fromIndex\n    this.toIndex = toIndex\n    this.colorIndex = colorIndex\n    this.point = point\n  }\n}\n","import { isDef } from '../../../internal/utils'\nimport { BranchLine } from './BranchLine'\n\nexport class BranchPoint {\n  public static mergeLines(lines: BranchLine[]): BranchLine[] {\n    const result = lines.filter((l) => isDef(l.fromIndex) && isDef(l.toIndex))\n\n    const fromLines = lines.filter(\n      (l) => isDef(l.fromIndex) && !isDef(l.toIndex)\n    )\n    const toLines = lines.filter((l) => !isDef(l.fromIndex) && isDef(l.toIndex))\n\n    fromLines.forEach((f) => {\n      for (let i = 0; i < toLines.length; i++) {\n        const t = toLines[i]\n        if (t.point) {\n          continue\n        }\n        if (f.colorIndex === t.colorIndex) {\n          f.toIndex = t.toIndex\n          toLines.splice(i, 1)\n          break\n        }\n      }\n\n      result.push(f)\n    })\n\n    return result.concat(toLines)\n  }\n  public static merge(a: BranchPoint, b: BranchPoint): BranchPoint {\n    if (!a) {\n      return b\n    }\n    return new BranchPoint({\n      commit: a.commit || b.commit,\n      index: a.index,\n      lines: BranchPoint.mergeLines(a.lines.concat(b.lines)),\n      tag: a.tag || b.tag,\n    })\n  }\n  public index: number\n  public commit: boolean\n  public lines: BranchLine[]\n  public tag?: string\n  public constructor({\n    index,\n    commit = false,\n    lines = [],\n    tag,\n  }: {\n    index: number\n    commit?: boolean\n    lines?: BranchLine[]\n    tag?: string\n  }) {\n    this.index = index\n    this.commit = commit\n    this.lines = lines\n    this.tag = tag\n  }\n}\n","import {\n  FieldDef,\n  BranchGraphCommand,\n  MaybePromiseOrUndef,\n  ListGridAPI,\n  ColorDef,\n  BranchGraphColumnOption,\n  MaybePromise,\n  CellContext,\n  GridCanvasHelperAPI,\n} from '../../ts-types'\nimport { GridInternal, DrawCellInfo } from '../../ts-types-internal'\nimport { isPromise, obj, isDef, getOrApply } from '../../internal/utils'\nimport { BranchGraphStyle } from '../style/BranchGraphStyle'\nimport { BaseColumn } from './BaseColumn'\n\nimport { BranchLine } from './branch/BranchLine'\nimport { BranchPoint } from './branch/BranchPoint'\n\nimport { getBranchGraphColumnStateId } from '../../internal/symbolManager'\n\nconst BRANCH_GRAPH_COLUMN_STATE_ID = getBranchGraphColumnStateId()\n\ntype Timelines = { timeline: BranchPoint[][]; branches: string[] }\n\nfunction getAllColumnData<T>(\n  grid: ListGridAPI<T>,\n  field: FieldDef<T>,\n  callback: (allData: BranchGraphCommand[]) => void\n) {\n  const { dataSource } = grid\n  const allData: BranchGraphCommand[] = []\n  let promise\n  for (let index = 0; index < dataSource.length; index++) {\n    const data = dataSource.getField(index, field) as MaybePromiseOrUndef<\n      BranchGraphCommand\n    >\n    if (isPromise(data)) {\n      const dataIndex = allData.length\n      allData.push(undefined)\n      if (!promise) {\n        promise = data.then((d) => {\n          allData[dataIndex] = d\n        })\n      } else {\n        promise = promise\n          .then(() => data)\n          .then((d) => {\n            allData[dataIndex] = d\n          })\n      }\n    } else {\n      allData.push(data)\n    }\n  }\n\n  if (promise) {\n    promise.then(() => callback(allData))\n  } else {\n    callback(allData)\n  }\n}\n\nfunction joinLine(timeline: BranchPoint[][], branchIndex: number): boolean {\n  const reverse = [...timeline].reverse()\n  for (let i = 0; i < reverse.length; i++) {\n    const f = reverse[i][branchIndex]\n    if (f) {\n      f.lines = BranchPoint.mergeLines(\n        f.lines.concat([\n          new BranchLine({\n            colorIndex: branchIndex,\n            toIndex: branchIndex,\n          }),\n        ])\n      )\n\n      for (let j = 0; j < i; j++) {\n        const tl = reverse[j]\n        tl[branchIndex] = new BranchPoint({\n          index: branchIndex,\n          lines: [\n            new BranchLine({\n              colorIndex: branchIndex,\n              fromIndex: branchIndex,\n              toIndex: branchIndex,\n            }),\n          ],\n        })\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction branch(\n  { timeline, branches }: Timelines,\n  from: string | null,\n  to: string\n): BranchPoint | null {\n  const fromIndex = from != null ? branches.indexOf(from) : -1\n  let toIndex = branches.indexOf(to)\n  if (toIndex < 0) {\n    toIndex = branches.length\n    branches.push(to)\n  }\n\n  function findBranchRootIndex(): number {\n    for (let index = timeline.length - 1; index >= 0; index--) {\n      const tl = timeline[index]\n      const fromTL = tl[fromIndex]\n      if (fromTL && fromTL.commit) {\n        return index\n      }\n    }\n    return -1\n  }\n\n  if (fromIndex < 0) {\n    return new BranchPoint({\n      index: toIndex,\n    })\n  } else {\n    const fromTargetIndex = findBranchRootIndex()\n    if (fromTargetIndex === -1) {\n      return null\n    }\n    const branchTargetFromIndex = fromTargetIndex + 1\n    const branchPoint = new BranchPoint({\n      index: toIndex,\n      lines: [\n        new BranchLine({\n          colorIndex: toIndex,\n          fromIndex,\n        }),\n      ],\n    })\n    let point\n    let result = null\n    if (branchTargetFromIndex < timeline.length) {\n      const targetLine = timeline[branchTargetFromIndex]\n      point = targetLine[toIndex] = BranchPoint.merge(\n        targetLine[toIndex],\n        branchPoint\n      )\n    } else {\n      point = branchPoint\n      result = branchPoint\n    }\n    const fromTL = timeline[fromTargetIndex][fromIndex]\n    fromTL.lines = BranchPoint.mergeLines(\n      fromTL.lines.concat([\n        new BranchLine({\n          colorIndex: toIndex,\n          point,\n          toIndex,\n        }),\n      ])\n    )\n    return result\n  }\n}\n\nfunction commit(\n  { timeline, branches }: Timelines,\n  name: string\n): BranchPoint | null {\n  const index = branches.indexOf(name)\n  if (index < 0) {\n    return null\n  }\n  const result = new BranchPoint({\n    commit: true,\n    index,\n  })\n\n  if (joinLine(timeline, index)) {\n    result.lines = BranchPoint.mergeLines(\n      result.lines.concat([\n        new BranchLine({\n          colorIndex: index,\n          fromIndex: index,\n        }),\n      ])\n    )\n  }\n  return result\n}\n\nfunction commitTag(\n  { branches }: Timelines,\n  name: any,\n  tag: string\n): BranchPoint {\n  let index = branches.indexOf(name)\n  if (index < 0) {\n    index = branches.length\n    branches.push(name)\n  }\n  return new BranchPoint({\n    index,\n    tag,\n  })\n}\n\nfunction commitMerge(\n  { timeline, branches }: Timelines,\n  from: string,\n  to: string\n): BranchPoint {\n  const fromIndex = branches.indexOf(from)\n  const toIndex = branches.indexOf(to)\n  if (toIndex < 0 || fromIndex < 0) {\n    return new BranchPoint({\n      index: toIndex,\n      commit: true,\n    })\n  }\n  const result = new BranchPoint({\n    index: toIndex,\n    commit: true,\n    lines: [\n      new BranchLine({\n        colorIndex: fromIndex,\n        fromIndex,\n      }),\n      new BranchLine({\n        colorIndex: toIndex,\n        fromIndex: toIndex,\n      }),\n    ],\n  })\n  const froms = [...timeline]\n  const fromTargetLine = froms.pop()\n  if (fromTargetLine) {\n    fromTargetLine[fromIndex] = BranchPoint.merge(\n      fromTargetLine[fromIndex],\n      new BranchPoint({\n        index: toIndex,\n        lines: [\n          new BranchLine({\n            colorIndex: fromIndex,\n            toIndex,\n          }),\n        ],\n      })\n    )\n  }\n\n  if (joinLine(froms, fromIndex) && fromTargetLine) {\n    fromTargetLine[fromIndex].lines = BranchPoint.mergeLines(\n      fromTargetLine[fromIndex].lines.concat([\n        new BranchLine({\n          colorIndex: fromIndex,\n          fromIndex,\n        }),\n      ])\n    )\n  }\n  joinLine(timeline, toIndex)\n\n  return result\n}\n\nfunction calcCommand(info: Timelines, command: BranchGraphCommand): void {\n  const { timeline } = info\n  const timelineData: BranchPoint[] = []\n  // const last = timeline.length > 0 ? timeline[timeline.length - 1] : null;\n  const commands = Array.isArray(command) ? command : [command]\n  commands.forEach((cmd) => {\n    if (!cmd) {\n      return\n    }\n    let point\n    if (cmd.command === 'branch') {\n      const from = obj.isObject(cmd.branch) ? cmd.branch.from : null\n      const to = obj.isObject(cmd.branch) ? cmd.branch.to : cmd.branch\n      point = branch(info, from, to)\n    } else if (cmd.command === 'commit') {\n      point = commit(info, cmd.branch)\n    } else if (cmd.command === 'merge') {\n      const from = cmd.branch.from\n      const to = cmd.branch.to\n      point = commitMerge(info, from, to)\n    } else if (cmd.command === 'tag') {\n      point = commitTag(info, cmd.branch, cmd.tag)\n    }\n    if (point && point.index > -1) {\n      timelineData[point.index] = BranchPoint.merge(\n        timelineData[point.index],\n        point\n      )\n    }\n  })\n  timeline.push(timelineData)\n}\n\nfunction calcBranchesInfo<T>(\n  start: 'top' | 'bottom',\n  grid: ListGridAPI<T>,\n  field: FieldDef<T>\n): Timelines {\n  const result = {\n    branches: [],\n    timeline: [],\n  }\n  getAllColumnData(grid, field, (data) => {\n    if (start !== 'top') {\n      data = [...data].reverse()\n    }\n    data.forEach((command) => {\n      calcCommand(result, command)\n    })\n  })\n  return result\n}\n\nfunction calcBranchXPoints(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  width: number,\n  radius: number,\n  branches: string[],\n  timeline: BranchPoint[][]\n): number[] {\n  let w = Math.max(width / branches.length + 1, 5)\n  timeline.forEach((tl) => {\n    tl.forEach((p, index) => {\n      if (index <= 0) {\n        // 没有计算的意义\n        return\n      }\n      if (p.tag) {\n        const textWidth = ctx.measureText(p.tag).width\n        if (w * index + radius * 2 + 4 + textWidth > width) {\n          w = Math.max((width - radius * 2 - 4 - textWidth) / index, 5)\n        }\n      }\n    })\n  })\n  const result: number[] = []\n  let x = left\n  branches.forEach(() => {\n    result.push(Math.ceil(x + radius))\n    x += w\n  })\n  return result\n}\n\nfunction renderMerge<T>(\n  grid: ListGridAPI<T>,\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  upLineIndex: number | undefined,\n  downLineIndex: number | undefined,\n  colorIndex: number,\n  {\n    branchXPoints,\n    // margin,\n    branchColors,\n    branchLineWidth,\n    mergeStyle,\n  }: {\n    branchXPoints: number[]\n    margin: number\n    branchColors: ColorDef | ((name: string, index: number) => ColorDef)\n    branchLineWidth: number\n    mergeStyle: 'straight' | 'bezier'\n  },\n  {\n    // width,\n    col,\n    row,\n    branches,\n  }: {\n    width: number\n    col: number\n    row: number\n    branches: string[]\n  }\n): void {\n  if (isDef(upLineIndex) || isDef(downLineIndex)) {\n    ctx.strokeStyle = getOrApply(branchColors, branches[colorIndex], colorIndex)\n    ctx.lineWidth = branchLineWidth\n    ctx.lineCap = 'round'\n    ctx.beginPath()\n\n    if (isDef(upLineIndex)) {\n      const upX = branchXPoints[upLineIndex]\n      const upRect = grid.getCellRelativeRect(col, row - 1)\n      const upY = upRect.top + upRect.height / 2\n      ctx.moveTo(upX, upY)\n      if (mergeStyle === 'bezier') {\n        ctx.bezierCurveTo(upX, (y + upY) / 2, x, (y + upY) / 2, x, y)\n      } else {\n        ctx.lineTo(x, y)\n      }\n    } else {\n      ctx.moveTo(x, y)\n    }\n\n    if (isDef(downLineIndex)) {\n      const downX = branchXPoints[downLineIndex]\n      const downRect = grid.getCellRelativeRect(col, row + 1)\n      const downY = downRect.top + downRect.height / 2\n      if (mergeStyle === 'bezier') {\n        ctx.bezierCurveTo(\n          x,\n          (y + downY) / 2,\n          downX,\n          (y + downY) / 2,\n          downX,\n          downY\n        )\n      } else {\n        ctx.lineTo(downX, downY)\n      }\n    }\n\n    ctx.stroke()\n  }\n}\n\n/**\n * BranchGraphColumn\n */\nexport class BranchGraphColumn<T> extends BaseColumn<T, unknown> {\n  private _start: 'top' | 'bottom'\n  private _cache: boolean\n  public constructor(options: BranchGraphColumnOption<T> = {}) {\n    super(options)\n    this._start = options.start || 'bottom'\n    this._cache = isDef(options.cache) ? options.cache : false\n  }\n  public get StyleClass(): typeof BranchGraphStyle {\n    return BranchGraphStyle\n  }\n  public clearCache(grid: GridInternal<T>): void {\n    delete grid[BRANCH_GRAPH_COLUMN_STATE_ID]\n  }\n  public onDrawCell(\n    cellValue: MaybePromise<unknown>,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: GridInternal<T>\n  ): void | Promise<void> {\n    if (this._cache) {\n      const state =\n        grid[BRANCH_GRAPH_COLUMN_STATE_ID] ||\n        (grid[BRANCH_GRAPH_COLUMN_STATE_ID] = new Map())\n      const { col, row } = context\n      const field = grid.getField(col, row) as FieldDef<T>\n      if (!state.has(field)) {\n        state.set(field, calcBranchesInfo(this._start, grid, field))\n      }\n    }\n    return super.onDrawCell(cellValue, info, context, grid)\n  }\n  public clone(): BranchGraphColumn<T> {\n    return new BranchGraphColumn(this)\n  }\n  public drawInternal(\n    _value: unknown,\n    context: CellContext,\n    style: BranchGraphStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    const { col, row } = context\n    const field = grid.getField(col, row) as FieldDef<T>\n    const { timeline, branches } =\n      (this._cache ? grid[BRANCH_GRAPH_COLUMN_STATE_ID]?.get(field) : null) ??\n      calcBranchesInfo(this._start, grid, field)\n\n    const {\n      upLineIndexKey,\n      downLineIndexKey,\n    }: {\n      upLineIndexKey: 'fromIndex' | 'toIndex'\n      downLineIndexKey: 'fromIndex' | 'toIndex'\n    } =\n      this._start !== 'top'\n        ? { upLineIndexKey: 'toIndex', downLineIndexKey: 'fromIndex' }\n        : { upLineIndexKey: 'fromIndex', downLineIndexKey: 'toIndex' }\n    const data =\n      this._start !== 'top'\n        ? timeline[timeline.length - (row - grid.frozenRowCount) - 1]\n        : timeline[row - grid.frozenRowCount]\n\n    const {\n      branchColors,\n      branchLineWidth,\n      circleSize,\n      mergeStyle,\n      margin,\n    } = style\n\n    const rect = context.getRect()\n    const radius = circleSize / 2\n    const width = rect.width - margin * 2\n\n    helper.drawWithClip(context, (ctx) => {\n      ctx.textAlign = 'left'\n      ctx.textBaseline = 'middle'\n      const branchXPoints = calcBranchXPoints(\n        ctx,\n        rect.left + margin,\n        width,\n        radius,\n        branches,\n        timeline\n      )\n\n      const y = rect.top + rect.height / 2\n\n      // draw join lines\n      data\n        .map((point, index) =>\n          point\n            ? point.lines.map((line) => ({\n                colorIndex: line.colorIndex,\n                downLineIndex: line[downLineIndexKey],\n                pointIndex: index,\n                upLineIndex: line[upLineIndexKey],\n              }))\n            : []\n        )\n        .reduce((p, c) => p.concat(c), []) // flatMap\n        // order of overlap\n        .sort((a, b) => b.colorIndex - a.colorIndex)\n        .forEach((line) => {\n          const x = branchXPoints[line.pointIndex]\n          renderMerge(\n            grid,\n            ctx,\n            x,\n            y,\n            line.upLineIndex,\n            line.downLineIndex,\n            line.colorIndex,\n            {\n              branchColors,\n              branchLineWidth,\n              branchXPoints,\n              margin,\n              mergeStyle,\n            },\n            {\n              branches,\n              col,\n              row,\n              width,\n            }\n          )\n        })\n      // draw commit points\n      data.forEach((p, index) => {\n        if (p && p.commit) {\n          const x = branchXPoints[index]\n          ctx.fillStyle = getOrApply(branchColors, branches[index], index)\n          ctx.beginPath()\n          ctx.arc(x, y, radius, 0, Math.PI * 2, true)\n          ctx.fill()\n          ctx.closePath()\n        }\n      })\n      // draw tags\n      data.forEach((p, index) => {\n        if (p && p.tag) {\n          ctx.fillStyle = getOrApply(branchColors, branches[index], index)\n          ctx.fillText(p.tag, branchXPoints[index] + radius + 4, y)\n        }\n      })\n    })\n  }\n}\n","import { DateColumnOption } from '../../ts-types'\nimport { DateStyle } from '../style/DateStyle'\nimport { Column } from './Column'\n\nlet defaultDateTimeFormat: Intl.DateTimeFormat\n\nexport class DateColumn<T> extends Column<T> {\n  public static get defaultFormat() {\n    return (\n      defaultDateTimeFormat ||\n      (defaultDateTimeFormat = new Intl.DateTimeFormat())\n    )\n  }\n  public static set defaultFormat(fmt) {\n    defaultDateTimeFormat = fmt\n  }\n  private _format?: Intl.DateTimeFormat\n  public constructor(options: DateColumnOption<T> = {}) {\n    super(options)\n    this._format = options.format\n  }\n  public get StyleClass(): typeof DateStyle {\n    return DateStyle\n  }\n  public get format(): Intl.DateTimeFormat | undefined {\n    return this._format\n  }\n  public clone(): DateColumn<T> {\n    return new DateColumn(this)\n  }\n  public withFormat(format: Intl.DateTimeFormat): DateColumn<T> {\n    const c = this.clone()\n    c._format = format\n    return c\n  }\n  protected convertInternal(value: Date): string {\n    if (value instanceof Date) {\n      const format = this._format || DateColumn.defaultFormat\n      return format.format(value)\n    } else {\n      return ''\n    }\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  ColumnOption,\n  DrawCallback,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  CellStyle,\n} from '../../ts-types'\nimport { BaseColumn } from './BaseColumn'\nimport { Style } from '../style/Style'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\nimport Rect from '../../internal/Rect'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nexport class Column<T> extends BaseColumn<T, string> {\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  public constructor(options: ColumnOption<T> = {}) {\n    super(options)\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n  }\n  public get StyleClass() {\n    return Style\n  }\n  public clone(): Column<T> {\n    return new Column(this)\n  }\n  public get draw() {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: Style,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getIcon, getRecord }: DrawCellInfo<T>\n  ): void {\n    const { textAlign, textBaseline, color, font, textOverflow } = style\n\n    helper.testFontLoad(font, value, context)\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const isCustomDraw = columnUtils.customDraw<T>(\n        helper,\n        this.draw,\n        value,\n        context,\n        grid,\n        getRecord()\n      )\n      if (!isCustomDraw) {\n        helper.text(value, ctx, {\n          color,\n          font,\n          icons,\n          padding: columnUtils.getActionTextPadding(context, helper, style),\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n      columnUtils.drawActionButton(\n        grid,\n        context,\n        INLINE_INPUT_EDITOR_STATE_ID,\n        helper,\n        style\n      )\n      columnUtils.drawAttachArea(\n        grid,\n        getRecord(),\n        context,\n        helper,\n        this._cellStyle\n      )\n    })\n  }\n}\n","import * as utils from './columnUtils'\nimport {\n  ButtonColumnOption,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { ButtonStyle } from '../style/ButtonStyle'\nimport { Column } from './Column'\nimport { getButtonColumnStateId } from '../../internal/symbolManager'\nimport { cellInRange } from '../../internal/utils'\n\nconst BUTTON_COLUMN_STATE_ID = getButtonColumnStateId()\n\nexport class ButtonColumn<T> extends Column<T> {\n  private _caption?: string\n  private _linkButton: boolean\n  public constructor(options: ButtonColumnOption<T> = {}) {\n    super(options)\n    this._caption = options.caption\n    this._linkButton = !!options.linkButton\n  }\n  public get StyleClass(): typeof ButtonStyle {\n    return ButtonStyle\n  }\n  public get caption(): string | undefined {\n    return this._caption\n  }\n  public withCaption(caption: string): ButtonColumn<T> {\n    const c = this.clone()\n    c._caption = caption\n    return c\n  }\n  public clone(): ButtonColumn<T> {\n    return new ButtonColumn(this)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: ButtonStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getIcon }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      buttonBgColor,\n      font,\n      padding,\n      textOverflow,\n    } = style\n\n    helper.testFontLoad(font, value, context)\n    const { col, row } = context\n    const range = grid.getCellRange(col, row)\n    let active = false\n    let selected = false\n    const state = (grid as any)[BUTTON_COLUMN_STATE_ID]\n    if (state) {\n      if (\n        state.mouseActiveCell &&\n        cellInRange(range, state.mouseActiveCell.col, state.mouseActiveCell.row)\n      ) {\n        active = true\n      }\n      const { select } = context.getSelection()\n      if (cellInRange(range, select.col, select.row)) {\n        selected = true\n      }\n    }\n\n    utils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      if (this._linkButton) {\n        if (active && state && state.mouseRelativePos) {\n          const rect = helper.getTextRect(value, ctx, {\n            font,\n            icons,\n            padding,\n            textAlign,\n            textBaseline,\n            textOverflow,\n          })\n          active =\n            rect.left <= state.mouseRelativePos.x &&\n            rect.right >= state.mouseRelativePos.x &&\n            rect.top <= state.mouseRelativePos.y &&\n            rect.bottom >= state.mouseRelativePos.y\n          state.mouseActive = active\n        }\n        helper.text(value, ctx, {\n          color: active ? buttonBgColor || helper.theme.button.bgColor : color,\n          font,\n          icons,\n          padding,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      } else {\n        if (active) {\n          state.mouseActive = active\n        }\n        helper.button(value, ctx, {\n          bgColor: buttonBgColor,\n          color,\n          font,\n          icons,\n          padding,\n          shadow:\n            active || selected\n              ? {\n                  blur: 6,\n                  color: 'rgba(0, 0, 0, 0.48)',\n                  offsetY: 3,\n                }\n              : {},\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n    })\n  }\n  protected convertInternal(value: unknown) {\n    return this._caption || super.convertInternal(value)\n  }\n}\n","import {\n  CellContext,\n  GridCanvasHelperAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { CheckColumnState, GridInternal } from '../../ts-types-internal'\nimport { CheckStyle } from '../style/CheckStyle'\nimport { BaseCheckColumn } from './BaseCheckColumn'\nimport { getCheckColumnStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst CHECK_COLUMN_STATE_ID = getCheckColumnStateId()\n\nexport class CheckColumn<T> extends BaseCheckColumn<T> {\n  public get StyleClass() {\n    return CheckStyle\n  }\n  public clone(): CheckColumn<T> {\n    return new CheckColumn(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckColumnState {\n    let state = grid[CHECK_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, CHECK_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n  protected doDrawInternal(\n    helper: GridCanvasHelperAPI,\n    value: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): void {\n    helper.checkbox(value, context, opt)\n  }\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { CheckColumnState, GridInternal } from '../../ts-types-internal'\nimport { SwitchStyle } from '../style/SwitchStyle'\nimport { BaseCheckColumn } from './BaseCheckColumn'\nimport { getSwitchColumnStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst SWITCH_COLUMN_STATE_ID = getSwitchColumnStateId()\n\nexport class SwitchColumn<T> extends BaseCheckColumn<T> {\n  public get StyleClass(): typeof SwitchStyle {\n    return SwitchStyle\n  }\n  public clone(): SwitchColumn<T> {\n    return new SwitchColumn(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckColumnState {\n    let state = grid[SWITCH_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, SWITCH_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n  protected doDrawInternal(\n    helper: GridCanvasHelperAPI,\n    value: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): void {\n    helper.switch(value, context, opt)\n  }\n}\n","import * as utils from './columnUtils'\nimport {\n  DrawCallback,\n  DrawColumnOptions,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { DrawStyle } from '../style/DrawStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nexport class DrawColumn<T> extends BaseColumn<T, unknown> {\n  private _draw?: DrawCallback\n  public constructor(options: DrawColumnOptions<T> = {}) {\n    super(options)\n    this._draw = options.draw\n  }\n  public get StyleClass() {\n    return DrawStyle\n  }\n  public clone(): DrawColumn<T> {\n    return new DrawColumn(this)\n  }\n  public get draw() {\n    return this._draw\n  }\n  public drawInternal(\n    value: any,\n    context: CellContext,\n    style: DrawStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getRecord }: DrawCellInfo<T>\n  ): void {\n    utils.customDraw(helper, this.draw, value, context, grid, getRecord())\n    utils.drawActionButton(\n      grid,\n      context,\n      INLINE_INPUT_EDITOR_STATE_ID,\n      helper,\n      style as any\n    )\n  }\n}\n","import { icons } from '../../internal/icons'\nimport {\n  IconColumnOption,\n  ColumnIconOption,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { IconStyle } from '../style/IconStyle'\nimport { Column } from './Column'\n\nfunction repeatArray(\n  val: ColumnIconOption<unknown>,\n  count: number\n): ColumnIconOption<unknown>[] {\n  if (count === Infinity) {\n    count = 0\n  }\n  const a = []\n  for (let i = 0; i < count; i++) {\n    a.push(val)\n  }\n  return a\n}\n\nexport class IconColumn<T> extends Column<T> {\n  private _tagName: string\n  private _className?: string\n  private _content?: string\n  private _name?: string\n  private _iconWidth?: number\n  public constructor(options: IconColumnOption<T> = {}) {\n    super(options)\n    this._tagName = options.tagName || 'i'\n    this._className = options.className\n    this._content = options.content\n    this._name = options.name\n    this._iconWidth = options.iconWidth\n  }\n  public get StyleClass(): typeof IconStyle {\n    return IconStyle\n  }\n  public clone(): IconColumn<T> {\n    return new IconColumn(this)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: IconStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ) {\n    const num = Number(value)\n    if (!isNaN(num)) {\n      const icon: IconColumnOption<T> & { width?: number } = {}\n      icons.iconPropKeys.forEach((k) => {\n        ;(icon as any)[k] = (style as any)[k]\n      })\n      icon.className = this._className\n      icon.tagName = this._tagName\n      icon.content = this._content\n      icon.name = this._name\n      if (this._iconWidth) {\n        icon.width = this._iconWidth\n      }\n\n      info.getIcon = (): ColumnIconOption<unknown>[] =>\n        repeatArray(icon as ColumnIconOption<unknown>, num)\n    } else {\n      info.getIcon = (): null => null\n    }\n    super.drawInternal('', context, style, helper, grid, info)\n  }\n}\n","import { RectProps } from '../ts-types'\n\nexport type PaddingOption = {\n  left?: number\n  right?: number\n  top?: number\n  bottom?: number\n}\n\nconst fontSizeCache: {\n  [key: string]: {\n    width: number\n    height: number\n  }\n} = {}\n\nexport function getFontSize(\n  ctx: CanvasRenderingContext2D,\n  font: string | null | undefined\n): {\n  width: number\n  height: number\n} {\n  const fontName = font || ctx.font\n  if (fontSizeCache[fontName]) {\n    return fontSizeCache[fontName]\n  }\n  const bk = ctx.font\n  try {\n    ctx.font = fontName\n    const em = ctx.measureText('哦').width\n    return (fontSizeCache[fontName] = {\n      height: em,\n      width: em,\n    })\n  } finally {\n    ctx.font = bk\n  }\n}\n\nexport function calcBasePosition(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  {\n    offset = 0,\n    padding: {\n      left: paddingLeft = 0,\n      right: paddingRight = 0,\n      top: paddingTop = 0,\n      bottom: paddingBottom = 0,\n    } = {},\n  }: {\n    offset?: number\n    padding?: PaddingOption\n  } = {}\n): { x: number; y: number } {\n  return calcStartPosition(ctx, rect, 0, 0, {\n    offset,\n    padding: {\n      bottom: paddingBottom,\n      left: paddingLeft,\n      right: paddingRight,\n      top: paddingTop,\n    },\n  })\n}\n\nexport function calcStartPosition(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  width: number,\n  height: number,\n  {\n    offset = 0,\n    padding: {\n      left: paddingLeft = 0,\n      right: paddingRight = 0,\n      top: paddingTop = 0,\n      bottom: paddingBottom = 0,\n    } = {},\n  }: {\n    offset?: number\n    padding?: PaddingOption\n  } = {}\n): { x: number; y: number } {\n  const textAlign = ctx.textAlign || 'left'\n  const textBaseline = ctx.textBaseline || 'middle'\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n\n  let x = rect.left + offset + paddingLeft\n  if (textAlign === 'right' || textAlign === 'end') {\n    x = rect.right - width - offset - paddingRight\n  } else if (textAlign === 'center') {\n    x = rect.left + (rect.width - width + paddingLeft - paddingRight) / 2\n  }\n  let y = rect.top + offset + paddingTop\n  if (\n    textBaseline === 'bottom' ||\n    textBaseline === 'alphabetic' ||\n    textBaseline === 'ideographic'\n  ) {\n    y = rect.bottom - height - offset - paddingBottom\n  } else if (textBaseline === 'middle') {\n    y = rect.top + (rect.height - height + paddingTop - paddingBottom) / 2\n  }\n  return { x, y }\n}\n","export class LRUCache<T> {\n  private _list: string[]\n  private _map: { [key: string]: T }\n  private _cacheSize: number\n  public constructor(cacheSize: number) {\n    this._list = []\n    this._map = {}\n    this._cacheSize = cacheSize || 50\n  }\n  public get(key: string): T {\n    const val = this._map[key]\n    if (val) {\n      const list = this._list\n      const idx = list.indexOf(key)\n      list.splice(idx, 1)\n      list.push(key)\n    }\n    return val\n  }\n  public put(key: string, value: T): void {\n    const list = this._list\n    const map = this._map\n    if (map[key]) {\n      const idx = list.indexOf(key)\n      list.splice(idx, 1)\n    }\n    map[key] = value\n    list.push(key)\n    if (list.length > this._cacheSize) {\n      const remKey = list.shift() || ''\n      delete map[remKey]\n    }\n  }\n}\n","import { MaybePromise } from '../ts-types'\nimport { LRUCache } from './LRUCache'\nimport { then } from './utils'\n\nconst allCache: {\n  [key: string]: LRUCache<MaybePromise<HTMLImageElement>>\n} = {}\n\n// function isDataUrl(url: string): boolean {\n//   return url ? url.search(/^(data:)/) !== -1 : false\n// }\n\nfunction loadImage(src: string): Promise<HTMLImageElement> {\n  if (typeof Promise === 'undefined') {\n    window.console.error(\n      'Promise is not loaded. load Promise before this process.'\n    )\n    return {\n      then(): Promise<HTMLImageElement> {\n        return this as any\n      },\n    } as any\n  }\n  const img = new Image()\n  const result = new Promise<HTMLImageElement>((resolve) => {\n    img.onload = (): void => {\n      resolve(img)\n    }\n  })\n  img.onerror = (): void => {\n    const url = src.length > 200 ? `${src.substr(0, 200)}...` : src\n    console.warn(`cannot load: ${url}`)\n    throw new Error(`IMAGE LOAD ERROR: ${url}`)\n  }\n  // img.src = isDataUrl(src) ? src : `${src}?${Date.now()}`\n  img.src = src\n  return result\n}\n\nfunction getCacheOrLoad0(\n  cache: LRUCache<MaybePromise<HTMLImageElement>>,\n  src: MaybePromise<string>\n): MaybePromise<HTMLImageElement> {\n  return then(src, (src) => {\n    const c = cache.get(src)\n    if (c) {\n      return c\n    }\n    const result = loadImage(src).then((img: any) => {\n      cache.put(src, img)\n      return img\n    })\n    cache.put(src, result)\n    return result\n  })\n}\n\nexport function getCacheOrLoad(\n  cacheName: string,\n  cacheSize: number,\n  src: MaybePromise<string>\n): MaybePromise<HTMLImageElement> {\n  const cache =\n    allCache[cacheName] ||\n    (allCache[cacheName] = new LRUCache<MaybePromise<HTMLImageElement>>(\n      cacheSize\n    ))\n  return getCacheOrLoad0(cache, src)\n}\n","import * as utils from './columnUtils'\nimport {\n  ListGridAPI,\n  MaybePromise,\n  CellContext,\n  GridCanvasHelperAPI,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { calcStartPosition } from '../../internal/canvases'\nimport { getCacheOrLoad } from '../../internal/imgs'\nimport Rect from '../../internal/Rect'\nimport { ImageStyle } from '../style/ImageStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nconst MAX_LRU_CACHE_SIZE = 50\nfunction getImage(url: MaybePromise<string>): MaybePromise<HTMLImageElement> {\n  return getCacheOrLoad('ImageColumn', MAX_LRU_CACHE_SIZE, url)\n}\n\nfunction calcKeepAspectRatioSize(\n  width: number,\n  height: number,\n  maxWidth: number,\n  maxHeight: number\n): {\n  width: number\n  height: number\n} {\n  let newWidth = width\n  let newHeight = height\n  if (newWidth > maxWidth) {\n    newWidth = maxWidth\n    newHeight = (newWidth * height) / width\n  }\n  if (newHeight > maxHeight) {\n    newHeight = maxHeight\n    newWidth = (newHeight * width) / height\n  }\n  return {\n    height: newHeight,\n    width: newWidth,\n  }\n}\n\nexport class ImageColumn<T> extends BaseColumn<T, HTMLImageElement> {\n  public get StyleClass(): typeof ImageStyle {\n    return ImageStyle\n  }\n  public onDrawCell(\n    cellValue: MaybePromise<string>,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: ListGridAPI<T>\n  ) {\n    const img = cellValue ? getImage(cellValue) : ''\n    return super.onDrawCell(img, info, context, grid)\n  }\n  public clone(): ImageColumn<T> {\n    return new ImageColumn(this)\n  }\n  public drawInternal(\n    value: HTMLImageElement,\n    context: CellContext,\n    style: ImageStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ) {\n    const { textAlign, textBaseline, margin } = style\n\n    if (value) {\n      helper.drawWithClip(context, (ctx) => {\n        ctx.textAlign = textAlign\n        ctx.textBaseline = textBaseline\n\n        const rect = (context.getRect() as Rect).copy()\n        const padding = utils.getActionTextPadding(\n          context,\n          helper,\n          style as any\n        )\n        rect.width -= padding[1]\n        if (rect.width < 0) {\n          rect.width = 0\n        }\n\n        if (style.imageSizing === 'keep-aspect-ratio') {\n          const size = calcKeepAspectRatioSize(\n            value.width,\n            value.height,\n            rect.width - margin * 2,\n            rect.height - margin * 2\n          )\n          const width = size.width\n          const height = size.height\n          const pos = calcStartPosition(ctx, rect, width, height, {\n            offset: margin,\n          })\n          ctx.drawImage(\n            value,\n            0,\n            0,\n            value.width,\n            value.height,\n            pos.x,\n            pos.y,\n            width,\n            height\n          )\n        } else {\n          ctx.drawImage(\n            value,\n            0,\n            0,\n            value.width,\n            value.height,\n            rect.left + margin,\n            rect.top + margin,\n            rect.width - margin * 2,\n            rect.height - margin * 2\n          )\n        }\n      })\n    }\n    utils.drawActionButton(\n      grid,\n      context,\n      INLINE_INPUT_EDITOR_STATE_ID,\n      helper,\n      style as any\n    )\n  }\n}\n","import { NumberColumnOption } from '../../ts-types'\nimport { NumberStyle } from '../style/NumberStyle'\nimport { Column } from './Column'\n\nlet defaultFormat: Intl.NumberFormat\n\nexport class NumberColumn<T> extends Column<T> {\n  public static get defaultFormat(): Intl.NumberFormat {\n    return defaultFormat || (defaultFormat = new Intl.NumberFormat())\n  }\n  public static set defaultFormat(fmt) {\n    defaultFormat = fmt\n  }\n  private _format?: Intl.NumberFormat\n  public constructor(options: NumberColumnOption<T> = {}) {\n    super(options)\n    this._format = options.format\n  }\n  public get StyleClass(): typeof NumberStyle {\n    return NumberStyle\n  }\n  public get format(): Intl.NumberFormat | undefined {\n    return this._format\n  }\n  public clone(): NumberColumn<T> {\n    return new NumberColumn(this)\n  }\n  public withFormat(format: Intl.NumberFormat): NumberColumn<T> {\n    const c = this.clone()\n    c._format = format\n    return c\n  }\n  protected convertInternal(value: unknown): string {\n    let s: any = (value + '').trim()\n    if (s) {\n      s = s - 0\n      if (isNaN(s)) {\n        s = ''\n      } else {\n        s = (this._format || NumberColumn.defaultFormat).format(s)\n      }\n    }\n    return s\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  CellAddress,\n  LookupColumnOption,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  DrawCallback,\n  CellStyle,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { LookupStyle } from '../style/LookupStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { getOrApply, isPromise, isDef } from '../../internal/utils'\nimport { getInlineLookupEditorStateId } from '../../internal/symbolManager'\nimport Rect from '../../internal/Rect'\n\nconst INLINE_LOOKUP_EDITOR_STATE_ID = getInlineLookupEditorStateId()\n\nlet lookupColumnPromiseDrawingCol = ''\n\nexport class LookupColumn<T, L> extends BaseColumn<T, string> {\n  private _records?: L[] | ((rec: T) => L[] | Promise<L[]>)\n  private _lookupMap: {\n    [key: string]: string\n  } = {}\n  private _valueField?: string\n  private _captionField?: string\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  public constructor(options: LookupColumnOption<T, L> = {}) {\n    super(options)\n    this._records = options.records\n    this._valueField = options.valueField\n    this._captionField = options.captionField\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n  }\n  public get StyleClass(): typeof LookupStyle {\n    return LookupStyle\n  }\n  public get records(): L[] | ((rec: T) => L[] | Promise<L[]>) | undefined {\n    return this._records\n  }\n  public get valueField(): string | undefined {\n    return this._valueField\n  }\n  public get captionField(): string | undefined {\n    return this._captionField\n  }\n  public get draw(): DrawCallback | undefined {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public clone(): LookupColumn<T, L> {\n    return new LookupColumn(this)\n  }\n  public drawInternal(\n    value: any,\n    context: CellContext,\n    style: LookupStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ) {\n    const getIcon = info.getIcon\n    const getCell = info.getCell\n    const getRecord = info.getRecord\n    const records = getOrApply(this.records || [], getRecord())\n    if (isPromise(records)) {\n      const cell = getCell()\n      const col = cell.col\n      const row = cell.row\n      if (!lookupColumnPromiseDrawingCol) {\n        records.then(\n          ((me, col, row) => (rs: L[]) => {\n            lookupColumnPromiseDrawingCol = String(col)\n            try {\n              me._mergeRecords(rs)\n              const range = grid.getCellRange(col, row)\n              grid.invalidateCellRange(range)\n            } finally {\n              lookupColumnPromiseDrawingCol = ''\n            }\n          })(this, col, row)\n        )\n        return\n      }\n    } else {\n      this._mergeRecords(records)\n    }\n\n    const textAlign = style.textAlign\n    const textBaseline = style.textBaseline\n    const font = style.font\n    const textOverflow = style.textOverflow\n\n    let color = style.color\n\n    const text = this._convertInternal(value, getCell(), grid)\n    helper.testFontLoad(font, text, context)\n\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const isCustomDraw = columnUtils.customDraw(\n        helper,\n        this.draw,\n        text,\n        context,\n        grid,\n        getRecord()\n      )\n      if (!isCustomDraw) {\n        if (!isDef(color) && (!isDef(value) || value === '')) {\n          color = 'rgba(0, 0, 0, .38)'\n        }\n        helper.text(text, ctx, {\n          color,\n          font,\n          icons,\n          padding: columnUtils.getActionTextPadding(ctx, helper, style),\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n      columnUtils.drawActionButton(\n        grid,\n        ctx,\n        INLINE_LOOKUP_EDITOR_STATE_ID,\n        helper,\n        style\n      )\n      columnUtils.drawAttachArea(\n        grid,\n        getRecord(),\n        context,\n        helper,\n        this._cellStyle\n      )\n    })\n  }\n  public convertCopyInternal(value: unknown) {\n    return isDef(value) ? this._convertInternalValue(value) : ''\n  }\n  protected convertInternal(value: any): string {\n    return value\n  }\n  protected doConvertInternal(\n    value: unknown,\n    _cell: CellAddress,\n    _grid: ListGridAPI<T>\n  ) {\n    return this.convertInternal(value)\n  }\n  private _convertInternalValue(value: unknown): string {\n    const key = isDef(value) ? value + '' : ''\n    let v = this._lookupMap[key]\n    if (!isDef(v)) {\n      v = key\n    }\n    return v\n  }\n  private _convertInternal(\n    value: any,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ) {\n    let v = this._convertInternalValue(value)\n    if (this.convert) {\n      v = this.convert(value, v, cell, grid)\n    }\n    return this.doConvertInternal(v, cell, grid)\n  }\n  private _mergeRecords(recs: L[] = []) {\n    const valueField = this.valueField || 'id'\n    const captionField = this.captionField || valueField\n    for (const record of recs) {\n      let key = (record as any)[valueField]\n      key = isDef(key) ? key + '' : ''\n      let value = (record as any)[captionField]\n      value = isDef(value) ? value + '' : ''\n      this._lookupMap[key] = value\n    }\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  MultilineTextColumnOption,\n  DrawCallback,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  CellStyle,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { MultilineTextStyle } from '../style/MultilineTextStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { isDef } from '../../internal/utils'\nimport { getInlineTextareaEditorStateId } from '../../internal/symbolManager'\nimport Rect from '../../internal/Rect'\n\nconst INLINE_TEXTAREA_EDITOR_STATE_ID = getInlineTextareaEditorStateId()\n\nexport class MultilineTextColumn<T> extends BaseColumn<T, string> {\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  public constructor(options: MultilineTextColumnOption<T> = {}) {\n    super(options)\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n  }\n  public get StyleClass(): typeof MultilineTextStyle {\n    return MultilineTextStyle\n  }\n  public clone(): MultilineTextColumn<T> {\n    return new MultilineTextColumn(this)\n  }\n  public get draw() {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: MultilineTextStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getIcon, getRecord }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n      textOverflow,\n    } = style\n\n    const v = isDef(value) ? value + '' : ''\n    const multiline = v.replace(/\\r?\\n/g, '\\n').replace(/\\r/g, '\\n').split('\\n')\n    helper.testFontLoad(font, v, context)\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const isCustomDraw = columnUtils.customDraw(\n        helper,\n        this.draw,\n        multiline,\n        context,\n        grid,\n        getRecord()\n      )\n      if (!isCustomDraw) {\n        helper.multilineText(multiline, ctx, {\n          autoWrapText,\n          color,\n          font,\n          icons,\n          lineClamp,\n          lineHeight,\n          padding: columnUtils.getActionTextPadding(context, helper, style),\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n      columnUtils.drawActionButton(\n        grid,\n        context,\n        INLINE_TEXTAREA_EDITOR_STATE_ID,\n        helper,\n        style\n      )\n      columnUtils.drawAttachArea(\n        grid,\n        getRecord(),\n        context,\n        helper,\n        this._cellStyle\n      )\n    })\n  }\n}\n","import {\n  PercentCompleteBarColumnOption,\n  GridCanvasHelperAPI,\n  CellContext,\n  ListGridAPI,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { str, getOrApply } from '../../internal/utils'\nimport { PercentCompleteBarStyle } from '../style/PercentCompleteBarStyle'\nimport { Column } from './Column'\n\nconst MARGIN = 2\n\nexport class PercentCompleteBarColumn<T> extends Column<T> {\n  private _min: number\n  private _max: number\n  private _formatter: (value: string) => string\n  public constructor(options: PercentCompleteBarColumnOption<T> = {}) {\n    super(options)\n    this._min = options.min || 0\n    this._max = options.max || this._min + 100\n    this._formatter = options.formatter || ((v) => v)\n  }\n  public get StyleClass(): typeof PercentCompleteBarStyle {\n    return PercentCompleteBarStyle\n  }\n  public clone(): PercentCompleteBarColumn<T> {\n    return new PercentCompleteBarColumn(this)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: PercentCompleteBarStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    super.drawInternal(\n      this._formatter(value),\n      context,\n      style,\n      helper,\n      grid,\n      info\n    )\n    const barColor = style.barColor\n    const barBgColor = style.barBgColor\n    const barHeight = style.barHeight\n\n    let sValue = `${value}`\n    if (str.endsWith(sValue, '%')) {\n      sValue = sValue.substr(0, sValue.length - 1)\n    }\n    const num = Number(sValue)\n    const rate =\n      num < this._min\n        ? 0\n        : num > this._max\n        ? 1\n        : (num - this._min) / (this._max - this._min)\n\n    helper.drawWithClip(context, (ctx) => {\n      const rect = context.getRect()\n\n      const barMaxWidth = rect.width - MARGIN * 2 - 1 /*边线*/\n      const barTop = rect.bottom - MARGIN - barHeight - 1 /*边线*/\n      const barLeft = rect.left + MARGIN\n      ctx.fillStyle = getOrApply(barBgColor, rate * 100) || '#f0f3f5'\n      ctx.beginPath()\n      ctx.rect(barLeft, barTop, barMaxWidth, barHeight)\n      ctx.fill()\n\n      const barSize = Math.min(barMaxWidth * rate, barMaxWidth)\n      ctx.fillStyle = getOrApply(barColor, rate * 100) || '#20a8d8'\n      ctx.beginPath()\n      ctx.rect(barLeft, barTop, barSize, barHeight)\n      ctx.fill()\n    })\n  }\n}\n","import { MaybePromise } from '../ts-types'\nimport { isPromise } from './utils'\n\nfunction createArray<T>(get: (i: number) => T, length: number): T[] {\n  const array = new Array<T>(length)\n  for (let i = 0; i < length; i++) {\n    array[i] = get(i)\n  }\n  return array\n}\nfunction createArrayPromise<R>(\n  get: (i: number) => MaybePromise<R>,\n  getField: undefined,\n  length: number\n): Promise<{ v: R; f: R }[]>\nfunction createArrayPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  getField: (r: R) => MaybePromise<F>,\n  length: number\n): Promise<{ v: R; f: F }[]>\nfunction createArrayPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  getField: ((r: R) => MaybePromise<F>) | undefined,\n  length: number\n): Promise<any[]> {\n  return new Promise((resolve) => {\n    const plist = []\n    const array = new Array<{ v: MaybePromise<R>; f: MaybePromise<R> }>(length)\n    for (let i = 0; i < length; i++) {\n      const data = get(i)\n      const record = {\n        v: data,\n        f: data,\n      }\n      array[i] = record\n      if (isPromise(data)) {\n        plist.push(\n          data.then((v) => {\n            record.v = v\n            record.f = v\n          })\n        )\n      }\n    }\n    Promise.all(plist)\n      .then(() =>\n        getField == null\n          ? (array as any)\n          : setArrayField(array as any, getField)\n      )\n      .then(resolve)\n  })\n}\nfunction setArrayField<R, F>(\n  array: { v: R; f: R | F }[],\n  getField: (r: R) => MaybePromise<F>\n): Promise<{ v: R; f: F }[]> {\n  return new Promise((resolve) => {\n    const { length } = array\n    const plist = []\n    for (let i = 0; i < length; i++) {\n      const record = array[i]\n      const f = getField(record.v)\n      if (isPromise(f)) {\n        plist.push(\n          f.then((v) => {\n            record.f = v\n          })\n        )\n      } else {\n        record.f = f\n      }\n    }\n    Promise.all(plist).then(() => resolve(array as { v: R; f: F }[]))\n  })\n}\nexport function sortArray<T>(\n  array: T[],\n  compare: (a: T, b: T) => number\n): void {\n  Array.prototype.sort.call(array, compare)\n}\n\nexport function sort<R, F>(\n  get: (i: number) => R,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: R, b: R) => number\n): void\nexport function sort<R, F>(\n  get: (i: number) => R,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: F, b: F) => number,\n  getField: (r: R) => F\n): void\nexport function sort<R, F>(\n  get: (i: number) => R,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: ((a: R, b: R) => number) | ((a: F, b: F) => number),\n  getField?: (r: R) => F\n): void {\n  const old = createArray(get, length)\n  if (getField != null) {\n    old.sort((r1, r2) =>\n      (compare as (a: F, b: F) => number)(getField(r1), getField(r2))\n    )\n  } else {\n    old.sort(compare as (a: R, b: R) => number)\n  }\n  for (let i = 0; i < length; i++) {\n    set(i, old[i])\n  }\n}\n\nexport function sortPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: R, b: R) => number\n): void\nexport function sortPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: F, b: F) => number,\n  getField: (r: R) => MaybePromise<F | undefined>\n): Promise<void>\nexport function sortPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: any,\n  getField?: any\n): Promise<void> {\n  if (typeof Promise !== 'undefined') {\n    return createArrayPromise(get, getField, length).then((array) => {\n      array.sort((r1, r2) => compare(r1.f, r2.f))\n      for (let i = 0; i < length; i++) {\n        set(i, array[i].v)\n      }\n    })\n  } else {\n    sort(\n      get as (i: number) => R,\n      set,\n      length,\n      compare as (a: F, b: F) => number,\n      getField as (r: R) => F\n    )\n    const dummyPromise: Promise<undefined> = {\n      then(fn: () => void): Promise<undefined> {\n        fn()\n        return dummyPromise\n      },\n      catch(): Promise<undefined> {\n        return dummyPromise\n      },\n    } as any\n    return dummyPromise\n  }\n}\n","import * as sort from '../internal/sort'\nimport {\n  MaybePromiseOrUndef,\n  FieldDef,\n  FieldData,\n  MaybePromise,\n  MaybePromiseOrCallOrUndef,\n  FieldAssessor,\n  MaybePromiseOrCall,\n} from '../ts-types'\nimport {\n  applyChainSafe,\n  array,\n  emptyFn,\n  getOrApply,\n  isDef,\n  isPromise,\n  obj,\n} from '../internal/utils'\nimport { EventTarget } from '../core/EventTarget'\nimport { PromiseCacheValue } from './internal/types'\n\nfunction isFieldAssessor<T>(field: FieldDef<T>): field is FieldAssessor<T> {\n  if (obj.isObject(field)) {\n    const a = field as FieldAssessor<T>\n    if (a.get && a.set) {\n      return true\n    }\n  }\n  return false\n}\n\nconst DATA_SOURCE_EVENT_TYPE = {\n  REFRESH_DATA: 'refresh_data',\n  UPDATED_LENGTH: 'updated_length',\n  UPDATED_ORDER: 'updated_order',\n  UPDATE_LENGTH: 'update_length',\n} as const\n\ntype PromiseBack<V> = (value: PromiseCacheValue<V>) => void\n\nfunction getValue<V>(\n  value: MaybePromiseOrCallOrUndef<V, []>,\n  setPromiseBack: PromiseBack<V>\n): MaybePromiseOrUndef<V> {\n  const maybePromiseValue = getOrApply(value)\n  if (isPromise(maybePromiseValue)) {\n    const promiseValue = maybePromiseValue.then((r: V | undefined) => {\n      setPromiseBack(r)\n      return r\n    })\n    // 临时缓存\n    setPromiseBack(promiseValue)\n    return promiseValue\n  } else {\n    return maybePromiseValue\n  }\n}\n\nfunction getField<T, F extends FieldDef<T>>(\n  record: MaybePromiseOrUndef<T>,\n  field: F,\n  setPromiseBack: PromiseBack<any>\n): FieldData {\n  if (!isDef(record)) {\n    return undefined\n  }\n  if (isPromise(record)) {\n    return record.then((r: T | undefined) => getField(r, field, setPromiseBack))\n  }\n  const fieldGet = isFieldAssessor<T>(field) ? field.get : field\n  if (typeof fieldGet === 'string' && fieldGet in record) {\n    const fieldResult = (record as any)[fieldGet]\n    return getValue(fieldResult, setPromiseBack)\n  }\n  if (typeof fieldGet === 'function') {\n    const fieldResult = (fieldGet as any)(record)\n    return getValue(fieldResult, setPromiseBack)\n  }\n\n  const ss = `${fieldGet}`.split('.')\n  if (ss.length <= 1) {\n    const fieldResult = (record as any)[fieldGet]\n    return getValue(fieldResult, setPromiseBack)\n  }\n  const fieldResult = applyChainSafe(\n    record,\n    (val, name) => getField(val, name, emptyFn as any),\n    ...ss\n  )\n  return getValue(fieldResult, setPromiseBack)\n}\nfunction setField<T, F extends FieldDef<T>>(\n  record: T | undefined,\n  field: F,\n  value: any\n): boolean {\n  if (record == null) {\n    return false\n  }\n\n  const fieldSet = isFieldAssessor<T>(field) ? field.set : field\n  if (typeof fieldSet === 'string' && fieldSet in record) {\n    ;(record as any)[fieldSet] = value\n  } else if (typeof fieldSet === 'function') {\n    return (fieldSet as any)(record, value)\n  } else if (typeof fieldSet === 'string') {\n    const ss = `${fieldSet}`.split('.')\n    let obj: any = record\n    const { length } = ss\n    for (let i = 0; i < length; i++) {\n      const f = ss[i]\n      if (i === length - 1) {\n        obj[f] = value\n      } else {\n        obj = obj[f] || (obj[f] = {})\n      }\n    }\n  } else {\n    ;(record as any)[fieldSet] = value\n  }\n  return true\n}\nfunction _getIndex(sortedIndexMap: null | number[], index: number): number {\n  if (!sortedIndexMap) {\n    return index\n  }\n  const mapIndex = sortedIndexMap[index]\n  return isDef(mapIndex) ? mapIndex : index\n}\n\nexport interface DataSourceParam<T> {\n  get: (index: number) => T\n  length: number\n  source?: any\n}\n\n/**\n * grid data source\n */\nexport class DataSource<T> extends EventTarget {\n  public static get EVENT_TYPE() {\n    return DATA_SOURCE_EVENT_TYPE\n  }\n  public static EMPTY = new DataSource<any>({\n    get(): void {},\n    length: 0,\n  })\n  public static ofArray<T>(array: T[]): DataSource<T> {\n    return new DataSource({\n      get: (index: number): T => array[index],\n      length: array.length,\n      source: array,\n    })\n  }\n  protected _sortedIndexMap: null | number[] = null\n  private _get: (index: number) => MaybePromiseOrCall<T, []>\n  private _length: number\n  private readonly _source: any\n  public constructor(obj?: DataSourceParam<T> | DataSource<T>) {\n    super()\n    this._get = obj?.get.bind(obj) || (undefined as any)\n    this._length = obj?.length || 0\n    this._source = obj?.source ?? obj\n  }\n  get source(): any {\n    return this._source\n  }\n  public get(index: number): MaybePromiseOrUndef<T> {\n    return this.getOriginal(_getIndex(this._sortedIndexMap, index))\n  }\n  public getField<F extends FieldDef<T>>(index: number, field: F): FieldData {\n    return this.getOriginalField(_getIndex(this._sortedIndexMap, index), field)\n  }\n  public hasField(index: number, field: FieldDef<T>): boolean {\n    return this.hasOriginalField(_getIndex(this._sortedIndexMap, index), field)\n  }\n  public setField<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: any\n  ): MaybePromise<boolean> {\n    return this.setOriginalField(\n      _getIndex(this._sortedIndexMap, index),\n      field,\n      value\n    )\n  }\n  public sort(field: FieldDef<T>, order: 'desc' | 'asc'): MaybePromise<void> {\n    const sortedIndexMap = new Array<number>(this._length)\n\n    const orderFn: (v1: T, v2: T) => -1 | 0 | 1 =\n      order !== 'desc'\n        ? (v1: T, v2: T): -1 | 0 | 1 => (v1 === v2 ? 0 : v1 > v2 ? 1 : -1)\n        : (v1: T, v2: T): -1 | 0 | 1 => (v1 === v2 ? 0 : v1 < v2 ? 1 : -1)\n\n    return sort\n      .sortPromise(\n        (index) =>\n          isDef(sortedIndexMap[index])\n            ? sortedIndexMap[index]\n            : (sortedIndexMap[index] = index),\n        (index, rel) => {\n          sortedIndexMap[index] = rel\n        },\n        this._length,\n        orderFn,\n        (index) => this.getOriginalField(index, field)\n      )\n      .then(() => {\n        this._sortedIndexMap = sortedIndexMap\n        this.fireListeners(DATA_SOURCE_EVENT_TYPE.UPDATED_ORDER)\n      })\n  }\n  public get length(): number {\n    return this._length\n  }\n  public set length(length) {\n    if (this._length !== length) {\n      this.setLength(length)\n    }\n  }\n  public refresh(): void {\n    this.refreshInternal()\n    this.fireListeners(DATA_SOURCE_EVENT_TYPE.REFRESH_DATA)\n  }\n  get dataSource(): DataSource<T> {\n    return this\n  }\n  public dispose(): void {\n    super.dispose()\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    return getValue(this._get(index), (val: PromiseCacheValue<T>) => {\n      this.recordPromiseCallBackInternal(index, val)\n    })\n  }\n  protected getOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F\n  ): FieldData {\n    if (!isDef(field)) {\n      return undefined\n    }\n    const record = this.getOriginal(index)\n    return getField(record, field, (val: any) => {\n      this.fieldPromiseCallBackInternal(index, field, val)\n    })\n  }\n  protected hasOriginalField(index: number, field: FieldDef<T>): boolean {\n    if (!isDef(field)) {\n      return false\n    }\n    if (typeof field === 'function') {\n      return true\n    }\n    const record = this.getOriginal(index)\n    return Boolean(record && typeof field === 'string' && field in record)\n  }\n  protected setOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: any\n  ): MaybePromise<boolean> {\n    if (!isDef(field)) {\n      return false\n    }\n    const record = this.getOriginal(index)\n    if (isPromise(record)) {\n      return record.then((r) => setField(r, field, value))\n    }\n    return setField(record, field, value)\n  }\n  protected fieldPromiseCallBackInternal<F extends FieldDef<T>>(\n    _index: number,\n    _field: F,\n    _value: PromiseCacheValue<any>\n  ): void {\n    // nothing\n  }\n  protected recordPromiseCallBackInternal(\n    _index: number,\n    _record: PromiseCacheValue<T>\n  ): void {\n    // nothing\n  }\n  protected refreshInternal() {\n    // nothing\n  }\n  protected setLength(length: number): void {\n    const results = this.fireListeners(\n      DATA_SOURCE_EVENT_TYPE.UPDATE_LENGTH,\n      length\n    )\n    if (array.findIndex(results, (v) => !v) >= 0) {\n      return\n    }\n    this._length = length\n    this.fireListeners(DATA_SOURCE_EVENT_TYPE.UPDATED_LENGTH, this._length)\n  }\n}\n","import { isPromise } from '../internal/utils'\nimport { DataSource } from './DataSource'\nimport { MaybePromiseOrUndef } from '../ts-types'\n\ntype TExpandedKeys = number[] | string[]\n\ninterface ITreeDataSourceOptions<T> {\n  keyField: string\n  parentKeyField: string\n  expandedKeys?: TExpandedKeys\n  hasChildren?: (rec?: T | null) => boolean\n  getChildren?: (\n    rec?: T | null,\n    all?: boolean\n  ) =>\n    | T[]\n    | Promise<\n        | T[]\n        | {\n            records: T[]\n            expandedKeys?: TExpandedKeys\n          }\n      >\n}\n\nexport interface ITreeInfo {\n  expanded: boolean\n  isLast: boolean\n  isLeaf: boolean\n  key: any\n  level: number\n  levelLast: boolean[]\n  parentKey: any\n}\n\ninterface IRecordMap<T> {\n  [key: string]: T\n  [key: number]: T\n}\n\ninterface IRecordsMap<T> {\n  [key: string]: T[]\n  [key: number]: T[]\n}\n\ninterface ILevelMap {\n  [key: string]: number\n  [key: number]: number\n}\n\ninterface ILastMap {\n  [key: string]: boolean\n  [key: number]: boolean\n}\n\ninterface IExpandMap {\n  [key: string]: boolean\n  [key: number]: boolean\n}\n\nfunction _initLevel<T>(ds: any, record: T, level: number) {\n  const key = (record as any)[ds.options.keyField]\n  ds._levelMap[key] = level\n  const children = ds._pIdMap[key] || []\n  for (const child of children) {\n    _initLevel(ds, child, level + 1)\n  }\n}\n\nfunction _initLast<T>(ds: any, records: T[]) {\n  if (records && records.length > 0) {\n    const key = (records as any)[records.length - 1][ds.options.keyField]\n    ds._lastMap[key] = true\n  }\n}\n\nfunction _expandAll<T>(ds: any, record: T) {\n  const key = (record as any)[ds.options.keyField]\n  const children = ds._pIdMap[key] || []\n  if (children.length > 0) {\n    ds._expandMap[key] = true\n    for (const r of children) {\n      _expandAll(ds, r)\n    }\n  }\n}\n\nfunction _getExpandRecords<T>(ds: any, record: T): T[] {\n  let records = []\n  const key = (record as any)[ds.options.keyField]\n  if (ds._expandMap[key]) {\n    const children = ds._pIdMap[key] || []\n    for (const r of children) {\n      records.push(r)\n      records = records.concat(_getExpandRecords(ds, r))\n    }\n  }\n  return records\n}\n\nfunction _getCollapseRecordCount(ds: any, index: number) {\n  const record = ds._records[index]\n  const key = record[ds.options.keyField]\n  const level = ds._levelMap[key]\n  let count = 0\n  for (let i = index + 1; i < ds._records.length; i++) {\n    const r = ds._records[i]\n    const k = r[ds.options.keyField]\n    if (level < ds._levelMap[k]) {\n      count++\n    } else {\n      break\n    }\n  }\n  return count\n}\n\nfunction _expand<T>(\n  ds: any,\n  record: T | null,\n  all: boolean,\n  silent: number,\n  callback?: (ds: any, record: T | null, all: boolean, silent: number) => void\n) {\n  if (record) {\n    const index = ds._records.indexOf(record)\n    const key = (record as any)[ds._options.keyField]\n    if (ds._pIdMap[key]) {\n      if (!ds._expandMap[key]) {\n        if (all) {\n          _expandAll(ds, record)\n        } else {\n          ds._expandMap[key] = true\n        }\n        ds._records.splice(index + 1, 0, ..._getExpandRecords(ds, record))\n      } else if (all) {\n        _expandAll(ds, record)\n        ds._records.splice(\n          index + 1,\n          _getCollapseRecordCount(ds, index),\n          ..._getExpandRecords(ds, record)\n        )\n      }\n      if (silent === 0) {\n        ds.length = ds._records.length\n      }\n    } else if (callback) {\n      callback(ds, record, all, silent)\n    }\n  }\n}\n\nfunction _collapseAll<T>(ds: any, record: T) {\n  const key = (record as any)[ds.options.keyField]\n  delete ds._expandMap[key]\n  const children = ds._pIdMap[key] || []\n  for (const r of children) {\n    _collapseAll(ds, r)\n  }\n}\n\nfunction _parentKey(ds: any, key: any) {\n  const record = ds._idMap[key]\n  const parentKey = record[ds.options.parentKeyField]\n  return parentKey\n}\n\nfunction _rebuildTree(ds: any, silent: number) {\n  // 构建显示记录列表\n  ds._levelMap = {} // 级别索引列表\n  ds._lastMap = {} // 是否末节点列表\n  ds._rootRecords = [] // 根记录对象列表\n  ds._records = [] // 显示记录列表\n  for (const parentKey in ds._pIdMap) {\n    if (ds._pIdMap.hasOwnProperty(parentKey)) {\n      const records = ds._pIdMap[parentKey]\n      if (ds._idMap[parentKey]) {\n        _initLast(ds, records)\n      } else {\n        for (const item of records) {\n          _initLevel(ds, item, 0)\n          ds._rootRecords.push(item)\n          ds._records.push(item)\n          ds._records.push(..._getExpandRecords(ds, item))\n        }\n      }\n    }\n  }\n  _initLast(ds, ds._rootRecords)\n\n  // 清理展开信息\n  for (const key in ds._expandMap) {\n    if (!ds._pIdMap[key]) {\n      delete ds._expandMap[key]\n    }\n  }\n\n  if (silent === 0) {\n    ds.length = ds._records.length\n  }\n}\n\nfunction _lazyLoadRecords<T>(\n  ds: any,\n  records: T[],\n  expandedKeys: TExpandedKeys | null,\n  silent: number\n) {\n  let hasNewRecords = false\n  for (const record of records) {\n    const key = (record as any)[ds._options.keyField]\n    if (!ds._idMap[key]) {\n      hasNewRecords = true\n      const pKey = (record as any)[ds._options.parentKeyField]\n      ds._idMap[key] = record\n      ds._pIdMap[pKey] = ds._pIdMap[pKey] || []\n      ds._pIdMap[pKey].push(record)\n      if (\n        expandedKeys &&\n        Array.isArray(expandedKeys) &&\n        (expandedKeys as (string | number)[]).indexOf(key) >= 0\n      ) {\n        ds._expandMap[key] = true\n      }\n    }\n  }\n  if (hasNewRecords) {\n    _rebuildTree(ds, silent)\n  }\n}\n\nfunction _lazyLoadChildren<T>(\n  ds: any,\n  record: T | null,\n  all: boolean,\n  silent: number,\n  callback?: (ds: any, record: T | null, all: boolean, silent: number) => void\n) {\n  if (\n    ds._options.hasChildren &&\n    ds._options.getChildren &&\n    ds._options.hasChildren(record)\n  ) {\n    const records = ds._options.getChildren(record, all)\n    if (isPromise(records)) {\n      records.then((recs) => {\n        const rs = Array.isArray(recs) ? recs : recs.records\n        const expandedKeys = Array.isArray(recs) ? undefined : recs.expandedKeys\n        _lazyLoadRecords(ds, rs, expandedKeys, silent)\n        if (callback) {\n          callback(ds, record, all, silent)\n        }\n      })\n    } else {\n      _lazyLoadRecords(ds, records, null, silent)\n      if (callback) {\n        callback(ds, record, all, silent)\n      }\n    }\n  }\n}\n\n/**\n * grid data source for tree\n */\nexport class TreeDataSource<T> extends DataSource<T> {\n  public static get EVENT_TYPE() {\n    return DataSource.EVENT_TYPE\n  }\n  private _dataSource: DataSource<T>\n  private _options: ITreeDataSourceOptions<T>\n  private _expandMap: IExpandMap\n  private _idMap: IRecordMap<T> = {}\n  private _pIdMap: IRecordsMap<T> = {}\n  private _levelMap: ILevelMap = {}\n  private _lastMap: ILastMap = {}\n  private _rootRecords: T[] = []\n  private _records: T[] = []\n  private _updateLengthSilentCounter: number = 0\n  public constructor(\n    dataSource: DataSource<T>,\n    options: ITreeDataSourceOptions<T>\n  ) {\n    super(dataSource)\n    this._dataSource = dataSource\n\n    this._options = options\n\n    this._expandMap = {}\n    for (const key of options.expandedKeys || []) {\n      this._expandMap[key] = true\n    }\n\n    this.refreshInternal()\n  }\n  public get options() {\n    return this._options\n  }\n  public get expandedKeys() {\n    return Object.keys(this._expandMap)\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    return this._records[index]\n  }\n  public getTreeInfo(index: number): ITreeInfo | undefined {\n    const record = this.getOriginal(index)\n    if (record) {\n      const key = (record as any)[this._options.keyField]\n      const parentKey = _parentKey(this, key)\n      const expanded = !!this._expandMap[key]\n      let isLeaf = !this._pIdMap[key]\n      const isLast = !!this._lastMap[key]\n      const level = this._levelMap[key]\n\n      const levelLast = []\n      let k = key\n      for (let i = 0; i < level; i++) {\n        levelLast.unshift(!!this._lastMap[k])\n        k = _parentKey(this, k)\n      }\n\n      if (isLeaf && this._options.hasChildren) {\n        isLeaf = !this._options.hasChildren(record as T)\n      }\n\n      return {\n        expanded,\n        isLast,\n        isLeaf,\n        key,\n        level,\n        levelLast,\n        parentKey,\n      }\n    } else {\n      return undefined\n    }\n  }\n  public getIndexByKey(key: number | string) {\n    return this._records.indexOf(this._idMap[key])\n  }\n  public expandAll() {\n    this._records.length = 0\n    for (const record of this._rootRecords) {\n      _expandAll(this, record)\n      this._records.push(record)\n      this._records.push(..._getExpandRecords(this, record))\n    }\n    this.length = this._records.length\n  }\n  public expand(index: number, all: boolean = false) {\n    const record = this.getOriginal(index)\n    _expand(this, record, all, this._updateLengthSilentCounter,\n      (ds1, record1, all1, silent1) => {\n      _lazyLoadChildren(ds1, record1, all1, silent1, (ds2, record2, all2, silent2) => {\n        _expand(ds2, record2, all2, silent2)\n      })\n    })\n  }\n  public expandToKey(key: number | string) {\n    // 根据指定的主键，展开到该记录，并返回索引值\n    const parentKeys = []\n    let value = key\n    let record = this._idMap[value]\n    while (record) {\n      value = (record as any)[this._options.parentKeyField]\n      record = this._idMap[value]\n      if (record) {\n        parentKeys.unshift(value)\n      }\n    }\n    this._updateLengthSilentCounter++\n    try {\n      for (const parentKey of parentKeys) {\n        this.expand(this._records.indexOf(this._idMap[parentKey]))\n      }\n    } finally {\n      this._updateLengthSilentCounter--\n      if (this._updateLengthSilentCounter === 0) {\n        this.length = this._records.length\n      }\n    }\n    return this.getIndexByKey(key)\n  }\n  public expandToLevel(level: number) {\n    // 展开到指定级别\n    const targets = []\n    if (level > 0) {\n      this._updateLengthSilentCounter++\n      try {\n        for (const key in this._levelMap) {\n          if (this._levelMap.hasOwnProperty(key)) {\n            if (\n              level === this._levelMap[key] ||\n              (level > this._levelMap[key] && this._lastMap[key])\n            ) {\n              targets.push(this.expandToKey(key))\n            }\n          }\n        }\n      } finally {\n        this._updateLengthSilentCounter--\n        if (this._updateLengthSilentCounter === 0) {\n          this.length = this._records.length\n        }\n      }\n    }\n    return targets\n  }\n  public collapseAll() {\n    this._records.length = 0\n    this._records.push(...this._rootRecords)\n    this._expandMap = {}\n    this.length = this._records.length\n  }\n  public collapse(index: number, all?: boolean) {\n    const record = this.getOriginal(index)\n    if (record) {\n      const key = (record as any)[this._options.keyField]\n      if (this._pIdMap[key]) {\n        if (this._expandMap[key]) {\n          if (all) {\n            _collapseAll(this, record)\n          } else {\n            delete this._expandMap[key]\n          }\n          this._records.splice(index + 1, _getCollapseRecordCount(this, index))\n          this.length = this._records.length\n        } else if (all) {\n          _collapseAll(this, record)\n        }\n      }\n    }\n  }\n  public toggle(index: number, all?: boolean) {\n    const record = this.getOriginal(index)\n    if (record) {\n      const key = (record as any)[this._options.keyField]\n      if (this._expandMap[key]) {\n        this.collapse(index, all)\n      } else {\n        this.expand(index, all)\n      }\n    }\n  }\n  get source(): any {\n    return this._dataSource.source\n  }\n  get dataSource(): DataSource<T> {\n    return this._dataSource\n  }\n  protected refreshInternal() {\n    // 构建 id 和 pId 与记录的对应关系\n    this._idMap = {}\n    this._pIdMap = {}\n    for (let i = 0; i < this._dataSource.length; i++) {\n      const key = this._dataSource.getField(i, this._options.keyField as any)\n      const parentKey = this._dataSource.getField(\n        i,\n        this._options.parentKeyField as any\n      )\n      const record = this._dataSource.get(i)\n      this._idMap[key] = record as any\n      this._pIdMap[parentKey] = this._pIdMap[parentKey] || []\n      this._pIdMap[parentKey].push(record as any)\n    }\n\n    // 构建显示记录列表\n    _rebuildTree(this, this._updateLengthSilentCounter)\n\n    if (this.length === 0) {\n      _lazyLoadChildren(this, null, false, this._updateLengthSilentCounter)\n    }\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  CellAddress,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n  DrawCallback,\n  TreeColumnOption,\n  TreeInfo,\n  CanToggle,\n  Toggled,\n  ToggledType,\n  LayoutObjectId,\n  CellStyle,\n  MultilineText,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport {\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n} from '../../core/draw-grid/KEY_CODE'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { TreeDataSource } from '../../data/TreeDataSource'\nimport Rect from '../../internal/Rect'\nimport { TreeStyle } from '../style/TreeStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { isPromise, event, cellInRange, getOrApply } from '../../internal/utils'\nimport {\n  getInlineInputEditorStateId,\n  getButtonColumnStateId,\n  getColumnActionStateId,\n} from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\nconst BUTTON_COLUMN_STATE_ID = getButtonColumnStateId()\nconst COLUMN_ACTION_STATE_ID = getColumnActionStateId()\n\nconst TREE_NODE_SPACE = 16\n\nfunction _getTreeInfo<T>(\n  grid: ListGridAPI<T>,\n  row: number\n): TreeInfo | undefined {\n  let treeInfo: TreeInfo | undefined = undefined\n  if (grid.dataSource instanceof TreeDataSource) {\n    const recordIndex = grid.getRecordIndexByRow(row)\n    if (recordIndex >= 0) {\n      treeInfo = grid.dataSource.getTreeInfo(recordIndex)\n    }\n  }\n  return treeInfo\n}\n\nfunction _getTreeNodeSpaceWidth(treeInfo?: TreeInfo) {\n  let width = 0\n  if (treeInfo) {\n    width += treeInfo.level * TREE_NODE_SPACE + TREE_NODE_SPACE * 2\n  }\n  return width\n}\n\nfunction _isTreeNodeSpace<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number,\n  event: MouseEvent\n) {\n  let bool = false\n  const relativePos = grid._getMouseRelativePoint(event)\n  if (relativePos) {\n    const rect = grid.getCellRelativeRect(col, row)\n    const treeInfo = _getTreeInfo(grid, row)\n    if (treeInfo && !treeInfo.isLeaf) {\n      const treeNodeSpaceWidth = _getTreeNodeSpaceWidth(treeInfo)\n      if (\n        treeNodeSpaceWidth &&\n        relativePos.x - rect.left < treeNodeSpaceWidth\n      ) {\n        bool = true\n      }\n    }\n  }\n  return bool\n}\n\nexport class TreeColumn<T> extends BaseColumn<T, string> {\n  private _canToggle?: CanToggle\n  private _toggled?: Toggled\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  private _multilineText?: MultilineText\n  public constructor(options: TreeColumnOption<T> = {}) {\n    super(options)\n    this._canToggle = options.canToggle\n    this._toggled = options.toggled\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n    this._multilineText = options.multilineText\n  }\n  public get StyleClass(): typeof TreeStyle {\n    return TreeStyle\n  }\n  public get canToggle(): CanToggle | undefined {\n    return this._canToggle\n  }\n  public get toggled(): Toggled | undefined {\n    return this._toggled\n  }\n  public get draw(): DrawCallback | undefined {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public get multilineText(): MultilineText | undefined {\n    return this._multilineText\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    const treeInfo = _getTreeInfo(grid, row)\n    padding[3] += _getTreeNodeSpaceWidth(treeInfo)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public reviseFocusRect(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    const treeInfo = _getTreeInfo(grid, row)\n    rect.left += _getTreeNodeSpaceWidth(treeInfo)\n  }\n  public clone(): TreeColumn<T> {\n    return new TreeColumn(this)\n  }\n  public drawInternal<T>(\n    value: any,\n    context: CellContext,\n    style: TreeStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    const getIcon = info.getIcon\n    const getRecord = info.getRecord\n\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      textOverflow,\n      lineColor,\n      buttonColor,\n      buttonBgColor,\n      buttonBorderColor,\n      linkColor,\n      autoWrapText,\n      lineHeight,\n      lineClamp,\n    } = style\n\n    helper.testFontLoad(font, value, context)\n\n    const treeInfo = _getTreeInfo(grid, context.row)\n\n    let active = false\n    const state = (grid as any)[BUTTON_COLUMN_STATE_ID]\n    if (state) {\n      const range = grid.getCellRange(context.col, context.row)\n      if (\n        state.mouseActiveCell &&\n        cellInRange(range, state.mouseActiveCell.col, state.mouseActiveCell.row)\n      ) {\n        active = true\n      }\n    }\n\n    columnUtils.loadIcons(\n      getIcon(),\n      context,\n      helper,\n      (icons: any, ctx: CellContext) => {\n        const isCustomDraw = columnUtils.customDraw(\n          helper,\n          this.draw,\n          value,\n          context,\n          grid,\n          getRecord()\n        )\n        if (!isCustomDraw) {\n          const padding = columnUtils.getActionTextPadding(\n            context,\n            helper,\n            style\n          )\n          if (active && state && state.mouseRelativePos) {\n            const rect = helper.getTextRect(value, ctx, {\n              font,\n              icons,\n              padding,\n              textAlign,\n              textBaseline,\n              textOverflow,\n            })\n            const offset = _getTreeNodeSpaceWidth(treeInfo)\n            rect.left = Math.max(\n              context.getRect().left + offset,\n              rect.left + offset\n            )\n            rect.right += offset\n            active =\n              rect.left <= state.mouseRelativePos.x &&\n              rect.right >= state.mouseRelativePos.x &&\n              rect.top <= state.mouseRelativePos.y &&\n              rect.bottom >= state.mouseRelativePos.y\n            state.mouseActive = active\n          }\n          const record = info.getRecord()\n          const isMultilineText = getOrApply(this.multilineText, record)\n          helper.tree(value, ctx, {\n            color: active ? linkColor || helper.theme.tree.linkColor : color,\n            lineColor,\n            buttonColor,\n            buttonBgColor,\n            buttonBorderColor,\n            icons,\n            padding,\n            textAlign,\n            textBaseline,\n            textOverflow,\n            treeInfo,\n            treeNodeSpace: TREE_NODE_SPACE,\n            isMultilineText,\n            autoWrapText,\n            lineHeight,\n            lineClamp,\n          })\n        }\n        columnUtils.drawActionButton(\n          grid,\n          context,\n          INLINE_INPUT_EDITOR_STATE_ID,\n          helper,\n          style\n        )\n        columnUtils.drawAttachArea(\n          grid,\n          getRecord(),\n          context,\n          helper,\n          this._cellStyle\n        )\n      }\n    )\n  }\n  public bindGridEvent<T>(grid: ListGridAPI<T>, cellId: LayoutObjectId): any[] {\n    const expand = (cell: CellAddress, all: boolean) => {\n      if (grid.dataSource instanceof TreeDataSource) {\n        const recordIndex = grid.getRecordIndexByRow(cell.row)\n        grid.dataSource.expand(recordIndex, all)\n      }\n    }\n\n    const collapse = (cell: CellAddress, all: boolean) => {\n      if (grid.dataSource instanceof TreeDataSource) {\n        const recordIndex = grid.getRecordIndexByRow(cell.row)\n        grid.dataSource.collapse(recordIndex, all)\n      }\n    }\n\n    const toggle = (cell: CellAddress, all: boolean) => {\n      if (grid.dataSource instanceof TreeDataSource) {\n        const recordIndex = grid.getRecordIndexByRow(cell.row)\n        grid.dataSource.toggle(recordIndex, all)\n      }\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n\n    const doMouseMove = (e: any) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      if (this._canToggle) {\n        const treeInfo = _getTreeInfo(grid, e.row)\n        if (\n          treeInfo &&\n          this._canToggle({\n            col: e.col,\n            event: e.event,\n            row: e.row,\n            treeInfo,\n            type: 'over',\n          }) === false\n        ) {\n          return\n        }\n      }\n      const state = (grid as any)[BUTTON_COLUMN_STATE_ID]\n      const actionState = (grid as any)[COLUMN_ACTION_STATE_ID]\n      grid.getElement().style.cursor =\n        _isTreeNodeSpace(grid, e.col, e.row, e.event) ||\n        (state && state.mouseActive) ||\n        (actionState && actionState.mouseActive)\n          ? 'pointer'\n          : ''\n    }\n\n    const doMouseLeave = (e: any) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      grid.getElement().style.cursor = ''\n    }\n\n    return [\n      // click\n      grid.listen(DG_EVENT_TYPE.CLICK_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (isPromise(grid.getRowRecord(e.row))) {\n          return\n        }\n        if (!_isTreeNodeSpace(grid, e.col, e.row, e.event)) {\n          return\n        }\n        const treeInfo = _getTreeInfo(grid, e.row)\n        if (!treeInfo) {\n          return\n        }\n        const isAll = e.event.shiftKey\n        const type: ToggledType = treeInfo.expanded\n          ? isAll\n            ? 'collapseAll'\n            : 'collapse'\n          : isAll\n          ? 'expandAll'\n          : 'expand'\n        const params = {\n          col: e.col,\n          event: e.event,\n          row: e.row,\n          treeInfo,\n          type,\n        }\n\n        if (this._canToggle && this._canToggle(params) === false) {\n          return\n        }\n        grid.selectCellRange(e.col, e.row, e.col, e.row)\n        toggle(\n          {\n            col: e.col,\n            row: e.row,\n          },\n          isAll\n        )\n        if (this._toggled) {\n          this._toggled(params)\n        }\n        event.cancel(e.event)\n        return false\n      }),\n      // mouse move\n      grid.listen(DG_EVENT_TYPE.MOUSEENTER_CELL, doMouseMove),\n      grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, doMouseMove),\n      grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, doMouseMove),\n      grid.listen(DG_EVENT_TYPE.MOUSELEAVE_CELL, doMouseLeave),\n      grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, doMouseLeave),\n      // key down\n      grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n        const keys = [KEY_DOWN, KEY_ENTER, KEY_LEFT, KEY_RIGHT, KEY_UP]\n        if (\n          keys.indexOf(e.keyCode) === -1 ||\n          (!e.event.ctrlKey && !e.event.metaKey)\n        ) {\n          return\n        }\n        const sel = grid.selection.select\n        const cell = {\n          col: sel.col,\n          row: sel.row,\n        }\n        if (!isTarget(cell.col, cell.row)) {\n          return\n        }\n        if (isPromise(grid.getRowRecord(cell.row))) {\n          return\n        }\n        const treeInfo = _getTreeInfo(grid, cell.row)\n        if (!treeInfo) {\n          return\n        }\n        let type: ToggledType\n        if (e.keyCode === KEY_DOWN || e.keyCode === KEY_RIGHT) {\n          type = e.keyCode === KEY_DOWN ? 'expandAll' : 'expand'\n        } else if (e.keyCode === KEY_UP || e.keyCode === KEY_LEFT) {\n          type = e.keyCode === KEY_UP ? 'collapseAll' : 'collapse'\n        } else {\n          type = treeInfo.expanded\n            ? e.event.shiftKey\n              ? 'collapseAll'\n              : 'collapse'\n            : e.event.shiftKey\n            ? 'expandAll'\n            : 'expand'\n        }\n        const params = {\n          col: cell.col,\n          event: e.event,\n          row: cell.row,\n          treeInfo,\n          type,\n        }\n\n        if (this._canToggle && this._canToggle(params) === false) {\n          return\n        }\n        if (e.keyCode === KEY_DOWN || e.keyCode === KEY_RIGHT) {\n          expand(cell, e.keyCode === KEY_DOWN)\n        } else if (e.keyCode === KEY_UP || e.keyCode === KEY_LEFT) {\n          collapse(cell, e.keyCode === KEY_UP)\n        } else {\n          toggle(cell, e.event.shiftKey)\n        }\n        if (this._toggled) {\n          this._toggled(params)\n        }\n        event.cancel(e.event)\n        return treeInfo.isLeaf // 只有叶子节点允许不阻止后续事件执行\n      }),\n    ]\n  }\n  protected drawEditingInternal(\n    context: CellContext,\n    style: TreeStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    super.drawEditingInternal(context, style, helper, grid, info)\n    const textAlign = style.textAlign\n    const textBaseline = style.textBaseline\n    const color = style.color\n    const treeInfo = _getTreeInfo(grid, context.row)\n    const textOverflow = style.textOverflow\n    const autoWrapText = style.autoWrapText\n    const lineHeight = style.lineHeight\n    const lineClamp = style.lineClamp\n    const record = info.getRecord()\n    const isMultilineText = getOrApply(this.multilineText, record)\n    helper.tree('', context, {\n      color,\n      padding: columnUtils.getActionTextPadding(context, helper, style),\n      textAlign,\n      textBaseline,\n      textOverflow,\n      treeInfo,\n      treeNodeSpace: TREE_NODE_SPACE,\n      isMultilineText,\n      autoWrapText,\n      lineHeight,\n      lineClamp,\n    })\n  }\n}\n","import { CellContext, GridCanvasHelperAPI } from '../../ts-types'\nimport { DrawCellInfo, GridInternal } from '../../ts-types-internal'\nimport { BaseColumn } from './BaseColumn'\nimport { RadioStyle } from '../style/RadioStyle'\nimport { getRadioColumnStateId } from '../../internal/symbolManager'\nimport { isDef } from '../../internal/utils'\nimport { toBoolean } from '../utils'\n\nconst RADIO_COLUMN_STATE_ID = getRadioColumnStateId()\n\nexport class RadioColumn<T> extends BaseColumn<T, boolean> {\n  public get StyleClass(): typeof RadioStyle {\n    return RadioStyle\n  }\n  public clone(): RadioColumn<T> {\n    return new RadioColumn(this)\n  }\n  public convertInternal(value: unknown): boolean {\n    return toBoolean(value)\n  }\n  public drawInternal(\n    value: boolean,\n    context: CellContext,\n    style: RadioStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      checkColor,\n      uncheckBorderColor,\n      checkBorderColor,\n      uncheckBgColor,\n      checkBgColor,\n    } = style\n\n    const { col, row } = context\n    const range = grid.getCellRange(col, row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n    const elapsed = grid[RADIO_COLUMN_STATE_ID]?.elapsed[cellKey]\n\n    const opt: Parameters<GridCanvasHelperAPI['radioButton']>[2] = {\n      textAlign,\n      textBaseline,\n      checkColor,\n      uncheckBorderColor,\n      checkBorderColor,\n      uncheckBgColor,\n      checkBgColor,\n    }\n    if (isDef(elapsed)) {\n      opt.animElapsedTime = elapsed\n    }\n    helper.radioButton(value, context, opt)\n  }\n}\n","import { ColumnTypeOption } from '../ts-types'\nimport { BaseColumn } from './type/BaseColumn'\nimport { BaseCheckColumn } from './type/BaseCheckColumn'\nimport { BranchGraphColumn } from './type/BranchGraphColumn'\nimport { ButtonColumn } from './type/ButtonColumn'\nimport { CheckColumn } from './type/CheckColumn'\nimport { SwitchColumn } from './type/SwitchColumn'\nimport { Column } from './type/Column'\nimport { DateColumn } from './type/DateColumn'\nimport { DrawColumn } from './type/DrawColumn'\nimport { IconColumn } from './type/IconColumn'\nimport { ImageColumn } from './type/ImageColumn'\nimport { LookupColumn } from './type/LookupColumn'\nimport { MenuColumn } from './type/MenuColumn'\nimport { MultilineTextColumn } from './type/MultilineTextColumn'\nimport { NumberColumn } from './type/NumberColumn'\nimport { PercentCompleteBarColumn } from './type/PercentCompleteBarColumn'\nimport { TreeColumn } from './type/TreeColumn'\nimport { RadioColumn } from './type/RadioColumn'\n\nexport const TYPES = {\n  DEFAULT: new Column<any>(),\n  NUMBER: new NumberColumn<any>(),\n  CHECK: new CheckColumn<any>(),\n  RADIO: new RadioColumn<any>(),\n  BUTTON: new ButtonColumn<any>(),\n  IMAGE: new ImageColumn<any>(),\n  MULTILINETEXT: new MultilineTextColumn<any>(),\n  DATE: new DateColumn<any>(),\n  LOOKUP: new LookupColumn<any, any>(),\n  SWITCH: new SwitchColumn<any>(),\n  TREE: new TreeColumn<any>(),\n  DRAW: new DrawColumn<any>(),\n}\n\nexport {\n  BaseColumn,\n  BaseCheckColumn,\n  Column,\n  NumberColumn,\n  CheckColumn,\n  RadioColumn,\n  SwitchColumn,\n  ButtonColumn,\n  ImageColumn,\n  PercentCompleteBarColumn,\n  IconColumn,\n  BranchGraphColumn,\n  MenuColumn,\n  MultilineTextColumn,\n  DateColumn,\n  LookupColumn,\n  TreeColumn,\n  DrawColumn,\n}\n\nexport function of<T>(\n  columnType: ColumnTypeOption | BaseColumn<T, any> | null | undefined\n): BaseColumn<T, any> {\n  if (!columnType) {\n    return TYPES.DEFAULT\n  } else if (typeof columnType === 'string') {\n    const key = columnType.toUpperCase() as keyof typeof TYPES\n    return TYPES[key] || of(null)\n  } else {\n    return columnType\n  }\n}\n","import {\n  ACTIONS,\n  BaseAction,\n  Editor,\n  BaseCheckEditor,\n  BaseInputEditor,\n  BaseActionInput,\n  Action as ColumnAction,\n  CheckEditor,\n  RadioEditor,\n  SwitchEditor,\n  ButtonAction,\n  SmallDialogInputEditor,\n  InlineInputEditor,\n  InlineTextAreaEditor,\n  InlineLookupEditor,\n  InlineMenuEditor,\n  of as actionOf,\n  ImmutableActions,\n} from './columns/action'\nimport {\n  EVENT_TYPE,\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style as ColumnStyle,\n  NumberStyle,\n  CheckStyle,\n  RadioStyle,\n  SwitchStyle,\n  ButtonStyle,\n  ImageStyle,\n  IconStyle,\n  PercentCompleteBarStyle,\n  MultilineTextStyle,\n  MenuStyle,\n  DateStyle,\n  LookupStyle,\n  TreeStyle,\n  DrawStyle,\n  of as styleOf,\n} from './columns/style'\nimport {\n  TYPES,\n  BaseColumn,\n  BaseCheckColumn,\n  Column,\n  NumberColumn,\n  CheckColumn,\n  RadioColumn,\n  SwitchColumn,\n  ButtonColumn,\n  ImageColumn,\n  PercentCompleteBarColumn,\n  IconColumn,\n  BranchGraphColumn,\n  MenuColumn,\n  MultilineTextColumn,\n  DateColumn,\n  LookupColumn,\n  TreeColumn,\n  DrawColumn,\n  of as typeOf,\n} from './columns/type'\n\nconst action = {\n  ACTIONS: ACTIONS as ImmutableActions,\n  BaseAction,\n  Editor,\n  BaseCheckEditor,\n  BaseInputEditor,\n  BaseActionInput,\n  Action: ColumnAction,\n  CheckEditor,\n  RadioEditor,\n  SwitchEditor,\n  ButtonAction,\n  SmallDialogInputEditor,\n  InlineInputEditor,\n  InlineTextAreaEditor,\n  InlineLookupEditor,\n  InlineMenuEditor,\n  of: actionOf,\n}\n\nconst style = {\n  EVENT_TYPE,\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style: ColumnStyle,\n  NumberStyle,\n  CheckStyle,\n  RadioStyle,\n  SwitchStyle,\n  ButtonStyle,\n  ImageStyle,\n  IconStyle,\n  PercentCompleteBarStyle,\n  MultilineTextStyle,\n  MenuStyle,\n  DateStyle,\n  LookupStyle,\n  TreeStyle,\n  DrawStyle,\n  of: styleOf,\n}\n\nconst type = {\n  TYPES,\n  BaseColumn,\n  BaseCheckColumn,\n  Column,\n  NumberColumn,\n  CheckColumn,\n  RadioColumn,\n  SwitchColumn,\n  ButtonColumn,\n  ImageColumn,\n  PercentCompleteBarColumn,\n  IconColumn,\n  BranchGraphColumn,\n  MenuColumn,\n  MultilineTextColumn,\n  DateColumn,\n  LookupColumn,\n  TreeColumn,\n  DrawColumn,\n  of: typeOf,\n}\n\n/**\n * columns\n */\nexport const columns = { action, type, style }\n","import { array } from './utils'\n\nconst TYPE_PUNCTURE = 'p'\nconst TYPE_UNIT = 'u'\nconst TYPE_OPERATOR = 'o'\nconst TYPE_NUMBER = 'n'\n\nconst NODE_TYPE_UNIT = 'u'\nconst NODE_TYPE_BINARY_EXPRESSION = 'b'\nconst NODE_TYPE_NUMBER = 'n'\n\ntype Ops = '-' | '+' | '*' | '/'\ntype PuncToken = {\n  value: string\n  type: typeof TYPE_PUNCTURE\n}\ntype UnitToken = {\n  value: string\n  type: typeof TYPE_UNIT\n}\ntype OpToken = {\n  value: Ops\n  type: typeof TYPE_OPERATOR\n}\ntype NumToken = {\n  value: string\n  type: typeof TYPE_NUMBER\n}\ntype Token = PuncToken | UnitToken | OpToken | NumToken\ntype UnitNode = {\n  nodeType: typeof NODE_TYPE_UNIT\n  unit: string\n  value: number\n}\ntype BinaryNode = {\n  nodeType: typeof NODE_TYPE_BINARY_EXPRESSION\n  left: Node\n  op: OpToken\n  right: Node\n}\ntype NumNode = {\n  nodeType: typeof NODE_TYPE_NUMBER\n  value: number\n}\ntype Node = UnitNode | BinaryNode | NumNode\n\nfunction createError(calc: string): Error {\n  return new Error(`calc parse error: ${calc}`)\n}\n\n/**\n * tokenize\n * @param calc - calc expression\n * @returns tokens\n */\nfunction tokenize(calc: string): Token[] {\n  let exp = calc.replace(/calc\\(/g, '(')\n  const reUnit = /^[-+]?(\\d*\\.\\d+|\\d+)[a-z%]+/i\n  const reNum = /^[-+]?(\\d*\\.\\d+|\\d+)/i\n  const reOp = /^[-+*/]/\n\n  const tokens: Token[] = []\n  let re\n  while ((exp = exp.trim())) {\n    if (exp[0] === '(' || exp[0] === ')') {\n      tokens.push({ value: exp[0], type: TYPE_PUNCTURE })\n      exp = exp.slice(1)\n    } else if ((re = reUnit.exec(exp))) {\n      tokens.push({ value: re[0], type: TYPE_UNIT })\n      exp = exp.slice(re[0].length)\n    } else if ((re = reNum.exec(exp))) {\n      tokens.push({ value: re[0], type: TYPE_NUMBER })\n      exp = exp.slice(re[0].length)\n    } else if ((re = reOp.exec(exp))) {\n      tokens.push({\n        value: re[0] as Ops,\n        type: TYPE_OPERATOR,\n      })\n      exp = exp.slice(re[0].length)\n    } else {\n      throw createError(calc)\n    }\n  }\n  return tokens\n}\n\nconst PRECEDENCE = {\n  '*': 3,\n  '/': 3,\n  '+': 2,\n  '-': 2,\n}\n\nfunction lex(tokens: Token[], calc: string): Node {\n  function buildBinaryExpNode(stack: (Node | OpToken)[]): BinaryNode {\n    const right = stack.pop() as Node\n    const op = stack.pop() as OpToken\n    const left = stack.pop() as Node\n\n    if (\n      !left ||\n      !left.nodeType ||\n      !op ||\n      op.type !== TYPE_OPERATOR ||\n      !right ||\n      !right.nodeType\n    ) {\n      throw createError(calc)\n    }\n    return {\n      nodeType: NODE_TYPE_BINARY_EXPRESSION,\n      left,\n      op,\n      right,\n    }\n  }\n\n  const stack: (Node | OpToken)[] = []\n\n  while (tokens.length) {\n    const token = tokens.shift() as Token\n    if (token.type === TYPE_PUNCTURE && token.value === '(') {\n      let deep = 0\n      const closeIndex = array.findIndex(tokens, (t) => {\n        if (t.type === TYPE_PUNCTURE && t.value === '(') {\n          deep++\n        } else if (t.type === TYPE_PUNCTURE && t.value === ')') {\n          if (!deep) {\n            return true\n          }\n          deep--\n        }\n        return false\n      })\n      if (closeIndex === -1) {\n        throw createError(calc)\n      }\n      stack.push(lex(tokens.slice(0, closeIndex), calc))\n      tokens.splice(0, closeIndex + 1)\n    } else if (token.type === TYPE_OPERATOR) {\n      if (stack.length >= 3) {\n        const beforeOp = (stack[stack.length - 2] as OpToken).value\n        if (PRECEDENCE[token.value] <= PRECEDENCE[beforeOp]) {\n          stack.push(buildBinaryExpNode(stack))\n        }\n      }\n      stack.push(token)\n    } else if (token.type === TYPE_UNIT) {\n      const { value } = token\n      const num = parseFloat(value)\n      const unit = /[a-z%]+/i.exec(value)?.[0] || ''\n      stack.push({\n        nodeType: NODE_TYPE_UNIT,\n        value: num,\n        unit,\n      })\n    } else if (token.type === TYPE_NUMBER) {\n      stack.push({\n        nodeType: NODE_TYPE_NUMBER,\n        value: parseFloat(token.value),\n      })\n    }\n  }\n  while (stack.length > 1) {\n    stack.push(buildBinaryExpNode(stack))\n  }\n  return stack[0] as Node\n}\n\nfunction parse(calcStr: string): Node {\n  const tokens = tokenize(calcStr)\n  return lex(tokens, calcStr)\n}\n\nfunction calcNode(node: Node, context: CalcContext): number {\n  if (node.nodeType === NODE_TYPE_BINARY_EXPRESSION) {\n    const left = calcNode(node.left, context)\n    const right = calcNode(node.right, context)\n\n    switch (node.op.value) {\n      case '+':\n        return left + right\n      case '-':\n        return left - right\n      case '*':\n        return left * right\n      case '/':\n        return left / right\n      default:\n        throw new Error(`calc error. unknown operator: ${node.op.value}`)\n    }\n  } else if (node.nodeType === NODE_TYPE_UNIT) {\n    switch (node.unit) {\n      case '%':\n        return (node.value * context.full) / 100\n      case 'em':\n        return node.value * context.em\n      case 'px':\n        return node.value\n      default:\n        throw new Error(`calc error. unknown unit: ${node.unit}`)\n    }\n  } else if (node.nodeType === NODE_TYPE_NUMBER) {\n    return node.value\n  }\n  throw new Error('calc error.')\n}\n\nfunction toPxInternal(value: string, context: CalcContext): number {\n  const ast = parse(value)\n  return calcNode(ast, context)\n}\n\ntype CalcContext = {\n  full: number\n  em: number\n}\n\nexport function toPx(value: string | number, context: CalcContext): number {\n  if (typeof value === 'string') {\n    return toPxInternal(value.trim(), context)\n  }\n  return value - 0\n}\n","import { EventHandler } from './EventHandler'\nimport { isNode } from './utils'\n\nconst handler = new EventHandler()\n\nlet ratio: number\n\nfunction setRatio() {\n  if (isNode) {\n    ratio = 1\n  } else {\n    ratio = Math.ceil(window.devicePixelRatio || 1)\n    if (ratio > 1 && ratio % 2 !== 0) {\n      ratio += 1\n    }\n  }\n}\n\nsetRatio()\n\nif (!isNode) {\n  handler.on(window, 'resize', setRatio)\n}\n\nexport default {\n  transform(canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext('2d')\n\n    const getAttribute = canvas.getAttribute\n    const setAttribute = canvas.setAttribute\n    canvas.getAttribute = ((me) => (name: string) => {\n      let result = getAttribute.apply(me, [name]) as any\n      if (name === 'width' || name === 'height') {\n        result /= ratio\n      }\n      return result\n    })(canvas)\n    canvas.setAttribute = ((me) => (name: string, val: string) => {\n      const wh = name === 'width' || name === 'height'\n      if (wh) {\n        val = ratio * Number(val) + ''\n      }\n      const result = setAttribute.apply(me, [name, val])\n      if (wh && ctx) {\n        ctx.scale(ratio, ratio)\n      }\n      return result\n    })(canvas)\n\n    Object.defineProperty(canvas, 'width', {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return canvas.getAttribute('width')\n      },\n      set: (val) => {\n        canvas.setAttribute('width', Math.floor(val) + '')\n      },\n    })\n    Object.defineProperty(canvas, 'height', {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return canvas.getAttribute('height')\n      },\n      set: (val) => {\n        canvas.setAttribute('height', Math.floor(val) + '')\n      },\n    })\n    if (ctx) {\n      const drawImage = ctx.drawImage\n      ctx.drawImage = ((me) => (img: HTMLCanvasElement, ...args: any[]) => {\n        if (img !== canvas || ratio === 1) {\n          return drawImage.apply(me, [img].concat(args) as any)\n        }\n        me.save()\n        try {\n          me.scale(1 / ratio, 1 / ratio)\n          if (args.length > 4) {\n            args[4] *= ratio\n            args[5] *= ratio\n          } else {\n            args[0] *= ratio\n            args[1] *= ratio\n          }\n          return drawImage.apply(me, [img].concat(args) as any)\n        } finally {\n          me.restore()\n        }\n      })(ctx)\n    }\n    return canvas\n  },\n}\n","const indexFirst = (ary: number[], elm: number) => {\n  let low = 0\n  let high = ary.length - 1\n  while (low <= high) {\n    const i = Math.floor((low + high) / 2)\n    if (ary[i] === elm) {\n      return i\n    } else if (ary[i] > elm) {\n      high = i - 1\n    } else {\n      low = i + 1\n    }\n  }\n  return high < 0 ? 0 : high\n}\n\nexport default class NumberMap<T> {\n  private _keys: number[]\n  private _vals: { [key: number]: T }\n  private _sorted: boolean\n  public constructor() {\n    this._keys = []\n    this._vals = {}\n    this._sorted = false\n  }\n  public put(key: number, value: T) {\n    if (!(key in this._vals)) {\n      this._keys.push(key)\n      this._sorted = false\n    }\n    this._vals[key] = value\n  }\n  public get(key: number) {\n    return this._vals[key]\n  }\n  public has(key: number) {\n    return this._vals[key] !== null\n  }\n  public each(\n    keyFrom: number,\n    keyTo: number,\n    fn: (value: T, key: number) => void\n  ) {\n    const keys = this._keys\n    const length = keys.length\n    if (!this._sorted) {\n      keys.sort((a, b) => {\n        if (a < b) {\n          return -1\n        }\n        if (a > b) {\n          return 1\n        }\n        return 0\n      })\n      this._sorted = true\n    }\n\n    for (let i = indexFirst(keys, keyFrom); i < length; i++) {\n      const key = keys[i]\n      if (keyFrom <= key && key <= keyTo) {\n        fn(this.get(key), key)\n      } else if (keyTo < key) {\n        return\n      }\n    }\n  }\n}\n","import { ScrollableAPI } from '../ts-types'\nimport { EventHandler } from './EventHandler'\nimport style from './style'\nimport { browser, event } from './utils'\n\nconst MAX_SCROLL = browser.heightLimit - 1000\n\nexport default class Scrollbar implements ScrollableAPI {\n  private _handler: EventHandler\n  private _scrollable: HTMLDivElement\n  private _height: number\n  private _width: number\n  private _endPointElement: HTMLDivElement\n  private _p: number\n  private _perfectScrollbar: any\n  public constructor() {\n    this._handler = new EventHandler()\n\n    this._scrollable = document.createElement('div')\n    this._scrollable.classList.add('grid-scrollable')\n    this._height = 0\n    this._width = 0\n\n    this._perfectScrollbar = new (window as any).PerfectScrollbar(\n      this._scrollable,\n      {\n        minScrollbarLength: 24,\n      }\n    )\n    this._handler.on(this._scrollable, 'click', (e) => {\n      if (e.target !== this._scrollable) {\n        event.cancel(e)\n      }\n    })\n\n    this._p = 1\n\n    this._endPointElement = document.createElement('div')\n    this._endPointElement.classList.add('grid-scroll-end-point')\n    this._update()\n    this._scrollable.appendChild(this._endPointElement)\n  }\n  public calcTop(top: number) {\n    const relativeTop = top - this.scrollTop\n    return this._scrollable.scrollTop + relativeTop\n  }\n  public getElement() {\n    return this._scrollable\n  }\n  public setScrollSize(width: number, height: number) {\n    this._width = width\n    this._height = height\n    this._update()\n  }\n  public get scrollWidth() {\n    return this._width\n  }\n  public set scrollWidth(width: number) {\n    this._width = width\n    this._update()\n  }\n  public get scrollHeight() {\n    return this._height\n  }\n  public set scrollHeight(height: number) {\n    this._height = height\n    this._update()\n  }\n  public get scrollLeft() {\n    return Math.max(Math.ceil(this._scrollable.scrollLeft), 0)\n  }\n  public set scrollLeft(scrollLeft: number) {\n    this._scrollable.scrollLeft = scrollLeft\n  }\n  public get scrollTop() {\n    return Math.max(Math.ceil(this._scrollable.scrollTop / this._p), 0)\n  }\n  public set scrollTop(scrollTop: number) {\n    this._scrollable.scrollTop = scrollTop * this._p\n  }\n  public onScroll(fn: EventListener) {\n    this._handler.on(this._scrollable, 'scroll', fn)\n  }\n  public dispose() {\n    this._handler.dispose()\n  }\n  public update() {\n    this._update()\n  }\n  private _update() {\n    let domHeight\n    if (this._height > MAX_SCROLL) {\n      const sbSize = style.getScrollBarSize()\n      const { offsetHeight } = this._scrollable\n      const vScrollRange = MAX_SCROLL - offsetHeight + sbSize\n      const rScrollRange = this._height - offsetHeight + sbSize\n      this._p = vScrollRange / rScrollRange\n      domHeight = MAX_SCROLL\n    } else {\n      this._p = 1\n      domHeight = this._height\n    }\n    domHeight -= 1\n    const domWidth = this._width - 1\n\n    this._endPointElement.style.top = `${domHeight.toFixed()}px`\n    this._endPointElement.style.left = `${domWidth.toFixed()}px`\n\n    this._perfectScrollbar.update()\n  }\n}\n","import { ScrollableAPI } from '../ts-types'\nimport { EventHandler } from './EventHandler'\nimport style from './style'\nimport { browser } from './utils'\n\nconst MAX_SCROLL = browser.heightLimit - 1000\n\nexport default class Scrollable implements ScrollableAPI {\n  private _handler: EventHandler\n  private _scrollable: HTMLDivElement\n  private _height: number\n  private _width: number\n  private _endPointElement: HTMLDivElement\n  private _p: number\n  private _canvas: HTMLCanvasElement\n  public constructor(canvas: HTMLCanvasElement) {\n    this._canvas = canvas\n    this._handler = new EventHandler()\n\n    this._scrollable = document.createElement('div')\n    this._scrollable.classList.add('grid-scrollable')\n    this._height = 0\n    this._width = 0\n\n    this._p = 1\n\n    this._endPointElement = document.createElement('div')\n    this._endPointElement.classList.add('grid-scroll-end-point')\n    this._update()\n    this._scrollable.appendChild(this._endPointElement)\n\n    // const mousewheelevt = (/Firefox/i.test(navigator.userAgent)) ?\n    //     \"DOMMouseScroll\" : \"mousewheel\"; // FF doesn\"t recognize mousewheel as of FF3.x\n    // this._handler.on(this._scrollable, mousewheelevt, (evt) => {\n    //     const delta = evt.detail ? evt.detail * (-120) : evt.wheelDelta;\n    //     const point = Math.min(Math.abs(delta) / 12, this.scrollHeight / 5);\n    //     this.scrollTop += delta < 0 ? point : -point;\n    // });\n  }\n  public calcTop(top: number) {\n    const relativeTop = top - this.scrollTop\n    return this._scrollable.scrollTop + relativeTop\n  }\n  public getElement() {\n    return this._scrollable\n  }\n  public setScrollSize(width: number, height: number) {\n    this._width = width\n    this._height = height\n    this._update()\n  }\n  public get scrollWidth() {\n    return this._width\n  }\n  public set scrollWidth(width: number) {\n    this._width = width\n    this._update()\n  }\n  public get scrollHeight() {\n    return this._height\n  }\n  public set scrollHeight(height: number) {\n    this._height = height\n    this._update()\n  }\n  public get scrollLeft() {\n    return Math.max(Math.ceil(this._scrollable.scrollLeft), 0)\n  }\n  public set scrollLeft(scrollLeft: number) {\n    this._scrollable.scrollLeft = scrollLeft\n  }\n  public get scrollTop() {\n    return Math.max(Math.ceil(this._scrollable.scrollTop / this._p), 0)\n  }\n  public set scrollTop(scrollTop: number) {\n    this._scrollable.scrollTop = scrollTop * this._p\n  }\n  public onScroll(fn: EventListener) {\n    this._handler.on(this._scrollable, 'scroll', fn)\n  }\n  public dispose() {\n    this._handler.dispose()\n  }\n  public update() {\n    this._update()\n  }\n  private _update() {\n    let domHeight\n    const sbSize = style.getScrollBarSize()\n    if (this._height > MAX_SCROLL) {\n      const offsetHeight = this._scrollable.offsetHeight\n      const vScrollRange = MAX_SCROLL - offsetHeight + sbSize\n      const rScrollRange = this._height - offsetHeight + sbSize\n      this._p = vScrollRange / rScrollRange\n      domHeight = MAX_SCROLL\n    } else {\n      this._p = 1\n      domHeight = this._height\n    }\n    const domWidth = this._width\n\n    // TODO: windows 下横纵滚动条都存在时，显示多余空白问题\n    // const isWindows = /windows|win32/i.test(window.navigator.userAgent);\n    const top = domHeight > this._canvas.height ? domHeight : domHeight - sbSize\n    const left = domWidth > this._canvas.width ? domWidth : domWidth - sbSize\n\n    this._endPointElement.style.top = `${top.toFixed()}px`\n    this._endPointElement.style.left = `${left.toFixed()}px`\n\n    // 不让滚动条位置超出范围\n    const maxScrollTop = Math.max(0, top - this._canvas.height)\n    if (this._scrollable.scrollTop > maxScrollTop) {\n      this._scrollable.scrollTop = maxScrollTop\n    }\n    const maxScrollLeft = Math.max(0, left - this._canvas.width)\n    if (this._scrollable.scrollLeft > maxScrollLeft) {\n      this._scrollable.scrollLeft = maxScrollLeft\n    }\n  }\n}\n","import { EventHandler } from '../../internal/EventHandler'\nimport { event } from '../../internal/utils'\nimport { DrawGrid } from '../DrawGrid'\n\n/**\n * managing mouse down moving\n */\nexport abstract class BaseMouseDownMover {\n  private _handler: EventHandler\n  private _events: any\n  private _started: boolean\n  private _moved: boolean\n  private _grid: DrawGrid\n  private _mouseEndPoint: { x: number; y: number } | null\n  public constructor(grid: DrawGrid) {\n    this._grid = grid\n    this._handler = new EventHandler()\n    this._events = {}\n    this._started = false\n    this._moved = false\n    this._mouseEndPoint = null\n  }\n  public get grid() {\n    return this._grid\n  }\n  public moving(e: Event) {\n    return !!this._started\n  }\n  public lastMoving(e: Event) {\n    // 必要的控制以防止点击事件在mouseup后立即作出反应\n    if (this.moving(e)) {\n      return true\n    }\n    const last = this._mouseEndPoint\n    if (!last) {\n      return false\n    }\n    const pt = this._grid._getMouseAbstractPoint(e)\n    return !!pt && pt.x === last.x && pt.y === last.y\n  }\n  public dispose() {\n    this._handler.dispose()\n  }\n  protected _bindMoveAndUp(e: Event) {\n    const events = this._events\n    const handler = this._handler\n    if (!event.isTouchEvent(e)) {\n      events.mousemove = handler.on(document.body, 'mousemove', (event) =>\n        this._mouseMove(event)\n      )\n      events.mouseup = handler.on(document.body, 'mouseup', (event) =>\n        this._mouseUp(event)\n      )\n    } else {\n      events.touchmove = handler.on(\n        document.body,\n        'touchmove',\n        (event) => this._mouseMove(event),\n        {\n          passive: false,\n        }\n      )\n      events.touchend = handler.on(document.body, 'touchend', (event) =>\n        this._mouseUp(event)\n      )\n      events.touchcancel = handler.on(document.body, 'touchcancel', (event) =>\n        this._mouseUp(event)\n      )\n    }\n    this._started = true\n    this._moved = false\n  }\n  protected _mouseMove(e: Event) {\n    if (!event.isTouchEvent(e)) {\n      if (event.getMouseButtons(e as MouseEvent) !== 1) {\n        this._mouseUp(e)\n        return\n      }\n    }\n    this._moved =\n      this._moveInternal(e) || this._moved /* calculation on after */\n\n    event.cancel(e)\n  }\n  protected abstract _moveInternal(e: Event): boolean\n  protected _mouseUp(e: Event) {\n    const events = this._events\n    const handler = this._handler\n    handler.off(events.mousemove)\n    handler.off(events.touchmove)\n    handler.off(events.mouseup)\n    handler.off(events.touchend)\n    // handler.off(events.mouseleave);\n    handler.off(events.touchcancel)\n\n    this._upInternal(e)\n\n    // 必要的控制以防止点击事件在mouseup后立即作出反应\n    if (this._moved) {\n      // 如果发生了移动\n      this._mouseEndPoint = this._grid._getMouseAbstractPoint(e)\n      setTimeout(() => {\n        this._mouseEndPoint = null\n        this._started = false\n      }, 10)\n    } else {\n      this._started = false\n    }\n\n    event.cancel(e)\n  }\n  protected _upInternal(e: Event) {\n    // nothing\n  }\n  protected _vibrate(e: Event) {\n    if (navigator.vibrate && event.isTouchEvent(e)) {\n      navigator.vibrate(50)\n    }\n  }\n}\n","import { CellAddress } from '../../ts-types'\nimport { event } from '../../internal/utils'\nimport { BaseMouseDownMover } from './BaseMouseDownMover'\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\n\n/**\n * managing cell selection operation with mouse\n */\nexport class CellSelector extends BaseMouseDownMover {\n  private _cell: CellAddress = { col: -1, row: -1 }\n  public start(e: MouseEvent | TouchEvent) {\n    const cell = this._getTargetCell(e)\n    if (!cell) {\n      this.grid._forceFocusCell()\n      event.cancel(e)\n      return\n    }\n    this.grid.fireListeners(DG_EVENT_TYPE.MOUSE_SELECTED_START, e)\n    this.grid._moveFocusCell(cell.col, cell.row, e.shiftKey)\n\n    this._bindMoveAndUp(e)\n\n    this._cell = cell\n\n    event.cancel(e)\n    this._vibrate(e)\n  }\n  public select(e: MouseEvent | TouchEvent) {\n    const cell = this._getTargetCell(e)\n    if (!cell) {\n      return\n    }\n    this.grid._moveFocusCell(cell.col, cell.row, e.shiftKey)\n    this._cell = cell\n  }\n  protected _upInternal(e: MouseEvent | TouchEvent) {\n    this.grid.fireListeners(DG_EVENT_TYPE.MOUSE_SELECTED_END, e)\n  }\n  protected _moveInternal(e: Event) {\n    const cell = this._getTargetCell(e)\n    if (!cell) {\n      return false\n    }\n    const oldCol = this._cell.col\n    const oldRow = this._cell.row\n    const newCol = cell.col\n    const newRow = cell.row\n    if (oldCol === newCol && oldRow === newRow) {\n      return false\n    }\n    const grid = this.grid\n    grid._moveFocusCell(newCol, newRow, true, true)\n\n    // make visible\n    const makeVisibleCol = (() => {\n      if (newCol < oldCol && 0 < newCol) {\n        // move left\n        return newCol - 1\n      } else if (oldCol < newCol && newCol + 1 < grid.colCount) {\n        // move right\n        return newCol + 1\n      }\n      return newCol\n    })()\n    const makeVisibleRow = (() => {\n      if (newRow < oldRow && 0 < newRow) {\n        // move up\n        return newRow - 1\n      } else if (oldRow < newRow && newRow + 1 < grid.rowCount) {\n        // move down\n        return newRow + 1\n      }\n      return newRow\n    })()\n    if (makeVisibleCol !== newCol || makeVisibleRow !== newRow) {\n      grid.makeVisibleCell(makeVisibleCol, makeVisibleRow)\n    }\n    this._cell = cell\n    return true\n  }\n  private _getTargetCell(e: Event) {\n    const grid = this.grid\n    const abstractPos = grid._getMouseAbstractPoint(e)\n    if (!abstractPos) {\n      return null\n    }\n    const cell = grid.getCellAt(abstractPos.x, abstractPos.y)\n    if (cell.col < 0 || cell.row < 0) {\n      return null\n    }\n    return cell\n  }\n}\n","import { event } from '../../internal/utils'\nimport { DrawGrid } from '../DrawGrid'\nimport { BaseMouseDownMover } from './BaseMouseDownMover'\n\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\n\n/**\n * managing row width changing operation with mouse\n */\nexport class ColumnResizer extends BaseMouseDownMover {\n  private _targetCol: number\n  private _x: number\n  private _preX: number\n  private _invalidateAbsoluteLeft: number\n  public constructor(grid: DrawGrid) {\n    super(grid)\n    this._targetCol = -1\n    this._x = 0\n    this._preX = 0\n    this._invalidateAbsoluteLeft = 0\n  }\n  public start(col: number, e: Event) {\n    let pageX\n    if (!event.isTouchEvent(e)) {\n      ;({ pageX } = e as MouseEvent)\n    } else {\n      ;({ pageX } = (e as TouchEvent).changedTouches[0])\n    }\n\n    this._x = pageX\n    this._preX = 0\n\n    this.grid._resetColWidthOffset(col)\n    this._bindMoveAndUp(e)\n\n    this._targetCol = col\n    // 由于有合并单元格，所以起始刷新列始终从 0 开始计算\n    // this._invalidateAbsoluteLeft = this.grid._getColsWidth(0, col - 1)\n\n    event.cancel(e)\n    this._vibrate(e)\n  }\n  protected _moveInternal(e: Event) {\n    const pageX = event.isTouchEvent(e)\n      ? (e as TouchEvent).changedTouches[0].pageX\n      : (e as MouseEvent).pageX\n\n    const x = pageX - this._x\n    const moveX = x - this._preX\n    this._preX = x\n    const pre = this.grid.getColWidth(this._targetCol)\n    let afterSize = this.grid._adjustColWidth(this._targetCol, pre + moveX)\n    if (afterSize < 10 && moveX < 0) {\n      afterSize = 10\n    }\n    this.grid._storeAutoColWidthExprs()\n    this.grid.setColWidth(this._targetCol, afterSize)\n\n    const rect = this.grid._getVisibleRect()\n    rect.left = this._invalidateAbsoluteLeft\n    this.grid._invalidateRect(rect)\n\n    this.grid.fireListeners(DG_EVENT_TYPE.RESIZE_COLUMN, {\n      col: this._targetCol,\n    })\n\n    return true\n  }\n  protected _upInternal(e: Event) {\n    if (this.grid.updateScroll()) {\n      this.grid.invalidate()\n    }\n  }\n}\n","import Rect from '../../internal/Rect'\nimport { DrawLayers } from '../draw-grid/DrawLayers'\nimport { DrawGrid } from '../DrawGrid'\nimport { Selection } from './Selection'\nimport { CellRange, CellContext, CellSelection } from '../../ts-types'\n\nexport function createCellRange(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number\n): CellRange {\n  return {\n    start: { col: startCol, row: startRow },\n    end: { col: endCol, row: endRow },\n  }\n}\n\n/**\n * Context of cell drawing\n */\nexport class DrawCellContext implements CellContext {\n  private _col: number\n  private _row: number\n  private _mode: number\n  private _range: CellRange\n  private _ctx: CanvasRenderingContext2D | null\n  private _rect: Rect | null\n  private _drawRect: Rect | null\n  private _drawing: boolean\n  private _selection: Selection\n  private _drawLayers: DrawLayers\n  private _childContexts: DrawCellContext[]\n  private _cancel?: boolean\n  private _grid?: DrawGrid\n  private _onTerminate?: () => void\n  private _rectFilter: ((base: Rect) => Rect) | null = null\n  /**\n   * constructor\n   */\n  public constructor(\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D,\n    rect: Rect,\n    drawRect: Rect | null,\n    drawing: boolean,\n    selection: Selection,\n    drawLayers: DrawLayers\n  ) {\n    this._col = col\n    this._row = row\n    this._mode = 0\n    this._range = createCellRange(col, row, col, row)\n    this._ctx = ctx\n    this._rect = rect\n    this._drawRect = drawRect\n    this._drawing = drawing\n    this._selection = selection\n    this._drawLayers = drawLayers\n    this._childContexts = []\n  }\n  public get drawing() {\n    if (this._mode === 0) {\n      return this._drawing\n    } else {\n      return true\n    }\n  }\n  public get row() {\n    return this._row\n  }\n  public get col() {\n    return this._col\n  }\n  public get range() {\n    return this._range\n  }\n  public set range(range) {\n    this._range = range\n  }\n  public cancel() {\n    this._cancel = true\n    this._childContexts.forEach((ctx) => {\n      ctx.cancel()\n    })\n  }\n  /**\n   * select status.\n   */\n  public getSelection(): CellSelection {\n    return {\n      border: this._selection.border(this._col, this._row),\n      dragged: this._selection.drag.inDrag(this._col, this._row),\n      select: this._selection.drag.select,\n      range: this._selection.range,\n    }\n  }\n  /**\n   * Canvas context.\n   */\n  public getContext(): CanvasRenderingContext2D {\n    if (this._mode === 0) {\n      return this._ctx as CanvasRenderingContext2D\n    } else {\n      return (this._grid as DrawGrid)._getInitContext()\n    }\n  }\n  /**\n   * Rectangle of cell.\n   */\n  public getRect(): Rect {\n    const rectFilter = this._rectFilter\n    return rectFilter\n      ? rectFilter(this._getRectInternal())\n      : this._getRectInternal()\n  }\n  public setRectFilter(rectFilter: (base: Rect) => Rect): void {\n    this._rectFilter = rectFilter\n  }\n  /**\n   * Rectangle of Drawing range.\n   */\n  public getDrawRect(): Rect | null {\n    if (this._cancel) {\n      return null\n    }\n    if (this._mode === 0) {\n      return this._drawRect\n    } else {\n      if (this._isOutOfRange()) {\n        return null\n      }\n      const absoluteRect = (this._grid as DrawGrid).getCellRect(\n        this._col,\n        this._row\n      )\n      return this._toRelativeDrawRect(absoluteRect)\n    }\n  }\n  /**\n   * get Context of current state\n   */\n  public toCurrentContext(): DrawCellContext {\n    if (this._mode === 0) {\n      return this\n    } else {\n      const absoluteRect = (this._grid as DrawGrid).getCellRect(\n        this._col,\n        this._row\n      )\n      const rect = (this._grid as DrawGrid)._toRelativeRect(absoluteRect)\n      const drawRect = this._isOutOfRange()\n        ? null\n        : this._toRelativeDrawRect(absoluteRect)\n      const context = new DrawCellContext(\n        this._col,\n        this._row,\n        this.getContext(),\n        rect,\n        drawRect,\n        this.drawing,\n        this._selection,\n        this._drawLayers\n      )\n      // toCurrentContext 调用 this.toCurrentContext\n      context.toCurrentContext = this.toCurrentContext.bind(this)\n      this._childContexts.push(context)\n      if (this._cancel) {\n        context.cancel()\n      }\n      context._rectFilter = this._rectFilter\n      return context\n    }\n  }\n  public addLayerDraw(\n    level: number,\n    fn: (ctx: CanvasRenderingContext2D) => void\n  ) {\n    this._drawLayers.addDraw(level, fn)\n  }\n  public _delayMode(grid: DrawGrid, onTerminate: () => void) {\n    this._mode = 1\n    this._ctx = null\n    this._rect = null\n    this._drawRect = null\n    this._grid = grid\n    this._onTerminate = onTerminate\n  }\n  /**\n   * terminate\n   */\n  public terminate(): void {\n    if (this._mode !== 0) {\n      this._onTerminate?.()\n    }\n  }\n  private _getRectInternal(): Rect {\n    if (this._mode === 0) {\n      return this._rect as Rect\n    } else {\n      if (this._rect) {\n        return this._rect\n      }\n      return (this._grid as DrawGrid).getCellRelativeRect(this._col, this._row)\n    }\n  }\n  private _isOutOfRange(): boolean {\n    const { colCount, rowCount } = this._grid as DrawGrid\n    return colCount <= this._col || rowCount <= this._row\n  }\n  private _toRelativeDrawRect(absoluteRect: Rect): Rect | null {\n    const grid = this._grid as DrawGrid\n    const visibleRect = grid._getVisibleRect()\n    let rect = absoluteRect.copy()\n    if (!rect.intersection(visibleRect)) {\n      return null\n    }\n\n    const isFrozenCell = grid.isFrozenCell(this._col, this._row)\n    if (grid.frozenColCount >= 0 && (!isFrozenCell || !isFrozenCell.col)) {\n      const fRect = grid.getCellRect(grid.frozenColCount - 1, this._row)\n      rect = Rect.bounds(\n        Math.max(rect.left, fRect.right),\n        rect.top,\n        rect.right,\n        rect.bottom\n      )\n    }\n    if (grid.frozenRowCount >= 0 && (!isFrozenCell || !isFrozenCell.row)) {\n      const fRect = grid.getCellRect(this._col, grid.frozenRowCount - 1)\n      rect = Rect.bounds(\n        rect.left,\n        Math.max(rect.top, fRect.bottom),\n        rect.right,\n        rect.bottom\n      )\n    }\n\n    if (!rect.intersection(visibleRect)) {\n      return null\n    }\n    rect.offsetLeft(-visibleRect.left)\n    rect.offsetTop(-visibleRect.top)\n\n    return rect\n  }\n}\n","export class DrawLayer {\n  private _level: number\n  private _list: ((ctx: CanvasRenderingContext2D) => void)[]\n  public constructor(level: number) {\n    this._level = level\n    this._list = []\n  }\n  public get level() {\n    return this._level\n  }\n  public addDraw(fn: (ctx: CanvasRenderingContext2D) => void) {\n    this._list.push(fn)\n  }\n  public draw(ctx: CanvasRenderingContext2D) {\n    this._list.forEach((fn) => {\n      ctx.save()\n      try {\n        fn(ctx)\n      } finally {\n        ctx.restore()\n      }\n    })\n  }\n}\n","import { DrawLayer } from './DrawLayer'\n\n/**\n * This class manages the drawing process for each layer\n */\nexport class DrawLayers {\n  private _layers: {\n    [key: number]: DrawLayer\n  }\n  public constructor() {\n    this._layers = {}\n  }\n  public addDraw(level: number, fn: (ctx: CanvasRenderingContext2D) => void) {\n    const l =\n      this._layers[level] || (this._layers[level] = new DrawLayer(level))\n    l.addDraw(fn)\n  }\n  public draw(ctx: CanvasRenderingContext2D) {\n    const list = []\n    for (const k in this._layers) {\n      if (this._layers.hasOwnProperty(k)) {\n        list.push(this._layers[k])\n      }\n    }\n    list.sort((a, b) => a.level - b.level)\n    list.forEach((l) => l.draw(ctx))\n  }\n}\n","import {\n  ScrollableAPI,\n  KeyboardEventListener,\n  KeydownEvent,\n  EventListenerId,\n} from '../../ts-types'\nimport {\n  KEY_TAB,\n  KEY_ALPHA_C,\n  KEY_ALPHA_V,\n  KEY_DOWN,\n  KEY_END,\n  KEY_HOME,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n  KEY_ENTER,\n  KEY_ALPHA_A,\n  KEY_DEL,\n  KEY_BS,\n} from '../../core/draw-grid/KEY_CODE'\nimport { EventHandler } from '../../internal/EventHandler'\nimport Rect from '../../internal/Rect'\nimport style from '../../internal/style'\nimport {\n  event,\n  browser,\n  isDescendantElement,\n  isDef,\n  array,\n} from '../../internal/utils'\nimport { DrawGrid } from '../DrawGrid'\nimport { EventTarget } from '../EventTarget'\n\nfunction _setSafeInputValue(input: HTMLInputElement, value: string) {\n  const type = input.type\n  input.type = ''\n  input.value = value\n  if (type) {\n    input.type = type\n  }\n}\n\n/**\n * Manage focus\n */\nexport class FocusControl extends EventTarget {\n  private _grid: DrawGrid\n  private _scrollable: ScrollableAPI\n  private _handler: EventHandler\n  private _input: HTMLInputElement\n  private _isComposition: boolean = false\n  private _compositionEnd: NodeJS.Timeout | undefined\n  private _inputStatus?: { [key: string]: string }\n  private _keyDownMoveCallback?: KeyboardEventListener\n  public constructor(\n    grid: DrawGrid,\n    parentElement: HTMLElement,\n    scrollable: ScrollableAPI\n  ) {\n    super()\n    this._grid = grid\n    this._scrollable = scrollable\n    const handler = (this._handler = new EventHandler())\n    const input = (this._input = document.createElement('input'))\n    input.classList.add('grid-focus-control')\n    input.readOnly = true\n    parentElement.appendChild(input)\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n      input.style.font = grid.font || '16px sans-serif'\n      this._isComposition = true\n      if (this._compositionEnd) {\n        clearTimeout(this._compositionEnd)\n        delete this._compositionEnd\n      }\n      grid.focus()\n    })\n    let lastInputValue: any\n    const inputClear = () => {\n      lastInputValue = input.value\n      if (this._isComposition) {\n        return\n      }\n      if (lastInputValue !== '') {\n        _setSafeInputValue(input, '')\n      }\n    }\n\n    const handleCompositionEnd = () => {\n      this._isComposition = false\n      input.classList.remove('composition')\n      input.style.font = ''\n      const value = input.value\n\n      inputClear()\n\n      if (!input.readOnly) {\n        this.fireListeners('input', value)\n      }\n\n      if (this._compositionEnd) {\n        clearTimeout(this._compositionEnd)\n        delete this._compositionEnd\n      }\n    }\n    handler.on(input, 'compositionend', (e) => {\n      this._compositionEnd = setTimeout(handleCompositionEnd, 0)\n    })\n    handler.on(input, 'keypress', (e) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!input.readOnly && e.key && e.key.length === 1) {\n        if (e.ctrlKey || e.metaKey) {\n          if (e.key === 'c') {\n            // copy! for Firefox & Safari\n          } else if (e.key === 'v') {\n            // paste! for Firefox & Safari\n          } else if (e.key === 'x') {\n            // cut! for Firefox & Safari\n          }\n        } else {\n          if (e.key === ' ') {\n            // Since the full-width space cannot be determined, it is processed by \"input\".\n            return\n          }\n          this.fireListeners('input', e.key)\n          event.cancel(e)\n        }\n      }\n      inputClear()\n    })\n    handler.on(input, 'keydown', (e) => {\n      if (this._isComposition) {\n        if (this._compositionEnd) {\n          handleCompositionEnd()\n          event.cancel(e)\n        }\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      let stopCellMove = false\n      const evt: KeydownEvent = {\n        keyCode,\n        event: e,\n        stopCellMoving() {\n          stopCellMove = true\n        },\n      }\n      const results = this.fireListeners('keydown', evt)\n      if (array.findIndex(results, (v) => v === false) >= 0) {\n        return\n      }\n\n      if (!input.readOnly && lastInputValue && browser.Safari) {\n        // for Safari\n        this.fireListeners('input', lastInputValue)\n      }\n      if (!stopCellMove) this.fireKeyDownMove(keyCode, e)\n      if (\n        this._grid.keyboardOptions?.deleteCellValueOnDel &&\n        (keyCode === KEY_DEL || keyCode === KEY_BS)\n      ) {\n        this.fireListeners('delete', e)\n      }\n\n      inputClear()\n    })\n    handler.on(input, 'keyup', (e) => {\n      if (this._isComposition) {\n        if (this._compositionEnd) {\n          handleCompositionEnd()\n        }\n      }\n      inputClear()\n    })\n\n    handler.on(input, 'input', (e: InputEvent) => {\n      if (e.data === ' ' || e.data === '　') {\n        // Since the full-width space cannot be determined on \"keypress\", it is processed by \"input\".\n        this.fireListeners('input', e.data)\n      }\n      inputClear()\n    })\n    if (browser.IE) {\n      handler.on(document, 'keydown', (e) => {\n        if (e.target !== input) {\n          return\n        }\n        const keyCode = event.getKeyCode(e)\n        if (keyCode === KEY_ALPHA_C && e.ctrlKey) {\n          // When text is not selected copy-event is not emit, on IE.\n          _setSafeInputValue(input, 'dummy')\n          input.select()\n          setTimeout(() => {\n            _setSafeInputValue(input, '')\n          }, 100)\n        } else if (keyCode === KEY_ALPHA_V && e.ctrlKey) {\n          // When input is read-only paste-event is not emit, on IE.\n          if (input.readOnly) {\n            input.readOnly = false\n            setTimeout(() => {\n              input.readOnly = true\n              _setSafeInputValue(input, '')\n            }, 10)\n          }\n        }\n      })\n    }\n    if (browser.Edge) {\n      handler.once(document, 'keydown', (e: Event) => {\n        if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n          return\n        }\n        // When the input has focus on the first page opening,\n        // the paste-event and copy-event is not emit, on Edge.\n        const dummyInput = document.createElement('input')\n        grid.getElement().appendChild(dummyInput)\n        dummyInput.focus()\n        input.focus()\n        if (dummyInput.parentElement) {\n          dummyInput.parentElement.removeChild(dummyInput)\n        }\n      })\n    }\n    handler.on(document, 'paste', (e: Event) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n        return\n      }\n      setTimeout(() => {\n        inputClear()\n      }, 100)\n      let pasteText\n      if (browser.IE) {\n        // IE\n        pasteText = (window as any).clipboardData.getData('Text')\n      } else {\n        const clipboardData = (e as ClipboardEvent).clipboardData\n        if (clipboardData) {\n          if (clipboardData.items) {\n            // Chrome & Firefox & Edge\n            pasteText = clipboardData.getData('text/plain')\n          } else {\n            // Safari\n            if (\n              -1 !==\n              Array.prototype.indexOf.call(clipboardData.types, 'text/plain')\n            ) {\n              pasteText = clipboardData.getData('Text')\n            }\n          }\n        }\n      }\n      if (isDef(pasteText) && pasteText.length) {\n        this.fireListeners('paste', { value: pasteText, event: e })\n      }\n    })\n    const copy = (data: any, e: ClipboardEvent) => {\n      if (isDef(data)) {\n        event.cancel(e)\n        if (browser.IE) {\n          const cData = (window as any).clipboardData\n          if (cData) {\n            cData.setData('Text', data) // IE\n          }\n        } else {\n          const cData = e.clipboardData\n          if (cData) {\n            cData.setData('text/plain', data) // Chrome, Firefox\n          }\n        }\n      }\n    }\n    handler.on(document, 'copy', (e: Event) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n        return\n      }\n      _setSafeInputValue(input, '')\n      const data = array.find(this.fireListeners('copy', e), isDef)\n      copy(data, e as ClipboardEvent)\n    })\n    handler.on(document, 'cut', (e: Event) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n        return\n      }\n      _setSafeInputValue(input, '')\n      const data = array.find(this.fireListeners('cut', e), isDef)\n      copy(data, e as ClipboardEvent)\n    })\n    handler.on(input, 'focus', (e) => {\n      this.fireListeners('focus', e)\n    })\n    handler.on(input, 'blur', (e) => {\n      this.fireListeners('blur', e)\n    })\n  }\n  public fireKeyDownMove(keyCode: number, e: KeyboardEvent): void {\n    const fn = this._keyDownMoveCallback\n    if (!fn) {\n      return\n    }\n    if (this._isComposition) {\n      return\n    }\n    if (\n      keyCode === KEY_LEFT ||\n      keyCode === KEY_UP ||\n      keyCode === KEY_RIGHT ||\n      keyCode === KEY_DOWN ||\n      keyCode === KEY_HOME ||\n      keyCode === KEY_END\n    ) {\n      fn(e)\n    } else if (\n      this._grid.keyboardOptions?.moveCellOnTab &&\n      keyCode === KEY_TAB\n    ) {\n      fn(e)\n    } else if (\n      this._grid.keyboardOptions?.moveCellOnEnter &&\n      keyCode === KEY_ENTER\n    ) {\n      fn(e)\n    } else if (\n      this._grid.keyboardOptions?.selectAllOnCtrlA &&\n      keyCode === KEY_ALPHA_A &&\n      (e.ctrlKey || e.metaKey)\n    ) {\n      fn(e)\n    }\n  }\n  public onKeyDownMove(fn: KeyboardEventListener): void {\n    this._keyDownMoveCallback = fn\n  }\n  public onKeyDown(fn: (e: KeydownEvent) => void): EventListenerId {\n    return this.listen('keydown', fn)\n  }\n  public onInput(fn: (value: string) => void): EventListenerId {\n    return this.listen('input', fn)\n  }\n  public onDelete(fn: (e: KeyboardEvent) => void): EventListenerId {\n    return this.listen('delete', fn)\n  }\n  public onCopy(fn: (e: ClipboardEvent) => void): EventListenerId {\n    return this.listen('copy', fn)\n  }\n  public onPaste(\n    fn: (e: { value: string; event: ClipboardEvent }) => void\n  ): EventListenerId {\n    return this.listen('paste', fn)\n  }\n  public onCut(fn: (e: ClipboardEvent) => void): EventListenerId {\n    return this.listen('cut', fn)\n  }\n  public onFocus(fn: (e: FocusEvent) => void): EventListenerId {\n    return this.listen('focus', fn)\n  }\n  public onBlur(fn: (e: FocusEvent) => void): EventListenerId {\n    return this.listen('blur', fn)\n  }\n  public focus() {\n    // this._input.value = \"\";\n    this._input.focus()\n  }\n  public setFocusRect(rect: Rect) {\n    const input = this._input\n    const top = this._scrollable.calcTop(rect.top)\n    // 位置：相对 但是，如果IE不是position：relative，则不能使用最大值\n    input.style.top = `${(top - style.getScrollBarSize()).toFixed()}px`\n    input.style.left = `${rect.left.toFixed()}px`\n    input.style.width = `${rect.width.toFixed()}px`\n    input.style.height = `${rect.height.toFixed()}px`\n  }\n  public get editMode() {\n    return !this._input.readOnly\n  }\n  public set editMode(editMode) {\n    this._input.readOnly = !editMode\n  }\n  public resetInputStatus() {\n    const el = this._input\n    if (!el.classList.contains('grid-focus-control--stored-status')) {\n      return\n    }\n    const composition = el.classList.contains('composition')\n\n    const attrs = el.attributes\n    const removeNames = []\n    for (let i = 0, n = attrs.length; i < n; i++) {\n      const att = attrs[i]\n      if (!this._inputStatus?.hasOwnProperty(att.nodeName)) {\n        removeNames.push(att.name)\n      }\n    }\n    removeNames.forEach((removeName) => {\n      el.removeAttribute(removeName)\n    })\n    for (const name in this._inputStatus) {\n      if (this._inputStatus.hasOwnProperty(name)) {\n        el.setAttribute(name, this._inputStatus[name])\n      }\n    }\n    if (composition) {\n      el.classList.add('composition')\n      el.style.font = this._grid.font || '16px sans-serif'\n    } else {\n      el.classList.remove('composition')\n    }\n    el.classList.remove('grid-focus-control--stored-status')\n  }\n  public storeInputStatus() {\n    const el = this._input\n    if (el.classList.contains('grid-focus-control--stored-status')) {\n      return\n    }\n    const inputStatus: FocusControl['_inputStatus'] = (this._inputStatus = {})\n    const atts = el.attributes\n    for (let i = 0, n = atts.length; i < n; i++) {\n      const att = atts[i]\n      inputStatus[att.name] = att.value\n    }\n    el.classList.add('grid-focus-control--stored-status')\n  }\n  public setDefaultInputStatus() {\n    // 有一种情况，滚动逐渐逐渐变化，所以不要在这里设置。\n    // this._input.style.font = this._grid.font || \"16px sans-serif\";\n  }\n  public get input() {\n    return this._input\n  }\n  public dispose() {\n    super.dispose()\n    this._handler.dispose()\n  }\n}\n","import { array } from '../../internal/utils'\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\nimport { DrawGrid } from '../DrawGrid'\nimport { EventTarget } from '../EventTarget'\nimport {\n  BeforeSelectedCellEvent,\n  AfterSelectedCellEvent,\n  AnyFunction,\n  CellAddress,\n  CellRange,\n} from '../../ts-types'\n\n/**\n * Selected area management\n */\nexport class Selection extends EventTarget {\n  private _grid: DrawGrid\n  private _sel: CellAddress\n  private _focus: CellAddress\n  private _start: CellAddress\n  private _end: CellAddress\n  private _drag?: {\n    sel: CellAddress\n    focus: CellAddress\n    start: CellAddress\n    end: CellAddress\n  }\n  private _isWraped: boolean = false\n  private _updateRange: (range: CellRange) => CellRange\n  public constructor(\n    grid: DrawGrid,\n    updateRange: (range: CellRange) => CellRange\n  ) {\n    super()\n    this._grid = grid\n\n    this._sel = { col: 0, row: 0 }\n    this._focus = { col: 0, row: 0 }\n\n    this._start = { col: 0, row: 0 }\n    this._end = { col: 0, row: 0 }\n\n    this._updateRange = updateRange\n  }\n  public get range(): CellRange {\n    const start = this._start\n    const end = this._end\n    const startCol = Math.min(start.col, end.col)\n    const startRow = Math.min(start.row, end.row)\n    const endCol = Math.max(start.col, end.col)\n    const endRow = Math.max(start.row, end.row)\n    return {\n      end: {\n        col: endCol,\n        row: endRow,\n      },\n      start: {\n        col: startCol,\n        row: startRow,\n      },\n    }\n  }\n  public set range(range: CellRange) {\n    const startCol = Math.min(range.start.col, range.end.col)\n    const startRow = Math.min(range.start.row, range.end.row)\n    const endCol = Math.max(range.start.col, range.end.col)\n    const endRow = Math.max(range.start.row, range.end.row)\n\n    this._wrapFireSelectedEvent(() => {\n      this._setSelectCell(startCol, startRow)\n      this._setFocusCell(endCol, endRow, true)\n      this._grid._updatedSelection()\n    })\n  }\n  public get focus(): CellAddress {\n    const col = this._focus.col\n    const row = this._focus.row\n    return { col, row }\n  }\n  public get select(): CellAddress {\n    const col = this._sel.col\n    const row = this._sel.row\n    return { col, row }\n  }\n  public set select(cell: CellAddress) {\n    this._wrapFireSelectedEvent(() => {\n      const { col = 0, row = 0 } = cell || {}\n      this._setSelectCell(col, row)\n      this._setFocusCell(col, row, true)\n      this._grid._updatedSelection()\n    })\n  }\n  public get dragging() {\n    return !!this._drag\n  }\n  public get drag() {\n    const me = this\n    return {\n      get select() {\n        const sel = me._drag ? me._drag.sel : me._sel\n        return {\n          col: sel.col,\n          row: sel.row,\n        }\n      },\n      get range() {\n        const start = me._drag ? me._drag.start : me._start\n        const end = me._drag ? me._drag.end : me._end\n        const startCol = Math.min(start.col, end.col)\n        const startRow = Math.min(start.row, end.row)\n        const endCol = Math.max(start.col, end.col)\n        const endRow = Math.max(start.row, end.row)\n        return {\n          end: {\n            col: endCol,\n            row: endRow,\n          },\n          start: {\n            col: startCol,\n            row: startRow,\n          },\n        }\n      },\n      inRange(col: number, row: number) {\n        const startCol = this.range.start.col\n        const startRow = this.range.start.row\n        const endCol = this.range.end.col\n        const endRow = this.range.end.row\n        return (\n          startCol <= col && col <= endCol && startRow <= row && row <= endRow\n        )\n      },\n      inDrag(col: number, row: number) {\n        const inOldRange = this.inRange(col, row)\n        const inNewRange = me.inRange(col, row)\n        return (inOldRange && !inNewRange) || (!inOldRange && inNewRange)\n      },\n    }\n  }\n  public inRange(col: number, row: number) {\n    const startCol = Math.min(this._start.col, this._end.col)\n    const startRow = Math.min(this._start.row, this._end.row)\n    const endCol = Math.max(this._start.col, this._end.col)\n    const endRow = Math.max(this._start.row, this._end.row)\n    return startCol <= col && col <= endCol && startRow <= row && row <= endRow\n  }\n  public border(col: number, row: number) {\n    const range = this.range\n    const inRange =\n      range.start.col <= col &&\n      col <= range.end.col &&\n      range.start.row <= row &&\n      row <= range.end.row\n    return {\n      bottom: inRange ? range.end.row === row : false,\n      left: inRange ? range.start.col === col : false,\n      right: inRange ? range.end.col === col : false,\n      top: inRange ? range.start.row === row : false,\n    }\n  }\n  public fireSelectedEvent() {\n    this._wrapFireSelectedEvent(() => {\n      // nothing\n    })\n  }\n  public startDrag() {\n    this._drag = {\n      end: this._end,\n      focus: this._focus,\n      sel: this._sel,\n      start: this._start,\n    }\n  }\n  public stopDrag() {\n    if (this._drag) {\n      this.fireListeners(DG_EVENT_TYPE.SELECTED_CELL, {\n        after: {\n          col: this._sel.col,\n          row: this._sel.row,\n        },\n        col: this._drag.sel.col,\n        row: this._drag.sel.row,\n        selected: false,\n      })\n      this.fireListeners(DG_EVENT_TYPE.SELECTED_CELL, {\n        before: {\n          col: this._drag.sel.col,\n          row: this._drag.sel.row,\n        },\n        col: this._sel.col,\n        row: this._sel.row,\n        selected: true,\n      })\n      const oldStartCol = this.drag.range.start.col\n      const oldStartRow = this.drag.range.start.row\n      const oldEndCol = this.drag.range.end.col\n      const oldEndRow = this.drag.range.end.row\n      const newStartCol = this.range.start.col\n      const newStartRow = this.range.start.row\n      const newEndCol = this.range.end.col\n      const newEndRow = this.range.end.row\n      delete this._drag\n      this._grid.invalidateGridRect(\n        oldStartCol,\n        oldStartRow,\n        oldEndCol,\n        oldEndRow\n      )\n      this._grid.invalidateGridRect(\n        newStartCol,\n        newStartRow,\n        newEndCol,\n        newEndRow\n      )\n    }\n  }\n  public _updateGridRange() {\n    const { rowCount, colCount } = this._grid\n    const points = [this._sel, this._focus, this._start, this._end]\n    let needChange = false\n    for (const point of points) {\n      if (colCount <= point.col || rowCount <= point.row) {\n        needChange = true\n        break\n      }\n    }\n    if (!needChange || !rowCount || !colCount) {\n      // rowCount 或 colCount 为 0 时，暂不触发事件\n      return false\n    }\n    this._wrapFireSelectedEvent(() => {\n      points.forEach((p) => {\n        p.col = Math.min(colCount - 1, p.col)\n        p.row = Math.min(rowCount - 1, p.row)\n      })\n    })\n    return true\n  }\n  public _setFocusCell(col: number, row: number, keepSelect: boolean): void {\n    this._wrapFireSelectedEvent(() => {\n      if (!keepSelect || this._grid.singleSelection) {\n        this._setSelectCell(col, row)\n      } else {\n        this._setSelectCell(this._sel.col, this._sel.row)\n      }\n      this._focus = { col, row }\n      this._end = { col, row }\n    })\n  }\n  public _forceUpdateRange() {\n    const range = this._updateRange(this.range)\n    if (range) {\n      this._start = range.start\n      this._end = range.end\n    }\n  }\n  private _setSelectCell(col: number, row: number): void {\n    this._wrapFireSelectedEvent(() => {\n      this._sel = { col, row }\n      this._start = { col, row }\n    })\n  }\n  private _wrapFireSelectedEvent(callback: AnyFunction): void {\n    if (this._isWraped) {\n      callback()\n    } else {\n      this._isWraped = true\n      try {\n        const backup = {\n          end: {\n            col: this._end.col,\n            row: this._end.row,\n          },\n          focus: {\n            col: this._focus.col,\n            row: this._focus.row,\n          },\n          sel: {\n            col: this._sel.col,\n            row: this._sel.row,\n          },\n          start: {\n            col: this._start.col,\n            row: this._start.row,\n          },\n        }\n        const before: BeforeSelectedCellEvent = {\n          col: this._sel.col,\n          row: this._sel.row,\n          selected: false,\n        } as BeforeSelectedCellEvent\n        callback()\n        this._forceUpdateRange()\n        const after: AfterSelectedCellEvent = {\n          before: {\n            col: before.col,\n            row: before.row,\n          },\n          col: this._sel.col,\n          row: this._sel.row,\n          selected: true,\n        }\n        before.after = {\n          col: after.col,\n          row: after.row,\n        }\n        if (!this.dragging) {\n          const results = this.fireListeners(\n            DG_EVENT_TYPE.SELECTED_CELL,\n            before\n          )\n          if (array.findIndex(results, (v) => v === false) >= 0) {\n            this._end = backup.end\n            this._focus = backup.focus\n            this._sel = backup.sel\n            this._start = backup.start\n          } else {\n            this.fireListeners(DG_EVENT_TYPE.SELECTED_CELL, after)\n          }\n        }\n      } finally {\n        this._isWraped = false\n      }\n    }\n  }\n}\n","import { CellRange, CellAddress } from '../../ts-types'\nimport { event, array } from '../../internal/utils'\nimport { BaseMouseDownMover } from './BaseMouseDownMover'\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\nimport { createCellRange } from './DrawCellContext'\n\n/**\n * managing selection size changing operation with mouse\n */\nexport class SelectionResizer extends BaseMouseDownMover {\n  private _oldRange: CellRange = createCellRange(-1, -1, -1, -1)\n  private _newRange: CellRange = createCellRange(-1, -1, -1, -1)\n  private _cell: CellAddress = { col: -1, row: -1 }\n  public start(e: MouseEvent | TouchEvent) {\n    const cellAndRange = this._getTargetCellAndRange(e)\n    if (!cellAndRange) {\n      return false\n    }\n    this._oldRange = this.grid.selection.range\n    this.grid.selection.startDrag()\n\n    this._bindMoveAndUp(e)\n\n    this._newRange = cellAndRange.range\n    this._cell = cellAndRange.cell\n\n    event.cancel(e)\n    this._vibrate(e)\n  }\n  public canStart() {\n    return array.find(\n      this.grid.fireListeners(\n        DG_EVENT_TYPE.CAN_DRAG_SELECTION,\n        this.grid.selection.range\n      ),\n      (v) => v === true\n    )\n  }\n  protected _moveInternal(e: Event) {\n    const cellAndRange = this._getTargetCellAndRange(e)\n    if (!cellAndRange || !this._oldRange) {\n      return false\n    }\n    const newRange = cellAndRange.range\n    const newCell = cellAndRange.cell\n\n    if (\n      newRange.start.col === this._newRange.start.col &&\n      newRange.start.row === this._newRange.start.row &&\n      newRange.end.col === this._newRange.end.col &&\n      newRange.end.row === this._newRange.end.row\n    ) {\n      return false\n    }\n\n    if (\n      array.find(\n        this.grid.fireListeners(DG_EVENT_TYPE.DRAG_SELECTION, {\n          dragDone: false,\n          newRange,\n          oldRange: this._oldRange,\n        }),\n        (v) => v === false\n      ) === false\n    ) {\n      return false\n    }\n\n    const oldCol = this._cell.col\n    const oldRow = this._cell.row\n    const newCol = newCell.col\n    const newRow = newCell.row\n    if (oldCol === newCol && oldRow === newRow) {\n      return false\n    }\n\n    const grid = this.grid\n    grid._moveFocusCell(newRange.start.col, newRange.start.row, false, true)\n    grid._moveFocusCell(newRange.end.col, newRange.end.row, true, true)\n\n    // make visible\n    const makeVisibleCol = (() => {\n      if (newCol < oldCol && 0 < newCol) {\n        // move left\n        return newCol - 1\n      } else if (oldCol < newCol && newCol + 1 < grid.colCount) {\n        // move right\n        return newCol + 1\n      }\n      return newCol\n    })()\n    const makeVisibleRow = (() => {\n      if (newRow < oldRow && 0 < newRow) {\n        // move up\n        return newRow - 1\n      } else if (oldRow < newRow && newRow + 1 < grid.rowCount) {\n        // move down\n        return newRow + 1\n      }\n      return newRow\n    })()\n    if (makeVisibleCol !== newCol || makeVisibleRow !== newRow) {\n      grid.makeVisibleCell(makeVisibleCol, makeVisibleRow)\n    }\n    this._newRange = newRange\n    this._cell = newCell\n    return true\n  }\n  protected _upInternal(e: Event) {\n    this.grid.fireListeners(DG_EVENT_TYPE.DRAG_SELECTION, {\n      dragDone: true,\n      newRange: this._newRange,\n      oldRange: this._oldRange,\n    })\n    this.grid.selection.stopDrag()\n  }\n  private _getTargetCellAndRange(e: Event) {\n    const grid = this.grid\n    const abstractPos = grid._getMouseAbstractPoint(e)\n    if (!abstractPos) {\n      return null\n    }\n    if (!this._oldRange) {\n      return null\n    }\n\n    // \\    A    /\n    //   ---t---\n    //   |\\   E|\n    // D l  X  r B\n    //   |F   \\|\n    //   ---b---\n    // /    C    \\\n\n    let startCol = this._oldRange.start.col\n    let startRow = this._oldRange.start.row\n    let endCol = this._oldRange.end.col\n    let endRow = this._oldRange.end.row\n    const x = abstractPos.x\n    const y = abstractPos.y\n    const cell = grid.getCellAt(x, y)\n    if (cell.col < 0 || cell.row < 0) {\n      return null\n    }\n    const startRect = grid.getCellRect(\n      this._oldRange.start.col,\n      this._oldRange.start.row\n    )\n    const endRect = grid.getCellRect(\n      this._oldRange.end.col,\n      this._oldRange.end.row\n    )\n    const top = startRect.top\n    const left = startRect.left\n    const right = endRect.right\n    const bottom = endRect.bottom\n    let x1 = left\n    let y1 = top\n    let x2 = right\n    let y2 = bottom\n    const ab = (y1 - y2) * x + (x2 - x1) * y + x1 * y2 - x2 * y1 <= 0 // A 或 B\n    x1 = right\n    y1 = top\n    x2 = left\n    y2 = bottom\n    const ad = (y1 - y2) * x + (x2 - x1) * y + x1 * y2 - x2 * y1 > 0 // A 或 D\n\n    if (\n      cell.row >= startRow &&\n      cell.row <= endRow &&\n      cell.col >= startCol &&\n      cell.col <= endCol\n    ) {\n      if (ab) {\n        // E\n        endRow = cell.row\n      } else {\n        // F\n        endCol = cell.col\n      }\n    } else {\n      if (ab && ad) {\n        // A\n        startRow = cell.row\n      } else if (ab && !ad) {\n        // B\n        endCol = cell.col\n      } else if (!ab && ad) {\n        // D\n        startCol = cell.col\n      } else {\n        // C\n        endRow = cell.row\n      }\n    }\n    const range: CellRange = createCellRange(startCol, startRow, endCol, endRow)\n\n    return {\n      cell,\n      range,\n    }\n  }\n}\n","import { PasteRangeBoxValues } from '../ts-types'\n\nexport function parsePasteRangeBoxValues(value: string): PasteRangeBoxValues {\n  const normalizeValue = value.replace(/\\r?\\n$/, '')\n  const lines = normalizeValue.split(/(?:\\r?\\n)|[\\u2028\\u2029]/g)\n  const values = lines.map((line) => line.split(/\\t/g))\n  const colCount = values.reduce((n, cells) => Math.max(n, cells.length), 0)\n  return {\n    colCount,\n    rowCount: values.length,\n    getCellValue(offsetCol: number, offsetRow: number): string {\n      return values[offsetRow]?.[offsetCol] || ''\n    },\n  }\n}\n","import {\n  BorderMode,\n  CellAddress,\n  CellRange,\n  DrawGridEventHandlersEventMap,\n  DrawGridEventHandlersReturnMap,\n  PasteCellEvent,\n  CellContext,\n  PasteRangeBoxValues,\n  DrawGridKeyboardOptions,\n  ScrollableAPI,\n  KeydownEvent,\n} from '../ts-types'\nimport {\n  KEY_DOWN,\n  KEY_END,\n  KEY_HOME,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n  KEY_TAB,\n  KEY_ENTER,\n  KEY_ALPHA_A,\n} from '../core/draw-grid/KEY_CODE'\nimport { toPx } from '../internal/calc'\nimport { getFontSize } from '../internal/canvases'\nimport { EventHandler } from '../internal/EventHandler'\nimport hiDPI from '../internal/hiDPI'\nimport NumberMap from '../internal/NumberMap'\nimport Rect from '../internal/Rect'\nimport Scrollbar from '../internal/Scrollbar'\nimport Scrollable from '../internal/Scrollable'\nimport style from '../internal/style'\nimport { event, array, isDef, isPromise, browser } from '../internal/utils'\nimport { EventTarget } from './EventTarget'\n\nimport { CellSelector } from './draw-grid/CellSelector'\nimport { ColumnResizer } from './draw-grid/ColumnResizer'\nimport { DrawCellContext } from './draw-grid/DrawCellContext'\nimport { DrawLayers } from './draw-grid/DrawLayers'\nimport { FocusControl } from './draw-grid/FocusControl'\nimport { Selection } from './draw-grid/Selection'\nimport { SelectionResizer } from './draw-grid/SelectionResizer'\nimport { parsePasteRangeBoxValues } from '../internal/paste-utils'\nimport { DG_EVENT_TYPE } from './draw-grid/DG_EVENT_TYPE'\nimport { getDrawGridSymbol } from '../internal/symbolManager'\n\nconst _ = getDrawGridSymbol()\n\nfunction _getTargetRowAt(\n  this: DrawGrid,\n  absoluteY: number\n): { row: number; top: number } | null {\n  const internal = this.getTargetRowAtInternal(absoluteY)\n  if (isDef(internal)) {\n    return internal\n  }\n  const findBefore = (\n    startRow: number,\n    startBottom: number\n  ): {\n    top: number\n    row: number\n  } | null => {\n    let bottom = startBottom\n    for (let row = startRow; row >= 0; row--) {\n      const height = _getRowHeight.call(this, row)\n      const top = bottom - height\n      if (top <= absoluteY && absoluteY < bottom) {\n        return {\n          row,\n          top,\n        }\n      }\n      bottom = top\n    }\n    return null\n  }\n  const findAfter = (\n    startRow: number,\n    startBottom: number\n  ): {\n    top: number\n    row: number\n  } | null => {\n    let top = startBottom - _getRowHeight.call(this, startRow)\n    const { rowCount } = this[_]\n    for (let row = startRow; row < rowCount; row++) {\n      const height = _getRowHeight.call(this, row)\n      const bottom = top + height\n      if (top <= absoluteY && absoluteY < bottom) {\n        return {\n          row,\n          top,\n        }\n      }\n      top = bottom\n    }\n    return null\n  }\n  const candRow = Math.min(\n    Math.ceil(absoluteY / this.defaultRowHeight),\n    this.rowCount - 1\n  )\n  const candBottom = _getRowsHeight.call(this, 0, candRow)\n  if (absoluteY >= candBottom) {\n    return findAfter(candRow, candBottom)\n  } else {\n    return findBefore(candRow, candBottom)\n  }\n}\nfunction _getTargetColAt(\n  this: DrawGrid,\n  absoluteX: number\n): {\n  left: number\n  col: number\n} | null {\n  let left = 0\n  const { colCount } = this[_]\n  for (let col = 0; col < colCount; col++) {\n    const width = _getColWidth.call(this, col)\n    const right = left + width\n    if (right > absoluteX) {\n      return {\n        col,\n        left,\n      }\n    }\n    left = right\n  }\n  return null\n}\nfunction _getTargetFrozenRowAt(\n  this: DrawGrid,\n  absoluteY: number\n): {\n  top: number\n  row: number\n} | null {\n  if (!this[_].frozenRowCount) {\n    return null\n  }\n  let top = this[_].scroll.top\n  const rowCount = this[_].frozenRowCount\n  for (let row = 0; row < rowCount; row++) {\n    const height = _getRowHeight.call(this, row)\n    const bottom = top + height\n    if (bottom > absoluteY) {\n      return {\n        row,\n        top,\n      }\n    }\n    top = bottom\n  }\n  return null\n}\nfunction _getTargetFrozenColAt(\n  this: DrawGrid,\n  absoluteX: number\n): {\n  left: number\n  col: number\n} | null {\n  if (!this[_].frozenColCount) {\n    return null\n  }\n  let left = this[_].scroll.left\n  const colCount = this[_].frozenColCount\n  for (let col = 0; col < colCount; col++) {\n    const width = _getColWidth.call(this, col)\n    const right = left + width\n    if (right > absoluteX) {\n      return {\n        col,\n        left,\n      }\n    }\n    left = right\n  }\n  return null\n}\nfunction _getFrozenRowsRect(this: DrawGrid): Rect | null {\n  if (!this[_].frozenRowCount) {\n    return null\n  }\n  const top = this[_].scroll.top\n  let height = 0\n  const rowCount = this[_].frozenRowCount\n  for (let row = 0; row < rowCount; row++) {\n    height += _getRowHeight.call(this, row)\n  }\n  return new Rect(this[_].scroll.left, top, this[_].canvas.width, height)\n}\nfunction _getFrozenColsRect(this: DrawGrid): Rect | null {\n  if (!this[_].frozenColCount) {\n    return null\n  }\n  const left = this[_].scroll.left\n  let width = 0\n  const colCount = this[_].frozenColCount\n  for (let col = 0; col < colCount; col++) {\n    width += _getColWidth.call(this, col)\n  }\n  return new Rect(left, this[_].scroll.top, width, this[_].canvas.height)\n}\nfunction _getCellDrawing(\n  this: DrawGrid,\n  col: number,\n  row: number\n): DrawCellContext | null {\n  if (!this[_].drawCells[row]) {\n    return null\n  }\n  return this[_].drawCells[row][col]\n}\nfunction _putCellDrawing(\n  this: DrawGrid,\n  col: number,\n  row: number,\n  context: DrawCellContext\n): void {\n  if (!this[_].drawCells[row]) {\n    this[_].drawCells[row] = {}\n  }\n  this[_].drawCells[row][col] = context\n}\nfunction _removeCellDrawing(this: DrawGrid, col: number, row: number): void {\n  if (!this[_].drawCells[row]) {\n    return\n  }\n  delete this[_].drawCells[row][col]\n  if (Object.keys(this[_].drawCells[row]).length === 0) {\n    delete this[_].drawCells[row]\n  }\n}\nfunction _drawCell(\n  this: DrawGrid,\n  ctx: CanvasRenderingContext2D,\n  col: number,\n  absoluteLeft: number,\n  width: number,\n  row: number,\n  absoluteTop: number,\n  height: number,\n  visibleRect: Rect,\n  skipAbsoluteTop: number,\n  skipAbsoluteLeft: number,\n  drawLayers: DrawLayers\n): void {\n  const rect = new Rect(\n    absoluteLeft - visibleRect.left,\n    absoluteTop - visibleRect.top,\n    width,\n    height\n  )\n\n  const drawRect = Rect.bounds(\n    Math.max(absoluteLeft, skipAbsoluteLeft) - visibleRect.left,\n    Math.max(absoluteTop, skipAbsoluteTop) - visibleRect.top,\n    rect.right,\n    rect.bottom\n  )\n\n  if (drawRect.height > 0 && drawRect.width > 0) {\n    ctx.save()\n    try {\n      const cellDrawing = _getCellDrawing.call(this, col, row)\n      if (cellDrawing) {\n        cellDrawing.cancel()\n      }\n      const dcContext = new DrawCellContext(\n        col,\n        row,\n        ctx,\n        rect,\n        drawRect,\n        !!cellDrawing,\n        this[_].selection,\n        drawLayers\n      )\n      const p = this.onDrawCell(col, row, dcContext)\n      if (isPromise(p)) {\n        // 延迟绘图\n        _putCellDrawing.call(this, col, row, dcContext)\n\n        const pCol = col\n        dcContext._delayMode(this, () => {\n          _removeCellDrawing.call(this, pCol, row)\n        })\n        ;(p as any).then(() => {\n          dcContext.terminate()\n        })\n      }\n    } finally {\n      ctx.restore()\n    }\n  }\n}\nfunction _drawRow(\n  this: DrawGrid,\n  ctx: CanvasRenderingContext2D,\n  initFrozenCol: { col: number; left: number } | null,\n  initCol: { col: number; left: number } | null,\n  drawRight: number,\n  row: number,\n  absoluteTop: number,\n  height: number,\n  visibleRect: Rect,\n  skipAbsoluteTop: number,\n  drawLayers: DrawLayers\n): void {\n  const colCount = this[_].colCount\n  const drawOuter = (col: number, absoluteLeft: number) => {\n    // 在数据范围之外绘制\n    if (\n      col >= colCount - 1 &&\n      this[_].canvas.width > absoluteLeft - visibleRect.left\n    ) {\n      const outerLeft = absoluteLeft - visibleRect.left\n      if (this.underlayBackgroundColor === 'transparent') {\n        ctx.clearRect(\n          outerLeft,\n          absoluteTop - visibleRect.top,\n          this[_].canvas.width - outerLeft,\n          height\n        )\n      } else {\n        ctx.save()\n        ctx.beginPath()\n        ctx.fillStyle = this.underlayBackgroundColor || '#F6F6F6'\n        ctx.rect(\n          outerLeft,\n          absoluteTop - visibleRect.top,\n          this[_].canvas.width - outerLeft,\n          height\n        )\n        ctx.fill()\n        ctx.restore()\n      }\n    }\n  }\n\n  let skipAbsoluteLeft = 0\n  if (initFrozenCol) {\n    let absoluteLeft = initFrozenCol.left\n    const count = this[_].frozenColCount\n    for (let col = initFrozenCol.col; col < count; col++) {\n      const width = _getColWidth.call(this, col)\n\n      _drawCell.call(\n        this,\n        ctx,\n        col,\n        absoluteLeft,\n        width,\n        row,\n        absoluteTop,\n        height,\n        visibleRect,\n        skipAbsoluteTop,\n        0,\n        drawLayers\n      )\n\n      absoluteLeft += width\n      if (drawRight <= absoluteLeft) {\n        // 在绘图范围之外（结束）\n        drawOuter(col, absoluteLeft)\n        return\n      }\n    }\n    skipAbsoluteLeft = absoluteLeft\n  }\n\n  if (initCol) {\n    let colAbsoluteLeft = initCol.left\n    for (let col = initCol.col; col < colCount; col++) {\n      const width = _getColWidth.call(this, col)\n      _drawCell.call(\n        this,\n        ctx,\n        col,\n        colAbsoluteLeft,\n        width,\n        row,\n        absoluteTop,\n        height,\n        visibleRect,\n        skipAbsoluteTop,\n        skipAbsoluteLeft,\n        drawLayers\n      )\n\n      colAbsoluteLeft += width\n      if (drawRight <= colAbsoluteLeft) {\n        // 在绘图范围之外（结束）\n        drawOuter(col, colAbsoluteLeft)\n        return\n      }\n    }\n    drawOuter(colCount - 1, colAbsoluteLeft)\n  }\n}\nlet _isPreciseColWidth = false\nfunction _toPxWidth(grid: DrawGrid, width: number | string) {\n  // 解决100%出现滚动条问题，此办法会导致右侧有空白，空白部分由_initColWidthsOffset负责填充\n  // return Math.round(toPx(width, grid[_].calcWidthContext));\n  const w = toPx(width, grid[_].calcWidthContext)\n  return _isPreciseColWidth ? w : Math.floor(w)\n}\nfunction _getColPreciseWidth(grid: DrawGrid, col: number) {\n  try {\n    _isPreciseColWidth = true\n    return grid.getColWidth(col)\n  } finally {\n    _isPreciseColWidth = false\n  }\n}\nfunction _initColWidthsOffset(grid: DrawGrid) {\n  const colWidthsOffset: {\n    [col: number]: number\n  } = {}\n  let total = 0\n  for (let col = 0; col < grid.colCount; col++) {\n    const w1 = grid.getColWidth(col)\n    const w2 = _getColPreciseWidth(grid, col)\n    if (w1 !== w2) {\n      total += w2 - w1\n      colWidthsOffset[col] = 0\n    }\n  }\n  total = Math.round(total)\n  if (total > 0) {\n    for (const col in colWidthsOffset) {\n      if (colWidthsOffset.hasOwnProperty(col)) {\n        colWidthsOffset[col] += 1\n        total--\n        if (!total) {\n          break\n        }\n      }\n    }\n  }\n\n  grid[_].colWidthsOffset = colWidthsOffset\n}\nfunction _adjustColWidth(\n  this: DrawGrid,\n  col: number,\n  orgWidth: number\n): number {\n  return this._adjustColWidth(col, orgWidth)\n}\nfunction _applyColWidthLimits(\n  limits: {\n    min?: number\n    max?: number\n  } | null,\n  orgWidth: number\n): number {\n  if (!limits) {\n    return orgWidth\n  }\n\n  if (limits.min) {\n    if (limits.min > orgWidth) {\n      return limits.min\n    }\n  }\n  if (limits.max) {\n    if (limits.max < orgWidth) {\n      return limits.max\n    }\n  }\n  return orgWidth\n}\n/**\n * Gets the definition of the column width.\n * @param col - number of column\n * @returns width definition\n */\nfunction _getColWidthDefine(this: DrawGrid, col: number): string | number {\n  const width = this[_].colWidthsMap.get(col)\n  if (width) {\n    return width\n  }\n  return this.defaultColWidth\n}\n/**\n * Gets the column width limits.\n * @param col - number of column\n * @returns the column width limits\n */\nfunction _getColWidthLimits(\n  this: DrawGrid,\n  col: number\n): {\n  min?: number\n  max?: number\n  minDef?: string | number\n  maxDef?: string | number\n} | null {\n  const limit = this[_].colWidthsLimit[col]\n  if (!limit) {\n    return null\n  }\n\n  const result: {\n    min?: number\n    max?: number\n    minDef?: string | number\n    maxDef?: string | number\n  } = {}\n\n  if (limit.min) {\n    result.min = _toPxWidth(this, limit.min)\n    result.minDef = limit.min\n  }\n  if (limit.max) {\n    result.max = _toPxWidth(this, limit.max)\n    result.maxDef = limit.max\n  }\n  return result\n}\n/**\n * Checks if the given width definition is `auto`.\n * @param width - width definition to check\n * @returns `true ` if the given width definition is `auto`\n */\nfunction isAutoDefine(width: string | number): width is 'auto' {\n  return !!(\n    width &&\n    typeof width === 'string' &&\n    width.toLowerCase() === 'auto'\n  )\n}\n/**\n * Creates a formula to calculate the auto width.\n * @returns formula\n */\nfunction _calcAutoColWidthExpr(this: DrawGrid): string {\n  const others = []\n  let autoCount = 0\n  const hasLimitsOnAuto = []\n  for (let col = 0; col < this[_].colCount; col++) {\n    const def = _getColWidthDefine.call(this, col)\n    const limits = _getColWidthLimits.call(this, col)\n    if (isAutoDefine(def)) {\n      if (limits) {\n        hasLimitsOnAuto.push(limits)\n      }\n      autoCount++\n    } else {\n      let expr = typeof def === 'number' ? `${def}px` : def\n      if (limits) {\n        const orgWidth = _toPxWidth(this, expr)\n        const newWidth = _applyColWidthLimits(limits, orgWidth)\n        if (orgWidth !== newWidth) {\n          expr = `${newWidth}px`\n        }\n      }\n      others.push(expr)\n    }\n  }\n  if (hasLimitsOnAuto.length && others.length) {\n    const autoPx =\n      _toPxWidth(this, `calc(100% - (${others.join(' + ')}))`) / autoCount\n    for (let index = 0; index < hasLimitsOnAuto.length; index++) {\n      const limits = hasLimitsOnAuto[index]\n      if (limits.min && autoPx < limits.min) {\n        others.push(\n          typeof limits.minDef === 'number'\n            ? `${limits.minDef}px`\n            : limits.minDef\n        )\n        autoCount--\n      } else if (limits.max && limits.max < autoPx) {\n        others.push(\n          typeof limits.maxDef === 'number'\n            ? `${limits.maxDef}px`\n            : limits.maxDef\n        )\n        autoCount--\n      }\n    }\n    if (autoCount <= 0) {\n      return `${autoPx}px`\n    }\n  }\n  if (others.length) {\n    return `calc((100% - (${others.join(' + ')})) / ${autoCount})`\n  } else {\n    return `${100 / autoCount}%`\n  }\n}\n/**\n * Calculate the pixels of width from the definition of width.\n * @param width - width definition\n * @returns the pixels of width\n */\nfunction _colWidthDefineToPxWidth(\n  this: DrawGrid,\n  width: string | number\n): number {\n  if (isAutoDefine(width)) {\n    return _toPxWidth(this, _calcAutoColWidthExpr.call(this))\n  }\n  return _toPxWidth(this, width)\n}\nfunction _getColWidth(this: DrawGrid, col: number): number {\n  const width = _getColWidthDefine.call(this, col)\n  return _adjustColWidth.call(\n    this,\n    col,\n    _colWidthDefineToPxWidth.call(this, width)\n  )\n}\nfunction _setColWidth(\n  this: DrawGrid,\n  col: number,\n  width: string | number\n): void {\n  this[_].colWidthsMap.put(col, width)\n}\n\nfunction _getRowHeight(this: DrawGrid, row: number): number {\n  const internal = this.getRowHeightInternal(row)\n  if (typeof internal === 'number') {\n    return Number(internal)\n  }\n  const height = this[_].rowHeightsMap.get(row)\n  if (height) {\n    return height\n  }\n  return this.defaultRowHeight\n}\nfunction _getRowsHeight(\n  this: DrawGrid,\n  startRow: number,\n  endRow: number\n): number {\n  const internal = this.getRowsHeightInternal(startRow, endRow)\n  if (typeof internal === 'number') {\n    return Number(internal)\n  }\n  const rowCount = endRow - startRow + 1\n  let h = this.defaultRowHeight * rowCount\n  this[_].rowHeightsMap.each(startRow, endRow, (height: number): void => {\n    h += height - this.defaultRowHeight\n  })\n  return h\n}\nfunction _setRowHeight(this: DrawGrid, row: number, height: number): void {\n  this[_].rowHeightsMap.put(row, height)\n}\nfunction _getUnderlayWidth(this: DrawGrid) {\n  let bodyWidth = this.getElement().clientWidth\n  for (let col = 0; col < this.frozenColCount; col++) {\n    bodyWidth -= this.getColWidth(col)\n  }\n  if (bodyWidth < 0) {\n    bodyWidth = 0\n  }\n  let w = 0\n  if (this.underlayColCount >= 0) {\n    if (this.underlayColWidth === 'auto') {\n      w = this.underlayColCount * _toPxWidth(this, this.defaultColWidth)\n    } else {\n      w = this.underlayColCount * this.underlayColWidth\n    }\n  } else {\n    w = bodyWidth\n    if (this.underlayColWidth === 'auto') {\n      const startCol = Math.max(\n        this.colCount + this.underlayColCount,\n        this.frozenColCount,\n        0\n      )\n      for (let col = startCol; col < this.colCount; col++) {\n        w -= this.getColWidth(col)\n      }\n    } else {\n      w += this.underlayColCount * this.underlayColWidth\n    }\n  }\n  if (w < 0) {\n    w = 0\n  } else if (w > bodyWidth) {\n    w = bodyWidth\n  }\n  return w\n}\nfunction _getScrollWidth(this: DrawGrid) {\n  const w = this._getColsWidth(0, this[_].colCount - 1)\n  const underlayWidth = _getUnderlayWidth.call(this)\n  return w + underlayWidth\n}\nfunction _getUnderlayHeight(this: DrawGrid) {\n  let bodyHeight = this.getElement().clientHeight\n  for (let row = 0; row < this.frozenRowCount; row++) {\n    bodyHeight -= this.getRowHeight(row)\n  }\n  if (bodyHeight < 0) {\n    bodyHeight = 0\n  }\n  let h = 0\n  if (this.underlayRowCount >= 0) {\n    if (this.underlayRowHeight === 'auto') {\n      h = this.underlayRowCount * this.defaultRowHeight\n    } else {\n      h = this.underlayRowCount * this.underlayRowHeight\n    }\n  } else {\n    h = bodyHeight\n    if (this.underlayRowHeight === 'auto') {\n      const startRow = Math.max(\n        this.rowCount + this.underlayRowCount,\n        this.frozenRowCount,\n        0\n      )\n      for (let row = startRow; row < this.rowCount; row++) {\n        h -= this.getRowHeight(row)\n      }\n    } else {\n      h += this.underlayRowCount * this.underlayRowHeight\n    }\n  }\n  if (h < 0) {\n    h = 0\n  } else if (h > bodyHeight) {\n    h = bodyHeight\n  }\n  return h\n}\nfunction _getScrollHeight(this: DrawGrid) {\n  const internal = this.getScrollHeightInternal(this[_].rowCount)\n  if (typeof internal === 'number') {\n    return Number(internal)\n  }\n  let h = this.defaultRowHeight * this[_].rowCount\n  this[_].rowHeightsMap.each(0, this[_].rowCount - 1, (height: number) => {\n    h += height - this.defaultRowHeight\n  })\n  const underlayHeight = _getUnderlayHeight.call(this)\n  return h + underlayHeight\n}\nfunction _onScroll(this: DrawGrid, _e: Event): void {\n  const lastLeft = this[_].scroll.left\n  const lastTop = this[_].scroll.top\n  const moveX = this[_].scrollable.scrollLeft - lastLeft\n  const moveY = this[_].scrollable.scrollTop - lastTop\n\n  // 保留下一个计算信息\n  this[_].scroll = {\n    left: this[_].scrollable.scrollLeft,\n    top: this[_].scrollable.scrollTop,\n  }\n  const visibleRect = this._getVisibleRect()\n  if (\n    Math.abs(moveX) >= visibleRect.width ||\n    Math.abs(moveY) >= visibleRect.height\n  ) {\n    // 完全重绘\n    this._invalidateRect(visibleRect)\n  } else {\n    // 不同的重绘\n    const context = this[_].context\n    if (context) {\n      context.drawImage(this[_].canvas, -moveX, -moveY)\n    }\n\n    if (moveX !== 0) {\n      // 计算水平移动的重绘范围\n      const redrawRect = visibleRect.copy()\n      if (moveX < 0) {\n        redrawRect.width = -moveX\n        if (this[_].frozenColCount > 0) {\n          // 当有固定列时绘制固定数量的列\n          const frozenRect = _getFrozenColsRect.call(this)\n          if (frozenRect) {\n            redrawRect.width += frozenRect.width\n          }\n        }\n      } else if (moveX > 0) {\n        redrawRect.left = redrawRect.right - moveX\n      }\n\n      // 重绘\n      this._invalidateRect(redrawRect)\n\n      if (moveX > 0) {\n        if (this[_].frozenColCount > 0) {\n          // 当有固定列固定列图时\n          const frozenRect = _getFrozenColsRect.call(this)\n          if (frozenRect) {\n            this._invalidateRect(frozenRect)\n          }\n        }\n      }\n    }\n    if (moveY !== 0) {\n      // 计算纵向移动的重绘范围\n      const redrawRect = visibleRect.copy()\n      if (moveY < 0) {\n        redrawRect.height = -moveY\n        if (this[_].frozenRowCount > 0) {\n          // 有固定线时固定线图\n          const frozenRect = _getFrozenRowsRect.call(this)\n          if (frozenRect) {\n            redrawRect.height += frozenRect.height\n          }\n        }\n      } else if (moveY > 0) {\n        redrawRect.top = redrawRect.bottom - moveY\n      }\n\n      // 重绘\n      this._invalidateRect(redrawRect)\n\n      if (moveY > 0) {\n        if (this[_].frozenRowCount > 0) {\n          // 有固定线时固定线图\n          const frozenRect = _getFrozenRowsRect.call(this)\n          if (frozenRect) {\n            this._invalidateRect(frozenRect)\n          }\n        }\n      }\n    }\n  }\n}\nfunction _onTabKeyDown(this: DrawGrid, shiftKey: boolean): void {\n  const grid = this\n  const focusCell = grid.selection.focus\n  const col = shiftKey\n    ? grid.getMoveLeftColByKeyDownInternal(focusCell)\n    : grid.getMoveRightColByKeyDownInternal(focusCell)\n  if (0 <= col && col < grid.colCount) {\n    grid._moveFocusCell(col, focusCell.row, false)\n  } else if (0 > col) {\n    grid._moveFocusCell(grid.colCount - 1, focusCell.row, false)\n  } else {\n    grid._moveFocusCell(0, focusCell.row, false)\n  }\n}\nfunction _onEnterKeyDown(this: DrawGrid, shiftKey: boolean): void {\n  const grid = this\n  const focusCell = grid.selection.focus\n  const row = shiftKey\n    ? grid.getMoveUpRowByKeyDownInternal(focusCell)\n    : grid.getMoveDownRowByKeyDownInternal(focusCell)\n  if (0 <= row && row < grid.rowCount) {\n    grid._moveFocusCell(focusCell.col, row, false)\n    // } else if (0 > row) {\n    //   grid._moveFocusCell(focusCell.col, grid.rowCount - 1, false)\n    // } else {\n    //   grid._moveFocusCell(focusCell.col, 0, false)\n  }\n}\nfunction _onKeyDownMove(this: DrawGrid, e: KeyboardEvent): void {\n  const { shiftKey, ctrlKey, metaKey, altKey } = e\n  const keyCode = event.getKeyCode(e)\n  if (altKey) {\n    return\n  }\n  const focusCell = shiftKey ? this.selection.focus : this.selection.select\n  if (keyCode === KEY_LEFT) {\n    if (ctrlKey || metaKey) {\n      move(this, null, 'W')\n    } else {\n      if (!hmove.call(this, 'W')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_UP) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'N', null)\n    } else {\n      if (!vmove.call(this, 'N')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_RIGHT) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, null, 'E')\n    } else {\n      if (!hmove.call(this, 'E')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_DOWN) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'S', null)\n    } else {\n      if (!vmove.call(this, 'S')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_HOME) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'N', 'W')\n    } else {\n      move(this, null, 'W')\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_END) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'S', 'E')\n    } else {\n      move(this, null, 'E')\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_TAB && this.keyboardOptions?.moveCellOnTab) {\n    _onTabKeyDown.call(this, shiftKey)\n    event.cancel(e)\n  } else if (keyCode === KEY_ENTER && this.keyboardOptions?.moveCellOnEnter) {\n    _onEnterKeyDown.call(this, shiftKey)\n    event.cancel(e)\n  } else if (\n    keyCode === KEY_ALPHA_A &&\n    this.keyboardOptions?.selectAllOnCtrlA &&\n    (ctrlKey || metaKey)\n  ) {\n    let startCol = 0\n    let startRow = 0\n    if (shiftKey) {\n      if (\n        this.keyboardOptions?.selectAllOptions?.shiftCtrlA?.excludeFrozenCol\n      ) {\n        startCol = this.frozenRowCount\n      }\n      if (\n        this.keyboardOptions?.selectAllOptions?.shiftCtrlA?.excludeFrozenRow\n      ) {\n        startRow = this.frozenRowCount\n      }\n    } else {\n      if (this.keyboardOptions?.selectAllOptions?.ctrlA?.excludeFrozenCol) {\n        startCol = this.frozenRowCount\n      }\n      if (this.keyboardOptions?.selectAllOptions?.ctrlA?.excludeFrozenRow) {\n        startRow = this.frozenRowCount\n      }\n    }\n    this.selection.range = {\n      start: { col: startCol, row: startRow },\n      end: { col: this.colCount - 1, row: this.rowCount - 1 },\n    }\n    this.invalidate()\n    event.cancel(e)\n  }\n\n  function move(\n    grid: DrawGrid,\n    vDir: 'N' | 'S' | null,\n    hDir: 'W' | 'E' | null\n  ): void {\n    const row =\n      vDir === 'S' ? grid.rowCount - 1 : vDir === 'N' ? 0 : focusCell.row\n    const col =\n      hDir === 'E' ? grid.colCount - 1 : hDir === 'W' ? 0 : focusCell.col\n    grid._moveFocusCell(col, row, shiftKey)\n  }\n\n  function vmove(this: DrawGrid, vDir: 'N' | 'S'): boolean {\n    let row: number\n    if (vDir === 'S') {\n      row = this.getMoveDownRowByKeyDownInternal(focusCell)\n      if (this.rowCount <= row) {\n        return false\n      }\n    } else {\n      row = this.getMoveUpRowByKeyDownInternal(focusCell)\n      if (row < 0) {\n        return false\n      }\n    }\n    const { col } = focusCell\n    this._moveFocusCell(col, row, shiftKey)\n    return true\n  }\n\n  function hmove(\n    this: DrawGrid,\n    hDir: 'W' | 'E',\n    shiftKeyFlg: boolean = shiftKey\n  ): boolean {\n    let col: number\n    if (hDir === 'E') {\n      col = this.getMoveRightColByKeyDownInternal(focusCell)\n      if (this.colCount <= col) {\n        return false\n      }\n    } else {\n      col = this.getMoveLeftColByKeyDownInternal(focusCell)\n      if (col < 0) {\n        return false\n      }\n    }\n    const { row } = focusCell\n    this._moveFocusCell(col, row, shiftKeyFlg)\n    return true\n  }\n}\nfunction _bindEvents(this: DrawGrid): void {\n  const { handler, element, scrollable } = this[_]\n  const getCellEventArgsSet = <EVT extends TouchEvent | MouseEvent>(\n    e: EVT\n  ): {\n    abstractPos?: { x: number; y: number }\n    cell?: CellAddress\n    eventArgs?: CellAddress & { event: EVT }\n  } => {\n    const abstractPos = this._getMouseAbstractPoint(e)\n    if (!abstractPos) {\n      return {}\n    }\n    const cell = this.getCellAt(abstractPos.x, abstractPos.y)\n    if (cell.col < 0 || cell.row < 0) {\n      return {\n        abstractPos,\n        cell,\n      }\n    }\n    const eventArgs = {\n      col: cell.col,\n      event: e,\n      row: cell.row,\n    }\n    return {\n      abstractPos,\n      cell,\n      eventArgs,\n    }\n  }\n  const canResizeColumn = (col: number): boolean => {\n    const limit = this[_].colWidthsLimit[col]\n    let canResize = this.disableColumnResize !== true\n    if (limit && canResize) {\n      canResize = limit.disableResize !== true\n      if (canResize && limit.min && limit.max) {\n        canResize = limit.max !== limit.min\n      }\n    }\n    return canResize\n    // if (!limit || !limit.min || !limit.max) {\n    //     return true;\n    // }\n    // return limit.max !== limit.min;\n  }\n  handler.on(element, 'mousedown', (e: Event) => {\n    const eventArgsSet = getCellEventArgsSet(e as MouseEvent)\n    const abstractPos = eventArgsSet.abstractPos\n    const eventArgs = eventArgsSet.eventArgs\n    if (!abstractPos) {\n      return\n    }\n    if (eventArgs) {\n      const results = this.fireListeners(\n        DG_EVENT_TYPE.MOUSEDOWN_CELL,\n        eventArgs\n      )\n      if (array.findIndex(results, (v) => !v) >= 0) {\n        return\n      }\n    }\n    if (event.getMouseButtons(e as MouseEvent) !== 1) {\n      return\n    }\n    if (_getResizeSelectionAt.call(this, abstractPos.x, abstractPos.y)) {\n      this[_].selectionResizer.start(e as MouseEvent)\n    } else {\n      const resizeCol = _getResizeColAt.call(this, abstractPos.x, abstractPos.y)\n      if (resizeCol >= 0 && canResizeColumn(resizeCol)) {\n        // 改变宽度\n        this[_].columnResizer.start(resizeCol, e)\n      } else {\n        // 选择\n        this[_].cellSelector.start(e as MouseEvent)\n      }\n    }\n  })\n  handler.on(element, 'mouseup', (e: Event) => {\n    if (!this.hasListeners(DG_EVENT_TYPE.MOUSEUP_CELL)) {\n      return\n    }\n    const eventArgs = getCellEventArgsSet(e as MouseEvent).eventArgs\n    if (eventArgs) {\n      this.fireListeners(DG_EVENT_TYPE.MOUSEUP_CELL, eventArgs)\n    }\n  })\n  let doubleTapBefore: CellAddress | null | undefined = null\n  let longTouchId: NodeJS.Timer | null = null\n  handler.on(element, 'touchstart', (e: Event) => {\n    if (!doubleTapBefore) {\n      doubleTapBefore = getCellEventArgsSet(e as TouchEvent).eventArgs\n      setTimeout(() => {\n        doubleTapBefore = null\n      }, 350)\n    } else {\n      const eventArgs = getCellEventArgsSet(e as TouchEvent).eventArgs\n      if (\n        eventArgs &&\n        eventArgs.col === doubleTapBefore.col &&\n        eventArgs.row === doubleTapBefore.row\n      ) {\n        this.fireListeners(DG_EVENT_TYPE.DBLTAP_CELL, eventArgs)\n      } else if (!eventArgs) {\n        this.fireListeners(DG_EVENT_TYPE.DBLTAP_UNDERLAY)\n      }\n\n      doubleTapBefore = null\n\n      if (e.defaultPrevented) {\n        return\n      }\n    }\n\n    longTouchId = setTimeout(() => {\n      // 长按选择模式时\n      longTouchId = null\n      const abstractPos = this._getMouseAbstractPoint(e as TouchEvent)\n      if (!abstractPos) {\n        return\n      }\n\n      if (_getResizeSelectionAt.call(this, abstractPos.x, abstractPos.y)) {\n        this[_].selectionResizer.start(e as TouchEvent)\n      } else {\n        const resizeCol = _getResizeColAt.call(\n          this,\n          abstractPos.x,\n          abstractPos.y,\n          15\n        )\n        if (resizeCol >= 0 && canResizeColumn(resizeCol)) {\n          // 改变宽度\n          this[_].columnResizer.start(resizeCol, e)\n        } else {\n          // 选择\n          this[_].cellSelector.start(e as TouchEvent)\n        }\n      }\n    }, 500)\n  })\n\n  function cancel(e: Event) {\n    if (longTouchId) {\n      clearTimeout(longTouchId)\n      longTouchId = null\n    }\n  }\n  handler.on(element, 'touchcancel', cancel)\n  handler.on(element, 'touchmove', cancel)\n  handler.on(element, 'touchend', (e) => {\n    if (longTouchId) {\n      clearTimeout(longTouchId)\n      this[_].cellSelector.select(e as TouchEvent)\n      longTouchId = null\n    }\n  })\n\n  let isMouseover = false\n  let mouseEnterCell: CellAddress | null = null\n  let mouseOverCell: CellAddress | null = null\n  const onMouseenterCell = (\n    cell: CellAddress & { event: Event },\n    related?: CellAddress\n  ): void => {\n    this.fireListeners(DG_EVENT_TYPE.MOUSEENTER_CELL, {\n      col: cell.col,\n      row: cell.row,\n      event: cell.event,\n      related,\n    })\n    mouseEnterCell = cell\n  }\n  const onMouseleaveCell = (related?: CellAddress): CellAddress | undefined => {\n    const beforeMouseCell = mouseEnterCell\n    mouseEnterCell = null\n    if (beforeMouseCell) {\n      this.fireListeners(DG_EVENT_TYPE.MOUSELEAVE_CELL, {\n        col: beforeMouseCell.col,\n        row: beforeMouseCell.row,\n        related,\n      })\n    }\n    return beforeMouseCell || undefined\n  }\n  const onMouseoverCell = (\n    cell: CellAddress & { event: Event },\n    related?: CellAddress\n  ): void => {\n    this.fireListeners(DG_EVENT_TYPE.MOUSEOVER_CELL, {\n      col: cell.col,\n      row: cell.row,\n      event: cell.event,\n      related,\n    })\n    mouseOverCell = cell\n  }\n  const onMouseoutCell = (related?: CellAddress): CellAddress | undefined => {\n    const beforeMouseCell = mouseOverCell\n    mouseOverCell = null\n    if (beforeMouseCell) {\n      this.fireListeners(DG_EVENT_TYPE.MOUSEOUT_CELL, {\n        col: beforeMouseCell.col,\n        row: beforeMouseCell.row,\n        related,\n      })\n    }\n    return beforeMouseCell || undefined\n  }\n  const scrollElement = scrollable.getElement()\n  handler.on(scrollElement, 'mouseover', (e) => {\n    isMouseover = true\n  })\n  handler.on(scrollElement, 'mouseout', (e) => {\n    isMouseover = false\n    onMouseoutCell()\n  })\n\n  handler.on(element, 'mouseleave', (e) => {\n    onMouseleaveCell()\n  })\n\n  handler.on(element, 'mousemove', (e) => {\n    const eventArgsSet = getCellEventArgsSet(e as MouseEvent)\n    const abstractPos = eventArgsSet.abstractPos\n    const eventArgs = eventArgsSet.eventArgs\n    if (eventArgs) {\n      const beforeMouseCell = mouseEnterCell\n      if (beforeMouseCell) {\n        this.fireListeners(DG_EVENT_TYPE.MOUSEMOVE_CELL, eventArgs)\n        if (\n          beforeMouseCell.col !== eventArgs.col ||\n          beforeMouseCell.row !== eventArgs.row\n        ) {\n          const enterCell = {\n            col: eventArgs.col,\n            row: eventArgs.row,\n          }\n          const outCell = onMouseoutCell(enterCell)\n          const leaveCell = onMouseleaveCell(enterCell)\n          onMouseenterCell(eventArgs, leaveCell)\n          if (isMouseover) {\n            onMouseoverCell(eventArgs, outCell)\n          }\n        } else if (isMouseover && !mouseOverCell) {\n          onMouseoverCell(eventArgs)\n        }\n      } else {\n        onMouseenterCell(eventArgs)\n        if (isMouseover) {\n          onMouseoverCell(eventArgs)\n        }\n        this.fireListeners(DG_EVENT_TYPE.MOUSEMOVE_CELL, eventArgs)\n      }\n    } else {\n      onMouseoutCell()\n      onMouseleaveCell()\n    }\n    if (\n      this[_].columnResizer.moving(e) ||\n      this[_].selectionResizer.moving(e) ||\n      this[_].cellSelector.moving(e)\n    ) {\n      return\n    }\n    const elementStyle = element.style\n    if (!abstractPos) {\n      if (\n        elementStyle.cursor === 'col-resize' ||\n        elementStyle.cursor === 'crosshair'\n      ) {\n        elementStyle.cursor = ''\n      }\n      return\n    }\n    if (_getResizeSelectionAt.call(this, abstractPos.x, abstractPos.y)) {\n      elementStyle.cursor = 'crosshair'\n    } else {\n      const resizeCol = _getResizeColAt.call(this, abstractPos.x, abstractPos.y)\n      if (resizeCol >= 0 && canResizeColumn(resizeCol)) {\n        elementStyle.cursor = 'col-resize'\n      } else {\n        if (\n          elementStyle.cursor === 'col-resize' ||\n          elementStyle.cursor === 'crosshair'\n        ) {\n          elementStyle.cursor = ''\n        }\n      }\n    }\n  })\n  handler.on(element, 'click', (e) => {\n    if (\n      this[_].columnResizer.lastMoving(e) ||\n      this[_].selectionResizer.moving(e) ||\n      this[_].cellSelector.lastMoving(e)\n    ) {\n      return\n    }\n    if (\n      !this.hasListeners(DG_EVENT_TYPE.CLICK_CELL) &&\n      !this.hasListeners(DG_EVENT_TYPE.CLICK_UNDERLAY)\n    ) {\n      return\n    }\n    if (browser.Chrome && e.eventPhase === Event.AT_TARGET) {\n      // 解决 Chrome 下，单元格输入状态使用鼠标选择，当鼠标在输入框action按钮处抬起时触发动作问题\n      return\n    }\n    const eventArgs = getCellEventArgsSet(e as MouseEvent).eventArgs\n    if (!eventArgs) {\n      this.fireListeners(DG_EVENT_TYPE.CLICK_UNDERLAY)\n    } else {\n      this.fireListeners(DG_EVENT_TYPE.CLICK_CELL, eventArgs)\n    }\n  })\n  handler.on(element, 'contextmenu', (e) => {\n    if (!this.hasListeners(DG_EVENT_TYPE.CONTEXTMENU_CELL)) {\n      return\n    }\n    const { eventArgs } = getCellEventArgsSet(e)\n    if (!eventArgs) {\n      return\n    }\n    this.fireListeners(DG_EVENT_TYPE.CONTEXTMENU_CELL, eventArgs)\n  })\n  handler.on(element, 'dblclick', (e) => {\n    if (\n      !this.hasListeners(DG_EVENT_TYPE.DBLCLICK_CELL) &&\n      !this.hasListeners(DG_EVENT_TYPE.DBLCLICK_UNDERLAY)\n    ) {\n      return\n    }\n    const eventArgs = getCellEventArgsSet(e as MouseEvent).eventArgs\n    if (!eventArgs) {\n      this.fireListeners(DG_EVENT_TYPE.DBLCLICK_UNDERLAY)\n    } else {\n      this.fireListeners(DG_EVENT_TYPE.DBLCLICK_CELL, eventArgs)\n    }\n  })\n  this[_].focusControl.onKeyDown((evt: KeydownEvent) => {\n    const results = this.fireListeners(DG_EVENT_TYPE.KEYDOWN, evt)\n    if (array.findIndex(results, (v) => v === false) >= 0) {\n      return false\n    }\n  })\n  this[_].selection.listen(DG_EVENT_TYPE.SELECTED_CELL, (data) => {\n    const results = this.fireListeners(\n      DG_EVENT_TYPE.SELECTED_CELL,\n      data,\n      data.selected\n    )\n    if (array.findIndex(results, (v) => v === false) >= 0) {\n      return false\n    }\n  })\n\n  scrollable.onScroll((e) => {\n    _onScroll.call(this, e)\n    this.fireListeners(DG_EVENT_TYPE.SCROLL, { event: e })\n  })\n  this[_].focusControl.onKeyDownMove((e) => {\n    _onKeyDownMove.call(this, e as KeyboardEvent)\n  })\n  const getCopyValue = () => {\n    let copyValue = ''\n    const range = this[_].selection.range\n    const copyRange = this.getCopyRangeInternal(range)\n    for (let row = copyRange.start.row; row <= copyRange.end.row; row++) {\n      for (let col = copyRange.start.col; col <= copyRange.end.col; col++) {\n        const copyCellValue = this.getCopyCellValue(col, row, copyRange)\n        if (isPromise(copyCellValue)) {\n          // 无法获取异步数据\n        } else {\n          const strCellValue = `${copyCellValue}`\n          if (/^\\[object .*\\]$/.exec(strCellValue)) {\n            // object 忽视\n          } else {\n            copyValue += strCellValue\n          }\n        }\n\n        if (col < copyRange.end.col) {\n          copyValue += '\\t'\n        }\n      }\n      if (row < copyRange.end.row) {\n        copyValue += '\\n'\n      }\n    }\n    return copyValue\n  }\n  this[_].focusControl.onCopy((e: ClipboardEvent) => {\n    let copyValue = getCopyValue()\n    let value = array.find(this.fireListeners(DG_EVENT_TYPE.COPY, e), isDef)\n    if (isDef(value)) {\n      copyValue = value\n    }\n    return copyValue\n  })\n  this[_].focusControl.onCut((e: ClipboardEvent) => {\n    let copyValue = getCopyValue()\n    let value = array.find(this.fireListeners(DG_EVENT_TYPE.CUT, e), isDef)\n    if (isDef(value)) {\n      copyValue = value\n    }\n    return copyValue\n  })\n  this[_].focusControl.onPaste(\n    (e: { value: string; event: ClipboardEvent }) => {\n      const value = e.value\n      const event = e.event\n      const pasteValue = this.hasListeners(DG_EVENT_TYPE.PASTE)\n        ? array.find(\n            this.fireListeners(DG_EVENT_TYPE.PASTE, value, event),\n            isDef\n          )\n        : value\n      if (isDef(pasteValue)) {\n        const normalizeValue = pasteValue.replace(/\\r?\\n$/, '')\n        const { col, row } = this[_].selection.select\n        const multi = /[\\r\\n\\u2028\\u2029\\t]/.test(normalizeValue) // is multi cell values\n        let rangeBoxValues: PasteRangeBoxValues | null = null\n        const pasteCellEvent: PasteCellEvent = {\n          col,\n          row,\n          value: pasteValue,\n          normalizeValue,\n          multi,\n          get rangeBoxValues(): PasteRangeBoxValues {\n            return (\n              rangeBoxValues ??\n              (rangeBoxValues = parsePasteRangeBoxValues(normalizeValue))\n            )\n          },\n          event,\n        }\n        this.fireListeners(DG_EVENT_TYPE.PASTE_CELL, pasteCellEvent)\n      }\n    }\n  )\n  this[_].focusControl.onInput((value) => {\n    const col = this[_].selection.select.col\n    const row = this[_].selection.select.row\n    this.fireListeners(DG_EVENT_TYPE.INPUT_CELL, { col, row, value })\n  })\n  this[_].focusControl.onDelete((event) => {\n    const { col, row } = this[_].selection.select\n    this.fireListeners(DG_EVENT_TYPE.DELETE_CELL, { col, row, event })\n  })\n  this[_].focusControl.onFocus((e: FocusEvent) => {\n    this.fireListeners(DG_EVENT_TYPE.FOCUS_GRID, e)\n    this[_].focusedGrid = true\n\n    const col = this[_].selection.select.col\n    const row = this[_].selection.select.row\n    this.invalidateCell(col, row)\n  })\n  this[_].focusControl.onBlur((e: FocusEvent) => {\n    this.fireListeners(DG_EVENT_TYPE.BLUR_GRID, e)\n    this[_].focusedGrid = false\n\n    const col = this[_].selection.select.col\n    const row = this[_].selection.select.row\n    this.invalidateCell(col, row)\n  })\n}\nfunction _getResizeSelectionAt(\n  this: DrawGrid,\n  abstractX: number,\n  abstractY: number,\n  offset = 7\n): boolean {\n  const range = this.selection.range\n  const cellRect = this.getCellRect(range.end.col, range.end.row)\n  return !!(\n    cellRect.bottom - offset <= abstractY &&\n    abstractY <= cellRect.bottom &&\n    cellRect.right - offset <= abstractX &&\n    abstractX <= cellRect.right &&\n    this.canDragSelection\n  )\n}\nfunction _getResizeColAt(\n  this: DrawGrid,\n  abstractX: number,\n  abstractY: number,\n  offset = 5\n): number {\n  const grid = this\n  if (grid[_].frozenRowCount <= 0) {\n    return -1\n  }\n  const frozenRect = _getFrozenRowsRect.call(this)\n  if (frozenRect && !frozenRect.inPoint(abstractX, abstractY)) {\n    return -1\n  }\n  const cell = grid.getCellAt(abstractX, abstractY)\n  const cellRect = grid.getCellRect(cell.col, cell.row)\n  if (abstractX < cellRect.left + offset) {\n    return cell.col - 1\n  }\n  if (cellRect.right - offset < abstractX) {\n    return cell.col\n  }\n  return -1\n}\nfunction _getScrollableVisibleRect(this: DrawGrid): Rect {\n  let frozenColsWidth = 0\n  if (this[_].frozenColCount > 0) {\n    // 当有固定列时绘制固定数量的列\n    const frozenRect = _getFrozenColsRect.call(this)\n    if (frozenRect) {\n      frozenColsWidth = frozenRect.width\n    }\n  }\n  let frozenRowsHeight = 0\n  if (this[_].frozenRowCount > 0) {\n    // 当有固定列时绘制固定数量的列\n    const frozenRect = _getFrozenRowsRect.call(this)\n    if (frozenRect) {\n      frozenRowsHeight = frozenRect.height\n    }\n  }\n  return new Rect(\n    this[_].scrollable.scrollLeft + frozenColsWidth,\n    this[_].scrollable.scrollTop + frozenRowsHeight,\n    this[_].canvas.width - frozenColsWidth,\n    this[_].canvas.height - frozenRowsHeight\n  )\n}\n\nexport interface DrawGridProtected {\n  element: HTMLElement\n  scrollable: ScrollableAPI\n  handler: EventHandler\n  selection: Selection\n  focusControl: FocusControl\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  rowCount: number\n  colCount: number\n  frozenColCount: number\n  frozenRowCount: number\n  defaultRowHeight?: number\n  defaultColWidth?: string | number\n  highlightBorderWidth?: string | number\n  font?: string\n  underlayRowCount: number\n  underlayColCount: number\n  underlayRowHeight: number | 'auto'\n  underlayColWidth: number | 'auto'\n  underlayBackgroundColor?: string\n  borderColor: string\n  borderWidth: number\n  borderMode: BorderMode\n  keyboardOptions?: DrawGridKeyboardOptions\n  singleSelection: boolean\n  disableColumnResize: boolean\n  rowHeightsMap: NumberMap<number>\n  colWidthsMap: NumberMap<string | number>\n  colWidthsLimit: {\n    [col: number]: {\n      max?: string | number\n      min?: string | number\n      disableResize?: boolean\n    }\n  }\n  colWidthsOffset: {\n    [col: number]: number\n  }\n  calcWidthContext: {\n    _: DrawGridProtected\n    full: number\n    em: number\n  }\n\n  columnResizer: ColumnResizer\n  selectionResizer: SelectionResizer\n  cellSelector: CellSelector\n\n  drawCells: { [row: number]: { [col: number]: DrawCellContext } }\n  cellTextOverflows: { [at: string]: string }\n  cellTypeOverflows: {\n    [at: string]: string\n  }\n  focusedGrid: boolean\n\n  config:\n    | {\n        [name: string]: any\n      }\n    | undefined\n  scroll: {\n    left: number\n    top: number\n  }\n  disposables?: { dispose(): void }[] | null\n}\n\nexport interface DrawGridConstructorOptions {\n  rowCount?: number\n  colCount?: number\n  frozenColCount?: number\n  frozenRowCount?: number\n  /**\n   * Default grid row height. default 40\n   */\n  defaultRowHeight?: number\n  /**\n   * Default grid col width. default 80\n   */\n  defaultColWidth?: number | string\n  highlightBorderWidth?: number | string\n  font?: string\n  underlayRowCount?: number\n  underlayColCount?: number\n  underlayRowHeight?: number | 'auto'\n  underlayColWidth?: number | 'auto'\n  underlayBackgroundColor?: string\n  borderMode?: BorderMode\n  borderColor?: string\n  borderWidth?: number\n  keyboardOptions?: DrawGridKeyboardOptions\n  /**\n   * Canvas parent element\n   */\n  parentElement?: HTMLElement | null\n  /**\n   * Disable column resizing\n   */\n  disableColumnResize?: boolean\n  singleSelection?: boolean\n}\n\ninterface IDisposable {\n  dispose: () => void\n}\n\nfunction createRootElement() {\n  const element = document.createElement('div')\n  element.classList.add('kaka-grid')\n  return element\n}\n\n/**\n * DrawGrid\n */\nexport abstract class DrawGrid extends EventTarget {\n  public static get EVENT_TYPE(): typeof DG_EVENT_TYPE {\n    return DG_EVENT_TYPE\n  }\n  private [_]: DrawGridProtected\n  /**\n   * constructor\n   *\n   * <pre>\n   * Constructor options\n   * -----\n   * rowCount: grid row count.default 10\n   * colCount: grid col count.default 10\n   * frozenColCount: default 0\n   * frozenRowCount: default 0\n   * defaultRowHeight: default grid row height. default 40\n   * defaultColWidth: default grid col width. default 80\n   * highlightBorderWidth: default grid highlight border width. default 2\n   * parentElement: canvas parentElement\n   * font: default font\n   * underlayRowCount: default 0\n   * underlayColCount: default 0\n   * underlayRowHeight: default 'auto'\n   * underlayColWidth: default 'auto'\n   * underlayBackgroundColor: underlay background color\n   * singleSelection: default false\n   * disableColumnResize: default false\n   * -----\n   * </pre>\n   */\n  public constructor(options: DrawGridConstructorOptions = {}) {\n    super()\n    const {\n      rowCount = 10,\n      colCount = 10,\n      frozenColCount = 0,\n      frozenRowCount = 0,\n      defaultRowHeight,\n      defaultColWidth,\n      highlightBorderWidth,\n      font,\n      underlayRowCount = 0,\n      underlayColCount = 0,\n      underlayRowHeight = 'auto',\n      underlayColWidth = 'auto',\n      underlayBackgroundColor,\n      borderMode = 'none',\n      borderColor = '',\n      borderWidth = 0,\n      keyboardOptions,\n      parentElement,\n      singleSelection,\n      disableColumnResize,\n    } = options\n    const protectedSpace = (this[_] = {} as DrawGridProtected)\n    style.initDocument()\n    protectedSpace.element = createRootElement()\n\n    protectedSpace.canvas = hiDPI.transform(document.createElement('canvas'))\n    protectedSpace.context = protectedSpace.canvas.getContext('2d', {\n      alpha: false,\n    }) as CanvasRenderingContext2D\n\n    protectedSpace.scrollable = style.isPerfectScrollbar()\n      ? new Scrollbar()\n      : new Scrollable(protectedSpace.canvas)\n    protectedSpace.handler = new EventHandler()\n    protectedSpace.selection = new Selection(this, (range: CellRange) => {\n      return this.updateSelectionRange(range)\n    })\n    protectedSpace.focusControl = new FocusControl(\n      this,\n      protectedSpace.scrollable.getElement(),\n      protectedSpace.scrollable\n    )\n\n    protectedSpace.rowCount = rowCount\n    protectedSpace.colCount = colCount\n    protectedSpace.frozenColCount = frozenColCount\n    protectedSpace.frozenRowCount = frozenRowCount\n    protectedSpace.underlayRowCount = underlayRowCount\n    protectedSpace.underlayColCount = underlayColCount\n    protectedSpace.underlayRowHeight = underlayRowHeight\n    protectedSpace.underlayColWidth = underlayColWidth\n    protectedSpace.borderMode = borderMode\n    protectedSpace.borderColor = borderColor\n    protectedSpace.borderWidth = borderWidth\n\n    protectedSpace.defaultRowHeight = defaultRowHeight\n    protectedSpace.defaultColWidth = defaultColWidth\n    protectedSpace.highlightBorderWidth = highlightBorderWidth\n\n    protectedSpace.font = font\n    protectedSpace.underlayBackgroundColor = underlayBackgroundColor\n    protectedSpace.keyboardOptions = keyboardOptions || {}\n    protectedSpace.keyboardOptions.moveCellOnEnter =\n      protectedSpace.keyboardOptions.moveCellOnEnter ?? true\n    protectedSpace.keyboardOptions.moveCellOnTab =\n      protectedSpace.keyboardOptions.moveCellOnTab ?? true\n    protectedSpace.singleSelection = !!singleSelection\n    protectedSpace.disableColumnResize =\n      !!disableColumnResize || !!(options as any).disableColResize\n\n    /////\n    protectedSpace.rowHeightsMap = new NumberMap<number>()\n    protectedSpace.colWidthsMap = new NumberMap<number | string>()\n    protectedSpace.colWidthsLimit = {}\n    protectedSpace.colWidthsOffset = {}\n    protectedSpace.calcWidthContext = {\n      _: protectedSpace,\n      get full(): number {\n        return this._.canvas.width\n      },\n      get em(): number {\n        return getFontSize(this._.context, this._.font).width\n      },\n    }\n\n    protectedSpace.columnResizer = new ColumnResizer(this)\n    protectedSpace.selectionResizer = new SelectionResizer(this)\n    protectedSpace.cellSelector = new CellSelector(this)\n\n    protectedSpace.drawCells = {}\n    protectedSpace.cellTextOverflows = {}\n    protectedSpace.cellTypeOverflows = {}\n    protectedSpace.focusedGrid = false\n\n    protectedSpace.element.appendChild(protectedSpace.canvas)\n    protectedSpace.element.appendChild(protectedSpace.scrollable.getElement())\n    protectedSpace.scroll = {\n      left: 0,\n      top: 0,\n    }\n    this.updateScroll()\n    if (parentElement) {\n      parentElement.appendChild(protectedSpace.element)\n      this.updateSize()\n    } else {\n      this.updateSize()\n    }\n    _bindEvents.call(this)\n    this.bindEventsInternal()\n  }\n  /**\n   * Get root element.\n   * @returns root element\n   */\n  public getElement(): HTMLElement {\n    return this[_].element\n  }\n  /**\n   * Get canvas element.\n   */\n  public get canvas(): HTMLCanvasElement {\n    return this[_].canvas\n  }\n  /**\n   * Focus the grid.\n   * @returns\n   */\n  public focus(): void {\n    const { col, row } = this[_].selection.select\n    this.focusCell(col, row)\n  }\n  public hasFocusGrid(): boolean {\n    return this[_].focusedGrid\n  }\n  /**\n   * Selection instance.\n   */\n  public get selection(): Selection {\n    return this[_].selection\n  }\n  /**\n   * Number of rows.\n   */\n  public get rowCount(): number {\n    return this[_].rowCount\n  }\n  public set rowCount(rowCount: number) {\n    this[_].rowCount = rowCount\n    this.updateScroll()\n    if (this[_].selection._updateGridRange()) {\n      const { col, row } = this[_].selection.focus\n      this.makeVisibleCell(col, row)\n      this.setFocusCursor(col, row)\n    }\n  }\n  /**\n   * Number of columns.\n   */\n  public get colCount(): number {\n    return this[_].colCount\n  }\n  public set colCount(colCount: number) {\n    this[_].colCount = colCount\n    this.updateScroll()\n    if (this[_].selection._updateGridRange()) {\n      const { col, row } = this[_].selection.focus\n      this.makeVisibleCell(col, row)\n      this.setFocusCursor(col, row)\n    }\n  }\n  /**\n   * Number of frozen columns.\n   */\n  public get frozenColCount(): number {\n    return this[_].frozenColCount\n  }\n  public set frozenColCount(frozenColCount: number) {\n    this[_].frozenColCount = frozenColCount\n  }\n  /**\n   * Number of frozen rows.\n   */\n  public get frozenRowCount(): number {\n    return this[_].frozenRowCount\n  }\n  public set frozenRowCount(frozenRowCount: number) {\n    this[_].frozenRowCount = frozenRowCount\n  }\n  /**\n   * Default row height.\n   *\n   */\n  public get defaultRowHeight(): number {\n    return this[_].defaultRowHeight || this.getDefaultRowHeight()\n  }\n  public set defaultRowHeight(defaultRowHeight: number) {\n    this[_].defaultRowHeight = defaultRowHeight\n  }\n  /**\n   * Default column width.\n   */\n  public get defaultColWidth(): string | number {\n    return this[_].defaultColWidth || this.getDefaultColWidth()\n  }\n  public set defaultColWidth(defaultColWidth: string | number) {\n    this[_].defaultColWidth = defaultColWidth\n  }\n  /**\n   * Highlight Border Width.\n   */\n  public get highlightBorderWidth(): string | number {\n    return this[_].highlightBorderWidth || this.getHighlightBorderWidth()\n  }\n  public set highlightBorderWidth(highlightBorderWidth: string | number) {\n    this[_].highlightBorderWidth = highlightBorderWidth\n  }\n  /**\n   * Font definition as a string.\n   */\n  public get font(): string {\n    return this[_].font || this.getDefaultFont()\n  }\n  public set font(font) {\n    this[_].font = font\n  }\n  /**\n   * Number of underlay rows.\n   */\n  public get underlayRowCount(): number {\n    return this[_].underlayRowCount\n  }\n  public set underlayRowCount(underlayRowCount: number) {\n    this[_].underlayRowCount = underlayRowCount\n  }\n  /**\n   * Number of underlay cols.\n   */\n  public get underlayColCount(): number {\n    return this[_].underlayColCount\n  }\n  public set underlayColCount(underlayColCount: number) {\n    this[_].underlayColCount = underlayColCount\n  }\n  /**\n   * Height of underlay row.\n   */\n  public get underlayRowHeight(): number | 'auto' {\n    return this[_].underlayRowHeight\n  }\n  public set underlayRowHeight(underlayRowHeight: number | 'auto') {\n    this[_].underlayRowHeight = underlayRowHeight\n  }\n  /**\n   * Width of underlay col.\n   */\n  public get underlayColWidth(): number | 'auto' {\n    return this[_].underlayColWidth\n  }\n  public set underlayColWidth(underlayColWidth: number | 'auto') {\n    this[_].underlayColWidth = underlayColWidth\n  }\n  /**\n   * Background color of the underlay.\n   */\n  public get underlayBackgroundColor(): string {\n    return (\n      this[_].underlayBackgroundColor ||\n      this.getDefaultUnderlayBackgroundColor()\n    )\n  }\n  public set underlayBackgroundColor(underlayBackgroundColor) {\n    this[_].underlayBackgroundColor = underlayBackgroundColor\n  }\n  /**\n   * Border color of the grid.\n   */\n  public get borderColor(): string {\n    return this[_].borderColor || this.getDefaultBorderColor()\n  }\n  public set borderColor(borderColor) {\n    this[_].borderColor = borderColor\n  }\n  /**\n   * Border width of the grid.\n   */\n  public get borderWidth(): number {\n    return this[_].borderWidth || this.getDefaultBorderWidth()\n  }\n  public set borderWidth(borderWidth) {\n    this[_].borderWidth = borderWidth\n  }\n  /**\n   * Border mode of the grid.\n   */\n  public get borderMode(): BorderMode {\n    return this[_].borderMode || this.getDefaultBorderMode()\n  }\n  public set borderMode(borderMode) {\n    this[_].borderMode = borderMode\n  }\n  public get keyboardOptions(): DrawGridKeyboardOptions | null {\n    return this[_].keyboardOptions ?? null\n  }\n  public set keyboardOptions(keyboardOptions) {\n    this[_].keyboardOptions = keyboardOptions ?? undefined\n  }\n  /**\n   * Single selection.\n   */\n  public get singleSelection(): boolean {\n    return this[_].singleSelection\n  }\n  public set singleSelection(singleSelection: boolean) {\n    this[_].singleSelection = singleSelection\n  }\n  /**\n   * Disable column resize.\n   */\n  public get disableColumnResize(): boolean {\n    return this[_].disableColumnResize\n  }\n  public set disableColumnResize(disableColumnResize: boolean) {\n    this[_].disableColumnResize = disableColumnResize\n  }\n  public get disableColResize(): boolean {\n    window.console.warn(\n      \"'disableColResize' is deprecated, please use 'disableColumnResize' instead\"\n    )\n    return this.disableColumnResize\n  }\n  public set disableColResize(disableColumnResize: boolean) {\n    window.console.warn(\n      \"'disableColResize' is deprecated, please use 'disableColumnResize' instead\"\n    )\n    this.disableColumnResize = disableColumnResize\n  }\n  public get canDragSelection() {\n    return this[_].selectionResizer.canStart()\n  }\n  public configure(\n    name: 'fadeinWhenCallbackInPromise',\n    value?: boolean\n  ): boolean\n  public configure(name: string, value?: any): any {\n    const cfg = this[_].config || (this[_].config = {})\n    if (isDef(value)) {\n      cfg[name] = value\n    }\n    return cfg[name]\n  }\n  /**\n   * Apply the changed size.\n   * @returns\n   */\n  public updateSize(): void {\n    // Update size of canvas\n    const { canvas } = this[_]\n    canvas.style.width = ''\n    canvas.style.height = ''\n\n    let width = canvas.offsetWidth\n    if (!width) {\n      // for legacy\n      const parent = canvas.parentElement\n      if (parent !== null) {\n        width = parent.offsetWidth - style.getScrollBarSize()\n      }\n    }\n    width = Math.floor(width)\n\n    let height = canvas.offsetHeight\n    if (!height) {\n      // for legacy\n      const parent = canvas.parentElement\n      if (parent !== null) {\n        height = parent.offsetHeight - style.getScrollBarSize()\n      }\n    }\n    height = Math.floor(height)\n\n    canvas.width = width\n    canvas.height = height\n\n    canvas.style.width = `${width}px`\n    canvas.style.height = `${height}px`\n\n    const sel = this[_].selection.select\n    this[_].focusControl.setFocusRect(\n      this.getFocusRectInternal(sel.col, sel.row)\n    )\n  }\n  /**\n   * Apply the changed scroll size.\n   * @returns `true` if there was a change in the scroll size\n   */\n  public updateScroll(): boolean {\n    _initColWidthsOffset(this)\n    const { scrollable } = this[_]\n    const newHeight = _getScrollHeight.call(this)\n    const newWidth = _getScrollWidth.call(this)\n    if (\n      newHeight === scrollable.scrollHeight &&\n      newWidth === scrollable.scrollWidth\n    ) {\n      scrollable.update()\n      return false\n    } else {\n      scrollable.setScrollSize(newWidth, newHeight)\n      this[_].scroll = {\n        left: scrollable.scrollLeft,\n        top: scrollable.scrollTop,\n      }\n      return true\n    }\n  }\n  /**\n   * Get the row height of the given the row index.\n   * @param row - The row index\n   * @returns The row height\n   */\n  public getRowHeight(row: number): number {\n    return _getRowHeight.call(this, row)\n  }\n  /**\n   * Set the row height of the given the row index.\n   * @param row - The row index\n   * @param height - The row height\n   * @returns\n   */\n  public setRowHeight(row: number, height: number): void {\n    _setRowHeight.call(this, row, height)\n  }\n  /**\n   * Get the column width of the given the column index.\n   * @param col - The column index\n   * @returns The column width\n   */\n  public getColWidth(col: number): number {\n    return _getColWidth.call(this, col)\n  }\n  /**\n   * Set the column widtht of the given the column index.\n   * @param col - The column index\n   * @param width - The column width\n   * @returns\n   */\n  public setColWidth(col: number, width: number | string): void {\n    _setColWidth.call(this, col, width)\n  }\n  /**\n   * Get the column max width of the given the column index.\n   * @param col - The column index\n   * @returns The column max width\n   */\n  public getMaxColWidth(col: number): string | number | undefined {\n    const obj = this[_].colWidthsLimit[col]\n    return (obj && obj.max) || undefined\n  }\n  /**\n   * Set the column max width of the given the column index.\n   * @param col - The column index\n   * @param maxWidth - The column max width\n   * @returns\n   */\n  public setMaxColWidth(col: number, maxWidth: number | string): void {\n    const obj =\n      this[_].colWidthsLimit[col] || (this[_].colWidthsLimit[col] = {})\n    obj.max = maxWidth\n  }\n  /**\n   * Get the column min width of the given the column index.\n   * @param col - The column index\n   * @returns The column min width\n   */\n  public getMinColWidth(col: number): string | number | undefined {\n    const obj = this[_].colWidthsLimit[col]\n    return (obj && obj.min) || undefined\n  }\n  /**\n   * Set the column min width of the given the column index.\n   * @param col - The column index\n   * @param minWidth - The column min width\n   * @returns\n   */\n  public setMinColWidth(col: number, minWidth: number | string): void {\n    const obj =\n      this[_].colWidthsLimit[col] || (this[_].colWidthsLimit[col] = {})\n    obj.min = minWidth\n  }\n  /**\n   * Get the column disable resize of the given the column index.\n   * @param col - The column index\n   * @returns The column disable resize\n   */\n  public getColDisableResize(col: number) {\n    const obj = this[_].colWidthsLimit[col]\n    return (obj && obj.disableResize) || undefined\n  }\n  /**\n   * Set the column disable resize of the given the column index.\n   * @param col - The column index\n   * @param disableResize - The column disable resize\n   * @returns\n   */\n  public setColDisableResize(col: number, disableResize: boolean) {\n    const obj =\n      this[_].colWidthsLimit[col] || (this[_].colWidthsLimit[col] = {})\n    obj.disableResize = disableResize\n  }\n  /**\n   * Get the rect of the cell.\n   * @param col - index of column, of the cell\n   * @param row - index of row, of the cell\n   * @returns the rect of the cell.\n   */\n  public getCellRect(col: number, row: number): Rect {\n    const isFrozenCell = this.isFrozenCell(col, row)\n\n    let absoluteLeft = this._getColsWidth(0, col - 1)\n    const width = _getColWidth.call(this, col)\n    if (isFrozenCell && isFrozenCell.col) {\n      absoluteLeft += this[_].scroll.left\n    }\n\n    let absoluteTop = _getRowsHeight.call(this, 0, row - 1)\n    const height = _getRowHeight.call(this, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      absoluteTop += this[_].scroll.top\n    }\n    return new Rect(absoluteLeft, absoluteTop, width, height)\n  }\n  /**\n   * Get the relative rectangle of the cell.\n   * @param col - index of column, of the cell\n   * @param row - index of row, of the cell\n   * @returns the rect of the cell.\n   */\n  public getCellRelativeRect(col: number, row: number): Rect {\n    return this._toRelativeRect(this.getCellRect(col, row))\n  }\n  /**\n   * Get the rectangle of the cells area.\n   * @param startCol - index of the starting column, of the cell\n   * @param startRow - index of the starting row, of the cell\n   * @param endCol - index of the ending column, of the cell\n   * @param endRow - index of the ending row, of the cell\n   * @returns the rect of the cells.\n   */\n  public getCellsRect(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number\n  ) {\n    const isFrozenStartCell = this.isFrozenCell(startCol, startRow)\n    const isFrozenEndCell = this.isFrozenCell(endCol, endRow)\n\n    let absoluteLeft = this._getColsWidth(0, startCol - 1)\n    let width = this._getColsWidth(startCol, endCol)\n    if (isFrozenStartCell && isFrozenStartCell.col) {\n      const scrollLeft = this[_].scroll.left\n      absoluteLeft += scrollLeft\n      if (!isFrozenEndCell || !isFrozenEndCell.col) {\n        width -= scrollLeft\n        width = Math.max(\n          width,\n          this._getColsWidth(startCol, this.frozenColCount - 1)\n        )\n      }\n    }\n    let absoluteTop = _getRowsHeight.call(this, 0, startRow - 1)\n    let height = _getRowsHeight.call(this, startRow, endRow)\n    if (isFrozenStartCell && isFrozenStartCell.row) {\n      const scrollTop = this[_].scroll.top\n      absoluteTop += scrollTop\n      if (!isFrozenEndCell || !isFrozenEndCell.row) {\n        height -= scrollTop\n        height = Math.max(\n          height,\n          this._getColsWidth(startRow, this.frozenRowCount - 1)\n        )\n      }\n    }\n    return new Rect(absoluteLeft, absoluteTop, width, height)\n  }\n  public getCellRangeRect(range: CellRange): Rect {\n    return this.getCellsRect(\n      range.start.col,\n      range.start.row,\n      range.end.col,\n      range.end.row\n    )\n  }\n  public isFrozenCell(\n    col: number,\n    row: number\n  ): {\n    row: boolean\n    col: boolean\n  } | null {\n    const { frozenRowCount, frozenColCount } = this[_]\n    const isFrozenRow = frozenRowCount > 0 && row < frozenRowCount\n    const isFrozenCol = frozenColCount > 0 && col < frozenColCount\n    if (isFrozenRow || isFrozenCol) {\n      return {\n        col: isFrozenCol,\n        row: isFrozenRow,\n      }\n    } else {\n      return null\n    }\n  }\n  public getRowAt(absoluteY: number): number {\n    const frozen = _getTargetFrozenRowAt.call(this, absoluteY)\n    if (frozen) {\n      return frozen.row\n    }\n    const row = _getTargetRowAt.call(this, absoluteY)\n    return row ? row.row : -1\n  }\n  public getColAt(absoluteX: number): number {\n    const frozen = _getTargetFrozenColAt.call(this, absoluteX)\n    if (frozen) {\n      return frozen.col\n    }\n    const col = _getTargetColAt.call(this, absoluteX)\n    return col ? col.col : -1\n  }\n  public getCellAt(absoluteX: number, absoluteY: number): CellAddress {\n    return {\n      col: this.getColAt(absoluteX),\n      row: this.getRowAt(absoluteY),\n    }\n  }\n  /**\n   * Scroll to where cell is visible.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns\n   */\n  public makeVisibleCell(col: number, row: number): void {\n    const isFrozenCell = this.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.col && isFrozenCell.row) {\n      return\n    }\n    const rect = this.getCellRect(col, row)\n    const visibleRect = _getScrollableVisibleRect.call(this)\n    if (visibleRect.contains(rect)) {\n      return\n    }\n    const { scrollable } = this[_]\n    if (!isFrozenCell || !isFrozenCell.col) {\n      if (rect.left < visibleRect.left) {\n        scrollable.scrollLeft -= visibleRect.left - rect.left\n      } else if (visibleRect.right < rect.right) {\n        scrollable.scrollLeft -= visibleRect.right - rect.right\n      }\n    }\n    if (!isFrozenCell || !isFrozenCell.row) {\n      if (rect.top < visibleRect.top) {\n        scrollable.scrollTop -= visibleRect.top - rect.top\n      } else if (visibleRect.bottom < rect.bottom) {\n        scrollable.scrollTop -= visibleRect.bottom - rect.bottom\n      }\n    }\n  }\n  /**\n   * Moves the focus cursor to the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns\n   */\n  public setFocusCursor(col: number, row: number): void {\n    const focusControl = this[_].focusControl\n    const oldEditMode = focusControl.editMode\n\n    focusControl.setFocusRect(this.getFocusRectInternal(col, row))\n\n    this._updatedSelection()\n\n    if (oldEditMode && !focusControl.editMode) {\n      focusControl.resetInputStatus()\n    }\n  }\n  public _updatedSelection(): void {\n    const { focusControl } = this[_]\n    const { col: selCol, row: selRow } = this[_].selection.select\n    const results = this.fireListeners(DG_EVENT_TYPE.EDITABLEINPUT_CELL, {\n      col: selCol,\n      row: selRow,\n    })\n\n    const editMode = array.findIndex(results, (v) => !!v) >= 0\n    focusControl.editMode = editMode\n\n    if (editMode) {\n      focusControl.storeInputStatus()\n      focusControl.setDefaultInputStatus()\n      this.fireListeners(DG_EVENT_TYPE.MODIFY_STATUS_EDITABLEINPUT_CELL, {\n        col: selCol,\n        row: selRow,\n        input: focusControl.input,\n      })\n    }\n  }\n  /**\n   * Focus the cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns\n   */\n  public focusCell(col: number, row: number): void {\n    const startCol = this.selection.range.start.col\n    const startRow = this.selection.range.start.row\n    const endCol = this.selection.range.end.col\n    const endRow = this.selection.range.end.row\n\n    this.setFocusCursor(col, row)\n\n    // Failure occurs in IE if focus is not last\n    this._forceFocusCell()\n\n    // Invalidate Grid\n    this.selection.select = {\n      col,\n      row,\n    }\n    this.invalidateGridRect(startCol, startRow, endCol, endRow)\n    this.invalidateCell(col, row)\n  }\n  /**\n   * Redraws the range of the given cell.\n   * @param col - The column index of cell.\n   * @param row - The row index of cell.\n   * @returns\n   */\n  public invalidateCell(col: number, row: number): void {\n    this.invalidateGridRect(col, row)\n  }\n  /**\n   * Redraws the range of the given cells.\n   * @param startCol - index of the starting column, of the cell\n   * @param startRow - index of the starting row, of the cell\n   * @param endCol - index of the ending column, of the cell\n   * @param endRow - index of the ending row, of the cell\n   * @returns\n   */\n  public invalidateGridRect(\n    startCol: number,\n    startRow: number,\n    endCol = startCol,\n    endRow = startRow\n  ): void {\n    const offset = this.getOffsetInvalidateCells()\n    if (offset > 0) {\n      startCol -= offset\n      startRow -= offset\n      endCol += offset\n      endRow += offset\n    }\n\n    const visibleRect = this._getVisibleRect()\n    const cellsRect = this.getCellsRect(startCol, startRow, endCol, endRow)\n    const invalidateTarget = visibleRect.intersection(cellsRect)\n    if (invalidateTarget) {\n      const { frozenColCount, frozenRowCount } = this[_]\n      if (frozenColCount > 0 && endCol >= frozenColCount) {\n        const frozenRect = _getFrozenColsRect.call(this)\n        if (frozenRect && frozenRect.intersection(invalidateTarget)) {\n          invalidateTarget.left = Math.min(\n            frozenRect.right - 1,\n            frozenRect.left\n          )\n        }\n      }\n\n      if (frozenRowCount > 0 && endRow >= frozenRowCount) {\n        const frozenRect = _getFrozenRowsRect.call(this)\n        if (frozenRect && frozenRect.intersection(invalidateTarget)) {\n          invalidateTarget.top = Math.min(\n            frozenRect.bottom - 1,\n            invalidateTarget.top\n          )\n        }\n      }\n\n      this._invalidateRect(invalidateTarget)\n    }\n  }\n  invalidateCellRange(range: CellRange): void {\n    this.invalidateGridRect(\n      range.start.col,\n      range.start.row,\n      range.end.col,\n      range.end.row\n    )\n  }\n  /**\n   * Redraws the whole grid.\n   * @returns\n   */\n  public invalidate(): void {\n    const visibleRect = this._getVisibleRect()\n    this._invalidateRect(visibleRect)\n  }\n  /**\n   * Get the number of scrollable rows fully visible in the grid. visibleRowCount does not include the frozen rows counted by the frozenRowCount property. It does not include any partially visible rows on the bottom of the grid.\n   * @returns\n   */\n  public get visibleRowCount(): number {\n    const { frozenRowCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleTop =\n      frozenRowCount > 0\n        ? visibleRect.top + _getRowsHeight.call(this, 0, frozenRowCount - 1)\n        : visibleRect.top\n\n    const initRow = _getTargetRowAt.call(this, visibleTop)\n    if (!initRow) {\n      return 0\n    }\n    const startRow = Math.max(\n      initRow.top >= visibleTop ? initRow.row : initRow.row + 1,\n      frozenRowCount\n    )\n    let absoluteTop = _getRowsHeight.call(this, 0, startRow - 1)\n    let count = 0\n    const { rowCount } = this\n    for (let row = startRow; row < rowCount; row++) {\n      const height = _getRowHeight.call(this, row)\n      const bottom = absoluteTop + height\n      if (visibleRect.bottom < bottom) {\n        break\n      }\n      count++\n      absoluteTop = bottom\n    }\n    return count\n  }\n  /**\n   * Get the number of scrollable columns fully visible in the grid. visibleColCount does not include the frozen columns counted by the frozenColCount property. It does not include any partially visible columns on the right of the grid.\n   * @returns\n   */\n  public get visibleColCount(): number {\n    const { frozenColCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleLeft =\n      frozenColCount > 0\n        ? visibleRect.left + this._getColsWidth(0, frozenColCount - 1)\n        : visibleRect.left\n\n    const initCol = _getTargetColAt.call(this, visibleLeft)\n    if (!initCol) {\n      return 0\n    }\n    const startCol = Math.max(\n      initCol.left >= visibleLeft ? initCol.col : initCol.col + 1,\n      frozenColCount\n    )\n    let absoluteLeft = this._getColsWidth(0, startCol - 1)\n    let count = 0\n    const { colCount } = this\n    for (let col = startCol; col < colCount; col++) {\n      const width = _getColWidth.call(this, col)\n      const right = absoluteLeft + width\n      if (visibleRect.right < right) {\n        break\n      }\n      count++\n      absoluteLeft = right\n    }\n    return count\n  }\n  /**\n   * Get the index of the first row in the scrollable region that is visible.\n   * @returns\n   */\n  public get topRow(): number {\n    const { frozenRowCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleTop =\n      frozenRowCount > 0\n        ? visibleRect.top + _getRowsHeight.call(this, 0, frozenRowCount - 1)\n        : visibleRect.top\n\n    const initRow = _getTargetRowAt.call(this, visibleTop)\n    if (!initRow) {\n      return 0\n    }\n    return Math.max(\n      initRow.top >= visibleTop ? initRow.row : initRow.row + 1,\n      frozenRowCount\n    )\n  }\n  /**\n   * Get the index of the first column in the scrollable region that is visible.\n   * @returns\n   */\n  public get leftCol(): number {\n    const { frozenColCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleLeft =\n      frozenColCount > 0\n        ? visibleRect.left + this._getColsWidth(0, frozenColCount - 1)\n        : visibleRect.left\n\n    const initCol = _getTargetColAt.call(this, visibleLeft)\n    if (!initCol) {\n      return 0\n    }\n    return Math.max(\n      initCol.left >= visibleLeft ? initCol.col : initCol.col + 1,\n      frozenColCount\n    )\n  }\n  /**\n   * gets or sets the number of pixels that an element's content is scrolled vertically\n   */\n  public get scrollTop(): number {\n    return this[_].scrollable.scrollTop\n  }\n  public set scrollTop(scrollTop) {\n    this[_].scrollable.scrollTop = scrollTop\n  }\n  /**\n   * gets or sets the number of pixels that an element's content is scrolled from its left edge\n   */\n  public get scrollLeft(): number {\n    return this[_].scrollable.scrollLeft\n  }\n  public set scrollLeft(scrollLeft) {\n    this[_].scrollable.scrollLeft = scrollLeft\n  }\n  /**\n   * Get the overflowed text in the cell rectangle, from the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns The text overflowing the cell rect.\n   */\n  public getCellOverflowText(col: number, row: number): string | null {\n    let overflowText = this.getCellOverflowTextInternal({ col, row }) || null\n    if (!overflowText) {\n      const key = `${col}:${row}`\n      overflowText = this[_].cellTextOverflows[key] || null\n    }\n    return overflowText\n  }\n  /**\n   * Set the overflowed text in the cell rectangle, to the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @param overflowText - The overflowed text in the cell rectangle.\n   * @returns\n   */\n  public setCellOverflowText(\n    col: number,\n    row: number,\n    overflowText: string | false\n  ) {\n    const key = `${col}:${row}`\n    if (overflowText) {\n      this[_].cellTextOverflows[key] =\n        typeof overflowText === 'string' ? overflowText.trim() : ''\n    } else {\n      delete this[_].cellTextOverflows[key]\n    }\n  }\n  /**\n   * Get the overflowed type in the cell rectangle, from the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns The type overflowing the cell rect.\n   */\n  public getCellOverflowType(col: number, row: number): string | null {\n    let overflowType = this.getCellOverflowTypeInternal({ col, row }) || null\n    if (!overflowType) {\n      const key = `${col}:${row}`\n      overflowType = this[_].cellTypeOverflows[key] || null\n    }\n    return overflowType\n  }\n  /**\n   * Set the overflowed type in the cell rectangle, to the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @param overflowType - The overflowed type in the cell rectangle.\n   * @returns\n   */\n  public setCellOverflowType(\n    col: number,\n    row: number,\n    overflowType: string | false\n  ) {\n    const key = `${col}:${row}`\n    if (overflowType) {\n      this[_].cellTypeOverflows[key] =\n        typeof overflowType === 'string' ? overflowType.trim() : ''\n    } else {\n      delete this[_].cellTypeOverflows[key]\n    }\n  }\n  public addDisposable(disposable: IDisposable) {\n    if (\n      !disposable ||\n      !disposable.dispose ||\n      typeof disposable.dispose !== 'function'\n    ) {\n      throw new Error('not disposable!')\n    }\n    const disposables = (this[_].disposables = this[_].disposables || [])\n    disposables.push(disposable)\n  }\n  /**\n   * Dispose the grid instance.\n   * @returns\n   */\n  public dispose() {\n    super.dispose()\n    const protectedSpace = this[_]\n    protectedSpace.handler.dispose()\n    protectedSpace.scrollable.dispose()\n    protectedSpace.focusControl.dispose()\n    protectedSpace.columnResizer.dispose()\n    protectedSpace.selectionResizer.dispose()\n    protectedSpace.cellSelector.dispose()\n    if (protectedSpace.disposables) {\n      protectedSpace.disposables.forEach((disposable: IDisposable) =>\n        disposable.dispose()\n      )\n      protectedSpace.disposables = null\n    }\n\n    const parentElement = protectedSpace.element.parentElement\n    if (parentElement) {\n      parentElement.removeChild(protectedSpace.element)\n    }\n  }\n  public getAttachCellsArea(range: CellRange) {\n    return {\n      element: this.getElement(),\n      rect: this.getAttachCellsAreaInternal(range),\n      padding: this.getAttachCellsPaddingInternal(range),\n    }\n  }\n  public onKeyDownMove(evt: KeyboardEvent): void {\n    _onKeyDownMove.call(this, evt)\n  }\n  public _getMouseAbstractPoint(evt: Event) {\n    let e: Touch | MouseEvent\n    if (event.isTouchEvent(evt)) {\n      e = evt.changedTouches[0]\n    } else {\n      e = evt as MouseEvent\n    }\n    const clientX = e.clientX || e.pageX + window.scrollX\n    const clientY = e.clientY || e.pageY + window.scrollY\n    const rect = this[_].canvas.getBoundingClientRect()\n    if (rect.right <= clientX) {\n      return null\n    }\n    if (rect.bottom <= clientY) {\n      return null\n    }\n    const x = clientX - rect.left + this[_].scroll.left\n    const y = clientY - rect.top + this[_].scroll.top\n    return { x, y }\n  }\n  public _getMouseRelativePoint(e: Event) {\n    const abstractPos = this._getMouseAbstractPoint(e)\n    if (abstractPos) {\n      return {\n        x: abstractPos.x - this[_].scroll.left,\n        y: abstractPos.y - this[_].scroll.top,\n      }\n    } else {\n      return null\n    }\n  }\n  public _getColsWidth(startCol: number, endCol: number) {\n    const defaultColPxWidth = _colWidthDefineToPxWidth.call(\n      this,\n      this.defaultColWidth\n    )\n    const colCount = endCol - startCol + 1\n    let w = defaultColPxWidth * colCount\n    this[_].colWidthsMap.each(\n      startCol,\n      endCol,\n      (width: number | string, col: number) => {\n        w +=\n          _adjustColWidth.call(\n            this,\n            col,\n            _colWidthDefineToPxWidth.call(this, width)\n          ) - defaultColPxWidth\n      }\n    )\n    for (let col = startCol; col <= endCol; col++) {\n      if (this[_].colWidthsMap.has(col)) {\n        continue\n      }\n      const adj = _adjustColWidth.call(this, col, defaultColPxWidth)\n      if (adj !== defaultColPxWidth) {\n        w += adj - defaultColPxWidth\n      }\n    }\n    return w\n  }\n  public _moveFocusCell(\n    col: number,\n    row: number,\n    shiftKey: boolean,\n    silence?: boolean\n  ) {\n    const offset = this.getOffsetInvalidateCells()\n\n    function extendRange(range: any) {\n      if (offset > 0) {\n        range.start.col -= offset\n        range.start.row -= offset\n        range.end.col += offset\n        range.end.row += offset\n      }\n      return range\n    }\n\n    const beforeRange = extendRange(this.selection.range)\n    const beforeRect = this.getCellRangeRect(beforeRange)\n\n    this.selection._setFocusCell(col, row, shiftKey)\n    if (!silence) {\n      this.makeVisibleCell(col, row)\n    }\n    this.setFocusCursor(col, row)\n    this._forceFocusCell()\n\n    const afterRange = extendRange(this.selection.range)\n    const afterRect = this.getCellRangeRect(afterRange)\n\n    if (afterRect.intersection(beforeRect)) {\n      const invalidateRect = Rect.max(afterRect, beforeRect)\n      this._invalidateRect(invalidateRect)\n    } else {\n      this._invalidateRect(beforeRect)\n      this._invalidateRect(afterRect)\n    }\n  }\n  public _forceFocusCell() {\n    this[_].focusControl.focus()\n  }\n  public _resetColWidthOffset(col: number) {\n    delete this[_].colWidthsOffset[col]\n  }\n  public _adjustColWidth(col: number, orgWidth: number) {\n    const offset = this[_].colWidthsOffset[col] || 0\n    const limits = _getColWidthLimits.call(this, col)\n    return Math.max(_applyColWidthLimits(limits, orgWidth), 0) + offset\n  }\n  public _getVisibleRect() {\n    const left = this[_].scroll.left\n    const top = this[_].scroll.top\n    const width = this[_].canvas.width\n    const height = this[_].canvas.height\n    return new Rect(left, top, width, height)\n  }\n  public _invalidateRect(drawRect: Rect) {\n    const ctx = this._getInitContext()\n    if (ctx) {\n      const visibleRect = this._getVisibleRect()\n      const rowCount = this[_].rowCount\n\n      const initRow = _getTargetRowAt.call(\n        this,\n        Math.max(visibleRect.top, drawRect.top)\n      ) || {\n        row: rowCount,\n        top: _getRowsHeight.call(this, 0, rowCount - 1),\n      }\n      const initCol = _getTargetColAt.call(\n        this,\n        Math.max(visibleRect.left, drawRect.left)\n      ) || {\n        col: this[_].colCount,\n        left: this._getColsWidth(0, this[_].colCount - 1),\n      }\n      const drawBottom = Math.min(visibleRect.bottom, drawRect.bottom)\n      const drawRight = Math.min(visibleRect.right, drawRect.right)\n\n      const initFrozenRow = _getTargetFrozenRowAt.call(\n        this,\n        Math.max(visibleRect.top, drawRect.top)\n      )\n      const initFrozenCol = _getTargetFrozenColAt.call(\n        this,\n        Math.max(visibleRect.left, drawRect.left)\n      )\n\n      const drawLayers = new DrawLayers()\n\n      const drawGridBorder = () => {\n        const isContent = this.borderMode === 'content-border'\n        const isGrid = this.borderMode === 'grid-border'\n        if (isGrid || isContent) {\n          let width = this[_].canvas.width\n          let height = this[_].canvas.height\n          if (isContent) {\n            let w =\n              this._getColsWidth(0, this[_].colCount - 1) - visibleRect.left\n            let h = _getRowsHeight.call(this, 0, rowCount - 1) - visibleRect.top\n            width = Math.min(this[_].canvas.width, w)\n            height = Math.min(this[_].canvas.height, h)\n          }\n          ctx.save()\n          try {\n            ctx.beginPath()\n            ctx.lineWidth = this.borderWidth || 0\n            ctx.strokeStyle = this.borderColor || 'transparent'\n            ctx.rect(\n              0 + ctx.lineWidth / 2,\n              0 + ctx.lineWidth / 2,\n              width - ctx.lineWidth,\n              height - ctx.lineWidth\n            )\n            ctx.stroke()\n          } finally {\n            ctx.restore()\n          }\n        }\n      }\n\n      const drawOuter = (row: number, absoluteTop: number) => {\n        // 在数据范围之外绘制\n        if (\n          row >= rowCount - 1 &&\n          this[_].canvas.height > absoluteTop - visibleRect.top\n        ) {\n          const outerTop = absoluteTop - visibleRect.top\n          if (this.underlayBackgroundColor === 'transparent') {\n            ctx.clearRect(\n              0,\n              outerTop,\n              this[_].canvas.width,\n              this[_].canvas.height - outerTop\n            )\n          } else {\n            ctx.save()\n            ctx.beginPath()\n            ctx.fillStyle = this.underlayBackgroundColor || '#F6F6F6'\n            ctx.rect(\n              0,\n              outerTop,\n              this[_].canvas.width,\n              this[_].canvas.height - outerTop\n            )\n            ctx.fill()\n            ctx.restore()\n          }\n        }\n      }\n\n      let skipAbsoluteTop = 0\n      if (initFrozenRow) {\n        let absoluteTop = initFrozenRow.top\n        const count = this[_].frozenRowCount\n        for (let row = initFrozenRow.row; row < count; row++) {\n          const height = _getRowHeight.call(this, row)\n          _drawRow.call(\n            this,\n            ctx,\n            initFrozenCol,\n            initCol,\n            drawRight,\n            row,\n            absoluteTop,\n            height,\n            visibleRect,\n            0,\n            drawLayers\n          )\n          absoluteTop += height\n          if (drawBottom <= absoluteTop) {\n            // 在绘制范围之外（结束）\n            drawOuter(row, absoluteTop)\n            drawGridBorder()\n            drawLayers.draw(ctx)\n            return\n          }\n        }\n        skipAbsoluteTop = absoluteTop\n      }\n\n      let rowAbsoluteTop = initRow.top\n      for (let row = initRow.row; row < rowCount; row++) {\n        const height = _getRowHeight.call(this, row)\n\n        // 绘制行\n        _drawRow.call(\n          this,\n          ctx,\n          initFrozenCol,\n          initCol,\n          drawRight,\n          row,\n          rowAbsoluteTop,\n          height,\n          visibleRect,\n          skipAbsoluteTop,\n          drawLayers\n        )\n\n        rowAbsoluteTop += height\n        if (drawBottom <= rowAbsoluteTop) {\n          // 在绘制范围之外（结束）\n          drawOuter(row, rowAbsoluteTop)\n          drawGridBorder()\n          drawLayers.draw(ctx)\n          return\n        }\n      }\n      drawOuter(rowCount - 1, rowAbsoluteTop)\n      drawGridBorder()\n\n      drawLayers.draw(ctx)\n    }\n  }\n  public _getInitContext() {\n    const ctx = this[_].context\n    if (ctx) {\n      // 初始化\n      ctx.fillStyle = 'white'\n      ctx.strokeStyle = 'black'\n      ctx.textAlign = 'left'\n      ctx.textBaseline = 'top'\n      ctx.lineWidth = 1\n      ctx.font = this.font || '16px sans-serif'\n    }\n    return ctx\n  }\n  public _toRelativeRect(absoluteRect: Rect) {\n    const rect = absoluteRect.copy()\n    const visibleRect = this._getVisibleRect()\n    rect.offsetLeft(-visibleRect.left)\n    rect.offsetTop(-visibleRect.top)\n\n    return rect\n  }\n  /**\n   * Overwrites the definition of a column whose width is set to `auto` with the current auto width formula.\n   * @param grid - grid instance\n   * @returns\n   */\n  public _storeAutoColWidthExprs() {\n    let expr = null\n    for (let col = 0; col < this[_].colCount; col++) {\n      const def = _getColWidthDefine.call(this, col)\n      if (isAutoDefine(def)) {\n        _setColWidth.call(\n          this,\n          col,\n          expr || (expr = _calcAutoColWidthExpr.call(this))\n        )\n      }\n    }\n  }\n  public resize() {\n    if (this.getElement().offsetParent) {\n      // 只在元素可见时刷新\n      this.updateSize()\n      this.updateScroll()\n      this.invalidate()\n    }\n  }\n  /**\n   * Get the value of cell with the copy action.\n   * <p>\n   * Please implement\n   * </p>\n   *\n   * @param col - Column index of cell.\n   * @param row - Row index of cell.\n   * @returns the value of cell\n   */\n  protected getCopyCellValue(\n    _col: number,\n    _row: number,\n    _range: CellRange\n  ): string | Promise<string> | void {\n    // Please implement get cell value!!\n  }\n  /**\n   * Draw a cell\n   * <p>\n   * Please implement cell drawing.\n   * </p>\n   *\n   * @param col - Column index of cell.\n   * @param row - Row index of cell.\n   * @param context - context of cell drawing.\n   * @returns\n   */\n  protected abstract onDrawCell(\n    col: number,\n    row: number,\n    context: CellContext\n  ): Promise<void> | void\n  protected bindEventsInternal() {\n    // nothing\n  }\n  protected getTargetRowAtInternal(\n    _absoluteY: number\n  ): { row: number; top: number } | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getRowsHeightInternal(\n    _startRow: number,\n    _endRow: number\n  ): number | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getRowHeightInternal(_row: number): number | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getScrollHeightInternal(_row?: number): number | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getMoveLeftColByKeyDownInternal({ col }: CellAddress): number {\n    return col - 1\n  }\n  protected getMoveRightColByKeyDownInternal({ col }: CellAddress): number {\n    return col + 1\n  }\n  protected getMoveUpRowByKeyDownInternal({ row }: CellAddress): number {\n    return row - 1\n  }\n  protected getMoveDownRowByKeyDownInternal({ row }: CellAddress): number {\n    return row + 1\n  }\n  protected getOffsetInvalidateCells(): number {\n    return 0\n  }\n  protected getCopyRangeInternal(range: CellRange): CellRange {\n    return range\n  }\n  protected getAttachCellsAreaInternal(range: CellRange) {\n    return this._toRelativeRect(this.getCellRangeRect(range))\n  }\n  protected getAttachCellsPaddingInternal(\n    _range: CellRange\n  ): [number, number, number, number] {\n    return [0, 3, 0, 3]\n  }\n  protected getFocusRectInternal(col: number, row: number) {\n    return this.getCellRect(col, row)\n  }\n  protected getDefaultRowHeight() {\n    return 40\n  }\n  protected getDefaultColWidth() {\n    return 80\n  }\n  protected getHighlightBorderWidth() {\n    return 2\n  }\n  protected updateSelectionRange(range: CellRange) {\n    return range\n  }\n  protected getCellOverflowTextInternal(_cell: CellAddress) {\n    return ''\n  }\n  protected getCellOverflowTypeInternal(_cell: CellAddress) {\n    return ''\n  }\n  protected getDefaultBorderMode() {\n    return 'none'\n  }\n  fireListeners<TYPE extends keyof DrawGridEventHandlersEventMap>(\n    type: TYPE,\n    ...event: DrawGridEventHandlersEventMap[TYPE]\n  ): DrawGridEventHandlersReturnMap[TYPE][] {\n    return super.fireListeners(type, ...event)\n  }\n  protected abstract getDefaultFont(): string\n  protected abstract getDefaultUnderlayBackgroundColor(): string\n  protected abstract getDefaultBorderColor(): string\n  protected abstract getDefaultBorderWidth(): number\n}\n","import { DrawGrid } from './core/DrawGrid'\nimport { DG_EVENT_TYPE, DrawGridEvents } from './core/draw-grid/DG_EVENT_TYPE'\n\n/**\n * core modules\n */\nexport const core = { DrawGrid, EVENT_TYPE: DG_EVENT_TYPE as DrawGridEvents }\n","import { DataSource, DataSourceParam } from './DataSource'\nimport {\n  FieldData,\n  FieldDef,\n  MaybePromise,\n  MaybePromiseOrUndef,\n} from '../ts-types'\nimport { PromiseCacheValue } from './internal/types'\n\nfunction _setFieldCache<T, F extends FieldDef<T>>(\n  fCache: { [index: number]: Map<FieldDef<T>, any> },\n  index: number,\n  field: F,\n  value: PromiseCacheValue<any>\n): void {\n  const recCache = fCache[index] || (fCache[index] = new Map())\n  recCache.set(field, value)\n}\n/**\n * grid data source for caching Promise data\n */\nexport class CachedDataSource<T> extends DataSource<T> {\n  private _rCache: { [index: number]: any }\n  private _fCache: { [index: number]: Map<FieldDef<T>, any> }\n  static get EVENT_TYPE(): typeof DataSource.EVENT_TYPE {\n    return DataSource.EVENT_TYPE\n  }\n  static ofArray<T>(array: T[]): CachedDataSource<T> {\n    return new CachedDataSource({\n      get: (index: number): T => array[index],\n      length: array.length,\n      source: array,\n    })\n  }\n  constructor(opt?: DataSourceParam<T>) {\n    super(opt)\n    this._rCache = {}\n    this._fCache = {}\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    if (this._rCache && this._rCache[index]) {\n      return this._rCache[index]\n    }\n    return super.getOriginal(index)\n  }\n  protected getOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F\n  ): FieldData {\n    const rowCache = this._fCache && this._fCache[index]\n    if (rowCache) {\n      const cache = rowCache.get(field)\n      if (cache) {\n        return cache\n      }\n    }\n    return super.getOriginalField(index, field)\n  }\n  protected setOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: any\n  ): MaybePromise<boolean> {\n    const fCache = this._fCache\n    if (fCache && fCache[index]) {\n      delete fCache[index] // clear row cache\n    }\n    return super.setOriginalField(index, field, value)\n  }\n  public clearCache(): void {\n    if (this._rCache) {\n      this._rCache = {}\n    }\n    if (this._fCache) {\n      this._fCache = {}\n    }\n  }\n  protected fieldPromiseCallBackInternal<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: PromiseCacheValue<any>\n  ): void {\n    _setFieldCache(this._fCache, index, field, value)\n  }\n  protected recordPromiseCallBackInternal(\n    index: number,\n    record: PromiseCacheValue<T>\n  ): void {\n    this._rCache[index] = record\n  }\n  public dispose(): void {\n    super.dispose()\n  }\n}\n","import { DataSource } from './DataSource'\n\nenum aggregateType {\n  count,\n  sum,\n  avg,\n  max,\n  min,\n}\n\ninterface IPivotBase {\n  field: string\n}\n\ninterface IPivotColumn extends IPivotBase {\n  aggregate: aggregateType\n}\n\ninterface IPivotRow extends IPivotBase {}\n\ninterface IPivotCol extends IPivotBase {}\n\ninterface IPivotDataSourceOptions {\n  rowPivots: IPivotRow[]\n  colPivots: IPivotCol[]\n  columns: IPivotColumn[]\n}\n\ninterface IPivotKeysMap<T> {\n  [rowKey: string]: {\n    [colKey: string]: T[]\n  }\n}\n\ninterface IPivotDistinctMap {\n  [field: string]: string[]\n}\n\ninterface IPivotDistinctKeysMap {\n  [field: string]: {\n    [value: string]: boolean\n  }\n}\n\nfunction _getPivotRecordKey<T>(\n  record: T,\n  pivots: IPivotBase[],\n  distinctKeys: IPivotDistinctKeysMap\n) {\n  const keys = []\n  for (const i of pivots) {\n    const field = i.field\n    const value = JSON.stringify((record as any)[i.field]) || ''\n    distinctKeys[field] = distinctKeys[field] || {}\n    distinctKeys[field][value] = true\n    keys.push(value)\n  }\n  return keys.join('_')\n}\n\n/**\n * grid data source for pivot\n */\nexport class PivotDataSource<T> extends DataSource<T> {\n  public static get EVENT_TYPE() {\n    return DataSource.EVENT_TYPE\n  }\n  private _dataSource: DataSource<T>\n  private _options: IPivotDataSourceOptions\n  private _records: T[] = []\n  private _keysMap: IPivotKeysMap<T> = {}\n  private _distinctMap: IPivotDistinctMap = {}\n  public constructor(\n    dataSource: DataSource<T>,\n    options: IPivotDataSourceOptions\n  ) {\n    super(dataSource)\n    this._dataSource = dataSource\n\n    this._options = options\n\n    this.refresh()\n  }\n  public get options() {\n    return this._options\n  }\n  protected getOriginal(index: number) {\n    return this._records[index]\n  }\n  public refresh() {\n    this._keysMap = {}\n    const distinctKeys: IPivotDistinctKeysMap = {}\n    const rowPivots = this._options.rowPivots || []\n    const colPivots = this._options.colPivots || []\n    const begin = new Date()\n    for (let i = 0; i < this._dataSource.length; i++) {\n      const record = this._dataSource.get(i)\n      const rowKey = _getPivotRecordKey(record, rowPivots, distinctKeys)\n      const colKey = _getPivotRecordKey(record, colPivots, distinctKeys)\n      this._keysMap[rowKey] = this._keysMap[rowKey] || {}\n      this._keysMap[rowKey][colKey] = this._keysMap[rowKey][colKey] || []\n      this._keysMap[rowKey][colKey].push(record as any)\n    }\n    this._distinctMap = {}\n    for (const field in distinctKeys) {\n      if (distinctKeys.hasOwnProperty(field)) {\n        this._distinctMap[field] = []\n        const keys = distinctKeys[field]\n        for (const key in keys) {\n          if (keys.hasOwnProperty(key)) {\n            this._distinctMap[field].push(key)\n          }\n        }\n      }\n    }\n    const end = new Date()\n    const s = Number(end) - Number(begin)\n    // TODO: data.ts PivotDataSource.ts\n    window.console.log(s)\n    this._records = [] // 显示记录列表\n    this.length = this._records.length\n  }\n}\n","import { MaybePromiseOrUndef } from '../../ts-types'\nimport { isPromise } from '../../internal/utils'\nimport { DataSource } from '../DataSource'\n\nexport class DataSourceIterator<T> {\n  private _dataSource: DataSource<T>\n  private _curIndex: number\n  private _data: MaybePromiseOrUndef<T>[]\n  public constructor(dataSource: DataSource<T>) {\n    this._dataSource = dataSource\n    this._curIndex = -1\n    this._data = []\n  }\n  public hasNext(): boolean {\n    const next = this._curIndex + 1\n    return this._dataSource.length > next\n  }\n  public next(): MaybePromiseOrUndef<T> {\n    const next = this._curIndex + 1\n    const data = this._getIndexData(next)\n    this._curIndex = next\n    return data\n  }\n  public movePrev(): void {\n    this._curIndex--\n  }\n  private _getIndexData(index: number, nest?: boolean): MaybePromiseOrUndef<T> {\n    const dataSource = this._dataSource\n    const data = this._data\n    if (index < data.length) {\n      return data[index]\n    }\n\n    if (dataSource.length <= index) {\n      return undefined\n    }\n    const record = this._dataSource.get(index)\n    data[index] = record\n    if (isPromise(record)) {\n      record.then((val) => {\n        data[index] = val\n      })\n      if (!nest) {\n        for (let i = 1; i <= 100; i++) {\n          this._getIndexData(index + i, true)\n        }\n      }\n    }\n    return record\n  }\n}\n","import { isPromise } from '../../internal/utils'\nimport { DataSource } from '../DataSource'\nimport { FilterDataSource } from '../FilterDataSource'\nimport { DataSourceIterator } from './DataSourceIterator'\nimport { MaybePromiseOrUndef } from '../../ts-types'\n\nexport type Filter<T> = (record: T | undefined) => boolean\n\nexport class FilterData<T> {\n  private _owner: FilterDataSource<T>\n  private _dataSourceItr: DataSourceIterator<T>\n  private _filter: Filter<T>\n  private _filteredList: (T | undefined)[]\n  private _queues: (Promise<T | undefined> | null)[]\n  private _cancel: boolean = false\n  public constructor(\n    dc: FilterDataSource<T>,\n    original: DataSource<T>,\n    filter: Filter<T>\n  ) {\n    this._owner = dc\n    this._dataSourceItr = new DataSourceIterator(original)\n    this._filter = filter\n    this._filteredList = []\n    this._queues = []\n  }\n  public get filter() {\n    return this._filter\n  }\n  public get(index: number): MaybePromiseOrUndef<T> {\n    if (this._cancel) {\n      return undefined\n    }\n    const filteredList = this._filteredList\n    if (index < filteredList.length) {\n      return filteredList[index]\n    }\n    const queues = this._queues\n    const indexQueue = queues[index]\n    if (indexQueue) {\n      return indexQueue\n    }\n    return queues[index] || this._findIndex(index)\n  }\n  public cancel(): void {\n    this._cancel = true\n  }\n  private _findIndex(index: number): MaybePromiseOrUndef<T> {\n    if (window.Promise) {\n      const timeout = Date.now() + 100\n      let count = 0\n      return this._findIndexWithTimeout(index, () => {\n        count++\n        if (count >= 100) {\n          count = 0\n          return timeout < Date.now()\n        }\n        return false\n      })\n    }\n    return this._findIndexWithTimeout(index, () => false)\n  }\n  private _findIndexWithTimeout(\n    index: number,\n    testTimeout: () => boolean\n  ): MaybePromiseOrUndef<T> {\n    const filteredList = this._filteredList\n    const filter = this._filter\n    const dataSourceItr = this._dataSourceItr\n\n    const queues = this._queues\n\n    while (dataSourceItr.hasNext()) {\n      if (this._cancel) {\n        return undefined\n      }\n      const record = dataSourceItr.next()\n      if (isPromise(record)) {\n        dataSourceItr.movePrev()\n        return (queues[index] = record.then((value: any) => {\n          queues[index] = null\n          return this.get(index)\n        }))\n      }\n      if (filter(record)) {\n        filteredList.push(record)\n        if (index < filteredList.length) {\n          return filteredList[index]\n        }\n      }\n      if (testTimeout()) {\n        const promise = new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(undefined)\n          }, 300)\n        })\n        const queue = promise.then(() => {\n          queues[index] = null\n          return this.get(index)\n        })\n        queues[index] = queue\n        return queue\n      }\n    }\n    const dc = this._owner\n    dc.length = filteredList.length\n    return undefined\n  }\n}\n","import { EventHandler } from '../internal/EventHandler'\nimport { DataSource } from './DataSource'\nimport { FilterData, Filter } from './filter/FilterData'\nimport { MaybePromiseOrUndef, FieldDef, MaybePromise } from '../ts-types'\n\n/**\n * grid data source for filter\n */\nexport class FilterDataSource<T> extends DataSource<T> {\n  private _dataSource: DataSource<T>\n  private _handler: EventHandler\n  private _filterData: FilterData<T> | null = null\n  public static get EVENT_TYPE(): typeof DataSource.EVENT_TYPE {\n    return DataSource.EVENT_TYPE\n  }\n  public constructor(dataSource: DataSource<T>, filter: Filter<T>) {\n    super(dataSource)\n    this._dataSource = dataSource\n    this.filter = filter\n    const handler = (this._handler = new EventHandler())\n    handler.on(dataSource, FilterDataSource.EVENT_TYPE.UPDATED_ORDER, () => {\n      // reset\n      this.filter = this.filter\n    })\n    for (const k in FilterDataSource.EVENT_TYPE) {\n      if (FilterDataSource.EVENT_TYPE.hasOwnProperty(k)) {\n        const type = (FilterDataSource.EVENT_TYPE as any)[k]\n        handler.on(dataSource as any, type, (...args) =>\n          this.fireListeners(type, ...args)\n        )\n      }\n    }\n  }\n  public get filter(): Filter<T> | null {\n    return this._filterData?.filter || null\n  }\n  public set filter(filter) {\n    if (this._filterData) {\n      this._filterData.cancel()\n    }\n    this._filterData = filter\n      ? new FilterData(this, this._dataSource, filter)\n      : null\n    this.setLength(this._dataSource.length)\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    if (!this._filterData) {\n      return super.getOriginal(index)\n    }\n    return this._filterData.get(index)\n  }\n  public sort(field: FieldDef<T>, order: 'desc' | 'asc'): MaybePromise<void> {\n    return this._dataSource.sort(field, order)\n  }\n  get source(): any {\n    return this._dataSource.source\n  }\n  get dataSource(): DataSource<T> {\n    return this._dataSource\n  }\n  public dispose(): void {\n    this._handler.dispose()\n    super.dispose()\n  }\n  protected refreshInternal() {\n    this.filter = this.filter\n  }\n}\n","import { CachedDataSource } from './data/CachedDataSource'\nimport { DataSource } from './data/DataSource'\nimport { FilterDataSource } from './data/FilterDataSource'\nimport { PivotDataSource } from './data/PivotDataSource'\nimport { TreeDataSource } from './data/TreeDataSource'\n\n/**\n * data modules\n */\nexport const data = {\n  CachedDataSource,\n  DataSource,\n  FilterDataSource,\n  PivotDataSource,\n  TreeDataSource,\n}\n","import {\n  ListGridAPI,\n  EventListenerId,\n  BaseHeaderActionOption,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\n\nexport interface IBaseHeaderActionOptions<T> {\n  disabled?: boolean | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean)\n}\n\nexport class BaseAction<T> {\n  protected _disabled:\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean)\n  public constructor(option: BaseHeaderActionOption<T> = {}) {\n    this._disabled = option.disabled || false\n  }\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n  public set disabled(disabled) {\n    if (this._disabled !== disabled) {\n      this._disabled = disabled\n      this.onChangeDisabledInternal()\n    }\n  }\n  public clone(): BaseAction<T> {\n    return new BaseAction(this)\n  }\n  public bindGridEvent(\n    _grid: ListGridAPI<T>,\n    _cellId: LayoutObjectId\n  ): EventListenerId[] {\n    return []\n  }\n  public onChangeDisabledInternal(): void {\n    // nothing\n  }\n}\n","import {\n  ListGridAPI,\n  CellAddress,\n  LayoutObjectId,\n  EventListenerId,\n} from '../../ts-types'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { event } from '../../internal/utils'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\n\nexport function bindCellClickAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    mouseOver,\n    mouseOut,\n  }: {\n    action: (cell: CellAddress) => void\n    mouseOver?: (cell: CellAddress) => boolean\n    mouseOut?: (cell: CellAddress) => void\n  }\n): EventListenerId[] {\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n  let inMouse: boolean\n  return [\n    // click\n    grid.listen(DG_EVENT_TYPE.CLICK_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      action({\n        col: e.col,\n        row: e.row,\n      })\n    }),\n    // mouse move\n    grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (mouseOver) {\n        if (\n          !mouseOver({\n            col: e.col,\n            row: e.row,\n          })\n        ) {\n          return\n        }\n      }\n      grid.getElement().style.cursor = 'pointer'\n      inMouse = true\n    }),\n    // 当MOUSEENTER从侧面看，因为它与'col-resize'的处理冲突，移动被监视和处理\n    grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (inMouse && !grid.getElement().style.cursor) {\n        grid.getElement().style.cursor = 'pointer'\n      }\n    }),\n    grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (mouseOut) {\n        mouseOut({\n          col: e.col,\n          row: e.row,\n        })\n      }\n      grid.getElement().style.cursor = ''\n      inMouse = false\n    }),\n  ]\n}\nexport function bindCellKeyAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    acceptKeys = [],\n  }: {\n    action: (option: CellAddress) => void\n    acceptKeys?: number[]\n  }\n) {\n  acceptKeys = [...acceptKeys, KEY_ENTER, KEY_SPACE]\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n  return [\n    // enter key down\n    grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n      if (acceptKeys.indexOf(e.keyCode) === -1) {\n        return\n      }\n      if (grid.keyboardOptions?.moveCellOnEnter && e.keyCode === KEY_ENTER) {\n        // When moving with the enter key, no action is taken with the enter key.\n        return\n      }\n      const sel = grid.selection.select\n      if (!isTarget(sel.col, sel.row)) {\n        return\n      }\n      action({\n        col: sel.col,\n        row: sel.row,\n      })\n      event.cancel(e.event)\n    }),\n  ]\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\n\nexport const isHeaderDisabledCell = <T>(\n  option: boolean | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean),\n  grid: ListGridAPI<T>,\n  cell: CellAddress\n) => {\n  if (typeof option === 'function') {\n    return !!option(grid, cell)\n  }\n  return !!option\n}\n","import { CellAddress, EventListenerId, LayoutObjectId } from '../../ts-types'\nimport { GridInternal, CheckHeaderState } from '../../ts-types-internal'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { BaseAction } from './BaseAction'\nimport { animate } from '../../internal/animate'\nimport { isHeaderDisabledCell } from './action-utils'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\n\nexport abstract class BaseCheckAction<T> extends BaseAction<T> {\n  public bindGridEvent(\n    grid: GridInternal<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const state = this.getState(grid)\n\n    const action = ({ col, row }: CellAddress) => {\n      const range = grid.getCellRange(col, row)\n      const cellKey = `${range.start.col}:${range.start.row}`\n      if (\n        isHeaderDisabledCell(this.disabled, grid, {\n          col: range.start.col,\n          row: range.start.row,\n        }) ||\n        state.block[cellKey]\n      ) {\n        return\n      }\n      const checked = grid.getHeaderValue(range.start.col, range.start.row)\n      grid.setHeaderValue(range.start.col, range.start.row, !checked)\n\n      const onChange = () => {\n        // checkbox animation\n        animate(200, (point) => {\n          if (point === 1) {\n            delete state.elapsed[cellKey]\n          } else {\n            state.elapsed[cellKey] = point\n          }\n          grid.invalidateCellRange(range)\n        })\n      }\n      onChange()\n    }\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          const range = grid.getCellRange(e.col, e.row)\n          if (\n            isHeaderDisabledCell(this.disabled, grid, {\n              col: range.start.col,\n              row: range.start.row,\n            })\n          ) {\n            return false\n          }\n          state.mouseActiveCell = {\n            col: e.col,\n            row: e.row,\n          }\n          grid.invalidateCellRange(range)\n          return true\n        },\n        mouseOut: (e) => {\n          delete state.mouseActiveCell\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n        },\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action,\n        acceptKeys: [KEY_ENTER, KEY_SPACE],\n      }),\n    ]\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckHeaderState\n}\n","import { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckAction } from './BaseCheckAction'\nimport { getCheckHeaderStateId } from '../../internal/symbolManager'\n\nconst CHECK_HEADER_STATE_ID = getCheckHeaderStateId()\n\nexport class CheckHeaderAction<T> extends BaseCheckAction<T> {\n  public clone(): CheckHeaderAction<T> {\n    return new CheckHeaderAction(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[CHECK_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, CHECK_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import { GridInternal, CheckHeaderState } from '../../ts-types-internal'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckAction } from './BaseCheckAction'\nimport { getSwitchHeaderStateId } from '../../internal/symbolManager'\n\nconst SWITCH_HEADER_STATE_ID = getSwitchHeaderStateId()\n\nexport class SwitchHeaderAction<T> extends BaseCheckAction<T> {\n  public clone(): SwitchHeaderAction<T> {\n    return new SwitchHeaderAction(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[SWITCH_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, SWITCH_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import {\n  SortState,\n  SortOption,\n  SortHeaderActionOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { isHeaderDisabledCell } from './action-utils'\nimport { bindCellClickAction } from './actionBind'\nimport { BaseAction } from './BaseAction'\n\nexport class SortHeaderAction<T> extends BaseAction<T> {\n  private _sort: SortOption<T>\n  public constructor(option: SortHeaderActionOption<T> = {}) {\n    super(option)\n    this._sort = option.sort ?? true\n  }\n  public get sort(): SortOption<T> {\n    return this._sort\n  }\n  public set sort(sort) {\n    this._sort = sort\n    this.onChangeDisabledInternal()\n  }\n  public clone(): SortHeaderAction<T> {\n    return new SortHeaderAction(this)\n  }\n  private _executeSort(newState: SortState, grid: ListGridAPI<T>): void {\n    if (typeof this._sort === 'function') {\n      this._sort({\n        order: newState.order || 'asc',\n        col: newState.col,\n        row: newState.row,\n        grid,\n      })\n    } else {\n      const fieldRow =\n        Math.min(grid.recordRowCount - 1, newState.row) + grid.frozenRowCount\n      const field = grid.getField(newState.col, fieldRow)\n      if (field == null) {\n        return\n      }\n      grid.dataSource.sort(field, newState.order || 'asc')\n    }\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    const action = (cell: CellAddress): void => {\n      if (isHeaderDisabledCell(this.disabled, grid, cell)) {\n        return\n      }\n      const state = grid.sortState as SortState\n      let newState: SortState\n      const range = grid.getCellRange(cell.col, cell.row)\n      if (isTarget(state.col, cell.row)) {\n        newState = {\n          col: range.start.col,\n          order: state.order === 'asc' ? 'desc' : 'asc',\n          row: range.start.row,\n        }\n      } else {\n        newState = {\n          col: range.start.col,\n          order: 'asc',\n          row: range.start.row,\n        }\n      }\n      grid.sortState = newState\n      this._executeSort(newState, grid)\n      grid.invalidateGridRect(0, 0, grid.colCount - 1, grid.rowCount - 1)\n    }\n\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          if (isHeaderDisabledCell(this.disabled, grid, e)) {\n            return false\n          }\n          return true\n        },\n      }),\n    ]\n  }\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\nimport { CheckHeaderAction } from '../action/CheckHeaderAction'\n\nexport class ImmutableCheckHeaderAction<T> extends CheckHeaderAction<T> {\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\nimport { SortHeaderAction } from '../action/SortHeaderAction'\n\nexport class ImmutableSortHeaderAction<T> extends SortHeaderAction<T> {\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\nimport { SwitchHeaderAction } from '../action/SwitchHeaderAction'\n\nexport class ImmutableSwitchHeaderAction<T> extends SwitchHeaderAction<T> {\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n}\n","import { HeaderActionOption, SortOption } from '../ts-types'\nimport { BaseAction } from './action/BaseAction'\nimport { BaseCheckAction } from './action/BaseCheckAction'\nimport { CheckHeaderAction } from './action/CheckHeaderAction'\nimport { SwitchHeaderAction } from './action/SwitchHeaderAction'\nimport { SortHeaderAction } from './action/SortHeaderAction'\nimport { ImmutableCheckHeaderAction } from './immutable/ImmutableCheckHeaderAction'\nimport { ImmutableSortHeaderAction } from './immutable/ImmutableSortHeaderAction'\nimport { ImmutableSwitchHeaderAction } from './immutable/ImmutableSwitchHeaderAction'\nimport { BaseHeaderDefine } from '../list-grid/layout-map/api'\n\nexport interface ImmutableHeaderActions {\n  SORT: ImmutableSortHeaderAction<any>\n  CHECK: ImmutableCheckHeaderAction<any>\n  SWITCH: ImmutableSwitchHeaderAction<any>\n}\n\nexport const ACTIONS: ImmutableHeaderActions = {\n  SORT: new ImmutableSortHeaderAction<any>(),\n  CHECK: new ImmutableCheckHeaderAction<any>(),\n  SWITCH: new ImmutableSwitchHeaderAction<any>(),\n}\n\nexport {\n  BaseAction,\n  BaseCheckAction,\n  SortHeaderAction,\n  CheckHeaderAction,\n  SwitchHeaderAction,\n}\n\nexport function of<T>(\n  headerAction: HeaderActionOption | BaseAction<T> | null | undefined\n): BaseAction<T> | undefined {\n  if (!headerAction) {\n    return undefined\n  } else if (typeof headerAction === 'string') {\n    const key = headerAction.toUpperCase() as keyof typeof ACTIONS\n    return ACTIONS[key] || of(null)\n  } else {\n    return headerAction\n  }\n}\n\nexport function ofCell<T>(\n  headerCell: BaseHeaderDefine<T>\n): BaseAction<T> | undefined {\n  if (headerCell.sort) {\n    if (typeof headerCell.sort === 'function') {\n      const sortMethod = headerCell.sort\n      // 0.9.0 Backward compatibility\n      const sort: SortOption<T> = ({ order, col, grid }): void =>\n        sortMethod.call(headerCell, order, col, grid)\n      return new ImmutableSortHeaderAction({ sort } as any)\n    }\n    return ACTIONS.SORT\n  }\n  return of(headerCell.headerAction)\n}\n","import { BaseStyleOption, ColorDef, ColumnStyle } from '../../ts-types'\nimport { EventTarget } from '../../core/EventTarget'\n\nconst HEADER_BASE_STYLE_EVENT_TYPE = {\n  CHANGE_STYLE: 'change_style',\n}\n\nlet defaultHeaderBaseStyle: BaseStyle\n\nexport class BaseStyle extends EventTarget implements ColumnStyle {\n  public static get EVENT_TYPE(): { CHANGE_STYLE: string } {\n    return HEADER_BASE_STYLE_EVENT_TYPE\n  }\n  public static get DEFAULT(): BaseStyle {\n    return defaultHeaderBaseStyle\n      ? defaultHeaderBaseStyle\n      : (defaultHeaderBaseStyle = new BaseStyle())\n  }\n  private _bgColor?: ColorDef\n  public constructor({ bgColor }: BaseStyleOption = {}) {\n    super()\n    this._bgColor = bgColor\n  }\n  public get bgColor(): ColorDef | undefined {\n    return this._bgColor\n  }\n  public set bgColor(bgColor) {\n    this._bgColor = bgColor\n    this.doChangeStyle()\n  }\n  public doChangeStyle(): void {\n    this.fireListeners(HEADER_BASE_STYLE_EVENT_TYPE.CHANGE_STYLE)\n  }\n  public clone(): BaseStyle {\n    return new BaseStyle(this)\n  }\n}\n","import { BaseStyle } from './BaseStyle'\nimport { BaseStdStyleOption } from '../../ts-types'\n\nlet defaultHeaderBaseStdStyle: BaseStdStyle\n\nexport class BaseStdStyle extends BaseStyle {\n  public static get DEFAULT(): BaseStdStyle {\n    return defaultHeaderBaseStdStyle\n      ? defaultHeaderBaseStdStyle\n      : (defaultHeaderBaseStdStyle = new BaseStdStyle())\n  }\n  private _textAlign: CanvasTextAlign\n  private _textBaseline: CanvasTextBaseline\n  public constructor(style: BaseStdStyleOption = {}) {\n    super(style)\n    this._textAlign = style.textAlign || 'left'\n    this._textBaseline = style.textBaseline || 'middle'\n  }\n  public get textAlign(): CanvasTextAlign {\n    return this._textAlign\n  }\n  public set textAlign(textAlign) {\n    this._textAlign = textAlign\n    this.doChangeStyle()\n  }\n  public get textBaseline(): CanvasTextBaseline {\n    return this._textBaseline\n  }\n  public set textBaseline(textBaseline) {\n    this._textBaseline = textBaseline\n    this.doChangeStyle()\n  }\n  public clone(): BaseStdStyle {\n    return new BaseStdStyle(this)\n  }\n}\n","import { BaseStdStyle } from './BaseStdStyle'\nimport {\n  ColorDef,\n  HeaderStdStyleOption,\n  TextOverflow,\n  LineClamp,\n} from '../../ts-types'\n\nlet defaultHeaderStyle: Style\n\nexport class Style extends BaseStdStyle {\n  public static get DEFAULT(): Style {\n    return defaultHeaderStyle\n      ? defaultHeaderStyle\n      : (defaultHeaderStyle = new Style())\n  }\n  private _color?: ColorDef\n  private _font?: string\n  private _padding?: number | string | (number | string)[]\n  private _textOverflow: TextOverflow\n  private _lineHeight: string | number\n  private _autoWrapText: boolean\n  private _lineClamp: LineClamp\n  public constructor(style: HeaderStdStyleOption = {}) {\n    super(style)\n    this._color = style.color\n    this._font = style.font\n    this._padding = style.padding\n    this._textOverflow = style.textOverflow || 'ellipsis'\n    this._lineHeight = style.lineHeight || '1em'\n    this._autoWrapText = style.autoWrapText || false\n    this._lineClamp = style.lineClamp || 'auto'\n  }\n  public get color(): ColorDef | undefined {\n    return this._color\n  }\n  public set color(color) {\n    this._color = color\n    this.doChangeStyle()\n  }\n  public get font(): string | undefined {\n    return this._font\n  }\n  public set font(font) {\n    this._font = font\n    this.doChangeStyle()\n  }\n  public get padding(): number | string | (number | string)[] | undefined {\n    return this._padding\n  }\n  public set padding(padding) {\n    this._padding = padding\n    this.doChangeStyle()\n  }\n  public get textOverflow(): TextOverflow {\n    return this._textOverflow\n  }\n  public set textOverflow(textOverflow) {\n    this._textOverflow = textOverflow\n    this.doChangeStyle()\n  }\n  public get lineHeight(): string | number {\n    return this._lineHeight\n  }\n  public set lineHeight(lineHeight) {\n    this._lineHeight = lineHeight\n    this.doChangeStyle()\n  }\n  public get lineClamp(): LineClamp {\n    return this._lineClamp\n  }\n  public set lineClamp(lineClamp) {\n    this._lineClamp = lineClamp\n    this.doChangeStyle()\n  }\n  public get autoWrapText(): boolean {\n    return this._autoWrapText\n  }\n  public set autoWrapText(autoWrapText) {\n    this._autoWrapText = autoWrapText\n    this.doChangeStyle()\n  }\n  public clone(): Style {\n    return new Style(this)\n  }\n}\n","import { Style } from './Style'\nimport { ColorDef, HeaderCheckStyleOption } from '../../ts-types'\nimport { defaults } from '../../internal/utils'\n\nlet defaultHeaderBaseCheckStyle: BaseCheckStyle\nexport class BaseCheckStyle extends Style {\n  public static get DEFAULT(): BaseCheckStyle {\n    return defaultHeaderBaseCheckStyle\n      ? defaultHeaderBaseCheckStyle\n      : (defaultHeaderBaseCheckStyle = new BaseCheckStyle())\n  }\n  private _uncheckBgColor?: ColorDef\n  private _checkBgColor?: ColorDef\n  private _borderColor?: ColorDef\n  public constructor(style: HeaderCheckStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    this._uncheckBgColor = style.uncheckBgColor\n    this._checkBgColor = style.checkBgColor\n    this._borderColor = style.borderColor\n  }\n  public get uncheckBgColor(): ColorDef | undefined {\n    return this._uncheckBgColor\n  }\n  public set uncheckBgColor(uncheckBgColor) {\n    this._uncheckBgColor = uncheckBgColor\n    this.doChangeStyle()\n  }\n  public get checkBgColor(): ColorDef | undefined {\n    return this._checkBgColor\n  }\n  public set checkBgColor(checkBgColor) {\n    this._checkBgColor = checkBgColor\n    this.doChangeStyle()\n  }\n  public get borderColor(): ColorDef | undefined {\n    return this._borderColor\n  }\n  public set borderColor(borderColor) {\n    this._borderColor = borderColor\n    this.doChangeStyle()\n  }\n  public clone(): BaseCheckStyle {\n    return new BaseCheckStyle(this)\n  }\n}\n","import { BaseCheckStyle } from './BaseCheckStyle'\nimport { CheckHeaderStyleOption } from '../../ts-types'\n\nlet defaultCheckHeaderStyle: CheckHeaderStyle\nexport class CheckHeaderStyle extends BaseCheckStyle {\n  public static get DEFAULT(): CheckHeaderStyle {\n    return defaultCheckHeaderStyle\n      ? defaultCheckHeaderStyle\n      : (defaultCheckHeaderStyle = new CheckHeaderStyle())\n  }\n  public constructor(style: CheckHeaderStyleOption = {}) {\n    super(style)\n  }\n  public clone(): CheckHeaderStyle {\n    return new CheckHeaderStyle(this)\n  }\n}\n","import { Style } from './Style'\nimport { SortHeaderStyleOption, ColorDef } from '../../ts-types'\n\nlet defaultSortHeaderStyle: SortHeaderStyle\nexport class SortHeaderStyle extends Style {\n  public static get DEFAULT(): SortHeaderStyle {\n    return defaultSortHeaderStyle\n      ? defaultSortHeaderStyle\n      : (defaultSortHeaderStyle = new SortHeaderStyle())\n  }\n  private _sortArrowColor?: ColorDef\n  public constructor(style: SortHeaderStyleOption = {}) {\n    super(style)\n    this._sortArrowColor = style.sortArrowColor\n  }\n  public get sortArrowColor(): ColorDef | undefined {\n    return this._sortArrowColor\n  }\n  public set sortArrowColor(sortArrowColor) {\n    this._sortArrowColor = sortArrowColor\n    this.doChangeStyle()\n  }\n  public clone(): SortHeaderStyle {\n    return new SortHeaderStyle(this)\n  }\n}\n","import { BaseCheckStyle } from './BaseCheckStyle'\nimport { SwitchHeaderStyleOption } from '../../ts-types'\n\nlet defaultSwitchHeaderStyle: SwitchHeaderStyle\nexport class SwitchHeaderStyle extends BaseCheckStyle {\n  public static get DEFAULT(): SwitchHeaderStyle {\n    return defaultSwitchHeaderStyle\n      ? defaultSwitchHeaderStyle\n      : (defaultSwitchHeaderStyle = new SwitchHeaderStyle())\n  }\n  public constructor(style: SwitchHeaderStyleOption = {}) {\n    super(style)\n  }\n  public clone(): SwitchHeaderStyle {\n    return new SwitchHeaderStyle(this)\n  }\n}\n","import { MultilineTextHeaderStyleOption } from '../../ts-types'\nimport { Style } from './Style'\n\nlet defaultMultilineTextStyle: MultilineTextHeaderStyle\nexport class MultilineTextHeaderStyle extends Style {\n  static get DEFAULT(): MultilineTextHeaderStyle {\n    return defaultMultilineTextStyle\n      ? defaultMultilineTextStyle\n      : (defaultMultilineTextStyle = new MultilineTextHeaderStyle())\n  }\n  constructor(style: MultilineTextHeaderStyleOption = {}) {\n    super(style)\n  }\n  public clone(): MultilineTextHeaderStyle {\n    return new MultilineTextHeaderStyle(this)\n  }\n}\n","import { HeaderStyleOption } from '../ts-types'\nimport { BaseStyle } from './style/BaseStyle'\nimport { BaseStdStyle } from './style/BaseStdStyle'\nimport { BaseCheckStyle } from './style/BaseCheckStyle'\nimport { CheckHeaderStyle } from './style/CheckHeaderStyle'\nimport { SortHeaderStyle } from './style/SortHeaderStyle'\nimport { SwitchHeaderStyle } from './style/SwitchHeaderStyle'\nimport { MultilineTextHeaderStyle } from './style/MultilineTextHeaderStyle'\nimport { Style } from './style/Style'\n\nexport {\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  SortHeaderStyle,\n  CheckHeaderStyle,\n  SwitchHeaderStyle,\n  MultilineTextHeaderStyle,\n}\n\nexport function of<T>(\n  headerStyle: HeaderStyleOption | null | undefined,\n  headerValues: T,\n  StyleClass: typeof BaseStyle\n): BaseStyle {\n  if (headerStyle) {\n    if (headerStyle instanceof BaseStyle) {\n      return headerStyle\n    } else if (typeof headerStyle === 'function') {\n      return of((headerStyle as any)(headerValues), headerValues, StyleClass)\n    } else if (typeof headerStyle === 'string') {\n      if (headerValues && headerStyle in headerValues) {\n        return of((headerValues as any)[headerStyle], headerValues, StyleClass)\n      } else {\n        return new StyleClass({})\n      }\n    } else {\n      return new StyleClass(headerStyle)\n    }\n  } else {\n    return StyleClass.DEFAULT\n  }\n}\n","import * as styleContents from '../style'\nimport {\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  CellContext,\n  HeaderStyleOption,\n  EventListenerId,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { BaseStyle } from '../style/BaseStyle'\nimport { isDef } from '../../internal/utils'\n\nexport abstract class BaseHeader<T> {\n  public constructor(_options = {}) {\n    this.onDrawCell = this.onDrawCell.bind(this) // 修复范围\n  }\n  public get StyleClass(): typeof BaseStyle {\n    return BaseStyle\n  }\n  public onDrawCell(\n    cellValue: unknown,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: ListGridAPI<T>\n  ) {\n    const { style, drawCellBase } = info\n    const helper = grid.getGridCanvasHelper()\n    drawCellBase()\n    // 文字\n    this.drawInternal(\n      this.convertInternal(cellValue),\n      context,\n      styleContents.of(\n        style as HeaderStyleOption,\n        grid.headerValues,\n        this.StyleClass\n      ),\n      helper,\n      grid,\n      info\n    )\n  }\n  public convertInternal(value: unknown): string {\n    if (typeof value === 'function') {\n      value = value()\n    }\n    return isDef(value) ? `${value}` : ''\n  }\n  public abstract drawInternal(\n    value: string,\n    context: CellContext,\n    style: BaseStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void\n  public bindGridEvent(\n    _grid: ListGridAPI<T>,\n    _cellId: LayoutObjectId\n  ): EventListenerId[] {\n    return []\n  }\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport {\n  GridInternal,\n  DrawCellInfo,\n  CheckHeaderState,\n} from '../../ts-types-internal'\nimport { isDef } from '../../internal/utils'\nimport { BaseHeader } from './BaseHeader'\nimport { BaseCheckStyle } from '../style/BaseCheckStyle'\n\nexport abstract class BaseCheckHeader<T> extends BaseHeader<T> {\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: BaseCheckStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    { drawCellBase }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n      bgColor,\n      color,\n      font,\n      textOverflow,\n    } = style\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n\n    const { col, row } = context\n    const range = grid.getCellRange(col, row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n    const state = this.getState(grid)\n    const elapsed = state?.elapsed[cellKey]\n\n    const checked = grid.getHeaderValue(range.start.col, range.start.row)\n\n    const opt: InlineCheckOption = {\n      textAlign,\n      textBaseline,\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n    }\n    if (isDef(elapsed)) {\n      opt.animElapsedTime = elapsed\n    }\n    const inlineCheck = this.getInlineCheck(helper, !!checked, context, opt)\n\n    helper.text([inlineCheck, value], context, {\n      color,\n      font,\n      textAlign,\n      textBaseline,\n      textOverflow,\n    })\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckHeaderState\n  protected abstract getInlineCheck(\n    helper: GridCanvasHelperAPI,\n    checked: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): InlineAPI\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { CheckHeaderStyle } from '../style/CheckHeaderStyle'\nimport { BaseCheckHeader } from './BaseCheckHeader'\nimport { getCheckHeaderStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst CHECK_HEADER_STATE_ID = getCheckHeaderStateId()\n\nexport class CheckHeader<T> extends BaseCheckHeader<T> {\n  public get StyleClass(): typeof CheckHeaderStyle {\n    return CheckHeaderStyle\n  }\n  public clone(): CheckHeader<T> {\n    return new CheckHeader(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[CHECK_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, CHECK_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n  protected getInlineCheck(\n    helper: GridCanvasHelperAPI,\n    checked: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): InlineAPI {\n    return helper.buildCheckBoxInline(checked, context, opt)\n  }\n}\n","import { icons } from '../../internal/icons'\nimport { CellContext, GridCanvasHelperAPI } from '../../ts-types'\n\nexport default {\n  loadIcons<T>(\n    icon: any,\n    context: CellContext,\n    helper: GridCanvasHelperAPI,\n    callback: (icon: any, context: CellContext) => void\n  ) {\n    if (icon) {\n      const iconList = icons.toNormarizeArray(icon)\n      iconList.forEach((i: any) => {\n        helper.testFontLoad(i.font, i.content, context)\n      })\n      icon = iconList\n    }\n    callback(icon, context)\n  },\n}\n","import { CellContext, GridCanvasHelperAPI, ListGridAPI } from '../../ts-types'\nimport { isDef } from '../../internal/utils'\nimport { BaseHeader } from './BaseHeader'\nimport headerUtils from './headerUtils'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { Style } from '../style/Style'\n\nexport class Header<T> extends BaseHeader<T> {\n  public get StyleClass(): typeof Style {\n    return Style\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: Style,\n    helper: GridCanvasHelperAPI,\n    _grid: ListGridAPI<T>,\n    { drawCellBase, getHeaderIcon }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      bgColor,\n      textOverflow,\n      padding,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n    } = style\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n    const v = isDef(value) ? value + '' : ''\n    const multiLines = v\n      .replace(/\\r?\\n/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .split('\\n')\n    helper.testFontLoad(font, value, context)\n    headerUtils.loadIcons(\n      getHeaderIcon(),\n      context,\n      helper,\n      (icons: any, ctx: CellContext) => {\n        if (multiLines.length > 1) {\n          helper.multilineText(multiLines, ctx, {\n            color,\n            font,\n            icons,\n            textAlign,\n            textBaseline,\n            textOverflow,\n            padding,\n            lineHeight,\n            autoWrapText,\n            lineClamp,\n          })\n        } else {\n          helper.text(value, ctx, {\n            color,\n            font,\n            icons,\n            padding,\n            textAlign,\n            textBaseline,\n            textOverflow,\n          })\n        }\n      }\n    )\n  }\n}\n","import {\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  SortState,\n} from '../../ts-types'\nimport { DrawCellInfo, SimpleColumnIconOption } from '../../ts-types-internal'\nimport { BaseHeader } from './BaseHeader'\nimport { SortHeaderStyle } from '../style/SortHeaderStyle'\nimport { getFontSize } from '../../internal/canvases'\nimport { isDef, cellInRange } from '../../internal/utils'\n\nexport class SortHeader<T> extends BaseHeader<T> {\n  public get StyleClass(): typeof SortHeaderStyle {\n    return SortHeaderStyle\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: SortHeaderStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { drawCellBase }: DrawCellInfo<T>\n  ): void {\n    const textAlign = style.textAlign\n    const textBaseline = style.textBaseline || 'middle'\n    const color = style.color\n    const bgColor = style.bgColor\n    const padding = style.padding\n    const lineHeight = style.lineHeight\n    const autoWrapText = style.autoWrapText\n    const lineClamp = style.lineClamp\n    const font = style.font\n    const textOverflow = style.textOverflow\n    const sortArrowColor = style.sortArrowColor\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n\n    const state = grid.sortState as SortState\n    let order = undefined\n    const col = context.col\n    const row = context.row\n    const range = grid.getCellRange(col, row)\n    if (cellInRange(range, state.col, state.row)) {\n      ;({ order } = state)\n    }\n\n    const ctx = context.getContext()\n    const arrowSize = getFontSize(ctx, font).width * 1.2\n\n    const v = isDef(value) ? value + '' : ''\n    const multilines = v\n      .replace(/\\r?\\n/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .split('\\n')\n    const icons: SimpleColumnIconOption[] = [\n      {\n        color:\n          helper.getColor(\n            sortArrowColor || helper.theme.header.sortArrowColor,\n            col,\n            row,\n            ctx\n          ) || 'rgba(0, 0, 0, 0.38)',\n        name: isDef(order)\n          ? order === 'asc'\n            ? 'arrowDownward'\n            : 'arrowUpward'\n          : undefined,\n        width: arrowSize,\n      },\n    ]\n    if (multilines.length > 1) {\n      helper.multilineText(multilines, context, {\n        autoWrapText,\n        color,\n        font,\n        icons,\n        lineClamp,\n        lineHeight,\n        padding,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    } else {\n      helper.text(multilines, context, {\n        color,\n        font,\n        icons,\n        padding,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    }\n  }\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { GridInternal, CheckHeaderState } from '../../ts-types-internal'\nimport { SwitchHeaderStyle } from '../style/SwitchHeaderStyle'\nimport { BaseCheckHeader } from './BaseCheckHeader'\nimport { getSwitchHeaderStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst SWITCH_HEADER_STATE_ID = getSwitchHeaderStateId()\n\nexport class SwitchHeader<T> extends BaseCheckHeader<T> {\n  public get StyleClass(): typeof SwitchHeaderStyle {\n    return SwitchHeaderStyle\n  }\n  public clone(): SwitchHeader<T> {\n    return new SwitchHeader(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[SWITCH_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, SWITCH_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n  protected getInlineCheck(\n    helper: GridCanvasHelperAPI,\n    checked: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): InlineAPI {\n    return helper.buildSwitchBtnInline(checked, context, opt)\n  }\n}\n","import { CellContext, GridCanvasHelperAPI } from '../../ts-types'\nimport { DrawCellInfo, GridInternal } from '../../ts-types-internal'\nimport { BaseHeader } from './BaseHeader'\nimport { MultilineTextHeaderStyle } from '../style/MultilineTextHeaderStyle'\n\nexport class MultilineTextHeader<T> extends BaseHeader<T> {\n  get StyleClass(): typeof MultilineTextHeaderStyle {\n    return MultilineTextHeaderStyle\n  }\n  clone(): MultilineTextHeader<T> {\n    return new MultilineTextHeader(this)\n  }\n  drawInternal(\n    value: string,\n    context: CellContext,\n    style: MultilineTextHeaderStyle,\n    helper: GridCanvasHelperAPI,\n    _grid: GridInternal<T>,\n    { drawCellBase }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      bgColor,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n      textOverflow,\n    } = style\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n    const multilines = value\n      .replace(/\\r?\\n/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .split('\\n')\n    helper.testFontLoad(font, value, context)\n    helper.multilineText(multilines, context, {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n      textOverflow,\n    })\n  }\n}\n","import { HeaderTypeOption } from '../ts-types'\nimport { BaseHeader } from './type/BaseHeader'\nimport { BaseCheckHeader } from './type/BaseCheckHeader'\nimport { CheckHeader } from './type/CheckHeader'\nimport { Header } from './type/Header'\nimport { SortHeader } from './type/SortHeader'\nimport { SwitchHeader } from './type/SwitchHeader'\nimport { MultilineTextHeader } from './type/MultilineTextHeader'\nimport { BaseHeaderDefine } from '../list-grid/layout-map/api'\n\nexport const TYPES = {\n  DEFAULT: new Header<any>(),\n  SORT: new SortHeader<any>(),\n  CHECK: new CheckHeader<any>(),\n  SWITCH: new SwitchHeader<any>(),\n  MULTILINETEXT: new MultilineTextHeader<any>(),\n}\n\nexport {\n  BaseHeader,\n  BaseCheckHeader,\n  Header,\n  SortHeader,\n  CheckHeader,\n  SwitchHeader,\n  MultilineTextHeader,\n}\n\nexport function of<T>(\n  headerType: HeaderTypeOption | BaseHeader<T> | null | undefined\n): BaseHeader<T> {\n  if (!headerType) {\n    return TYPES.DEFAULT\n  } else if (typeof headerType === 'string') {\n    const key = headerType.toUpperCase() as keyof typeof TYPES\n    return TYPES[key] || of(null)\n  } else {\n    return headerType\n  }\n}\n\nexport function ofCell<T>(headerCell: BaseHeaderDefine<T>): BaseHeader<T> {\n  if (headerCell.sort) {\n    return TYPES.SORT\n  }\n\n  return of(headerCell.headerType)\n}\n","import {\n  ACTIONS,\n  BaseAction,\n  BaseCheckAction,\n  SortHeaderAction,\n  CheckHeaderAction,\n  SwitchHeaderAction,\n  of as headerActionOf,\n  ofCell as headerActionOfCell,\n  ImmutableHeaderActions,\n} from './header/action'\nimport {\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  SortHeaderStyle,\n  CheckHeaderStyle,\n  SwitchHeaderStyle,\n  MultilineTextHeaderStyle,\n  of as headerStyleOf,\n} from './header/style'\nimport {\n  TYPES,\n  BaseHeader,\n  BaseCheckHeader,\n  Header,\n  SortHeader,\n  CheckHeader,\n  SwitchHeader,\n  MultilineTextHeader,\n  of as headerTypeOf,\n  ofCell as headerTypeOfCell,\n} from './header/type'\n\nconst action = {\n  ACTIONS: ACTIONS as ImmutableHeaderActions,\n  BaseAction,\n  BaseCheckAction,\n  SortHeaderAction,\n  CheckHeaderAction,\n  SwitchHeaderAction,\n  of: headerActionOf,\n  ofCell: headerActionOfCell,\n}\n\nconst style = {\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  SortHeaderStyle,\n  CheckHeaderStyle,\n  SwitchHeaderStyle,\n  MultilineTextHeaderStyle,\n  of: headerStyleOf,\n}\n\nconst type = {\n  TYPES,\n  BaseHeader,\n  BaseCheckHeader,\n  Header,\n  SortHeader,\n  CheckHeader,\n  SwitchHeader,\n  MultilineTextHeader,\n  of: headerTypeOf,\n  ofCell: headerTypeOfCell,\n}\n\n/**\n * headers\n */\nexport const headers = { action, style, type }\n","import { Theme } from '../themes/theme'\n\nexport const themes: { [key: string]: Theme } = {}\n","import { ThemeDefine, StylePropertyFunctionArg } from '../ts-types'\n\nfunction DEFAULT_BG_COLOR(args: StylePropertyFunctionArg): string {\n  const { row, grid } = args\n  if (row < grid.frozenRowCount) {\n    return '#FFF'\n  }\n  const index = grid.getRecordIndexByRow(row)\n  if (!(index & 1)) {\n    return '#FFF'\n  } else {\n    return '#F6F6F6'\n  }\n}\nconst cacheLinearGradient: { [key: string]: CanvasGradient } = {}\nfunction getLinearGradient(\n  context: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  colorStops: { [key: number]: string }\n): CanvasGradient {\n  const stopsKey = []\n  for (const stop in colorStops) {\n    if (colorStops.hasOwnProperty(stop)) {\n      stopsKey.push(`${stop}@${colorStops[stop]}`)\n    }\n  }\n  const key = `${left}/${top}/${right}/${bottom}/${stopsKey.join(',')}`\n  const ret = cacheLinearGradient[key]\n  if (ret) {\n    return ret\n  }\n  const grad = context.createLinearGradient(left, top, left, bottom)\n  for (const stop in colorStops) {\n    if (colorStops.hasOwnProperty(stop)) {\n      grad.addColorStop(Number(stop), colorStops[stop])\n    }\n  }\n  return (cacheLinearGradient[key] = grad)\n}\nfunction FROZEN_ROWS_BG_COLOR(args: StylePropertyFunctionArg): CanvasGradient {\n  const col = args.col\n  const grid = args.grid\n  const frozenRowCount = args.grid.frozenRowCount\n  const context = args.context\n\n  const rect = grid.getCellRelativeRect(col, 0)\n  const left = rect.left\n  const top = rect.top\n  const bottom = grid.getCellRelativeRect(col, frozenRowCount - 1).bottom\n\n  return getLinearGradient(context, left, top, left, bottom, {\n    0: '#FFF',\n    1: '#D3D3D3',\n  })\n}\n/**\n * basic theme\n * @name BASIC\n * @type {Object}\n * @memberof kakaGrid.themes.choices\n */\nexport default {\n  borderColor: '#000',\n  button: {\n    bgColor: '#2196F3',\n    color: '#FFF',\n  },\n  checkbox: {\n    borderColor: '#000',\n    checkBgColor: 'rgb(76, 73, 72)',\n    uncheckBgColor: '#FFF',\n  },\n  radioButton: {\n    checkColor: 'rgb(76, 73, 72)',\n    checkBorderColor: '#000',\n    uncheckBorderColor: '#000',\n    uncheckBgColor: '#FFF',\n    checkBgColor: '#FFF',\n  },\n  color: '#000',\n  defaultBgColor: DEFAULT_BG_COLOR,\n  frozenRowsBgColor: FROZEN_ROWS_BG_COLOR,\n  // frozenRowsBorderColor: \"#000\",\n  // frozenRowsColor: \"#000\",\n  header: {\n    sortArrowColor: 'rgba(0, 0, 0, 0.38)',\n  },\n  highlightBorderColor: '#5E9ED6',\n  selectionBgColor: '#CCE0FF',\n  selectionDragBgColor: '#EAF2FF',\n  switch: {\n    borderColor: '#000',\n    checkBgColor: '#008CD6', // '3BCD4F'\n    uncheckBgColor: '#FFF',\n  },\n  tree: {\n    lineColor: 'rgb(76, 73, 72)',\n    buttonColor: 'rgb(76, 73, 72)',\n    buttonBgColor: 'transparent',\n    buttonBorderColor: 'rgb(76, 73, 72)',\n    linkColor: 'rgb(76, 73, 72)',\n  },\n  underlayBackgroundColor: '#F6F6F6',\n} as ThemeDefine\n","import { ThemeDefine, StylePropertyFunctionArg } from '../ts-types'\n\nfunction FROZEN_ROWS_BORDER_COLOR(args: StylePropertyFunctionArg) {\n  const row = args.row\n  const frozenRowCount = args.grid.frozenRowCount\n  if (frozenRowCount - 1 === row) {\n    return ['#f2f2f2', '#f2f2f2', '#ccc7c7', '#f2f2f2']\n  } else {\n    return ['#f2f2f2']\n  }\n}\nfunction BORDER_COLOR(args: StylePropertyFunctionArg) {\n  const { col, row, grid } = args\n  const { colCount, frozenColCount, recordRowCount } = grid\n  let top: string | null = '#ccc7c7'\n  let bottom: string | null = '#ccc7c7'\n  if (recordRowCount > 1) {\n    const startRow = grid.getRecordStartRowByRecordIndex(\n      grid.getRecordIndexByRow(row)\n    )\n    const endRow = startRow + recordRowCount - 1\n    if (startRow !== row) {\n      top = null\n    }\n    if (endRow !== row) {\n      bottom = null\n    }\n  }\n  if (frozenColCount - 1 === col) {\n    return [top, '#f2f2f2', bottom, null]\n  }\n  if (colCount - 1 === col) {\n    return [top, '#f2f2f2', bottom, null]\n  }\n\n  return [top, null, bottom, null]\n}\n/**\n * material design theme\n * @name MATERIAL_DESIGN\n * @type {Object}\n * @memberof kakaGrid.themes.choices\n */\nexport default {\n  borderColor: BORDER_COLOR,\n  button: {\n    bgColor: '#2196F3',\n    color: '#FFF',\n  },\n  checkbox: {\n    borderColor: 'rgba(0, 0, 0, 0.26)',\n    checkBgColor: 'rgb(76, 73, 72)',\n    // uncheckBgColor: \"#FFF\",\n  },\n  radioButton: {\n    checkColor: 'rgb(76, 73, 72)',\n    checkBorderColor: 'rgb(76, 73, 72)',\n    uncheckBorderColor: 'rgb(189, 189, 189)',\n    // uncheckBgColor: \"#FFF\",\n    // checkBgColor: \"#FFF\",\n  },\n  color: 'rgba(0, 0, 0, 0.87)',\n  defaultBgColor: '#FFF',\n  // frozenRowsBgColor: \"#FFF\",\n  frozenRowsBorderColor: FROZEN_ROWS_BORDER_COLOR,\n  frozenRowsColor: 'rgba(0, 0, 0, 0.54)',\n  header: {\n    sortArrowColor: 'rgba(0, 0, 0, 0.38)',\n  },\n  highlightBorderColor: '#5E9ED6',\n  selectionBgColor: '#CCE0FF',\n  selectionDragBgColor: '#EAF2FF',\n  switch: {\n    borderColor: '#BFBFBF', // 'D9D9D9'\n    checkBgColor: '#008CD6', // '3BCD4F'\n    // uncheckBgColor: \"#FFF\",\n  },\n  tree: {\n    lineColor: 'rgba(0, 0, 0, 0.3)',\n    buttonColor: 'rgba(0, 0, 0, 0.45)',\n    buttonBgColor: 'transparent',\n    buttonBorderColor: 'rgba(0, 0, 0, 0.3)',\n    linkColor: 'rgba(0, 0, 0, 0.3)',\n  },\n  underlayBackgroundColor: '#FFF',\n  // gridBorderColor: 'transparent',\n  // gridBorderWidth: 0,\n} as ThemeDefine\n","import { getChainSafe } from '../internal/utils'\nimport { getThemeSymbol } from '../internal/symbolManager'\nimport {\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  PartialThemeDefine,\n  ThemeDefine,\n  RequiredThemeDefine,\n  StylePropertyFunctionArg,\n} from '../ts-types'\n//private symbol\nconst _ = getThemeSymbol()\n\nfunction getProp<T extends ColorPropertyDefine | ColorsPropertyDefine | number>(\n  obj: PartialThemeDefine,\n  superObj: ThemeDefine,\n  names: string[],\n  defNames?: string[]\n): T {\n  return (\n    getChainSafe(obj, ...names) ||\n    getChainSafe(superObj, ...names) ||\n    (defNames && getChainSafe(obj, ...defNames)) ||\n    (defNames && getChainSafe(superObj, ...defNames))\n  )\n}\n\nexport class Theme implements RequiredThemeDefine {\n  private [_]: {\n    obj: PartialThemeDefine\n    superTheme: ThemeDefine\n  }\n  private _checkbox: RequiredThemeDefine['checkbox'] | null = null\n  private _radioButton: RequiredThemeDefine['radioButton'] | null = null\n  private _button: RequiredThemeDefine['button'] | null = null\n  private _header: RequiredThemeDefine['header'] | null = null\n  private _switch: RequiredThemeDefine['switch'] | null = null\n  private _tree: RequiredThemeDefine['tree'] | null = null\n  public constructor(obj: ThemeDefine)\n  public constructor(obj: PartialThemeDefine, superTheme: ThemeDefine)\n  public constructor(\n    obj: PartialThemeDefine | ThemeDefine,\n    superTheme?: ThemeDefine\n  ) {\n    this[_] = {\n      obj,\n      superTheme: superTheme as ThemeDefine,\n    }\n  }\n  public get underlayBackgroundColor(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['underlayBackgroundColor'])\n  }\n  // font\n  public get font(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['font'])\n  }\n  public get frozenRowsFont(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsFont'])\n  }\n  // color\n  public get color(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['color'])\n  }\n  public get frozenRowsColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsColor'], ['color'])\n  }\n  // background\n  public get defaultBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['defaultBgColor'])\n  }\n  public get frozenRowsBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsBgColor'], ['defaultBgColor'])\n  }\n  public get focusBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['focusBgColor'])\n  }\n  public get selectionBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['selectionBgColor'], ['defaultBgColor'])\n  }\n  public get selectionDragBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(\n      obj,\n      superTheme,\n      ['selectionDragBgColor'],\n      ['selectionBgColor']\n    )\n  }\n  public get highlightBgColor(): ColorPropertyDefine {\n    if (this.hasProperty(['highlightBgColor'])) {\n      const { obj, superTheme } = this[_]\n      return getProp(obj, superTheme, ['highlightBgColor'])\n    }\n    return (args: StylePropertyFunctionArg): any => {\n      const color =\n        args.row < args.grid.frozenRowCount\n          ? this.frozenRowsBgColor\n          : this.defaultBgColor\n      if (typeof color === 'function') {\n        return color(args)\n      }\n      return color\n    }\n  }\n  // border\n  public get borderColor(): ColorsPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['borderColor'])\n  }\n  public get frozenRowsBorderColor(): ColorsPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsBorderColor'], ['borderColor'])\n  }\n  public get highlightBorderColor(): ColorsPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['highlightBorderColor'], ['borderColor'])\n  }\n  // grid border\n  public get gridBorderColor(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['gridBorderColor'])\n  }\n  public get gridBorderWidth(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['gridBorderWidth'])\n  }\n  // size\n  public get defaultRowHeight(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['defaultRowHeight'])\n  }\n  public get defaultColWidth(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['defaultColWidth'])\n  }\n  public get highlightBorderWidth(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['highlightBorderWidth'])\n  }\n  // other\n  public get checkbox(): RequiredThemeDefine['checkbox'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._checkbox ||\n      (this._checkbox = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['checkbox', 'uncheckBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['checkbox', 'checkBgColor'],\n            ['color']\n          )\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['checkbox', 'borderColor'])\n        },\n      })\n    )\n  }\n  public get radioButton(): RequiredThemeDefine['radioButton'] {\n    const { obj, superTheme } = this[_]\n    return (\n      this._radioButton ||\n      (this._radioButton = {\n        get checkColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'checkColor'],\n            ['color']\n          )\n        },\n        get uncheckBorderColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'uncheckBorderColor'],\n            ['borderColor']\n          )\n        },\n        get checkBorderColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'checkBorderColor'],\n            ['borderColor']\n          )\n        },\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'uncheckBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'checkBgColor'],\n            ['defaultBgColor']\n          )\n        },\n      })\n    )\n  }\n  public get button(): RequiredThemeDefine['button'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._button ||\n      (this._button = {\n        get color(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['button', 'color'], ['color'])\n        },\n        get bgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['button', 'bgColor'],\n            ['defaultBgColor']\n          )\n        },\n      })\n    )\n  }\n  public get header(): RequiredThemeDefine['header'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._header ||\n      (this._header = {\n        get sortArrowColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['header', 'sortArrowColor'])\n        },\n      })\n    )\n  }\n  public get switch(): RequiredThemeDefine['switch'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._switch ||\n      (this._switch = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['switch', 'uncheckBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['switch', 'checkBgColor'], ['color'])\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['switch', 'borderColor'])\n        },\n      })\n    )\n  }\n  public get tree(): RequiredThemeDefine['tree'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._tree ||\n      (this._tree = {\n        get lineColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'lineColor'])\n        },\n        get buttonColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'buttonColor'], ['color'])\n        },\n        get buttonBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['tree', 'buttonBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get buttonBorderColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'buttonBorderColor'])\n        },\n        get linkColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'linkColor'])\n        },\n      })\n    )\n  }\n  public hasProperty(names: string[]): boolean {\n    const { obj, superTheme } = this[_]\n    return hasThemeProperty(obj, names) || hasThemeProperty(superTheme, names)\n  }\n  public extends(obj: PartialThemeDefine): Theme {\n    return new Theme(obj, this)\n  }\n}\n\nfunction hasThemeProperty(obj: PartialThemeDefine, names: string[]): boolean {\n  if (obj instanceof Theme) {\n    return obj.hasProperty(names)\n  } else {\n    let o: any = obj\n    if (!o) {\n      return false\n    }\n    for (let index = 0; index < names.length; index++) {\n      const name = names[index]\n      o = o[name]\n      if (!o) {\n        return false\n      }\n    }\n    return !!o\n  }\n}\n","import { getIgnoreCase, extend } from './internal/utils'\nimport { themes as plugins } from './plugins/themes'\nimport basicTheme from './themes/BASIC'\nimport materialDesignTheme from './themes/MATERIAL_DESIGN'\nimport { Theme } from './themes/theme'\nimport { ThemeDefine } from './ts-types'\n\nconst BASIC = new Theme(basicTheme)\nconst MATERIAL_DESIGN = new Theme(materialDesignTheme)\n\nconst builtin: { [key: string]: Theme } = {\n  BASIC,\n  MATERIAL_DESIGN,\n}\nlet defTheme = MATERIAL_DESIGN\n\nconst theme = { Theme }\nfunction of(value: ThemeDefine | string | undefined | null): Theme | null {\n  if (!value) {\n    return null\n  }\n  if (typeof value === 'string') {\n    const t = getIgnoreCase(getChoices(), value)\n    if (t) {\n      return t\n    }\n    return null\n  }\n  if (value instanceof Theme) {\n    return value\n  }\n  return new Theme(value)\n}\n\nfunction getDefault(): Theme {\n  return defTheme\n}\nfunction setDefault(defaultTheme: Theme): void {\n  defTheme = of(defaultTheme) || defTheme\n}\nfunction getChoices(): { [key: string]: Theme } {\n  return extend(builtin, plugins)\n}\n\nexport const themes = {\n  BASIC,\n  MATERIAL_DESIGN,\n  theme,\n  of,\n  getDefault,\n  setDefault,\n  getChoices,\n}\n","type RGBA = { r: number; g: number; b: number; a: number }\nconst rgbMap: { [key: string]: RGBA } = {}\nfunction styleColorToRGB(color: string): RGBA | null {\n  const dummy = document.createElement('div')\n  const { style } = dummy\n  style.color = color\n  style.position = 'fixed'\n  style.height = '1px'\n  style.width = '1px'\n  style.opacity = '0'\n  document.body.appendChild(dummy)\n  const { color: styleColor } = (\n    document.defaultView || window\n  ).getComputedStyle(dummy, '')\n  document.body.removeChild(dummy)\n  return colorToRGB0(styleColor || '')\n}\n\nfunction hexToNum(hex: string): number {\n  return parseInt(hex, 16)\n}\n\nfunction createRGB(r: number, g: number, b: number, a = 1): RGBA {\n  return { r, g, b, a }\n}\nfunction tripleHexToRGB({ 1: r, 2: g, 3: b }: string): RGBA {\n  return createRGB(hexToNum(r + r), hexToNum(g + g), hexToNum(b + b))\n}\nfunction sextupleHexToRGB({\n  1: r1,\n  2: r2,\n  3: g1,\n  4: g2,\n  5: b1,\n  6: b2,\n}: string): RGBA {\n  return createRGB(hexToNum(r1 + r2), hexToNum(g1 + g2), hexToNum(b1 + b2))\n}\n\nfunction testRGB({ r, g, b, a }: RGBA): boolean {\n  return (\n    0 <= r &&\n    r <= 255 &&\n    0 <= g &&\n    g <= 255 &&\n    0 <= b &&\n    b <= 255 &&\n    0 <= a &&\n    a <= 1\n  )\n}\nfunction rateToByte(r: number): number {\n  return Math.ceil((r * 255) / 100)\n}\nfunction colorToRGB0(color: string): RGBA | null {\n  if (/^#[0-9a-f]{3}$/i.exec(color)) {\n    return tripleHexToRGB(color)\n  }\n  if (/^#[0-9a-f]{6}$/i.exec(color)) {\n    return sextupleHexToRGB(color)\n  }\n  let ret = /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(Number(ret[1]), Number(ret[2]), Number(ret[3]))\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  ret = /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d(\\.\\d)?)\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(\n      Number(ret[1]),\n      Number(ret[2]),\n      Number(ret[3]),\n      Number(ret[4])\n    )\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  ret = /^rgb\\(\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(\n      rateToByte(Number(ret[1])),\n      rateToByte(Number(ret[3])),\n      rateToByte(Number(ret[5]))\n    )\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  ret = /^rgba\\(\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d(\\.\\d)?)\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(\n      rateToByte(Number(ret[1])),\n      rateToByte(Number(ret[3])),\n      rateToByte(Number(ret[5])),\n      Number(ret[7])\n    )\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  return null\n}\nfunction colorToRGB(color: string): RGBA {\n  if (typeof color !== 'string') {\n    return createRGB(0, 0, 0, 0)\n  }\n  color = color.toLowerCase().trim()\n  if (rgbMap[color]) {\n    return rgbMap[color]\n  }\n  return colorToRGB0(color) || (rgbMap[color] = styleColorToRGB(color) as RGBA)\n}\nexport function calcElapsedColor(\n  startColor: string,\n  endColor: string,\n  elapsedTime: number\n): string {\n  const startColorRGB = colorToRGB(startColor)\n  const endColorRGB = colorToRGB(endColor)\n  const getRGB = (colorName: keyof RGBA): number => {\n    const start = startColorRGB[colorName]\n    const end = endColorRGB[colorName]\n    if (elapsedTime >= 1) {\n      return end\n    }\n    if (elapsedTime <= 0) {\n      return start\n    }\n    const diff = start - end\n    return Math.ceil(start - diff * elapsedTime)\n  }\n  return `rgb(${getRGB('r')}, ${getRGB('g')}, ${getRGB('b')})`\n}","import {\n  PaddingOption,\n  calcBasePosition,\n  calcStartPosition,\n  getFontSize,\n} from '../internal/canvases'\nimport { calcElapsedColor } from '../internal/color'\nimport { ColorDef } from '../ts-types'\n\nconst { ceil, PI } = Math\n\nfunction strokeColorsRect(\n  ctx: CanvasRenderingContext2D,\n  borderColors: [\n    ColorDef | null,\n    ColorDef | null,\n    ColorDef | null,\n    ColorDef | null\n  ],\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  type Position = { x: number; y: number }\n  function strokeRectLines(\n    positions: [Position, Position, Position, Position, Position]\n  ): void {\n    for (let i = 0; i < borderColors.length; i++) {\n      const color = borderColors[i]\n      const preColor = borderColors[i - 1]\n      if (color) {\n        if (preColor !== color) {\n          if (preColor) {\n            ctx.strokeStyle = preColor\n            ctx.stroke()\n          }\n          const pos1 = positions[i]\n          ctx.beginPath()\n          ctx.moveTo(pos1.x, pos1.y)\n        }\n        const pos2 = positions[i + 1]\n        ctx.lineTo(pos2.x, pos2.y)\n      } else {\n        if (preColor) {\n          ctx.strokeStyle = preColor\n          ctx.stroke()\n        }\n      }\n    }\n    const pColor = borderColors[borderColors.length - 1]\n    if (pColor) {\n      ctx.strokeStyle = pColor\n      ctx.stroke()\n    }\n  }\n  if (\n    borderColors[0] === borderColors[1] &&\n    borderColors[0] === borderColors[2] &&\n    borderColors[0] === borderColors[3]\n  ) {\n    if (borderColors[0]) {\n      ctx.strokeStyle = borderColors[0]\n      ctx.strokeRect(left, top, width, height)\n    }\n  } else {\n    strokeRectLines([\n      { x: left, y: top },\n      { x: left + width, y: top },\n      { x: left + width, y: top + height },\n      { x: left, y: top + height },\n      { x: left, y: top },\n    ])\n  }\n}\nfunction roundRect(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  radius: number\n): void {\n  ctx.beginPath()\n  ctx.arc(left + radius, top + radius, radius, -PI, -0.5 * PI, false)\n  ctx.arc(left + width - radius, top + radius, radius, -0.5 * PI, 0, false)\n  ctx.arc(\n    left + width - radius,\n    top + height - radius,\n    radius,\n    0,\n    0.5 * PI,\n    false\n  )\n  ctx.arc(left + radius, top + height - radius, radius, 0.5 * PI, PI, false)\n  ctx.closePath()\n}\nfunction fillRoundRect(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  radius: number\n) {\n  roundRect(ctx, left, top, width, height, radius)\n  ctx.fill()\n}\nfunction strokeRoundRect(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  radius: number\n) {\n  roundRect(ctx, left, top, width, height, radius)\n  ctx.stroke()\n}\nfunction fillCircle(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  const min = Math.min(width, height) / 2\n  ctx.beginPath()\n  ctx.arc(left + min, top + min, min, 0, 2 * Math.PI)\n  ctx.closePath()\n  ctx.fill()\n}\nfunction strokeCircle(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  const min = Math.min(width, height) / 2\n  ctx.beginPath()\n  ctx.arc(left + min, top + min, min, 0, 2 * Math.PI)\n  ctx.closePath()\n  ctx.stroke()\n}\n\nexport type FillTextRectOption = {\n  offset?: number\n  padding?: PaddingOption\n}\nfunction fillTextRect(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  { offset = 2, padding }: FillTextRectOption = {}\n): void {\n  const rect = {\n    bottom: top + height,\n    height,\n    left,\n    right: left + width,\n    top,\n    width,\n  }\n  ctx.save()\n  try {\n    ctx.beginPath()\n    ctx.rect(rect.left, rect.top, rect.width, rect.height)\n    // clip\n    ctx.clip()\n\n    // 文字\n    const pos = calcBasePosition(ctx, rect, {\n      offset,\n      padding,\n    })\n\n    ctx.fillText(text, pos.x, pos.y)\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawInlineImageRectOption = {\n  offset?: number\n  padding?: PaddingOption\n}\nfunction drawInlineImageRect(\n  ctx: CanvasRenderingContext2D,\n  image: HTMLImageElement,\n  srcLeft: number,\n  srcTop: number,\n  srcWidth: number,\n  srcHeight: number,\n  destWidth: number,\n  destHeight: number,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  { offset = 2, padding }: DrawInlineImageRectOption = {}\n): void {\n  const rect = {\n    bottom: top + height,\n    height,\n    left,\n    right: left + width,\n    top,\n    width,\n  }\n  ctx.save()\n  try {\n    ctx.beginPath()\n    ctx.rect(rect.left, rect.top, rect.width, rect.height)\n    // clip\n    ctx.clip()\n\n    // 文字\n    const pos = calcStartPosition(ctx, rect, destWidth, destHeight, {\n      offset,\n      padding,\n    })\n\n    ctx.drawImage(\n      image,\n      srcLeft,\n      srcTop,\n      srcWidth || destWidth,\n      srcHeight || destHeight,\n      pos.x,\n      pos.y,\n      destWidth,\n      destHeight\n    )\n  } finally {\n    ctx.restore()\n  }\n}\n\n/**\n * Returns an object containing the width of the checkbox.\n * @param ctx - canvas context\n * @returns Object containing the width of the checkbox\n */\nfunction measureCheckbox(ctx: CanvasRenderingContext2D): { width: number } {\n  return {\n    width: getFontSize(ctx, null).width,\n  }\n}\n\n/**\n * Returns an object containing the width of the radio button.\n * @param ctx - canvas context\n * @returns Object containing the width of the radio button\n */\nfunction measureRadioButton(ctx: CanvasRenderingContext2D): { width: number } {\n  return {\n    width: getFontSize(ctx, null).width,\n  }\n}\n\nexport type DrawCheckboxOption = {\n  uncheckBgColor?: ColorDef\n  checkBgColor?: ColorDef\n  borderColor?: ColorDef\n  boxSize?: number\n}\n/**\n * draw Checkbox\n * @param ctx - canvas context\n * @param x - The x coordinate where to start drawing the checkbox (relative to the canvas)\n * @param y - The y coordinate where to start drawing the checkbox (relative to the canvas)\n * @param check - checkbox check status\n * @param option - option\n * @returns\n */\nfunction drawCheckbox(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: number | boolean,\n  {\n    uncheckBgColor = '#FFF',\n    checkBgColor = 'rgb(76, 73, 72)',\n    borderColor = '#000',\n    boxSize = measureCheckbox(ctx).width,\n  }: DrawCheckboxOption = {}\n): void {\n  const checkPoint = typeof check === 'number' ? (check > 1 ? 1 : check) : 1\n\n  ctx.save()\n  try {\n    ctx.fillStyle = check ? checkBgColor : uncheckBgColor\n    const leftX = ceil(x)\n    const topY = ceil(y)\n    const size = ceil(boxSize)\n\n    fillRoundRect(ctx, leftX - 1, topY - 1, size + 1, size + 1, boxSize / 5)\n    ctx.lineWidth = 1\n    ctx.strokeStyle = borderColor\n    strokeRoundRect(ctx, leftX - 0.5, topY - 0.5, size, size, boxSize / 5)\n\n    if (check) {\n      ctx.lineWidth = ceil(boxSize / 10)\n      ctx.strokeStyle = uncheckBgColor\n      let leftWidth = boxSize / 4\n      let rightWidth = (boxSize / 2) * 0.9\n      const leftLeftPos = x + boxSize * 0.2\n      const leftTopPos = y + boxSize / 2\n\n      if (checkPoint < 0.5) {\n        leftWidth *= checkPoint * 2\n      }\n\n      ctx.beginPath()\n      ctx.moveTo(leftLeftPos, leftTopPos)\n      ctx.lineTo(leftLeftPos + leftWidth, leftTopPos + leftWidth)\n      if (checkPoint > 0.5) {\n        if (checkPoint < 1) {\n          rightWidth *= (checkPoint - 0.5) * 2\n        }\n        ctx.lineTo(\n          leftLeftPos + leftWidth + rightWidth,\n          leftTopPos + leftWidth - rightWidth\n        )\n      }\n      ctx.stroke()\n    }\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawRadioButtonOption = {\n  checkColor?: ColorDef\n  borderColor?: ColorDef\n  bgColor?: ColorDef\n  boxSize?: number\n}\n/**\n * draw Radio button\n * @param ctx - canvas context\n * @param x - The x coordinate where to start drawing the radio button (relative to the canvas)\n * @param y - The y coordinate where to start drawing the radio button (relative to the canvas)\n * @param check - radio button check status\n * @param option - option\n * @returns\n */\nfunction drawRadioButton(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: number | boolean,\n  {\n    checkColor = 'rgb(76, 73, 72)',\n    borderColor = '#000',\n    bgColor = '#FFF',\n    boxSize = measureRadioButton(ctx).width,\n  }: DrawRadioButtonOption = {}\n): void {\n  const ratio = typeof check === 'number' ? (check > 1 ? 1 : check) : 1\n\n  ctx.save()\n  try {\n    ctx.fillStyle = bgColor\n    const leftX = ceil(x)\n    const topY = ceil(y)\n    const size = ceil(boxSize)\n    fillCircle(ctx, leftX - 1, topY - 1, size + 1, size + 1)\n\n    ctx.lineWidth = 1\n    ctx.strokeStyle = borderColor\n    strokeCircle(ctx, leftX - 0.5, topY - 0.5, size, size)\n    if (check) {\n      const checkSize = (size * ratio) / 2\n      const padding = (size - checkSize) / 2\n      ctx.fillStyle = checkColor\n      fillCircle(\n        ctx,\n        ceil((leftX - 0.5 + padding) * 100) / 100,\n        ceil((topY - 0.5 + padding) * 100) / 100,\n        ceil(checkSize * 100) / 100,\n        ceil(checkSize * 100) / 100\n      )\n    }\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawSwitchOption = {\n  uncheckBgColor?: ColorDef\n  checkBgColor?: ColorDef\n  borderColor?: ColorDef\n  btnSize?: { width: number; height: number }\n}\n/**\n * draw Switch Button\n * @param ctx - canvas context\n * @param x - The x coordinate where to start drawing the switch (relative to the canvas)\n * @param y - The y coordinate where to start drawing the switch (relative to the canvas)\n * @param check - switch check status\n * @param option - option\n * @returns\n */\nfunction drawSwitchBtn(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: boolean,\n  animElapsedTime: number,\n  {\n    uncheckBgColor = '#FFF',\n    checkBgColor = '#3BCD4F',\n    borderColor = '#D9D9D9',\n    btnSize = { width: 52, height: 32 },\n  }: DrawSwitchOption = {}\n) {\n  animElapsedTime =\n    animElapsedTime > 1 ? 1 : animElapsedTime < 0 ? 0 : animElapsedTime\n  const borderWidth = btnSize.height * 0.078125\n\n  ctx.save()\n  try {\n    ctx.fillStyle = check ? checkBgColor : borderColor\n    const bX = ceil(x) - 1\n    const bY = ceil(y) - 1\n    const bW = ceil(btnSize.width + 1)\n    const bH = ceil(btnSize.height + 1)\n    fillRoundRect(ctx, bX, bY, bW, bH, bH / 2)\n\n    const scale = check ? 1 - animElapsedTime : animElapsedTime\n    ctx.fillStyle = uncheckBgColor\n    const cW = (bW - borderWidth * 2) * scale\n    const cH = (bH - borderWidth * 2) * scale\n    const cX = bX + bW / 2 - cW / 2\n    const cY = bY + bH / 2 - cH / 2\n    fillRoundRect(ctx, cX, cY, cW, cH, cH / 2)\n\n    const offsetScale = check ? animElapsedTime : 1 - animElapsedTime\n    ctx.shadowColor = borderColor as string\n    ctx.shadowOffsetX = 0\n    ctx.shadowOffsetY = 2\n    ctx.shadowBlur = 3\n    const sW = bH - borderWidth * 2\n    const sH = sW\n    const sX = bX + borderWidth + (bW - borderWidth * 2 - sW) * offsetScale\n    const sY = bY + borderWidth\n    fillRoundRect(ctx, sX, sY, sW, sH, sH / 2)\n  } finally {\n    ctx.restore()\n  }\n}\n\nfunction drawSwitchButton(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: boolean,\n  animElapsedTime: number,\n  {\n    uncheckBgColor = '#FFF',\n    checkBgColor = '#008CD6',\n    borderColor = '#BFBFBF',\n    btnSize = { width: 44, height: 22 },\n  }: DrawSwitchOption = {}\n) {\n  animElapsedTime =\n    animElapsedTime > 1 ? 1 : animElapsedTime < 0 ? 0 : animElapsedTime\n  const borderWidth = (btnSize.height * 2) / 22\n  const fontSize = (btnSize.height * 12) / 22\n  const textMargin = (btnSize.height * 14) / 22\n\n  ctx.save()\n  try {\n    let backgroundFillStyle\n    let trueFillStyle\n    let falseFillStyle\n    if (0 < animElapsedTime && animElapsedTime < 1) {\n      backgroundFillStyle = check\n        ? calcElapsedColor(\n            borderColor as string,\n            checkBgColor as string,\n            animElapsedTime\n          )\n        : calcElapsedColor(\n            checkBgColor as string,\n            borderColor as string,\n            animElapsedTime\n          )\n      trueFillStyle = check\n        ? calcElapsedColor(\n            borderColor as string,\n            uncheckBgColor as string,\n            animElapsedTime\n          )\n        : calcElapsedColor(\n            uncheckBgColor as string,\n            borderColor as string,\n            animElapsedTime\n          )\n      falseFillStyle = check\n        ? calcElapsedColor(\n            uncheckBgColor as string,\n            checkBgColor as string,\n            animElapsedTime\n          )\n        : calcElapsedColor(\n            checkBgColor as string,\n            uncheckBgColor as string,\n            animElapsedTime\n          )\n    } else {\n      backgroundFillStyle = check ? checkBgColor : borderColor\n      trueFillStyle = check ? uncheckBgColor : borderColor\n      falseFillStyle = check ? checkBgColor : uncheckBgColor\n    }\n    const bX = x\n    const bY = y\n    const bW = btnSize.width\n    const bH = btnSize.height\n    ctx.fillStyle = backgroundFillStyle\n    fillRoundRect(ctx, bX, bY, bW, bH, bH / 2)\n\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${fontSize}px sans-serif`\n    ctx.fillStyle = trueFillStyle\n    ctx.fillText('是', bX + textMargin, bY + bH / 2)\n    ctx.fillStyle = falseFillStyle\n    ctx.fillText('否', bX + bW - textMargin, bY + bH / 2)\n\n    const offsetScale = check ? animElapsedTime : 1 - animElapsedTime\n    const sW = bH - borderWidth * 2\n    const sH = sW\n    const sX = bX + borderWidth + (bW - borderWidth * 2 - sW) * offsetScale\n    const sY = bY + borderWidth\n    ctx.fillStyle = uncheckBgColor\n    fillRoundRect(ctx, sX, sY, sW, sH, sH / 2)\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawButtonOption = {\n  backgroundColor?: ColorDef\n  bgColor?: ColorDef\n  radius?: number\n  shadow?: {\n    color?: string\n    blur?: number\n    offsetX?: number\n    offsetY?: number\n    offset?: { x?: number; y?: number }\n  }\n}\nfunction drawButton(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  option: DrawButtonOption = {}\n): void {\n  const {\n    backgroundColor = '#FFF',\n    bgColor = backgroundColor,\n    radius = 4,\n    shadow = {},\n  } = option\n\n  ctx.save()\n  try {\n    ctx.fillStyle = bgColor\n\n    if (shadow) {\n      const {\n        color = 'rgba(0, 0, 0, 0.24)',\n        blur = 1,\n        offsetX = 0,\n        offsetY = 2,\n        offset: { x: ox = offsetX, y: oy = offsetY } = {},\n      } = shadow\n\n      ctx.shadowColor = color\n      ctx.shadowBlur = blur // 模糊\n      ctx.shadowOffsetX = ox\n      ctx.shadowOffsetY = oy\n    }\n\n    fillRoundRect(ctx, ceil(left), ceil(top), ceil(width), ceil(height), radius)\n  } finally {\n    ctx.restore()\n  }\n}\n\n/**\n * canvasHelper\n */\nexport const canvasHelper = {\n  drawButton,\n  drawCheckbox,\n  drawInlineImageRect,\n  drawRadioButton,\n  drawSwitchButton,\n  drawSwitchBtn,\n  fillRoundRect,\n  fillTextRect,\n  measureCheckbox,\n  measureRadioButton,\n  roundRect,\n  strokeColorsRect,\n  strokeRoundRect,\n  fillCircle,\n  strokeCircle,\n}\n\nexport type CanvasHelper = {\n  drawButton: typeof drawButton\n  drawCheckbox: typeof drawCheckbox\n  drawInlineImageRect: typeof drawInlineImageRect\n  drawRadioButton: typeof drawRadioButton\n  drawSwitchButton: typeof drawSwitchButton\n  drawSwitchBtn: typeof drawSwitchBtn\n  fillRoundRect: typeof fillRoundRect\n  fillTextRect: typeof fillTextRect\n  measureCheckbox: typeof measureCheckbox\n  measureRadioButton: typeof measureRadioButton\n  roundRect: typeof roundRect\n  strokeColorsRect: typeof strokeColorsRect\n  strokeRoundRect: typeof strokeRoundRect\n  fillCircle: typeof fillCircle\n  strokeCircle: typeof strokeCircle\n}\n","import { canvasHelper, CanvasHelper } from './tools/canvasHelper'\n\n/**\n * tools\n */\nexport const tools: {\n  canvasHelper: CanvasHelper\n} = { canvasHelper }\n","import { columns } from '../../../columns'\nimport { headers } from '../../../headers'\nimport { ColumnData, HeaderData } from '../api'\n\nlet seqId = -1\n\nexport function newEmptyHeaderData(): HeaderData<any> {\n  return {\n    id: seqId--,\n    define: {},\n    headerType: headers.type.of(null), // default\n  }\n}\n\nexport function newEmptyColumnData(): ColumnData<any> {\n  return {\n    id: seqId--,\n    define: {},\n    columnType: columns.type.of(null), // default\n    style: null,\n  }\n}\n\nexport class EmptyDataCache<T> {\n  private headers: HeaderData<T>[][] = []\n  private columns: ColumnData<T>[][] = []\n  getHeader(col: number, row: number): HeaderData<T> {\n    const rows = this.headers[row] || (this.headers[row] = [])\n    return rows[col] || (rows[col] = newEmptyHeaderData())\n  }\n  getBody(col: number, row: number): ColumnData<T> {\n    const rows = this.columns[row] || (this.columns[row] = [])\n    return rows[col] || (rows[col] = newEmptyColumnData())\n  }\n}\n","import { CellRange, LayoutObjectId } from '../../../ts-types'\nimport { columns } from '../../../columns'\nimport { headers } from '../../../headers'\nimport {\n  ColumnData,\n  ColumnDefine,\n  GroupHeaderDefine,\n  HeaderData,\n  HeadersDefine,\n  LayoutMapAPI,\n} from '../api'\nimport { EmptyDataCache } from './utils'\n\nlet seqId = 0\nexport class SimpleHeaderLayoutMap<T> implements LayoutMapAPI<T> {\n  private _headerObjects: HeaderData<T>[]\n  private _headerObjectMap: { [key in LayoutObjectId]: HeaderData<T> }\n  private _headerCellIds: number[][]\n  private _columns: ColumnData<T>[]\n  readonly bodyRowCount: number = 1\n  private _emptyDataCache = new EmptyDataCache()\n  constructor(header: HeadersDefine<T>) {\n    this._columns = []\n    this._headerCellIds = []\n\n    this._headerObjects = this._addHeaders(0, header, [])\n    this._headerObjectMap = this._headerObjects.reduce((o, e) => {\n      o[e.id as number] = e\n      return o\n    }, {} as { [key in LayoutObjectId]: HeaderData<T> })\n\n    this._setupHeaderSpan()\n  }\n  get columnWidths(): ColumnData<T>[] {\n    return this._columns\n  }\n  get headerRowCount(): number {\n    return this._headerCellIds.length\n  }\n  get colCount(): number {\n    return this._columns.length\n  }\n  get headerObjects(): HeaderData<T>[] {\n    return this._headerObjects\n  }\n  get columnObjects(): ColumnData<T>[] {\n    return this._columns\n  }\n  getCellId(col: number, row: number): LayoutObjectId {\n    if (this.headerRowCount <= row) {\n      return this._columns[col].id\n    }\n    //in header\n    return this._headerCellIds[row][col]\n  }\n  getHeader(col: number, row: number): HeaderData<T> {\n    const id = this.getCellId(col, row)\n    return (\n      this._headerObjectMap[id as number] ||\n      this._emptyDataCache.getHeader(col, row)\n    )\n  }\n  getBody(col: number, _row: number): ColumnData<T> {\n    return this._columns[col] || this._emptyDataCache.getBody(col, 0)\n  }\n  getBodyLayoutRangeById(id: LayoutObjectId): CellRange {\n    for (let col = 0; col < this.colCount; col++) {\n      if (id === this._columns[col].id) {\n        return {\n          start: { col, row: 0 },\n          end: { col, row: 0 },\n        }\n      }\n    }\n    throw new Error(`can not found body layout @id=${id as number}`)\n  }\n  getCellRange(col: number, row: number): CellRange {\n    const result: CellRange = { start: { col, row }, end: { col, row } }\n    if (this.headerRowCount <= row) {\n      return result\n    }\n    //in header\n    const id = this.getCellId(col, row)\n    for (let c = col - 1; c >= 0; c--) {\n      if (id !== this.getCellId(c, row)) {\n        break\n      }\n      result.start.col = c\n    }\n    for (let c = col + 1; c < this.colCount; c++) {\n      if (id !== this.getCellId(c, row)) {\n        break\n      }\n      result.end.col = c\n    }\n    for (let r = row - 1; r >= 0; r--) {\n      if (id !== this.getCellId(col, r)) {\n        break\n      }\n      result.start.row = r\n    }\n    for (let r = row + 1; r < this.headerRowCount; r++) {\n      if (id !== this.getCellId(col, r)) {\n        break\n      }\n      result.end.row = r\n    }\n    return result\n  }\n  getRecordIndexByRow(row: number): number {\n    if (row < this.headerRowCount) {\n      return -1\n    } else {\n      return row - this.headerRowCount\n    }\n  }\n  getRecordStartRowByRecordIndex(index: number): number {\n    return this.headerRowCount + index\n  }\n  private _addHeaders(\n    row: number,\n    header: HeadersDefine<T>,\n    roots: number[]\n  ): HeaderData<T>[] {\n    const results: HeaderData<T>[] = []\n    const rowCells = this._headerCellIds[row] || this._newRow(row)\n    header.forEach((hd) => {\n      const col = this._columns.length\n      const id = seqId++\n      const cell: HeaderData<T> = {\n        id,\n        caption: hd.caption,\n        field: hd.headerField || (hd as ColumnDefine<T>).field,\n        style: hd.headerStyle,\n        headerType: headers.type.ofCell(hd),\n        action: headers.action.ofCell(hd),\n        define: hd,\n        icon: hd.headerIcon,\n        tooltip: hd.headerTooltip,\n        tooltipType: hd.headerTooltipType,\n      }\n      results[id] = cell\n      rowCells[col] = id\n      for (let r = row - 1; r >= 0; r--) {\n        this._headerCellIds[r][col] = roots[r]\n      }\n      if ((hd as GroupHeaderDefine<T>).columns) {\n        this._addHeaders(row + 1, (hd as GroupHeaderDefine<T>).columns, [\n          ...roots,\n          id,\n        ]).forEach((c) => results.push(c))\n      } else {\n        const colDef = hd as ColumnDefine<T>\n        this._columns.push({\n          id: seqId++,\n          field: colDef.field,\n          width: colDef.width,\n          minWidth: colDef.minWidth,\n          maxWidth: colDef.maxWidth,\n          icon: colDef.icon,\n          message: colDef.message,\n          columnType: columns.type.of(colDef.columnType),\n          action: columns.action.of(colDef.action),\n          style: colDef.style,\n          define: colDef,\n          contentHidden: colDef.contentHidden,\n          disableResize: colDef.disableResize,\n          tooltip: colDef.tooltip,\n          tooltipType: colDef.tooltipType,\n        })\n        for (let r = row + 1; r < this._headerCellIds.length; r++) {\n          this._headerCellIds[r][col] = id\n        }\n      }\n    })\n    return results\n  }\n  private _newRow(row: number): number[] {\n    const newRow: number[] = (this._headerCellIds[row] = [])\n    if (!this._columns.length) {\n      return newRow\n    }\n    const prev = this._headerCellIds[row - 1]\n    for (let col = 0; col < prev.length; col++) {\n      newRow[col] = prev[col]\n    }\n    return newRow\n  }\n  private _setupHeaderSpan() {\n    const processed: {\n      [id: number]: boolean\n    } = {}\n    for (let row = 0; row < this._headerCellIds.length; row++) {\n      const cols = this._headerCellIds[row]\n      for (let col = 0; col < cols.length; col++) {\n        const cellId = cols[col]\n        if (!processed[cellId]) {\n          processed[cellId] = true\n          const cell = this._headerObjectMap[cellId]\n\n          let headerRowSpan\n          if ('headerRowSpan' in cell.define) {\n            window.console.warn(\n              \"'headerRowSpan' is deprecated, please use 'rowSpan' instead\"\n            )\n            headerRowSpan = cell.define['headerRowSpan']\n          }\n          let headerColSpan\n          if ('headerColSpan' in cell.define) {\n            window.console.warn(\n              \"'headerColSpan' is deprecated, please use 'colSpan' instead\"\n            )\n            headerColSpan = cell.define['headerColSpan']\n          }\n\n          const rowSpan = Number(cell.define.rowSpan || headerRowSpan || 1)\n          const colSpan = Number(cell.define.colSpan || headerColSpan || 1)\n          if (rowSpan > 1 || colSpan > 1) {\n            for (let i = row; i < row + rowSpan; i++) {\n              for (let j = col; j < col + colSpan; j++) {\n                this._headerCellIds[i][j] = cellId\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import { columns } from '../../../columns'\nimport { headers } from '../../../headers'\nimport {\n  CellDefine,\n  ColumnData,\n  HeaderBodyLayoutDefine,\n  HeaderCellDefine,\n  HeaderData,\n  LayoutDefine,\n  LayoutMapAPI,\n  WidthData,\n} from '../api'\nimport { CellRange, LayoutObjectId } from '../../../ts-types'\nimport { EmptyDataCache } from './utils'\n\ninterface HasSpans {\n  colSpan?: number\n  rowSpan?: number\n  width?: number | string\n  minWidth?: number | string\n  maxWidth?: number | string\n}\n\nfunction normalizeLayout<T>(\n  layout: LayoutDefine<T>\n): HeaderBodyLayoutDefine<T> {\n  if (Array.isArray(layout)) {\n    return {\n      header: layout,\n      body: layout,\n    }\n  }\n  return layout\n}\n\nlet seqId = 0\n\nclass LayoutObjectGrid<T, D extends HasSpans> {\n  objects: T[] = []\n  objectGrid: T[][] = []\n  objectMap: { [key in LayoutObjectId]: T } = {}\n  columnCount = 0\n  columnWidths: WidthData[] = []\n  constructor(layout: D[][], transform: (d: D, id: LayoutObjectId) => T) {\n    layout.forEach((rowLayout, row) => {\n      let col = 0\n      rowLayout.forEach((cell) => {\n        const id = seqId++\n        const obj = transform(cell, id)\n        this.objects.push(obj)\n        this.objectMap[id] = obj\n        col = this._findStartCell(col, row)\n        const rowSpan = Number(cell.rowSpan ?? 1)\n        const colSpan = Number(cell.colSpan ?? 1)\n        const endRow = row + rowSpan\n        const endCol = col + colSpan\n        for (let rowIndex = row; rowIndex < endRow; rowIndex++) {\n          const objectGridRow = this._getObjectGridRow(rowIndex)\n          for (let colIndex = col; colIndex < endCol; colIndex++) {\n            objectGridRow[colIndex] = obj\n          }\n        }\n        if (colSpan === 1) {\n          this._setWidthDataIfAbsent(col, cell)\n        }\n        this._useColumnIndex(endCol - 1)\n        col = endCol\n      })\n    })\n  }\n  get rowCount(): number {\n    return this.objectGrid.length\n  }\n  private _findStartCell(col: number, row: number): number {\n    const objectGridRow = this._getObjectGridRow(row)\n    for (let index = col; index < objectGridRow.length; index++) {\n      if (!objectGridRow[index]) {\n        return index\n      }\n    }\n    return objectGridRow.length\n  }\n  private _getObjectGridRow(row: number): T[] {\n    return this.objectGrid[row] || (this.objectGrid[row] = [])\n  }\n  private _useColumnIndex(col: number): void {\n    if (this.columnCount > col) {\n      return\n    }\n    this.columnCount = col + 1\n  }\n  private _setWidthDataIfAbsent(col: number, cell: HasSpans): void {\n    if (!this.columnWidths[col]) {\n      if (\n        cell.width != null ||\n        cell.maxWidth != null ||\n        cell.minWidth != null\n      ) {\n        this.columnWidths[col] = {\n          width: cell.width,\n          maxWidth: cell.maxWidth,\n          minWidth: cell.minWidth,\n        }\n      }\n    }\n  }\n}\n\nexport class MultiLayoutMap<T> implements LayoutMapAPI<T> {\n  private _header: LayoutObjectGrid<HeaderData<T>, HeaderCellDefine<T>>\n  private _body: LayoutObjectGrid<ColumnData<T>, CellDefine<T>>\n  private _columnWidths: WidthData[] = []\n  private _columnCount: number\n  private _emptyDataCache = new EmptyDataCache()\n  constructor(layout: LayoutDefine<T>) {\n    const hbLayout = normalizeLayout(layout)\n    const header = (this._header = new LayoutObjectGrid(\n      hbLayout.header,\n      (hd: HeaderCellDefine<T>, id: LayoutObjectId): HeaderData<T> => {\n        return {\n          id,\n          caption: hd.caption,\n          field: hd.headerField || (hd as CellDefine<T>).field,\n          style: hd.headerStyle,\n          headerType: headers.type.ofCell(hd),\n          action: headers.action.ofCell(hd),\n          define: hd,\n          icon: hd.headerIcon,\n          tooltip: hd.headerTooltip,\n          tooltipType: hd.headerTooltipType,\n        }\n      }\n    ))\n    const body = (this._body = new LayoutObjectGrid(\n      hbLayout.body,\n      (colDef: CellDefine<T>, id: LayoutObjectId): ColumnData<T> => {\n        return {\n          id,\n          field: colDef.field,\n          width: colDef.width,\n          minWidth: colDef.minWidth,\n          maxWidth: colDef.maxWidth,\n          icon: colDef.icon,\n          message: colDef.message,\n          columnType: columns.type.of(colDef.columnType),\n          action: columns.action.of(colDef.action),\n          style: colDef.style,\n          define: colDef,\n          contentHidden: colDef.contentHidden,\n          disableResize: colDef.disableResize,\n          tooltip: colDef.tooltip,\n          tooltipType: colDef.tooltipType,\n        }\n      }\n    ))\n    const columnCount = (this._columnCount = Math.max(\n      header.columnCount,\n      body.columnCount\n    ))\n    for (let col = 0; col < columnCount; col++) {\n      const widthDef = header.columnWidths[col] || body.columnWidths[col] || {}\n      this._columnWidths[col] = widthDef\n    }\n  }\n  get columnWidths(): WidthData[] {\n    return this._columnWidths\n  }\n  get headerRowCount(): number {\n    return this._header.rowCount\n  }\n  get bodyRowCount(): number {\n    return this._body.rowCount\n  }\n  get colCount(): number {\n    return this._columnCount\n  }\n  get headerObjects(): HeaderData<T>[] {\n    return this._header.objects\n  }\n  get columnObjects(): ColumnData<T>[] {\n    return this._body.objects\n  }\n  getCellId(col: number, row: number): LayoutObjectId {\n    if (this.headerRowCount <= row) {\n      const bodyRow = row - this.headerRowCount\n      const bodyLayoutRow = bodyRow % this.bodyRowCount\n      return this._body.objectGrid[bodyLayoutRow]?.[col]?.id\n    }\n    //in header\n    return this._header.objectGrid[row]?.[col]?.id\n  }\n  getHeader(col: number, row: number): HeaderData<T> {\n    const id = this.getCellId(col, row)\n    return (\n      this._header.objectMap[id as number] ||\n      this._emptyDataCache.getHeader(col, row)\n    )\n  }\n  getBody(col: number, row: number): ColumnData<T> {\n    const id = this.getCellId(col, row)\n    return (\n      this._body.objectMap[id as number] ||\n      this._emptyDataCache.getBody(col, row)\n    )\n  }\n  getBodyLayoutRangeById(id: LayoutObjectId): CellRange {\n    for (let row = 0; row < this.bodyRowCount; row++) {\n      const objectGridRow = this._body.objectGrid[row]\n      if (!objectGridRow) {\n        continue\n      }\n      for (let col = 0; col < this.colCount; col++) {\n        if (id === objectGridRow[col]?.id) {\n          return this._getCellRange(this._body, col, row, 0)\n        }\n      }\n    }\n    throw new Error(`can not found body layout @id=${id as number}`)\n  }\n  getCellRange(col: number, row: number): CellRange {\n    if (this.headerRowCount <= row) {\n      const recordIndex = this.getRecordIndexByRow(row)\n      const startRow = this.getRecordStartRowByRecordIndex(recordIndex)\n      const bodyRow = row - this.headerRowCount\n      const bodyLayoutRow = bodyRow % this.bodyRowCount\n      return this._getCellRange(this._body, col, bodyLayoutRow, startRow)\n    }\n    //in header\n    return this._getCellRange(this._header, col, row, 0)\n  }\n  getRecordIndexByRow(row: number): number {\n    if (row < this.headerRowCount) {\n      return -1\n    } else {\n      const bodyRow = row - this.headerRowCount\n      return Math.floor(bodyRow / this.bodyRowCount)\n    }\n  }\n  getRecordStartRowByRecordIndex(index: number): number {\n    return this.headerRowCount + index * this.bodyRowCount\n  }\n  private _getCellRange(\n    layout: LayoutObjectGrid<HeaderData<T> | ColumnData<T>, any>,\n    col: number,\n    layoutRow: number,\n    offsetRow: number\n  ): CellRange {\n    const result: CellRange = {\n      start: { col, row: layoutRow + offsetRow },\n      end: { col, row: layoutRow + offsetRow },\n    }\n    const { objectGrid } = layout\n    const id = objectGrid[layoutRow]?.[col]?.id\n    if (id == null) {\n      return result\n    }\n    for (let c = col - 1; c >= 0; c--) {\n      if (id !== objectGrid[layoutRow]?.[c]?.id) {\n        break\n      }\n      result.start.col = c\n    }\n    for (let c = col + 1; c < layout.columnCount; c++) {\n      if (id !== objectGrid[layoutRow]?.[c]?.id) {\n        break\n      }\n      result.end.col = c\n    }\n    for (let r = layoutRow - 1; r >= 0; r--) {\n      if (id !== objectGrid[r]?.[col]?.id) {\n        break\n      }\n      result.start.row = r + offsetRow\n    }\n    for (let r = layoutRow + 1; r < layout.rowCount; r++) {\n      if (id !== objectGrid[r]?.[col]?.id) {\n        break\n      }\n      result.end.row = r + offsetRow\n    }\n    return result\n  }\n}\n","import { LayoutObjectId } from '../ts-types'\nimport { LayoutMapAPI } from './layout-map'\n\nexport class LayoutMap<T> implements LayoutMapAPI<T> {\n  private _layoutMap: LayoutMapAPI<T>\n  public hiddenHeader: boolean\n  constructor(layoutMap: LayoutMapAPI<T>) {\n    this._layoutMap = layoutMap\n  }\n  public get headerRowCount() {\n    return this.hiddenHeader ? 0 : this._layoutMap.headerRowCount\n  }\n  public get bodyRowCount() {\n    return this._layoutMap.bodyRowCount\n  }\n  public get colCount() {\n    return this._layoutMap.colCount\n  }\n\n  public get columnWidths() {\n    return this._layoutMap.columnWidths\n  }\n  public get headerObjects() {\n    return this._layoutMap.headerObjects\n  }\n  public get columnObjects() {\n    return this._layoutMap.columnObjects\n  }\n\n  public getHeader(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getHeader(col, row)\n  }\n  public getBody(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getBody(col, row)\n  }\n  public getCellId(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getCellId(col, row)\n  }\n  public getCellRange(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    const range = this._layoutMap.getCellRange(col, row)\n    if (this.hiddenHeader) {\n      range.start.row -= this._layoutMap.headerRowCount\n      range.end.row -= this._layoutMap.headerRowCount\n    }\n    return range\n  }\n  public getBodyLayoutRangeById(id: LayoutObjectId) {\n    const range = this._layoutMap.getBodyLayoutRangeById(id)\n    return range\n  }\n  public getRecordIndexByRow(row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getRecordIndexByRow(row)\n  }\n  public getRecordStartRowByRecordIndex(index: number) {\n    let row = this._layoutMap.getRecordStartRowByRecordIndex(index)\n    if (this.hiddenHeader) {\n      row -= this._layoutMap.headerRowCount\n    }\n    return row\n  }\n}\n","import { DG_EVENT_TYPE, DrawGridEvents } from '../core/draw-grid/DG_EVENT_TYPE'\n\nexport interface ListGridEvents extends DrawGridEvents {\n  /**\n   * Indicates when the cell value was changed.\n   */\n  CHANGED_VALUE: 'changed_value'\n  /**\n   * Indicates when the header cell value was changed.\n   */\n  CHANGED_HEADER_VALUE: 'changed_header_value'\n  /**\n   * Indicates when get the cell range.\n   */\n  CELL_RANGE: 'cell_range'\n  /**\n   * Indicates when get the cell value.\n   */\n  CELL_VALUE: 'cell_value'\n}\n\nexport const LG_EVENT_TYPE: ListGridEvents = {\n  ...DG_EVENT_TYPE,\n  CHANGED_HEADER_VALUE: 'changed_header_value' as const,\n  CHANGED_VALUE: 'changed_value' as const,\n  CELL_RANGE: 'cell_range' as const,\n  CELL_VALUE: 'cell_value' as const,\n}\n","import {\n  ListGridAPI,\n  CellContext,\n  GridCanvasHelperAPI,\n  MessageObject,\n  ColumnStyle,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { MessageElement } from './internal/MessageElement'\n\nexport abstract class BaseMessage<T> {\n  private _grid: ListGridAPI<T>\n  private _messageElement: MessageElement | undefined\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n  }\n  public dispose() {\n    this.detachMessageElement()\n    if (this._messageElement) {\n      this._messageElement.dispose()\n    }\n    delete this._messageElement\n  }\n  abstract createMessageElementInternal(): MessageElement\n  public drawCellMessageInternal(\n    message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    // nothing\n  }\n  public attachMessageElement(col: number, row: number, message: any) {\n    const messageElement = this._getMessageElement()\n    messageElement.attach(this._grid, col, row, message)\n  }\n  public moveMessageElement(col: number, row: number) {\n    const messageElement = this._getMessageElement()\n    messageElement.move(this._grid, col, row)\n  }\n  public detachMessageElement() {\n    const messageElement = this._getMessageElement()\n    messageElement.detach()\n  }\n  public drawCellMessage(\n    message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ) {\n    this.drawCellMessageInternal(message, context, style, helper, grid, info)\n  }\n  private _getMessageElement() {\n    return (\n      this._messageElement ||\n      (this._messageElement = this.createMessageElementInternal())\n    )\n  }\n}\n","import { ListGridAPI, MessageObject } from '../../../ts-types'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\n\nimport messageElementCss from './MessageElement.css'\n\nconst CLASSNAME_ME = 'kaka-grid__message-element'\nconst MESSAGE_CLASSNAME_ME = `${CLASSNAME_ME}__message`\nconst HIDDEN_CLASSNAME_ME = `${CLASSNAME_ME}--hidden`\nconst SHOWN_CLASSNAME_ME = `${CLASSNAME_ME}--shown`\n\nfunction createMessageDomElement() {\n  style.inject('messageElement', messageElementCss)\n  const rootElement = createElement('div', {\n    classList: [CLASSNAME_ME, HIDDEN_CLASSNAME_ME],\n  })\n  const messageElement = createElement('span', {\n    classList: [MESSAGE_CLASSNAME_ME],\n  })\n  rootElement.appendChild(messageElement)\n  return rootElement\n}\n\nexport class MessageElement {\n  protected _rootElement: HTMLDivElement\n  protected _messageElement: Element\n  private _handler: EventHandler\n  public constructor() {\n    this._handler = new EventHandler()\n    const rootElement = (this._rootElement = createMessageDomElement())\n    this._messageElement = rootElement.querySelector(\n      `.${MESSAGE_CLASSNAME_ME}`\n    ) as Element\n  }\n  public dispose(): void {\n    this.detach()\n    this._handler.dispose()\n  }\n  public attach<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    message: MessageObject\n  ): void {\n    const rootElement = this._rootElement\n    const messageElement = this._messageElement\n\n    rootElement.classList.remove(SHOWN_CLASSNAME_ME)\n    rootElement.classList.add(HIDDEN_CLASSNAME_ME)\n\n    if (this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASSNAME_ME)\n      rootElement.classList.remove(HIDDEN_CLASSNAME_ME)\n\n      messageElement.textContent = message.message\n    } else {\n      this._detach()\n    }\n  }\n  public move<T>(grid: ListGridAPI<T>, col: number, row: number): void {\n    const rootElement = this._rootElement\n    if (rootElement && this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASSNAME_ME)\n      rootElement.classList.remove(HIDDEN_CLASSNAME_ME)\n    } else {\n      this._detach()\n    }\n  }\n  public detach(): void {\n    this._detach()\n  }\n  private _detach(): void {\n    const rootElement = this._rootElement\n    if (rootElement && rootElement.parentElement) {\n      rootElement.parentElement.removeChild(rootElement)\n      rootElement.classList.remove(SHOWN_CLASSNAME_ME)\n      rootElement.classList.add(HIDDEN_CLASSNAME_ME)\n    }\n  }\n  private _attachCell<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number\n  ): boolean {\n    const rootElement = this._rootElement\n    const { element, rect } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    const top = rect.bottom\n    const left = rect.left\n    const width = rect.width\n    const frozenRowCount = grid.frozenRowCount\n    const frozenColCount = grid.frozenColCount\n    if (row >= frozenRowCount && frozenRowCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(col, frozenRowCount - 1)\n      )\n      if (top < frozenRect.bottom) {\n        return false // 超出范围\n      }\n    } else {\n      if (top < 0) {\n        return false // 超出范围\n      }\n    }\n    if (col >= frozenColCount && frozenColCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(frozenColCount - 1, row)\n      )\n      if (left < frozenRect.right) {\n        return false // 超出范围\n      }\n    } else {\n      if (left < 0) {\n        return false // 超出范围\n      }\n    }\n    const offsetHeight = element.offsetHeight\n    const offsetWidth = element.offsetWidth\n    if (offsetHeight < top) {\n      return false // 超出范围\n    }\n    if (offsetWidth < left) {\n      return false // 超出范围\n    }\n\n    rootElement.style.top = `${top.toFixed()}px`\n    rootElement.style.left = `${left.toFixed()}px`\n    rootElement.style.width = `${width.toFixed()}px`\n    if (rootElement.parentElement !== element) {\n      element.appendChild(rootElement)\n    }\n    return true\n  }\n}\n","import style from '../../../internal/style'\nimport { MessageElement } from './MessageElement'\n\nimport errorMessageElementCss from './ErrorMessageElement.css'\n\nconst CLASSNAME_EME = 'kaka-grid__error-message-element'\nconst MESSAGE_CLASSNAME_EME = `${CLASSNAME_EME}__message`\n\nexport class ErrorMessageElement extends MessageElement {\n  public constructor() {\n    super()\n    style.inject('errorMessageElement', errorMessageElementCss)\n    this._rootElement.classList.add(CLASSNAME_EME)\n    this._messageElement.classList.add(MESSAGE_CLASSNAME_EME)\n  }\n}\n","import { CellContext, ColorDef, GridCanvasHelperAPI } from '../../ts-types'\nimport Rect from '../../internal/Rect'\n\nexport function drawExclamationMarkBox(\n  context: CellContext,\n  style: {\n    bgColor: ColorDef\n    color?: ColorDef\n  },\n  helper: GridCanvasHelperAPI\n): void {\n  const bgColor = style.bgColor\n  const color = style.color\n  const ctx = context.getContext()\n  const rect = context.getRect()\n  // draw box\n  ctx.fillStyle = bgColor\n  const boxRect = (rect as Rect).copy()\n  boxRect.left = boxRect.right - 24\n  ctx.fillRect(boxRect.left, boxRect.top, boxRect.width, boxRect.height - 1)\n\n  // draw exclamation mark\n  const fillColor = color\n  const height = 20\n  const width = height / 5\n  const left = boxRect.left + (boxRect.width - width) / 2\n  const top = boxRect.top + (boxRect.height - height) / 2\n  helper.fillRectWithState(\n    new Rect(left, top, width, (height / 5) * 3),\n    context,\n    { fillColor }\n  )\n  helper.fillRectWithState(\n    new Rect(left, top + (height / 5) * 4, width, height / 5),\n    context,\n    { fillColor }\n  )\n}\n\nexport function drawInformationMarkBox(\n  context: CellContext,\n  style: {\n    bgColor: ColorDef\n    color?: ColorDef\n  },\n  helper: GridCanvasHelperAPI\n) {\n  const bgColor = style.bgColor\n  const color = style.color\n  const ctx = context.getContext()\n  const rect = context.getRect()\n  // draw box\n  ctx.fillStyle = bgColor\n  const boxRect = (rect as Rect).copy()\n  boxRect.left = boxRect.right - 24\n  ctx.fillRect(boxRect.left, boxRect.top, boxRect.width, boxRect.height - 1)\n\n  // draw i mark\n  const fillColor = color\n  const height = 20\n  const width = height / 5\n  const left = boxRect.left + (boxRect.width - width) / 2\n  const top = boxRect.top + (boxRect.height - height) / 2\n  helper.fillRectWithState(new Rect(left, top, width, height / 5), context, {\n    fillColor,\n  })\n  helper.fillRectWithState(\n    new Rect(left, top + (height / 5) * 2, width, (height / 5) * 3),\n    context,\n    { fillColor }\n  )\n}\n","import { BaseMessage } from './BaseMessage'\nimport { ErrorMessageElement } from './internal/ErrorMessageElement'\nimport { drawExclamationMarkBox } from './messageUtils'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport {\n  MessageObject,\n  CellContext,\n  ColumnStyle,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n} from '../../ts-types'\nimport { cellInRange } from '../../internal/utils'\n\nconst RED_A100 = '#ff8a80'\n\nexport class ErrorMessage<T> extends BaseMessage<T> {\n  public createMessageElementInternal() {\n    return new ErrorMessageElement()\n  }\n  public drawCellMessageInternal(\n    message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    const bgColor = style.bgColor\n    const { select } = context.getSelection()\n\n    if (\n      !cellInRange(\n        grid.getCellRange(context.col, context.row),\n        select.col,\n        select.row\n      ) ||\n      !grid.hasFocusGrid()\n    ) {\n      helper.drawBorderWithClip(context, (ctx) => {\n        drawExclamationMarkBox(\n          context,\n          {\n            bgColor: RED_A100,\n            color: bgColor,\n          },\n          helper\n        )\n      })\n    }\n  }\n}\n","import { drawInformationMarkBox } from './messageUtils'\nimport {\n  MessageObject,\n  CellContext,\n  GridCanvasHelperAPI,\n  ColumnStyle,\n  ListGridAPI,\n} from '../../ts-types'\nimport { BaseMessage } from './BaseMessage'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { MessageElement } from './internal/MessageElement'\nimport { cellInRange } from '../../internal/utils'\n\nconst GREY_L2 = '#e0e0e0'\n\nexport class InfoMessage<T> extends BaseMessage<T> {\n  public createMessageElementInternal(): MessageElement {\n    return new MessageElement()\n  }\n  public drawCellMessageInternal(\n    _message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ) {\n    const { bgColor } = style\n    const { select } = context.getSelection()\n    if (\n      !cellInRange(\n        grid.getCellRange(context.col, context.row),\n        select.col,\n        select.row\n      ) ||\n      !grid.hasFocusGrid()\n    ) {\n      helper.drawBorderWithClip(context, (_ctx) => {\n        drawInformationMarkBox(\n          context,\n          {\n            bgColor: GREY_L2,\n            color: bgColor,\n          },\n          helper\n        )\n      })\n    }\n  }\n}\n","import style from '../../../internal/style'\nimport { MessageElement } from './MessageElement'\n\nimport warningMessageElementCss from './WarningMessageElement.css'\n\nconst CLASSNAME_WME = 'kaka-grid__warning-message-element'\nconst MESSAGE_CLASSNAME_WME = `${CLASSNAME_WME}__message`\n\nexport class WarningMessageElement extends MessageElement {\n  public constructor() {\n    super()\n    style.inject('warningMessageElement', warningMessageElementCss)\n    this._rootElement.classList.add(CLASSNAME_WME)\n    this._messageElement.classList.add(MESSAGE_CLASSNAME_WME)\n  }\n}\n","import { drawExclamationMarkBox } from './messageUtils'\nimport {\n  MessageObject,\n  CellContext,\n  ColumnStyle,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n} from '../../ts-types'\nimport { BaseMessage } from './BaseMessage'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { WarningMessageElement } from './internal/WarningMessageElement'\nimport { cellInRange } from '../../internal/utils'\n\nconst DEEP_ORANGE_A100 = '#ff9e80'\n\nexport class WarningMessage<T> extends BaseMessage<T> {\n  public createMessageElementInternal(): WarningMessageElement {\n    return new WarningMessageElement()\n  }\n  public drawCellMessageInternal(\n    _message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    const { bgColor } = style\n    const { select } = context.getSelection()\n    if (\n      !cellInRange(\n        grid.getCellRange(context.col, context.row),\n        select.col,\n        select.row\n      ) ||\n      !grid.hasFocusGrid()\n    ) {\n      helper.drawBorderWithClip(context, (ctx) => {\n        drawExclamationMarkBox(\n          context,\n          {\n            bgColor: DEEP_ORANGE_A100,\n            color: bgColor,\n          },\n          helper\n        )\n      })\n    }\n  }\n}\n","import { MessageHandler as Base, DrawCellInfo } from '../../ts-types-internal'\nimport {\n  CellContext,\n  ColumnStyle,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  Message,\n  MessageObject,\n  CellAddress,\n} from '../../ts-types'\nimport { BaseMessage } from './BaseMessage'\nimport { LG_EVENT_TYPE } from '../../list-grid/LG_EVENT_TYPE'\nimport { ErrorMessage } from './ErrorMessage'\nimport { InfoMessage } from './InfoMessage'\nimport { WarningMessage } from './WarningMessage'\nimport { isPromise } from '../../internal/utils'\n\nconst EMPTY_MESSAGE: MessageObject = {\n  type: 'error',\n  message: null,\n}\n\nconst MESSAGE_INSTANCE_FACTORY = {\n  error<T>(grid: ListGridAPI<T>): BaseMessage<T> {\n    return new ErrorMessage(grid)\n  },\n  info<T>(grid: ListGridAPI<T>): BaseMessage<T> {\n    return new InfoMessage(grid)\n  },\n  warning<T>(grid: ListGridAPI<T>): BaseMessage<T> {\n    return new WarningMessage(grid)\n  },\n}\n\nfunction normalizeMessage(message: Message): MessageObject {\n  if (!message || isPromise(message)) {\n    return EMPTY_MESSAGE\n  }\n  if (typeof message === 'string') {\n    return {\n      message,\n      original: message,\n      type: 'error',\n    }\n  }\n  const type = message.type || 'error'\n  if (type && type in MESSAGE_INSTANCE_FACTORY) {\n    return {\n      type: type.toLowerCase() as MessageObject['type'],\n      message: `${message.message}`,\n      original: message,\n    }\n  }\n  return {\n    type: 'error',\n    message: `${message}`,\n    original: message,\n  }\n}\n\nfunction hasMessage(message: Message): boolean {\n  return !!normalizeMessage(message).message\n}\n\nexport class MessageHandler<T> implements Base<T> {\n  private _grid: ListGridAPI<T>\n  private _messageInstances: {\n    [k in MessageObject['type']]?: BaseMessage<T>\n  }\n  private _attachInfo: {\n    col: number\n    row: number\n    instance: BaseMessage<T>\n  } | null = null\n  public constructor(\n    grid: ListGridAPI<T>,\n    getMessage: (col: number, row: number) => Message\n  ) {\n    this._grid = grid\n    this._messageInstances = {}\n    this._bindGridEvent(grid, getMessage)\n  }\n  public dispose(): void {\n    const messageInstances = this._messageInstances\n    for (const k in messageInstances) {\n      messageInstances[k as MessageObject['type']]?.dispose()\n    }\n  }\n  public drawCellMessage(\n    message: Message,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    if (!hasMessage(message)) {\n      return\n    }\n    const instance = this._getMessageInstanceOfMessage(message)\n    instance.drawCellMessage(\n      normalizeMessage(message),\n      context,\n      style,\n      helper,\n      grid,\n      info\n    )\n  }\n  private _attach(col: number, row: number, message: Message): void {\n    const info = this._attachInfo\n    const instance = this._getMessageInstanceOfMessage(message)\n    if (info && info.instance !== instance) {\n      info.instance.detachMessageElement()\n    }\n    instance.attachMessageElement(col, row, normalizeMessage(message))\n    this._attachInfo = { col, row, instance }\n  }\n  private _move(col: number, row: number): void {\n    const info = this._attachInfo\n    if (!info || info.col !== col || info.row !== row) {\n      return\n    }\n    const { instance } = info\n    instance.moveMessageElement(col, row)\n  }\n  private _detach(): void {\n    const info = this._attachInfo\n    if (!info) {\n      return\n    }\n    const { instance } = info\n    instance.detachMessageElement()\n    this._attachInfo = null\n  }\n  private _bindGridEvent(\n    grid: ListGridAPI<T>,\n    getMessage: (col: number, row: number) => Message\n  ): void {\n    const onSelectMessage = (sel: CellAddress): void => {\n      const message = getMessage(sel.col, sel.row)\n      if (!hasMessage(message)) {\n        this._detach()\n      } else {\n        this._attach(sel.col, sel.row, message)\n      }\n    }\n    grid.listen(LG_EVENT_TYPE.SELECTED_CELL, (e) => {\n      if (!e.selected) {\n        return\n      }\n      if (e.before.col === e.col && e.before.row === e.row) {\n        return\n      }\n      onSelectMessage(e)\n    })\n    grid.listen(LG_EVENT_TYPE.SCROLL, () => {\n      const sel = grid.selection.select\n      this._move(sel.col, sel.row)\n    })\n    grid.listen(LG_EVENT_TYPE.CHANGED_VALUE, (e) => {\n      const sel = grid.selection.select\n      if (sel.col !== e.col || sel.row !== e.row) {\n        return\n      }\n      onSelectMessage(e)\n    })\n    grid.listen(LG_EVENT_TYPE.FOCUS_GRID, (_e) => {\n      const sel = grid.selection.select\n      onSelectMessage(sel)\n    })\n    grid.listen(LG_EVENT_TYPE.BLUR_GRID, (_e) => {\n      this._detach()\n    })\n  }\n  private _getMessageInstanceOfMessage(message: Message): BaseMessage<T> {\n    const messageInstances = this._messageInstances\n    const type = normalizeMessage(message).type\n    return (\n      messageInstances[type] ||\n      (messageInstances[type] = MESSAGE_INSTANCE_FACTORY[type](this._grid))\n    )\n  }\n}\n","import { IconDefine } from '../ts-types'\n\nexport const icons: { [key: string]: IconDefine } = {}\n","const parser = new DOMParser()\nconst ELEMENT_NODE = 1\n\nfunction findElement(\n  el: Element,\n  test: (child: Element) => boolean\n): Element | null {\n  for (let i = 0; i < el.childNodes.length; i++) {\n    const child = el.childNodes[i]\n    if (child.nodeType !== ELEMENT_NODE) {\n      continue\n    }\n    if (test(child as Element)) {\n      return child as Element\n    }\n    const r = findElement(child as Element, test)\n    if (r) {\n      return r\n    }\n  }\n  return null\n}\n\nclass Svg {\n  private _svg: HTMLElement\n  private _glyphs: { [key: string]: Element }\n  private _glyphUnis: { [key: string]: Element }\n  private _fontFace: Element | null | undefined\n  private _font: Element | null | undefined\n  public constructor(svgCode: string) {\n    const document = parser.parseFromString(svgCode, 'image/svg+xml')\n    this._svg = document.documentElement as HTMLElement\n    this._glyphs = {}\n    this._glyphUnis = {}\n  }\n  public get svg() {\n    return this._svg\n  }\n  public get fontFaceElement() {\n    if (!this._fontFace) {\n      this._fontFace = this.findElement(\n        (child) => child.tagName.toLowerCase() === 'font-face'\n      )\n    }\n    return this._fontFace\n  }\n  public get fontElement() {\n    if (!this._font) {\n      this._font = this.findElement(\n        (child) => child.tagName.toLowerCase() === 'font'\n      )\n    }\n    return this._font\n  }\n  public findElement(test: (child: Element) => boolean): Element {\n    return findElement(this.svg, test) as Element\n  }\n  public findGlyph(glyphName: string) {\n    return (\n      this._glyphs[glyphName] ||\n      (this._glyphs[glyphName] = this.findElement(\n        (child) => child.getAttribute('glyph-name') === glyphName\n      ))\n    )\n  }\n  public findGlyphByUnicode(unicode: string) {\n    return (\n      this._glyphUnis[unicode] ||\n      (this._glyphUnis[unicode] = this.findElement(\n        (child) => child.getAttribute('unicode') === unicode\n      ))\n    )\n  }\n  public walkAllGlyph(callback: (child: Element) => void) {\n    const walkGlyph = (el: Element, fn: (child: Element) => void) => {\n      for (let i = 0; i < el.childNodes.length; i++) {\n        const child = el.childNodes[i] as Element\n        if (child.nodeType !== ELEMENT_NODE) {\n          continue\n        }\n        const unicode = child.getAttribute('unicode')\n        if (unicode && child.getAttribute('d')) {\n          if (!this._glyphUnis[unicode]) {\n            this._glyphUnis[unicode] = child\n          }\n          const glyphName = child.getAttribute('glyph-name')\n          if (glyphName && !this._glyphs[glyphName]) {\n            this._glyphs[glyphName] = child\n          }\n          fn(child)\n        } else {\n          walkGlyph(child, fn)\n        }\n      }\n    }\n    walkGlyph(this.svg, callback)\n  }\n}\n\nexport default Svg\n","import Svg from './Svg'\nconst ELEMENT_NODE = 1\n\nfunction polygonToPath(polygon: Element) {\n  const points = polygon.getAttribute('points')\n  return `M${points}z`\n}\n\nfunction polylineToPath(polyline: Element) {\n  const points = polyline.getAttribute('points')\n  return `M${points}`\n}\n\nfunction circleToPath(circle: Element) {\n  const cx = Number(circle.getAttribute('cx'))\n  const cy = Number(circle.getAttribute('cy'))\n  const r = Number(circle.getAttribute('r'))\n\n  // https://tyru.github.io/svg-circle-misc-algorithm/\n  const SEGMENTS = 8\n  const ANGLE = (2 * Math.PI) / SEGMENTS\n  const anchorX = (theta: number) => r * Math.cos(theta)\n  const anchorY = (theta: number) => r * Math.sin(theta)\n  const controlX = (theta: number) =>\n    anchorX(theta) + r * Math.tan(ANGLE / 2) * Math.cos(theta - Math.PI / 2)\n  const controlY = (theta: number) =>\n    anchorY(theta) + r * Math.tan(ANGLE / 2) * Math.sin(theta - Math.PI / 2)\n\n  let paths = `M${cx + r} ${cy}`\n  for (let index = 1; index <= SEGMENTS; index++) {\n    const theta = index * ANGLE\n    paths += `Q${controlX(theta) + cx} ${controlY(theta) + cy} ${\n      anchorX(theta) + cx\n    } ${anchorY(theta) + cy}`\n  }\n  return paths\n}\n\nfunction getD(path: Element) {\n  const fill = path.getAttribute('fill')\n  if (fill === 'none') {\n    return ''\n  }\n  return (path.getAttribute('d') as string).replace(/[\\n\\r]/g, '')\n}\n\nfunction elementToPaths(el: Element) {\n  let path = ''\n  switch (el.tagName.toLowerCase()) {\n    case 'path':\n    case 'glyph':\n      path = getD(el)\n      break\n    case 'circle':\n      path = circleToPath(el)\n      break\n    case 'polygon':\n      path = polygonToPath(el)\n      break\n    case 'polyline':\n      path = polylineToPath(el)\n      break\n    case 'g':\n      for (let i = 0; i < el.childNodes.length; i++) {\n        const child = el.childNodes[i]\n        if (child.nodeType !== ELEMENT_NODE) {\n          continue\n        }\n        if (!(child as Element).getAttribute('fill')) {\n          ;(child as Element).setAttribute(\n            'fill',\n            el.getAttribute('fill') as string\n          )\n        }\n        path += elementToPaths(child as Element)\n      }\n      break\n    default:\n      window.console.warn(`unsupported:${el.tagName}`, `@ ${el.innerHTML}`)\n  }\n  return path\n}\n\nfunction buildObject(\n  obj: {\n    offsetX?: number\n    offsetY?: number\n    width?: number\n    height?: number\n    d?: string\n    isGlyph?: boolean\n    html?: string\n  } = {}\n) {\n  const icon: {\n    d: string\n    height: number\n    width: number\n    html: string\n    ud?: boolean // upside Down\n    offsetX?: number\n    offsetY?: number\n  } = {\n    d: obj.d || '',\n    html: obj.html || '',\n    height: obj.height || 0,\n    width: obj.width || 0,\n  }\n  if (obj.isGlyph) {\n    icon.ud = true\n  }\n  if (obj.offsetX !== undefined) {\n    icon.offsetX = obj.offsetX\n  }\n  if (obj.offsetY !== undefined) {\n    icon.offsetY = obj.offsetY\n  }\n  return icon\n}\n\nfunction glyphToJSON(\n  svgCode: string,\n  opt: {\n    glyphName?: string\n    unicode?: string\n  }\n) {\n  const svg = new Svg(svgCode)\n  function findGlyph() {\n    if (opt.glyphName) {\n      return svg.findGlyph(opt.glyphName)\n    } else if (opt.unicode) {\n      return svg.findGlyphByUnicode(opt.unicode)\n    }\n  }\n  const fontFace = svg.fontFaceElement || {\n    getAttribute(qualifiedName: string) {\n      return null\n    },\n  }\n  const font = svg.fontElement || {\n    getAttribute(qualifiedName: string) {\n      return null\n    },\n  }\n  const glyph = findGlyph() as Element\n  // 左下角的x坐标值，同y坐标值，右上角的x坐标值，同y坐标值\n  // const bbox = (fontFace.getAttribute(\"bbox\") || \"\").split(\" \");\n  // bbox.st = {\n  // \tx: bbox[0] - 0,\n  // \ty: bbox[1] - 0,\n  // };\n  // bbox.ed = {\n  // \tx: bbox[2] - 0,\n  // \ty: bbox[3] - 0,\n  // };\n\n  const fontHorizAdvX = Number(font.getAttribute('horiz-adv-x')) || 0\n  const fontVertAdvX = Number(font.getAttribute('vert-adv-x')) || 0\n  const horizAdvX =\n    Number(glyph.getAttribute('horiz-adv-x')) || fontHorizAdvX || 0\n  const vertAdvX = Number(glyph.getAttribute('vert-adv-x')) || fontVertAdvX || 0\n\n  const unitsPerEm = Number(fontFace.getAttribute('units-per-em')) || 1000\n  // const ascent = Number(fontFace.getAttribute(\"ascent\")) || (unitsPerEm - vertAdvX);\n  const descent = Number(fontFace.getAttribute('descent')) || vertAdvX\n\n  let size = unitsPerEm\n  const contentSize = {\n    height: vertAdvX || unitsPerEm,\n    width: horizAdvX || unitsPerEm,\n  }\n  if (horizAdvX > size) {\n    size = horizAdvX\n  }\n  if (vertAdvX > size) {\n    size = vertAdvX\n  }\n\n  let offsetX = 0 // -bbox.st.x || 0;\n  let offsetY = -descent\n  offsetX += Math.round((size - contentSize.width) / 2)\n  offsetY += Math.round((size - contentSize.height) / 2)\n\n  const d = elementToPaths(glyph)\n\n  return buildObject({\n    d,\n    height: size,\n    html: glyph.outerHTML,\n    isGlyph: true,\n    offsetX,\n    offsetY,\n    width: size,\n  })\n}\n\nfunction svgToJSON(svgCode: string) {\n  const svg = new Svg(svgCode).svg\n  const viewBox = (svg.getAttribute('viewBox') || '').split(' ')\n  const width = Number(svg.getAttribute('width') || viewBox[2]) || 0\n  const height = Number(svg.getAttribute('height') || viewBox[3]) || 0\n  const offsetX = 0 - Number(viewBox[0]) || 0\n  const offsetY = 0 - Number(viewBox[1]) || 0\n\n  let d = ''\n  for (let i = 0; i < svg.childNodes.length; i++) {\n    const el = svg.childNodes[i]\n    if (el.nodeType !== ELEMENT_NODE) {\n      continue\n    }\n    d += elementToPaths(el as Element)\n  }\n  return buildObject({\n    d,\n    height,\n    html: svgCode,\n    offsetX,\n    offsetY,\n    width,\n  })\n}\n\nconst svgToIcon = (\n  svgCode: string,\n  opt: {\n    glyphName?: string\n    unicode?: string\n  } = {}\n) => {\n  if (opt.glyphName || opt.unicode) {\n    return glyphToJSON(svgCode, opt)\n  } else {\n    return svgToJSON(svgCode)\n  }\n}\n\nexport default svgToIcon\n","import { IconDefine } from './ts-types'\n\nimport { extend } from './internal/utils'\nimport { icons as plugins } from './plugins/icons'\nimport svgToIcon from './tools/svgToIcon'\n\nimport add from './icons/ic_add_48px.svg'\nimport edit from './icons/ic_edit_48px.svg'\nimport arrowDownward from './icons/ic_arrow_downward_48px.svg'\nimport arrowUpward from './icons/ic_arrow_upward_48px.svg'\nimport star from './icons/ic_star_24px.svg'\nimport starBorder from './icons/ic_star_border_24px.svg'\nimport starHalf from './icons/ic_star_half_24px.svg'\n\nconst builtins = {\n  add: svgToIcon(add),\n  arrowDownward: svgToIcon(arrowDownward),\n  arrowUpward: svgToIcon(arrowUpward),\n  edit: svgToIcon(edit),\n  star: svgToIcon(star),\n  starBorder: svgToIcon(starBorder),\n  starHalf: svgToIcon(starHalf),\n}\n\nexport const svgIcons = {\n  get(): { [key: string]: IconDefine } {\n    return extend(builtins, plugins)\n  },\n}\n","import { CanvasOperations } from './internal'\n\nfunction mag(v: [number, number]): number {\n  return Math.sqrt(v[0] ** 2 + v[1] ** 2)\n}\n\nfunction dot(u: [number, number], v: [number, number]): number {\n  return u[0] * v[0] + u[1] * v[1]\n}\n\nfunction ratio(u: [number, number], v: [number, number]): number {\n  return dot(u, v) / (mag(u) * mag(v))\n}\n\nfunction clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max)\n}\n\nfunction angle(u: [number, number], v: [number, number]): number {\n  let sign = 1.0\n  if (u[0] * v[1] - u[1] * v[0] < 0) {\n    sign = -1.0\n  }\n  return sign * Math.acos(clamp(ratio(u, v), -1, 1))\n}\n\nfunction rotClockwise(v: [number, number], angle: number): [number, number] {\n  const cost = Math.cos(angle)\n  const sint = Math.sin(angle)\n  return [cost * v[0] + sint * v[1], -1 * sint * v[0] + cost * v[1]]\n}\n\nfunction rotCounterClockwise(\n  v: [number, number],\n  angle: number\n): [number, number] {\n  const cost = Math.cos(angle)\n  const sint = Math.sin(angle)\n  return [cost * v[0] - sint * v[1], sint * v[0] + cost * v[1]]\n}\n\nfunction midPoint(u: [number, number], v: [number, number]): [number, number] {\n  return [(u[0] - v[0]) / 2.0, (u[1] - v[1]) / 2.0]\n}\n\nfunction meanVec(u: [number, number], v: [number, number]): [number, number] {\n  return [(u[0] + v[0]) / 2.0, (u[1] + v[1]) / 2.0]\n}\n\nfunction pointMul(u: [number, number], v: [number, number]): [number, number] {\n  return [u[0] * v[0], u[1] * v[1]]\n}\n\nfunction scale(c: number, v: [number, number]): [number, number] {\n  return [c * v[0], c * v[1]]\n}\n\nfunction sum(u: [number, number], v: [number, number]): [number, number] {\n  return [u[0] + v[0], u[1] + v[1]]\n}\n// Convert an SVG elliptical arc to a series of canvas commands.\n//\n// x1, y1, x2, y2: start and stop coordinates of the ellipse.\n// rx, ry: radii of the ellipse.\n// phi: rotation of the ellipse.\n// fA: large arc flag.\n// fS: sweep flag.\nfunction ellipseFromEllipticalArc(\n  ctx: CanvasOperations,\n  x1: number,\n  y1: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  fA: number,\n  fS: number,\n  x2: number,\n  y2: number\n): void {\n  // Convert from endpoint to center parametrization, as detailed in:\n  //   http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n  if (rx === 0 || ry === 0) {\n    ctx.lineTo(x2, y2)\n    return\n  }\n  phi *= Math.PI / 180.0\n  rx = Math.abs(rx)\n  ry = Math.abs(ry)\n  const xPrime = rotClockwise(midPoint([x1, y1], [x2, y2]), phi) // F.6.5.1\n  const xPrime2 = pointMul(xPrime, xPrime)\n  let rx2 = rx ** 2\n  let ry2 = ry ** 2\n\n  const lambda = Math.sqrt(xPrime2[0] / rx2 + xPrime2[1] / ry2)\n  if (lambda > 1) {\n    rx *= lambda\n    ry *= lambda\n    rx2 = rx ** 2\n    ry2 = ry ** 2\n  }\n  let factor = Math.sqrt(\n    Math.abs(rx2 * ry2 - rx2 * xPrime2[1] - ry2 * xPrime2[0]) /\n      (rx2 * xPrime2[1] + ry2 * xPrime2[0])\n  )\n  if (fA === fS) {\n    factor *= -1.0\n  }\n  const cPrime = scale(factor, [(rx * xPrime[1]) / ry, (-ry * xPrime[0]) / rx]) // F.6.5.2\n  const c = sum(rotCounterClockwise(cPrime, phi), meanVec([x1, y1], [x2, y2])) // F.6.5.3\n  const x1UnitVector: [number, number] = [\n    (xPrime[0] - cPrime[0]) / rx,\n    (xPrime[1] - cPrime[1]) / ry,\n  ]\n  const x2UnitVector: [number, number] = [\n    (-1.0 * xPrime[0] - cPrime[0]) / rx,\n    (-1.0 * xPrime[1] - cPrime[1]) / ry,\n  ]\n  const theta = angle([1, 0], x1UnitVector) // F.6.5.5\n  const deltaTheta = angle(x1UnitVector, x2UnitVector) // F.6.5.6\n  const start = theta\n  const end = theta + deltaTheta\n  ctx.save()\n  ctx.translate(c[0], c[1])\n  ctx.rotate(phi)\n  ctx.scale(rx, ry)\n  ctx.arc(0, 0, 1, start, end, !fS)\n  ctx.restore()\n}\n\nexport default class PathCommands {\n  public readonly M: (px: number, py: number) => this\n  public readonly m: (px: number, py: number) => this\n  public readonly L: (px: number, py: number) => this\n  public readonly l: (px: number, py: number) => this\n  public readonly H: (px: number) => this\n  public readonly h: (px: number) => this\n  public readonly V: (py: number) => this\n  public readonly v: (py: number) => this\n  public readonly Z: () => this\n  public readonly z: () => this\n  public readonly C: (\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    px: number,\n    py: number\n  ) => this\n  public readonly c: (\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    px: number,\n    py: number\n  ) => this\n  public readonly S: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly s: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly Q: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly q: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly T: (px: number, py: number) => this\n  public readonly t: (px: number, py: number) => this\n  public readonly A: (\n    rx: number,\n    ry: number,\n    xAxisRotation: number,\n    largeArcFlag: number,\n    sweepFlag: number,\n    px: number,\n    py: number\n  ) => this\n  public readonly a: (\n    rx: number,\n    ry: number,\n    xAxisRotation: number,\n    largeArcFlag: number,\n    sweepFlag: number,\n    px: number,\n    py: number\n  ) => this\n  constructor(ctx: CanvasOperations) {\n    let lMx: number\n    let lMy: number\n    let lx = 0\n    let ly = 0\n    let reflected: {\n      x: number\n      y: number\n    }\n    let lastCommand = ''\n    function makeReflected(): {\n      x: number\n      y: number\n    } {\n      if ('CcSsQqTt'.indexOf(lastCommand) < 0) {\n        return { x: lx, y: ly }\n      }\n      return reflected\n    }\n\n    this.M = (px, py): this => {\n      ctx.moveTo(px, py)\n      lMx = px\n      lMy = py\n      lx = px\n      ly = py\n      lastCommand = 'M'\n      return this\n    }\n    this.m = (px, py): this => this.M(px + lx, py + ly)\n    this.L = (px, py): this => {\n      ctx.lineTo(px, py)\n      lx = px\n      ly = py\n      lastCommand = 'L'\n      return this\n    }\n    this.l = (px, py): this => this.L(px + lx, py + ly)\n    this.H = (px): this => this.L(px, ly)\n    this.h = (px): this => this.H(px + lx)\n    this.V = (py): this => this.L(lx, py)\n    this.v = (py): this => this.V(py + ly)\n    this.Z = (): this => {\n      ctx.closePath()\n      lx = lMx\n      ly = lMy\n      lastCommand = 'Z'\n      return this\n    }\n    this.z = (): this => this.Z()\n    //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\n    this.C = (cp1x, cp1y, cp2x, cp2y, px, py): this => {\n      ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, px, py)\n      lx = px\n      ly = py\n      reflected = {\n        x: 2 * px - cp2x,\n        y: 2 * py - cp2y,\n      }\n      lastCommand = 'C'\n      return this\n    }\n    this.c = (cp1x, cp1y, cp2x, cp2y, px, py): this =>\n      this.C(cp1x + lx, cp1y + ly, cp2x + lx, cp2y + ly, px + lx, py + ly)\n    //S x2 y2, x y (or s dx2 dy2, dx dy)\n    this.S = (cpx, cpy, px, py): this => {\n      const { x: cp1x, y: cp1y } = makeReflected(/*lastCommand*/)\n      return this.C(cp1x, cp1y, cpx, cpy, px, py)\n    }\n    this.s = (cpx, cpy, px, py): this =>\n      this.S(cpx + lx, cpy + ly, px + lx, py + ly)\n    //Q x1 y1, x y (or q dx1 dy1, dx dy)\n    this.Q = (cpx, cpy, px, py): this => {\n      ctx.quadraticCurveTo(cpx, cpy, px, py)\n      lx = px\n      ly = py\n      reflected = {\n        x: 2 * px - cpx,\n        y: 2 * py - cpy,\n      }\n      lastCommand = 'Q'\n      return this\n    }\n    this.q = (cpx, cpy, px, py): this =>\n      this.Q(cpx + lx, cpy + ly, px + lx, py + ly)\n    //T x y (or t dx dy)\n    this.T = (px, py): this => {\n      const { x: cpx, y: cpy } = makeReflected()\n      return this.Q(cpx, cpy, px, py)\n    }\n    this.t = (px, py): this => this.T(px + lx, py + ly)\n    //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n    this.A = (rx, ry, xAxisRotation, largeArcFlag, sweepFlag, px, py): this => {\n      const x1 = lx\n      const y1 = ly\n\n      ellipseFromEllipticalArc(\n        ctx,\n        x1,\n        y1,\n        rx,\n        ry,\n        xAxisRotation,\n        largeArcFlag,\n        sweepFlag,\n        px,\n        py\n      )\n\n      lx = px\n      ly = py\n      lastCommand = 'A'\n      return this\n    }\n    //a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy\n    this.a = (rx, ry, xAxisRotation, largeArcFlag, sweepFlag, px, py): this =>\n      this.A(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, px + lx, py + ly)\n  }\n}\n","import { AnyFunction } from '../../../ts-types'\nimport { CanvasOperations } from './internal'\nimport PathCommands from './PathCommands'\n\ntype PathCommandName = keyof PathCommands\ntype CanvasOperation = keyof CanvasOperations\n\ntype Tokens = { next(): string | null }\n\nfunction pathTokens(d: string): Tokens {\n  let idx = 0\n  return {\n    next(): string | null {\n      let s = ''\n      while (d.length > idx) {\n        const c = d[idx]\n        idx++\n        if (' ,\\n\\r\\t'.indexOf(c) > -1) {\n          if (s) {\n            return s\n          }\n        } else {\n          const type = '.+-1234567890'.indexOf(c) > -1 ? 'num' : 'str'\n          if (type === 'str') {\n            if (s) {\n              idx--\n              return s\n            }\n            return c\n          }\n          if ('-+'.indexOf(c) > -1) {\n            if (s) {\n              idx--\n              return s\n            }\n          }\n          if (c === '.') {\n            if (s.indexOf('.') > -1) {\n              idx--\n              return s\n            }\n          }\n          s += c\n        }\n      }\n      return s || null\n    },\n  }\n}\n\nfunction command(\n  builder: PathCommandsParser,\n  cmd: PathCommandName,\n  argsProvider: Tokens\n): PathCommandName | null {\n  if (\n    cmd.toUpperCase() === 'M' ||\n    cmd.toUpperCase() === 'L' ||\n    cmd.toUpperCase() === 'T'\n  ) {\n    builder.command(cmd, argsProvider.next(), argsProvider.next())\n    return cmd === 'M' ? 'L' : cmd === 'm' ? 'l' : cmd\n  } else if (cmd.toUpperCase() === 'H' || cmd.toUpperCase() === 'V') {\n    builder.command(cmd, argsProvider.next())\n    return cmd\n  } else if (cmd.toUpperCase() === 'Z') {\n    builder.command(cmd)\n    return cmd\n  } else if (cmd.toUpperCase() === 'C') {\n    builder.command(\n      cmd,\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next()\n    )\n    return cmd\n  } else if (cmd.toUpperCase() === 'S' || cmd.toUpperCase() === 'Q') {\n    builder.command(\n      cmd,\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next()\n    )\n    return cmd\n  } else if (cmd.toUpperCase() === 'A') {\n    builder.command(\n      cmd,\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next()\n    )\n    return cmd\n  } else {\n    // https://developer.mozilla.org/ja/docs/Web/SVG/Tutorial/Paths\n    console.warn(`unsupported:${cmd}`)\n  }\n  return null\n}\n\nexport default class PathCommandsParser implements CanvasOperations {\n  public readonly moveTo: typeof CanvasRenderingContext2D.prototype.moveTo\n  public readonly lineTo: typeof CanvasRenderingContext2D.prototype.lineTo\n  public readonly closePath: typeof CanvasRenderingContext2D.prototype.closePath\n  public readonly bezierCurveTo: typeof CanvasRenderingContext2D.prototype.bezierCurveTo\n  public readonly quadraticCurveTo: typeof CanvasRenderingContext2D.prototype.quadraticCurveTo\n  public readonly save: typeof CanvasRenderingContext2D.prototype.save\n  public readonly translate: typeof CanvasRenderingContext2D.prototype.translate\n  public readonly rotate: typeof CanvasRenderingContext2D.prototype.rotate\n  public readonly scale: typeof CanvasRenderingContext2D.prototype.scale\n  public readonly arc: typeof CanvasRenderingContext2D.prototype.arc\n  public readonly restore: typeof CanvasRenderingContext2D.prototype.restore\n  public readonly arcTo: typeof CanvasRenderingContext2D.prototype.arcTo\n  public readonly ellipse: typeof CanvasRenderingContext2D.prototype.ellipse\n  public readonly rect: typeof CanvasRenderingContext2D.prototype.rect\n  private readonly _commands: PathCommands\n\n  private _ops: { op: CanvasOperation; args: any[] }[] = []\n  constructor() {\n    this._commands = new PathCommands(this as CanvasOperations)\n\n    const buildPush = (op: CanvasOperation) => (...args: any[]): void => {\n      this._ops.push({\n        op,\n        args,\n      })\n    }\n    this.moveTo = buildPush('moveTo')\n    this.lineTo = buildPush('lineTo')\n    this.closePath = buildPush('closePath')\n    this.bezierCurveTo = buildPush('bezierCurveTo')\n    this.quadraticCurveTo = buildPush('quadraticCurveTo')\n    this.save = buildPush('save')\n    this.translate = buildPush('translate')\n    this.rotate = buildPush('rotate')\n    this.scale = buildPush('scale')\n    this.arc = buildPush('arc')\n    this.restore = buildPush('restore')\n    this.arcTo = buildPush('arcTo')\n    this.ellipse = buildPush('ellipse')\n    this.rect = buildPush('rect')\n  }\n\n  command(name: PathCommandName, ...args: any[]): void {\n    const numArgs: any[] = args || []\n    for (let i = 0; i < args.length; i++) {\n      numArgs[i] -= 0\n    }\n    const command: AnyFunction = this._commands[name]\n    command.apply(this, numArgs)\n  }\n  parse(d: string): { op: CanvasOperation; args: any[] }[] {\n    const ops = (this._ops = [])\n    const tokens = pathTokens(d)\n    try {\n      let cmd: string | null\n      let subsequentCommand: PathCommandName = 'Z'\n      while ((cmd = tokens.next())) {\n        if (!isNaN(Number(cmd))) {\n          let fst = true\n          const argsProvider: Tokens = {\n            next() {\n              if (fst) {\n                fst = false\n                return cmd\n              }\n              return tokens.next()\n            },\n          }\n          subsequentCommand =\n            command(this, subsequentCommand, argsProvider) || 'Z'\n        } else {\n          subsequentCommand =\n            command(this, cmd as PathCommandName, tokens) || 'Z'\n        }\n      }\n    } catch (e) {\n      console.log(`Error: ${d}`)\n      throw e\n    }\n    return ops\n  }\n}\n","import { AnyFunction } from '../../../ts-types'\nimport { CanvasOperations } from './internal'\nimport PathCommandsParser from './PathCommandsParser'\n\nconst parser = new PathCommandsParser()\ntype CanvasOperation = keyof CanvasOperations\n\nexport class Path2DShim implements CanvasPath {\n  _ops: { op: CanvasOperation; args: any[] }[]\n  arc(...args: Parameters<typeof Path2D.prototype.arc>): void {\n    this._ops.push({ op: 'arc', args })\n  }\n  arcTo(...args: Parameters<typeof Path2D.prototype.arcTo>): void {\n    this._ops.push({ op: 'arcTo', args })\n  }\n  bezierCurveTo(\n    ...args: Parameters<typeof Path2D.prototype.bezierCurveTo>\n  ): void {\n    this._ops.push({ op: 'bezierCurveTo', args })\n  }\n  closePath(...args: Parameters<typeof Path2D.prototype.closePath>): void {\n    this._ops.push({ op: 'closePath', args })\n  }\n  ellipse(...args: Parameters<typeof Path2D.prototype.ellipse>): void {\n    this._ops.push({ op: 'ellipse', args })\n  }\n  lineTo(...args: Parameters<typeof Path2D.prototype.lineTo>): void {\n    this._ops.push({ op: 'lineTo', args })\n  }\n  moveTo(...args: Parameters<typeof Path2D.prototype.moveTo>): void {\n    this._ops.push({ op: 'moveTo', args })\n  }\n  quadraticCurveTo(\n    ...args: Parameters<typeof Path2D.prototype.quadraticCurveTo>\n  ): void {\n    this._ops.push({ op: 'quadraticCurveTo', args })\n  }\n  rect(...args: Parameters<typeof Path2D.prototype.rect>): void {\n    this._ops.push({ op: 'rect', args })\n  }\n  constructor(arg: string | Path2DShim) {\n    this._ops = []\n    if (arg === undefined) {\n      return\n    }\n    if (typeof arg === 'string') {\n      // try {\n      this._ops = parser.parse(arg)\n      // } catch (e) {\n      // \tthrow e;\n      // }\n    } else if (arg.hasOwnProperty('_ops')) {\n      this._ops = [...arg._ops]\n    } else {\n      throw new Error(`Error: ${typeof arg} is not a valid argument to Path`)\n    }\n  }\n}\n\nconst { CanvasRenderingContext2D } = window\n\nconst originalFill: AnyFunction = CanvasRenderingContext2D.prototype.fill\n;(CanvasRenderingContext2D.prototype as any).fill = function (\n  ...args: Parameters<typeof CanvasRenderingContext2D.prototype.fill>\n): void {\n  if (args[0] instanceof Path2DShim) {\n    const path = args[0]\n    this.beginPath()\n    path._ops.forEach((op) => {\n      const fn: AnyFunction = this[op.op]\n      fn.apply(this, op.args)\n    })\n    originalFill.apply(this, Array.prototype.slice.call(args, 1))\n  } else {\n    originalFill.apply(this, args)\n  }\n}\n","import { Path2DShim } from './legacy/canvas/Path2DShim'\nimport { browser } from './utils'\n\nfunction getPath2D(): typeof Path2D {\n  if (typeof Path2D !== 'undefined' && !browser.Edge) {\n    return Path2D\n  } else {\n    return Path2DShim as any\n  }\n}\n\nexport const path2DManager = {\n  fill(\n    module: any,\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    w: number,\n    h: number\n  ) {\n    ctx.save()\n    try {\n      const width = module.width\n      const height = module.height\n      const upsideDown = module.ud\n      const offsetX = module.x || 0\n      const offsetY = module.y || 0\n      w = w || width\n      h = h || height\n      const xRate = w / width\n      const yRate = h / (upsideDown ? -height : height)\n      x = x || 0\n      y = upsideDown ? (y || 0) + -height * yRate : y || 0\n\n      ctx.translate(x, y)\n      ctx.scale(xRate, yRate)\n      if (offsetX !== 0 || offsetY !== 0) {\n        ctx.translate(offsetX, offsetY)\n      }\n      const _Path2D = getPath2D()\n      module.path2d = module.path2d || new _Path2D(module.d)\n      ctx.fill(module.path2d)\n    } finally {\n      ctx.restore()\n    }\n  },\n  getPath2D,\n}\n","import { RectProps, ColorDef, AnyFunction, InlineAPI } from '../ts-types'\nimport { GenWordsResult, str, isDef } from '../internal/utils'\nimport { CanvasHelper } from '../tools/canvasHelper'\n\nfunction getWidth(ctx: CanvasRenderingContext2D, content: string): number {\n  return ctx.measureText(content).width\n}\n\nfunction breakWidth(\n  ctx: CanvasRenderingContext2D,\n  content: string,\n  itr: GenWordsResult,\n  candidateIndex: number,\n  width: number\n): {\n  before: Inline | null\n  after: Inline | null\n} {\n  const chars = []\n  let ret = itr.next()\n  for (let i = 0; i < candidateIndex && ret !== null; i++, ret = itr.next()) {\n    chars.push(ret)\n  }\n  let beforeWidth = getWidth(ctx, chars.join(''))\n  if (beforeWidth > width) {\n    while (chars.length) {\n      const c = chars.pop()\n      beforeWidth -= getWidth(ctx, c as string)\n      if (beforeWidth <= width) {\n        break\n      }\n    }\n  } else if (beforeWidth < width) {\n    while (ret !== null) {\n      const charWidth = getWidth(ctx, ret)\n      if (beforeWidth + charWidth > width) {\n        break\n      }\n      chars.push(ret)\n      beforeWidth += charWidth\n      ret = itr.next()\n    }\n  }\n  const beforeContent = chars.join('').replace(/\\s+$/, '')\n  const afterContent = content.slice(beforeContent.length).replace(/^\\s+/, '')\n  return {\n    after: afterContent ? new Inline(afterContent) : null,\n    before: beforeContent ? new Inline(beforeContent) : null,\n  }\n}\n\nexport type InlineDrawOption = {\n  ctx: CanvasRenderingContext2D\n  canvasHelper: CanvasHelper\n  rect: RectProps\n  offset: number\n  offsetLeft: number\n  offsetRight: number\n  offsetTop: number\n  offsetBottom: number\n}\n\nexport class Inline implements InlineAPI {\n  private _content: string\n  public constructor(content?: string) {\n    this._content = isDef(content) ? String(content) : ''\n  }\n  public width(obj: { ctx: CanvasRenderingContext2D }): number {\n    return getWidth(obj.ctx, this._content)\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): ColorDef | null {\n    return null\n  }\n  public canDraw(): boolean {\n    return true\n  }\n  public onReady(_callback: AnyFunction): void {}\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    canvasHelper.fillTextRect(\n      ctx,\n      this._content,\n      rect.left,\n      rect.top,\n      rect.width,\n      rect.height,\n      {\n        offset: offset + 1,\n        padding: {\n          bottom: offsetBottom,\n          left: offsetLeft,\n          right: offsetRight,\n          top: offsetTop,\n        },\n      }\n    )\n  }\n  public canBreak(): boolean {\n    return !!this._content\n  }\n  public splitIndex(\n    index: number\n  ): {\n    before: Inline | null\n    after: Inline | null\n  } {\n    const content = this._content\n    const itr = str.genChars(content)\n    const chars = []\n    let ret = itr.next()\n    for (let i = 0; i < index && ret !== null; i++, ret = itr.next()) {\n      chars.push(ret)\n    }\n    const beforeContent = chars.join('')\n    const afterContent = content.slice(beforeContent.length)\n    return {\n      after: afterContent ? new Inline(afterContent) : null,\n      before: beforeContent ? new Inline(beforeContent) : null,\n    }\n  }\n  public breakWord(\n    ctx: CanvasRenderingContext2D,\n    width: number\n  ): {\n    before: Inline | null\n    after: Inline | null\n  } {\n    const content = this._content\n    const allWidth = this.width({ ctx })\n    const candidate = Math.floor((this._content.length * width) / allWidth)\n    const itr = str.genWords(content)\n    return breakWidth(ctx, content, itr, candidate, width)\n  }\n  public breakAll(\n    ctx: CanvasRenderingContext2D,\n    width: number\n  ): {\n    before: Inline | null\n    after: Inline | null\n  } {\n    const content = this._content\n    const allWidth = this.width({ ctx })\n    const candidate = Math.floor((this._content.length * width) / allWidth)\n    const itr = str.genChars(content)\n    return breakWidth(ctx, content, itr, candidate, width)\n  }\n  public toString(): string {\n    return this._content\n  }\n}\n","import { AnyFunction, ColorDef } from '../ts-types'\nimport { InlineDrawOption, Inline } from './Inline'\n\nexport type InlineDrawerFunction = (options: InlineDrawOption) => void\nexport class InlineDrawer extends Inline {\n  private _draw: InlineDrawerFunction\n  private _width: number\n  // private _height: number\n  private _color?: ColorDef\n  public constructor({\n    draw,\n    width,\n    // height,\n    color,\n  }: {\n    draw: InlineDrawerFunction\n    width: number\n    height: number\n    color?: ColorDef\n  }) {\n    super()\n\n    this._draw = draw\n    this._width = width\n    // this._height = height\n    this._color = color\n  }\n  public width(_arg: { ctx: CanvasRenderingContext2D }): number {\n    return this._width\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): ColorDef | null {\n    return this._color ?? null\n  }\n  public canDraw(): boolean {\n    return true\n  }\n  public onReady(_callback: AnyFunction): void {}\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    this._draw({\n      ctx,\n      canvasHelper,\n      rect,\n      offset,\n      offsetLeft,\n      offsetRight,\n      offsetTop,\n      offsetBottom,\n    })\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","//see https://github.com/typekit/webfontloader\n\ntype Styles1 = {\n  display: 'block'\n  position: 'absolute'\n  top: '-9999px'\n  left: '-9999px'\n  width: 'auto'\n  height: 'auto'\n  margin: '0'\n  padding: '0'\n  'white-space': 'nowrap'\n  font: string\n}\ntype Styles2 = {\n  'font-variant': 'normal'\n  'font-size': '300px'\n  'font-style': 'normal'\n  'font-weight': '400'\n  'line-height': 'normal'\n}\n\ntype StyleKeys = keyof Styles1 | keyof Styles2\n\nfunction computeStyle(font: string): [Styles1, Styles2] {\n  return [\n    {\n      display: 'block',\n      position: 'absolute',\n      top: '-9999px',\n      left: '-9999px',\n      width: 'auto',\n      height: 'auto',\n      margin: '0',\n      padding: '0',\n      'white-space': 'nowrap',\n      font,\n    },\n    {\n      'font-variant': 'normal',\n      'font-size': '300px',\n      'font-style': 'normal',\n      'font-weight': '400',\n      'line-height': 'normal',\n    },\n  ]\n}\n\nclass FontRuler {\n  private _el: HTMLSpanElement\n  constructor(font: string, testStr: string) {\n    const e = document.createElement('span')\n    e.setAttribute('aria-hidden', 'true')\n    e.textContent = testStr || 'BESbswy'\n\n    computeStyle(font).forEach((style: Styles1 | Styles2) => {\n      for (const k in style) {\n        const key = k as StyleKeys\n        e.style[key as any] = (style as any)[key]\n      }\n    })\n    document.body.appendChild(e)\n    this._el = e\n  }\n  getWidth(): number {\n    return this._el.offsetWidth\n  }\n  remove(): void {\n    document.body.removeChild(this._el)\n  }\n}\n\nexport default FontRuler\n","import { AnyFunction } from '../../../ts-types'\n//see https://github.com/typekit/webfontloader\n\n//http://defghi1977.html.xdomain.jp/tech/canvasMemo/canvasMemo.htm\nimport FontRuler from './FontRuler'\n\nconst LastResortFonts: { [key: string]: string } = {\n  SERIF: 'serif',\n  SANS_SERIF: 'sans-serif',\n}\n\nconst watchRunners: {\n  [font: string]: { [testStr: string]: FontWatchRunner }\n} = {}\n\nclass FontWatchRunner {\n  activeCallbacks: AnyFunction[]\n  inactiveCallbacks: AnyFunction[]\n  status: 'ok' | 'ng' | null\n  lastResortWidths_: { [font: string]: number }\n  fontRulerA_: FontRuler\n  fontRulerB_: FontRuler\n  started_: number\n  static load(\n    font: string,\n    testStr: string,\n    activeCallback: AnyFunction,\n    inactiveCallback: AnyFunction\n  ): void {\n    const c = watchRunners[font] || (watchRunners[font] = {})\n    testStr += ''\n    let runner\n    if (c[testStr]) {\n      runner = c[testStr]\n    } else {\n      runner = c[testStr] = new FontWatchRunner(font, testStr)\n    }\n    runner.then(activeCallback, inactiveCallback)\n  }\n  constructor(font: string, testStr: string) {\n    this.activeCallbacks = []\n    this.inactiveCallbacks = []\n    this.status = null\n    this.lastResortWidths_ = {}\n\n    this.fontRulerA_ = new FontRuler(\n      `${font},${LastResortFonts.SERIF}`,\n      testStr\n    )\n    this.fontRulerB_ = new FontRuler(\n      `${font},${LastResortFonts.SANS_SERIF}`,\n      testStr\n    )\n    const lastResortRulerA = new FontRuler(\n      `4px ${LastResortFonts.SERIF}`,\n      testStr\n    )\n    const lastResortRulerB = new FontRuler(\n      `4px ${LastResortFonts.SANS_SERIF}`,\n      testStr\n    )\n\n    //start\n    this.lastResortWidths_[LastResortFonts.SERIF] = lastResortRulerA.getWidth()\n    this.lastResortWidths_[\n      LastResortFonts.SANS_SERIF\n    ] = lastResortRulerB.getWidth()\n\n    lastResortRulerA.remove()\n    lastResortRulerB.remove()\n\n    this.started_ = Date.now()\n\n    this.check_()\n  }\n  then(activeCallback: AnyFunction, inactiveCallback: AnyFunction): void {\n    if (this.status) {\n      if (this.status !== 'ng') {\n        activeCallback()\n      } else {\n        inactiveCallback()\n      }\n    } else {\n      this.activeCallbacks.push(activeCallback)\n      this.inactiveCallbacks.push(inactiveCallback)\n    }\n  }\n  private check_(): void {\n    const widthA = this.fontRulerA_.getWidth()\n    const widthB = this.fontRulerB_.getWidth()\n\n    if (\n      this.isFallbackFont_(widthA, widthB) ||\n      this.isLastResortFont_(widthA, widthB)\n    ) {\n      if (Date.now() - this.started_ >= 3000) {\n        // timeout\n        if (this.isLastResortFont_(widthA, widthB)) {\n          this.finish_(this.activeCallbacks)\n          this.status = 'ok'\n        } else {\n          this.finish_(this.inactiveCallbacks)\n          this.status = 'ng'\n        }\n      } else {\n        setTimeout(() => {\n          this.check_()\n        }, 50)\n      }\n    } else {\n      this.finish_(this.activeCallbacks)\n      this.status = 'ok'\n    }\n  }\n  isFallbackFont_(a: number, b: number): boolean {\n    return (\n      this.widthMatches_(a, LastResortFonts.SERIF) &&\n      this.widthMatches_(b, LastResortFonts.SANS_SERIF)\n    )\n  }\n  widthsMatchLastResortWidths_(a: number, b: number): boolean {\n    for (const font in LastResortFonts) {\n      if (LastResortFonts.hasOwnProperty(font)) {\n        if (\n          this.widthMatches_(a, LastResortFonts[font]) &&\n          this.widthMatches_(b, LastResortFonts[font])\n        ) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n  widthMatches_(width: number, lastResortFont: string): boolean {\n    return width === this.lastResortWidths_[lastResortFont]\n  }\n  isLastResortFont_(a: number, b: number): boolean {\n    return hasWebKitFallbackBug() && this.widthsMatchLastResortWidths_(a, b)\n  }\n  finish_(callbacks: AnyFunction[]): void {\n    setTimeout(() => {\n      this.fontRulerA_.remove()\n      this.fontRulerB_.remove()\n      callbacks.forEach((cb) => cb())\n    }, 0)\n  }\n}\n\nlet HAS_WEBKIT_FALLBACK_BUG: boolean | null = null\nfunction hasWebKitFallbackBug(): boolean {\n  if (HAS_WEBKIT_FALLBACK_BUG === null) {\n    const match = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(\n      window.navigator.userAgent\n    )\n\n    HAS_WEBKIT_FALLBACK_BUG =\n      !!match &&\n      (parseInt(match[1], 10) < 536 ||\n        (parseInt(match[1], 10) === 536 && parseInt(match[2], 10) <= 11))\n  }\n  return HAS_WEBKIT_FALLBACK_BUG\n}\n\nexport default FontWatchRunner\n","import FontWatchRunner from './legacy/fontwatch/FontWatchRunner'\nimport { isNode } from './utils'\n\nconst loads: {\n  [font: string]: boolean\n  all: boolean\n} = {\n  all: false,\n}\nlet load: (font: string, testStr: string, callback: () => void) => void\nlet check: (font: string, testStr: string) => boolean\nif (isNode) {\n  load = (font, testStr, callback) => {\n    callback()\n  }\n  check = () => {\n    return false\n  }\n} else {\n  const legacy = !(document as any).fonts\n  load = legacy\n    ? (font: string, testStr: string, callback: () => void) => {\n        // for legacy(IE)\n        if (loads[`${font} @ ${testStr}`]) {\n          callback()\n          return\n        }\n        FontWatchRunner.load(\n          font,\n          testStr,\n          () => {\n            loads[`${font} @ ${testStr}`] = true\n            callback()\n          },\n          () => {\n            loads[`${font} @ ${testStr}`] = true\n            callback()\n          }\n        )\n      }\n    : (font: string, testStr: string, callback: () => void) => {\n        if (loads.all || loads[font]) {\n          callback()\n          return\n        }\n        ;(document as any).fonts.ready.then(() => {\n          loads.all = true\n        })\n        ;(document as any).fonts.load(font).then(() => {\n          loads[font] = true\n          callback()\n        })\n      }\n  check = legacy\n    ? (font: string, testStr: string) => {\n        // for legacy(IE)\n        if (loads[`${font} @ ${testStr}`]) {\n          return true\n        }\n        load(font, testStr, () => {\n          // nothing\n        })\n        return false\n      }\n    : (font: string, testStr: string) => {\n        if (loads.all || loads[font]) {\n          return true\n        }\n        if (!(document as any).fonts.check(font)) {\n          load(font, testStr, () => {\n            // nothing\n          })\n          return false\n        }\n        return true\n      }\n}\n\nexport default {\n  check,\n  load,\n}\n","import fonts from '../internal/fonts'\nimport { InlineDrawOption, Inline } from './Inline'\nimport { ColorDef, AnyFunction } from '../ts-types'\n\nexport type InlineIconConstructorOption = {\n  width?: number\n  font?: string\n  content?: string\n  color?: ColorDef\n}\n\nexport class InlineIcon extends Inline {\n  private _icon: InlineIconConstructorOption\n  public constructor(icon: InlineIconConstructorOption) {\n    super()\n    this._icon = icon || {}\n  }\n  public width({ ctx }: { ctx: CanvasRenderingContext2D }): number {\n    const icon = this._icon\n    if (icon.width) {\n      return icon.width\n    }\n    if (icon.font && fonts.check(icon.font, icon.content || '')) {\n      ctx.save()\n      ctx.canvas.style.letterSpacing = 'normal'\n      try {\n        ctx.font = icon.font || ctx.font\n        return ctx.measureText(icon.content || '').width\n      } finally {\n        ctx.canvas.style.letterSpacing = ''\n        ctx.restore()\n      }\n    }\n    return 0 // unknown\n  }\n  public font(): string | null {\n    return this._icon.font ?? null\n  }\n  public color(): ColorDef | null {\n    return this._icon.color ?? null\n  }\n  public canDraw(): boolean {\n    const icon = this._icon\n    return icon.font ? fonts.check(icon.font, icon.content || '') : true\n  }\n  public onReady(callback: AnyFunction): void {\n    const icon = this._icon\n    if (icon.font && !fonts.check(icon.font, icon.content || '')) {\n      fonts.load(icon.font, icon.content || '', callback)\n    }\n  }\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    const icon = this._icon\n    if (icon.content) {\n      ctx.canvas.style.letterSpacing = 'normal'\n      try {\n        ctx.font = ctx.font // To apply letterSpacing, we need to reset it.\n        canvasHelper.fillTextRect(\n          ctx,\n          icon.content,\n          rect.left,\n          rect.top,\n          rect.width,\n          rect.height,\n          {\n            offset: offset + 1,\n            padding: {\n              bottom: offsetBottom,\n              left: offsetLeft,\n              right: offsetRight,\n              top: offsetTop,\n            },\n          }\n        )\n      } finally {\n        ctx.canvas.style.letterSpacing = ''\n      }\n    }\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","import { MaybePromise, AnyFunction } from '../ts-types'\nimport { getCacheOrLoad } from '../internal/imgs'\nimport { isPromise } from '../internal/utils'\nimport { InlineDrawOption, Inline } from './Inline'\n\nexport type InlineImageConstructorOption = {\n  src: MaybePromise<string>\n  width?: number\n  height?: number\n  imageLeft?: number\n  imageTop?: number\n  imageWidth?: number\n  imageHeight?: number\n}\n\nexport class InlineImage extends Inline {\n  private _src: MaybePromise<string>\n  private _width?: number\n  private _height?: number\n  private _imageLeft?: number\n  private _imageTop?: number\n  private _imageWidth?: number\n  private _imageHeight?: number\n  private _onloaded: AnyFunction[]\n  private _inlineImgPromise: MaybePromise<HTMLImageElement> | null = null\n  private _inlineImg: HTMLImageElement | null = null\n  public constructor({\n    src,\n    width,\n    height,\n    imageLeft,\n    imageTop,\n    imageWidth,\n    imageHeight,\n  }: InlineImageConstructorOption) {\n    super()\n    this._src = src\n    this._width = width\n    this._height = height\n    this._imageLeft = imageLeft\n    this._imageTop = imageTop\n    this._imageWidth = imageWidth\n    this._imageHeight = imageHeight\n\n    this._onloaded = []\n\n    if (isPromise(src)) {\n      src.then((s) => {\n        this._src = s\n        this._loadImage(s)\n      })\n    } else {\n      this._loadImage(src)\n    }\n  }\n  public width(_arg: { ctx: CanvasRenderingContext2D }): number {\n    return this._width || (this._inlineImg?.width ?? 0)\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): string | null {\n    return null\n  }\n  public canDraw(): boolean {\n    return !!this._inlineImg\n  }\n  public onReady(callback: AnyFunction): void {\n    if (isPromise(this._src) || isPromise(this._inlineImgPromise)) {\n      this._onloaded.push(() => callback())\n    }\n  }\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    const img = this._inlineImg as HTMLImageElement\n    canvasHelper.drawInlineImageRect(\n      ctx,\n      img,\n      this._imageLeft || 0,\n      this._imageTop || 0,\n      this._imageWidth || img.width,\n      this._imageHeight || img.height,\n      this._width || img.width,\n      this._height || img.height,\n      rect.left,\n      rect.top,\n      rect.width,\n      rect.height,\n      {\n        offset: offset + 1,\n        padding: {\n          bottom: offsetBottom,\n          left: offsetLeft,\n          right: offsetRight,\n          top: offsetTop,\n        },\n      }\n    )\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n  private _loadImage(src: string) {\n    const img = (this._inlineImgPromise = getCacheOrLoad(\n      'InlineImage',\n      50,\n      src\n    ))\n    if (isPromise(img)) {\n      img.then((i) => {\n        this._inlineImg = i\n\n        this._onloaded.forEach((fn) => fn())\n      })\n    } else {\n      this._inlineImg = img\n    }\n  }\n}\n","import { AnyFunction, ColorDef } from '../ts-types'\nimport { calcStartPosition } from '../internal/canvases'\nimport { path2DManager } from '../internal/path2DManager'\nimport { InlineDrawOption, Inline } from './Inline'\n\nexport type InlinePath2DConstructorOption = {\n  path: Path2D | string\n  width: number\n  height: number\n  color?: ColorDef\n}\n\nexport class InlinePath2D extends Inline {\n  private _path: Path2D\n  private _width: number\n  private _height: number\n  private _color?: ColorDef\n  public constructor({\n    path,\n    width,\n    height,\n    color,\n  }: InlinePath2DConstructorOption) {\n    super()\n    // Path2D的Polyfill不会反映在IE中，除非是这个时间\n    const Path2D = path2DManager.getPath2D()\n    this._path = new Path2D(path)\n    this._width = width\n    this._height = height\n    this._color = color\n  }\n  public width(_arg: { ctx: CanvasRenderingContext2D }): number {\n    return this._width\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): ColorDef | null {\n    return this._color ?? null\n  }\n  public canDraw(): boolean {\n    return true\n  }\n  public onReady(_callback: AnyFunction): void {}\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    offset++\n    const padding = {\n      bottom: offsetBottom,\n      left: offsetLeft,\n      right: offsetRight,\n      top: offsetTop,\n    }\n    ctx.save()\n    try {\n      ctx.beginPath()\n      ctx.rect(rect.left, rect.top, rect.width, rect.height)\n      // clip\n      ctx.clip()\n\n      const pos = calcStartPosition(ctx, rect, this._width, this._height, {\n        offset,\n        padding,\n      })\n      ctx.translate(pos.x, pos.y)\n      ctx.fill(this._path)\n    } finally {\n      ctx.restore()\n    }\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","import { then, isPromise } from '../internal/utils'\nimport { InlineImage } from './InlineImage'\nimport { MaybePromise } from '../ts-types'\nimport { toPx } from '../internal/calc'\n\nfunction buildSvgDataUrl(svg: string | Node): string {\n  const data =\n    typeof svg === 'string' ? svg : new XMLSerializer().serializeToString(svg)\n  const url = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(data)}` // svg -> base64\n  return url\n}\nfunction getSvgElement(svg: string | SVGElement): SVGElement {\n  let el\n  if (typeof svg === 'string') {\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(svg, 'image/svg+xml')\n    const nodes = doc.children || doc.childNodes\n    el = nodes[0] as SVGElement\n    for (let i = 0; i < nodes.length; i++) {\n      if (nodes[i] instanceof SVGElement) {\n        el = nodes[i] as SVGElement\n        break\n      }\n    }\n  } else {\n    el = svg\n  }\n  return el\n}\n\nexport type InlineSvgConstructorOption = {\n  svg: MaybePromise<string | SVGElement>\n  width?: number\n  height?: number\n}\n\nexport class InlineSvg extends InlineImage {\n  public constructor({ svg, width, height }: InlineSvgConstructorOption) {\n    const svgElem = then(svg, getSvgElement)\n    const elmWidth = !isPromise(svgElem)\n      ? svgElem.getAttribute('width') ?? undefined\n      : undefined\n    const elmHeight = !isPromise(svgElem)\n      ? svgElem.getAttribute('height') ?? undefined\n      : undefined\n    const context = {\n      full: 0,\n      em: 0\n    }\n    const numElmWidth = elmWidth != null ? toPx(elmWidth, context) : undefined\n    const numElmHeight = elmHeight != null ? toPx(elmHeight, context) : undefined\n    super({\n      src: then(svg, buildSvgDataUrl),\n      width: width || numElmWidth,\n      height: height || numElmHeight,\n      imageWidth: numElmWidth,\n      imageHeight: numElmHeight,\n    })\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","import { IconDefine } from '../ts-types'\nimport { SimpleColumnIconOption } from '../ts-types-internal'\nimport { svgIcons } from '../icons'\nimport { PaddingOption, calcStartPosition } from '../internal/canvases'\nimport { path2DManager } from '../internal/path2DManager'\nimport { isDef } from '../internal/utils'\nimport { InlineDrawOption, Inline } from './Inline'\nimport { InlineDrawer } from './InlineDrawer'\nimport { InlineIcon } from './InlineIcon'\nimport { InlineImage } from './InlineImage'\nimport { InlinePath2D } from './InlinePath2D'\nimport { InlineSvg } from './InlineSvg'\n\nfunction drawRegisteredIcon(\n  ctx: CanvasRenderingContext2D,\n  icon: IconDefine,\n  drawWidth: number,\n  drawHeight: number,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  { offset = 2, padding }: { offset?: number; padding?: PaddingOption } = {}\n) {\n  const rect = {\n    bottom: top + height,\n    height,\n    left,\n    right: left + width,\n    top,\n    width,\n  }\n  ctx.save()\n  try {\n    ctx.beginPath()\n    ctx.rect(rect.left, rect.top, rect.width, rect.height)\n    // clip\n    ctx.clip()\n\n    const pos = calcStartPosition(ctx, rect, drawWidth, drawHeight, {\n      offset,\n      padding,\n    })\n    path2DManager.fill(icon, ctx, pos.x, pos.y, drawWidth, drawHeight)\n  } finally {\n    ctx.restore()\n  }\n}\n\nfunction isIconConstructorOption(\n  icon: SimpleColumnIconOption\n): icon is SimpleColumnIconOption & { font: string; content: string } {\n  if (icon.font && icon.content) {\n    return true\n  }\n  return false\n}\n\nfunction isInlineImageConstructorOption(\n  icon: SimpleColumnIconOption\n): icon is SimpleColumnIconOption & { src: string } {\n  if (icon.src) {\n    return true\n  }\n  return false\n}\n\nfunction isInlineSvgConstructorOption(\n  icon: SimpleColumnIconOption\n): icon is SimpleColumnIconOption & {\n  path: string\n  width: number\n  height: number\n} {\n  if (icon.path) {\n    return true\n  }\n  return false\n}\n\nexport function iconOf(icon: SimpleColumnIconOption | null): Inline | null {\n  if (icon instanceof Inline) {\n    return icon\n  }\n  if (!icon) {\n    return null\n  }\n  if (isIconConstructorOption(icon)) {\n    return new InlineIcon(icon)\n  }\n  if (isInlineImageConstructorOption(icon)) {\n    return new InlineImage({\n      height: icon.width,\n      src: icon.src,\n      width: icon.width,\n    })\n  }\n  if (icon.svg) {\n    return new InlineSvg({\n      height: icon.width,\n      svg: icon.svg,\n      width: icon.width,\n    })\n  }\n  if (isInlineSvgConstructorOption(icon)) {\n    return new InlinePath2D({\n      color: icon.color,\n      height: icon.width,\n      path: icon.path,\n      width: icon.width,\n    })\n  }\n  const regedIcons = svgIcons.get()\n  if (icon.name && regedIcons[icon.name]) {\n    const regedIcon = regedIcons[icon.name]\n    const width = icon.width || Math.max(regedIcon.width, regedIcon.height)\n    return new InlineDrawer({\n      draw({\n        ctx,\n        rect,\n        offset,\n        offsetLeft,\n        offsetRight,\n        offsetTop,\n        offsetBottom,\n      }: InlineDrawOption): void {\n        drawRegisteredIcon(\n          ctx,\n          regedIcon,\n          width,\n          width,\n          rect.left,\n          rect.top,\n          rect.width,\n          rect.height,\n          {\n            offset: offset + 1,\n            padding: {\n              bottom: offsetBottom,\n              left: offsetLeft,\n              right: offsetRight,\n              top: offsetTop,\n            },\n          }\n        )\n      },\n      color: icon.color,\n      height: width,\n      width,\n    })\n  }\n  return new InlineIcon(icon)\n}\n\nexport function of(content: string | Inline): Inline\nexport function of(content?: string | Inline | null): null\nexport function of(content?: string | Inline | null): Inline | null {\n  if (!isDef(content)) {\n    return null\n  }\n  if (content instanceof Inline) {\n    return content\n  }\n  return new Inline(content)\n}\nexport function buildInlines(\n  icons: SimpleColumnIconOption[] | null | undefined,\n  inline: Inline | string | (string | Inline)[]\n): Inline[] {\n  const result = []\n  if (icons) {\n    result.push(...icons.map((icon) => iconOf(icon)).filter(isDef))\n  }\n  if (\n    Array.isArray(inline)\n    // && inline.filter(il => il instanceof Inline).length <- ?\n  ) {\n    result.push(...inline.map((il) => of(il)).filter(isDef))\n  } else {\n    const il = of(inline)\n    if (il) {\n      result.push(il)\n    }\n  }\n  return result\n}\nexport function string(inline: any) {\n  return buildInlines(undefined, inline).join('')\n}\n","import { themes } from './themes'\nimport {\n  RequiredThemeDefine,\n  ListGridAPI,\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  ColorDef,\n  StylePropertyFunctionArg,\n  FontPropertyDefine,\n} from './ts-types'\nimport { getChainSafe, isDef, getOrApply } from './internal/utils'\n\nfunction getThemeColor<\n  R,\n  T extends\n    | ColorPropertyDefine\n    | ColorsPropertyDefine\n    | FontPropertyDefine\n    | number\n>(grid: ListGridAPI<R>, ...names: string[]): T {\n  const gridThemeColor = getChainSafe(grid.theme, ...names)\n  if (!isDef(gridThemeColor)) {\n    // use default theme\n    return getChainSafe(themes.getDefault(), ...names)\n  }\n  if (typeof gridThemeColor !== 'function') {\n    return gridThemeColor\n  }\n  let defaultThemeColor: ColorDef\n  return ((args: StylePropertyFunctionArg): any => {\n    const color = gridThemeColor(args)\n    if (isDef(color)) {\n      // use grid theme\n      return color\n    }\n    // use default theme\n    defaultThemeColor =\n      defaultThemeColor || getChainSafe(themes.getDefault(), ...names)\n    return getOrApply(defaultThemeColor, args)\n  }) as any\n}\n\nexport class ThemeResolver<T> implements RequiredThemeDefine {\n  private _grid: ListGridAPI<T>\n  private _checkbox: RequiredThemeDefine['checkbox'] | null = null\n  private _radioButton: RequiredThemeDefine['radioButton'] | null = null\n  private _button: RequiredThemeDefine['button'] | null = null\n  private _header: RequiredThemeDefine['header'] | null = null\n  private _switch: RequiredThemeDefine['switch'] | null = null\n  private _tree: RequiredThemeDefine['tree'] | null = null\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n  }\n  public getThemeColor<\n    T extends\n      | ColorPropertyDefine\n      | ColorsPropertyDefine\n      | FontPropertyDefine\n      | number\n  >(...name: string[]): T {\n    return getThemeColor(this._grid, ...name)\n  }\n  public get underlayBackgroundColor(): string {\n    return getThemeColor(this._grid, 'underlayBackgroundColor')\n  }\n  // font\n  public get font(): string {\n    return getThemeColor(this._grid, 'font')\n  }\n  public get frozenRowsFont(): string {\n    return getThemeColor(this._grid, 'frozenRowsFont')\n  }\n  // color\n  public get color(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'color')\n  }\n  public get frozenRowsColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'frozenRowsColor')\n  }\n  // background\n  public get defaultBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'defaultBgColor')\n  }\n  public get frozenRowsBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'frozenRowsBgColor')\n  }\n  public get focusBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'focusBgColor')\n  }\n  public get selectionBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'selectionBgColor')\n  }\n  public get highlightBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'highlightBgColor')\n  }\n  public get selectionDragBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'selectionDragBgColor')\n  }\n  // border\n  public get borderColor(): ColorsPropertyDefine {\n    return getThemeColor(this._grid, 'borderColor')\n  }\n  public get frozenRowsBorderColor(): ColorsPropertyDefine {\n    return getThemeColor(this._grid, 'frozenRowsBorderColor')\n  }\n  public get highlightBorderColor(): ColorsPropertyDefine {\n    return getThemeColor(this._grid, 'highlightBorderColor')\n  }\n  // grid border\n  public get gridBorderColor(): string {\n    return getThemeColor(this._grid, 'gridBorderColor')\n  }\n  public get gridBorderWidth(): number {\n    return getThemeColor(this._grid, 'gridBorderWidth')\n  }\n  // size\n  public get defaultRowHeight(): number {\n    return getThemeColor(this._grid, 'defaultRowHeight')\n  }\n  public get defaultColWidth(): number {\n    return getThemeColor(this._grid, 'defaultColWidth')\n  }\n  public get highlightBorderWidth(): number {\n    return getThemeColor(this._grid, 'highlightBorderWidth')\n  }\n  // other\n  public get checkbox(): RequiredThemeDefine['checkbox'] {\n    const grid = this._grid\n    return (\n      this._checkbox ||\n      (this._checkbox = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'checkbox', 'uncheckBgColor')\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'checkbox', 'checkBgColor')\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'checkbox', 'borderColor')\n        },\n      })\n    )\n  }\n  public get radioButton(): RequiredThemeDefine['radioButton'] {\n    const grid = this._grid\n    return (\n      this._radioButton ||\n      (this._radioButton = {\n        get checkColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'checkColor')\n        },\n        get uncheckBorderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'uncheckBorderColor')\n        },\n        get checkBorderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'checkBorderColor')\n        },\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'uncheckBgColor')\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'checkBgColor')\n        },\n      })\n    )\n  }\n  public get button(): RequiredThemeDefine['button'] {\n    const grid = this._grid\n    return (\n      this._button ||\n      (this._button = {\n        get color(): ColorPropertyDefine {\n          return getThemeColor(grid, 'button', 'color')\n        },\n        get bgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'button', 'bgColor')\n        },\n      })\n    )\n  }\n  public get header(): RequiredThemeDefine['header'] {\n    const grid = this._grid\n    return (\n      this._header ||\n      (this._header = {\n        get sortArrowColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'header', 'sortArrowColor')\n        },\n      })\n    )\n  }\n  public get switch(): RequiredThemeDefine['switch'] {\n    const grid = this._grid\n    return (\n      this._switch ||\n      (this._switch = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'switch', 'uncheckBgColor')\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'switch', 'checkBgColor')\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'switch', 'borderColor')\n        },\n      })\n    )\n  }\n  public get tree(): RequiredThemeDefine['tree'] {\n    const grid = this._grid\n    return (\n      this._tree ||\n      (this._tree = {\n        get lineColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'lineColor')\n        },\n        get buttonColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'buttonColor')\n        },\n        get buttonBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'buttonBgColor')\n        },\n        get buttonBorderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'buttonBorderColor')\n        },\n        get linkColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'linkColor')\n        },\n      })\n    )\n  }\n}\n","import * as inlineUtils from './element/inlines'\nimport {\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  RequiredThemeDefine,\n  CellContext,\n  RectProps,\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  ColorDef,\n  TextOverflow,\n  TreeInfo,\n  FontPropertyDefine,\n  LineClamp,\n} from './ts-types'\nimport { Inline, InlineDrawOption } from './element/Inline'\nimport { InlineDrawer } from './element/InlineDrawer'\nimport { toPx } from './internal/calc'\nimport { getFontSize, calcStartPosition } from './internal/canvases'\nimport { calcElapsedColor } from './internal/color'\nimport fonts from './internal/fonts'\nimport Rect from './internal/Rect'\nimport { getOrApply, style, isDef, cellInRange } from './internal/utils'\nimport { canvasHelper, DrawButtonOption } from './tools/canvasHelper'\n\nimport { ThemeResolver } from './GridThemeHelper'\nimport { SimpleColumnIconOption } from './ts-types-internal'\n\nexport const TREE_NODE_SPACE = 16\n\nenum SwitchStyle {\n  default,\n  iPhone,\n}\n\nconst SWITCH_STYLE: SwitchStyle = SwitchStyle.default\n\nconst INLINE_ELLIPSIS = inlineUtils.of('\\u2026')\n\ntype ColorsDef = ColorDef | (ColorDef | null)[]\n\nfunction invalidateCell<T>(context: CellContext, grid: ListGridAPI<T>) {\n  grid.invalidateCell(context.col, context.row)\n}\nfunction getColor<T>(\n  color: ColorPropertyDefine,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): ColorDef\nfunction getColor<T>(\n  color: ColorsPropertyDefine,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): ColorsDef\nfunction getColor<T>(\n  color: undefined,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): undefined\nfunction getColor<T>(\n  color: ColorPropertyDefine | ColorsPropertyDefine | undefined,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): ColorDef | ColorsDef | undefined {\n  return getOrApply(color, {\n    col,\n    context,\n    grid,\n    row,\n  })\n}\nfunction getFont<T>(\n  font: FontPropertyDefine | undefined,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): string | undefined {\n  if (font == null) {\n    return undefined\n  }\n  return getOrApply(font, {\n    col,\n    row,\n    grid,\n    context,\n  })\n}\nfunction testFontLoad<T>(\n  font: string | undefined,\n  value: string,\n  context: CellContext,\n  grid: ListGridAPI<T>\n): boolean {\n  if (font) {\n    if (!fonts.check(font, value)) {\n      fonts.load(font, value, () => invalidateCell(context, grid))\n      return false\n    }\n  }\n  return true\n}\nfunction getGridThemeColor<T>(\n  grid: ListGridAPI<T>,\n  theme: RequiredThemeDefine,\n  col: number,\n  row: number,\n  color?: ColorPropertyDefine\n): ColorPropertyDefine {\n  if (!color) {\n    ;({ color } = theme)\n    // header color\n    const isFrozenCell = grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      color = theme.frozenRowsColor\n    }\n  }\n  return color\n}\nfunction getGridThemeFont<T>(\n  grid: ListGridAPI<T>,\n  theme: RequiredThemeDefine,\n  col: number,\n  row: number,\n  font?: FontPropertyDefine\n): FontPropertyDefine {\n  if (!font) {\n    ;({ font } = theme)\n    // header color\n    const isFrozenCell = grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      font = theme.frozenRowsFont\n    }\n  }\n  return font\n}\n\nfunction drawInlines<T>(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  rect: RectProps,\n  offset: number,\n  offsetTop: number,\n  offsetBottom: number,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>\n): void {\n  function drawInline(\n    inline: Inline,\n    offsetLeft: number,\n    offsetRight: number\n  ): void {\n    if (inline.canDraw()) {\n      ctx.save()\n      try {\n        ctx.fillStyle = getColor(\n          inline.color() || ctx.fillStyle,\n          col,\n          row,\n          grid,\n          ctx\n        )\n        ctx.font = inline.font() || ctx.font\n        inline.draw({\n          canvasHelper,\n          ctx,\n          offset,\n          offsetBottom,\n          offsetLeft,\n          offsetRight,\n          offsetTop,\n          rect,\n        })\n      } finally {\n        ctx.restore()\n      }\n    } else {\n      inline.onReady(() => grid.invalidateCell(col, row))\n      // noop\n    }\n  }\n  if (inlines.length === 1) {\n    // 长度为1时，不需要计算宽度\n    const inline = inlines[0]\n    drawInline(inline, 0, 0)\n  } else if (inlines.length > 1) {\n    const inlineWidths = inlines.map(\n      (inline) => (inline.width({ ctx }) || 0) - 0\n    )\n    let offsetRight = inlineWidths.reduce((a, b) => a + b)\n\n    let offsetLeft = 0\n    inlines.forEach((inline, index) => {\n      const inlineWidth = inlineWidths[index]\n      offsetRight -= inlineWidth\n      drawInline(inline, offsetLeft, offsetRight)\n      offsetLeft += inlineWidth\n    })\n  }\n}\n\nfunction buildInlines(\n  icons: SimpleColumnIconOption[] | undefined,\n  inline: string\n): Inline[] {\n  return inlineUtils.buildInlines(icons, isDef(inline) ? inline : '')\n}\n\nfunction inlineToString(inline: Inline | string): string {\n  return inlineUtils.string(inline)\n}\n\nfunction getOverflowInline(textOverflow?: TextOverflow): Inline {\n  if (!isAllowOverflow(textOverflow) || textOverflow === 'ellipsis') {\n    return INLINE_ELLIPSIS\n  }\n  textOverflow = textOverflow.trim()\n  if (textOverflow.length === 1) {\n    return inlineUtils.of(textOverflow[0])\n  }\n  return INLINE_ELLIPSIS\n}\n\nfunction isAllowOverflow(textOverflow?: TextOverflow): textOverflow is string {\n  return !!(\n    textOverflow &&\n    textOverflow !== 'clip' &&\n    typeof textOverflow === 'string'\n  )\n}\n\nfunction getOverflowInlinesIndex(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number\n): {\n  index: number\n  lineWidth: number\n  remWidth: number\n} | null {\n  const maxWidth = width - 3 /*buffer*/\n  let lineWidth = 0\n  for (let i = 0; i < inlines.length; i++) {\n    const inline = inlines[i]\n    const inlineWidth = (inline.width({ ctx }) || 0) - 0\n    if (lineWidth + inlineWidth > maxWidth) {\n      return {\n        index: i,\n        lineWidth,\n        remWidth: maxWidth - lineWidth,\n      }\n    }\n    lineWidth += inlineWidth\n  }\n  return null\n}\n\nfunction isOverflowInlines(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number\n): boolean {\n  return !!getOverflowInlinesIndex(ctx, inlines, width)\n}\n\nfunction breakWidthInlines(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number\n): {\n  beforeInlines: Inline[]\n  overflow: boolean\n  afterInlines: Inline[]\n} {\n  const indexData = getOverflowInlinesIndex(ctx, inlines, width)\n  if (!indexData) {\n    return {\n      afterInlines: [],\n      beforeInlines: inlines,\n      overflow: false,\n    }\n  }\n  const index = indexData.index\n  const remWidth = indexData.remWidth\n  const inline = inlines[index]\n  const beforeInlines = inlines.slice(0, index)\n  const afterInlines = []\n  if (inline.canBreak()) {\n    const breakWord = inline.breakWord(ctx, remWidth)\n    let before = breakWord.before\n    let after = breakWord.after\n    if (!before && !beforeInlines.length) {\n      ;({ before, after } = inline.breakAll(ctx, remWidth))\n    }\n    if (!before && !beforeInlines.length) {\n      // Always return one char\n      ;({ before, after } = inline.splitIndex(1))\n    }\n    if (before) {\n      beforeInlines.push(before)\n    }\n    if (after) {\n      afterInlines.push(after)\n    }\n    afterInlines.push(...inlines.slice(index + 1))\n  } else {\n    if (!beforeInlines.length) {\n      // Always return one char\n      beforeInlines.push(inline)\n    }\n    afterInlines.push(...inlines.slice(beforeInlines.length))\n  }\n  return {\n    afterInlines,\n    beforeInlines,\n    overflow: true,\n  }\n}\n\nfunction truncateInlines(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number,\n  offset: number,\n  option?: TextOverflow\n): {\n  inlines: Inline[]\n  overflow: boolean\n} {\n  const indexData = getOverflowInlinesIndex(ctx, inlines, width)\n  if (!indexData) {\n    return {\n      inlines,\n      overflow: false,\n    }\n  }\n  const { index, lineWidth } = indexData\n  const inline = inlines[index]\n  const overflowInline = getOverflowInline(option)\n  const ellipsisWidth = overflowInline.width({ ctx })\n  const remWidth = width - lineWidth - ellipsisWidth - offset - 1\n  const result = inlines.slice(0, index)\n  if (inline.canBreak()) {\n    const before = inline.breakAll(ctx, remWidth).before\n    if (before) {\n      result.push(before)\n    }\n  }\n  result.push(overflowInline)\n  return {\n    inlines: result,\n    overflow: true,\n  }\n}\n\nfunction _inlineRect<T>(\n  grid: ListGridAPI<T>,\n  ctx: CanvasRenderingContext2D,\n  inline: string,\n  rect: RectProps,\n  col: number,\n  row: number,\n  {\n    offset,\n    color,\n    textAlign,\n    textBaseline,\n    font,\n    textOverflow,\n    icons,\n  }: {\n    offset: number\n    color?: ColorPropertyDefine\n    textAlign: CanvasTextAlign\n    textBaseline: CanvasTextBaseline\n    font?: string\n    textOverflow?: TextOverflow\n    icons?: SimpleColumnIconOption[]\n  }\n): void {\n  // 文字style\n  ctx.fillStyle = getColor(color || ctx.fillStyle, col, row, grid, ctx)\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  ctx.font = font || ctx.font\n\n  let inlines = buildInlines(icons, inline)\n  if (\n    isAllowOverflow(textOverflow) &&\n    isOverflowInlines(ctx, inlines, rect.width)\n  ) {\n    const { inlines: truncInlines, overflow } = truncateInlines(\n      ctx,\n      inlines,\n      rect.width,\n      offset,\n      textOverflow\n    )\n    inlines = truncInlines\n    grid.setCellOverflowText(col, row, overflow && inlineToString(inline))\n  } else {\n    grid.setCellOverflowText(col, row, false)\n  }\n\n  drawInlines(ctx, inlines, rect, offset, 0, 0, col, row, grid)\n}\n\nfunction _multiInlineRect<T>(\n  grid: ListGridAPI<T>,\n  ctx: CanvasRenderingContext2D,\n  multiInlines: string[],\n  rect: RectProps,\n  col: number,\n  row: number,\n  {\n    offset,\n    color,\n    textAlign,\n    textBaseline,\n    font,\n    lineHeight,\n    autoWrapText,\n    lineClamp,\n    textOverflow,\n    icons,\n  }: {\n    offset: number\n    color?: ColorPropertyDefine\n    textAlign: CanvasTextAlign\n    textBaseline: CanvasTextBaseline\n    font?: string\n    lineHeight: number\n    autoWrapText?: boolean\n    lineClamp: LineClamp\n    textOverflow?: TextOverflow\n    icons?: SimpleColumnIconOption[]\n  }\n): void {\n  // 文字style\n  ctx.fillStyle = getColor(color || ctx.fillStyle, col, row, grid, ctx)\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  ctx.font = font || ctx.font\n\n  if (lineClamp === 'auto') {\n    const rectHeight =\n      rect.height - offset * 2 - 2 /*offset added by Inline#draw*/\n    lineClamp = Math.max(Math.floor(rectHeight / lineHeight), 1)\n  }\n\n  let buildedMultiInlines: Inline[][]\n  if (autoWrapText || lineClamp > 0 || isAllowOverflow(textOverflow)) {\n    const width = rect.width\n    buildedMultiInlines = []\n    const procLineClamp =\n      lineClamp > 0\n        ? (inlines: Inline[], hasNext: boolean): boolean => {\n            if (buildedMultiInlines.length + 1 >= lineClamp) {\n              if (inlines.length === 0 && hasNext) {\n                buildedMultiInlines.push([getOverflowInline(textOverflow)])\n                grid.setCellOverflowText(\n                  col,\n                  row,\n                  multiInlines.map(inlineToString).join('\\n')\n                )\n              } else {\n                const tis = truncateInlines(\n                  ctx,\n                  inlines,\n                  width,\n                  offset,\n                  textOverflow\n                )\n                const truncInlines = tis.inlines\n                const overflow = tis.overflow\n                buildedMultiInlines.push(\n                  hasNext && !overflow\n                    ? truncInlines.concat([getOverflowInline(textOverflow)])\n                    : truncInlines\n                )\n                if (overflow || hasNext) {\n                  grid.setCellOverflowText(\n                    col,\n                    row,\n                    multiInlines.map(inlineToString).join('\\n')\n                  )\n                }\n              }\n              return false\n            }\n            return true\n          }\n        : (): boolean => true\n    const procLine = autoWrapText\n      ? (inlines: Inline[], hasNext: boolean): boolean => {\n          if (!procLineClamp(inlines, hasNext)) {\n            return false\n          }\n          while (inlines.length) {\n            if (!procLineClamp(inlines, hasNext)) {\n              return false\n            }\n            const { beforeInlines, afterInlines } = breakWidthInlines(\n              ctx,\n              inlines,\n              width\n            )\n            buildedMultiInlines.push(beforeInlines)\n            inlines = afterInlines\n          }\n          return true\n        }\n      : isAllowOverflow(textOverflow)\n      ? (inlines: Inline[], hasNext: boolean): boolean => {\n          if (!procLineClamp(inlines, hasNext)) {\n            return false\n          }\n          const { inlines: truncInlines, overflow } = truncateInlines(\n            ctx,\n            inlines,\n            width,\n            offset,\n            textOverflow\n          )\n          buildedMultiInlines.push(truncInlines)\n          if (overflow) {\n            grid.setCellOverflowText(\n              col,\n              row,\n              multiInlines.map(inlineToString).join('\\n')\n            )\n          }\n          return true\n        }\n      : (inlines: Inline[], hasNext: boolean): boolean => {\n          if (!procLineClamp(inlines, hasNext)) {\n            return false\n          }\n          buildedMultiInlines.push(inlines)\n          return true\n        }\n    grid.setCellOverflowText(col, row, false)\n    for (let lineRow = 0; lineRow < multiInlines.length; lineRow++) {\n      const inline = multiInlines[lineRow]\n      const buildedInline = buildInlines(\n        lineRow === 0 ? icons : undefined,\n        inline\n      )\n      if (!procLine(buildedInline, lineRow + 1 < multiInlines.length)) {\n        break\n      }\n    }\n  } else {\n    grid.setCellOverflowText(col, row, false)\n    buildedMultiInlines = multiInlines.map((inline, lineRow) =>\n      buildInlines(lineRow === 0 ? icons : undefined, inline)\n    )\n  }\n\n  let paddingTop = 0\n  let paddingBottom = lineHeight * (buildedMultiInlines.length - 1)\n\n  if (ctx.textBaseline === 'top' || ctx.textBaseline === 'hanging') {\n    const em = getFontSize(ctx, ctx.font).height\n    const pad = (lineHeight - em) / 2\n    paddingTop += pad\n    paddingBottom -= pad\n  } else if (\n    ctx.textBaseline === 'bottom' ||\n    ctx.textBaseline === 'alphabetic' ||\n    ctx.textBaseline === 'ideographic'\n  ) {\n    const em = getFontSize(ctx, ctx.font).height\n    const pad = (lineHeight - em) / 2\n    paddingTop -= pad\n    paddingBottom += pad\n  }\n  buildedMultiInlines.forEach((buildedInline) => {\n    drawInlines(\n      ctx,\n      buildedInline,\n      rect,\n      offset,\n      paddingTop,\n      paddingBottom,\n      col,\n      row,\n      grid\n    )\n    paddingTop += lineHeight\n    paddingBottom -= lineHeight\n  })\n}\n\nfunction gridDrawCheckbox<T>(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  col: number,\n  row: number,\n  check: boolean,\n  helper: GridCanvasHelper<T>,\n  {\n    animElapsedTime = 1,\n    uncheckBgColor = helper.theme.checkbox.uncheckBgColor,\n    checkBgColor = helper.theme.checkbox.checkBgColor,\n    borderColor = helper.theme.checkbox.borderColor,\n    textAlign = 'center',\n    textBaseline = 'middle',\n  }: {\n    animElapsedTime?: number\n    uncheckBgColor?: ColorPropertyDefine\n    checkBgColor?: ColorPropertyDefine\n    borderColor?: ColorPropertyDefine\n    textAlign?: CanvasTextAlign\n    textBaseline?: CanvasTextBaseline\n  } = {},\n  positionOpt = {}\n) {\n  const boxWidth = canvasHelper.measureCheckbox(ctx).width\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  const pos = calcStartPosition(\n    ctx,\n    rect,\n    boxWidth + 1 /*分割线+1*/,\n    boxWidth + 1 /*分割线+1*/,\n    positionOpt\n  )\n  uncheckBgColor = helper.getColor(uncheckBgColor, col, row, ctx)\n  checkBgColor = helper.getColor(checkBgColor, col, row, ctx)\n  borderColor = helper.getColor(borderColor, col, row, ctx)\n  if (0 < animElapsedTime && animElapsedTime < 1) {\n    uncheckBgColor = check\n      ? uncheckBgColor\n      : calcElapsedColor(\n          checkBgColor as string,\n          uncheckBgColor as string,\n          animElapsedTime\n        )\n    checkBgColor = check\n      ? calcElapsedColor(\n          uncheckBgColor as string,\n          checkBgColor as string,\n          animElapsedTime\n        )\n      : checkBgColor\n  }\n\n  canvasHelper.drawCheckbox(\n    ctx,\n    pos.x,\n    pos.y,\n    check ? animElapsedTime : false,\n    {\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n    }\n  )\n}\n\nfunction gridDrawRadioButton<T>(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  col: number,\n  row: number,\n  check: boolean,\n  helper: GridCanvasHelper<T>,\n  {\n    animElapsedTime = 1,\n    checkColor = helper.theme.radioButton.checkColor,\n    uncheckBorderColor = helper.theme.radioButton.uncheckBorderColor,\n    checkBorderColor = helper.theme.radioButton.checkBorderColor,\n    uncheckBgColor = helper.theme.radioButton.uncheckBgColor,\n    checkBgColor = helper.theme.radioButton.checkBgColor,\n    textAlign = 'center',\n    textBaseline = 'middle',\n  }: {\n    animElapsedTime?: number\n    checkColor?: ColorPropertyDefine\n    uncheckBorderColor?: ColorPropertyDefine\n    checkBorderColor?: ColorPropertyDefine\n    uncheckBgColor?: ColorPropertyDefine\n    checkBgColor?: ColorPropertyDefine\n    textAlign?: CanvasTextAlign\n    textBaseline?: CanvasTextBaseline\n  },\n  positionOpt = {}\n): void {\n  const boxWidth = canvasHelper.measureRadioButton(ctx).width\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  const pos = calcStartPosition(\n    ctx,\n    rect,\n    boxWidth + 1 /*罫線分+1*/,\n    boxWidth + 1 /*罫線分+1*/,\n    positionOpt\n  )\n  checkColor = helper.getColor(checkColor, col, row, ctx)\n  uncheckBorderColor = helper.getColor(uncheckBorderColor, col, row, ctx)\n  checkBorderColor = helper.getColor(checkBorderColor, col, row, ctx)\n  uncheckBgColor = helper.getColor(uncheckBgColor, col, row, ctx)\n  checkBgColor = helper.getColor(checkBgColor, col, row, ctx)\n  let borderColor = check ? checkBorderColor : uncheckBorderColor\n  let bgColor = check ? checkBgColor : uncheckBgColor\n  if (0 < animElapsedTime && animElapsedTime < 1) {\n    borderColor = check\n      ? calcElapsedColor(\n          uncheckBorderColor as string,\n          checkBorderColor as string,\n          animElapsedTime\n        )\n      : calcElapsedColor(\n          checkBorderColor as string,\n          uncheckBorderColor as string,\n          animElapsedTime\n        )\n    bgColor = check\n      ? calcElapsedColor(\n          uncheckBgColor as string,\n          checkBgColor as string,\n          animElapsedTime\n        )\n      : calcElapsedColor(\n          checkBgColor as string,\n          uncheckBgColor as string,\n          animElapsedTime\n        )\n  }\n\n  canvasHelper.drawRadioButton(\n    ctx,\n    pos.x,\n    pos.y,\n    check ? animElapsedTime : 1 - animElapsedTime,\n    {\n      checkColor,\n      borderColor,\n      bgColor,\n    }\n  )\n}\n\nfunction getSwitchBtnSize(rect: RectProps) {\n  if (SWITCH_STYLE === SwitchStyle.default) {\n    return {\n      height: 22,\n      width: 44,\n    }\n  } else {\n    const height = rect.height - rect.height / 4\n    const width = height * 1.625\n    return {\n      height,\n      width,\n    }\n  }\n}\n\nfunction gridDrawSwitchBtn<T>(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  col: number,\n  row: number,\n  check: boolean,\n  helper: GridCanvasHelper<T>,\n  info: {\n    animElapsedTime?: number\n    uncheckBgColor?: any\n    checkBgColor?: any\n    borderColor?: any\n    textAlign?: string\n    textBaseline?: string\n  } = {},\n  positionOpt = {}\n) {\n  const animElapsedTime =\n    info.animElapsedTime === undefined ? 1 : info.animElapsedTime\n  let uncheckBgColor = info.uncheckBgColor || helper.theme.switch.uncheckBgColor\n  let checkBgColor = info.checkBgColor || helper.theme.switch.checkBgColor\n  let borderColor = info.borderColor || helper.theme.switch.borderColor\n  const textAlign = info.textAlign || 'center'\n  const textBaseline = info.textBaseline || 'middle'\n\n  const btnSize = getSwitchBtnSize(rect)\n  ctx.textAlign = textAlign as CanvasTextAlign\n  ctx.textBaseline = textBaseline as CanvasTextBaseline\n  const pos = calcStartPosition(\n    ctx,\n    rect,\n    btnSize.width + 1 /*分割线+1*/,\n    btnSize.height + 1 /*分割线+1*/,\n    positionOpt\n  )\n  uncheckBgColor = helper.getColor(uncheckBgColor, col, row, ctx)\n  checkBgColor = helper.getColor(checkBgColor, col, row, ctx)\n  borderColor = helper.getColor(borderColor, col, row, ctx)\n  borderColor = style.toBoxArray(borderColor).find((v) => v)\n  const draw =\n    SWITCH_STYLE === SwitchStyle.default\n      ? canvasHelper.drawSwitchButton\n      : canvasHelper.drawSwitchBtn\n  draw(ctx, pos.x, pos.y, check, animElapsedTime, {\n    borderColor,\n    checkBgColor,\n    uncheckBgColor,\n    btnSize,\n  })\n}\n\nfunction strokeRect(\n  ctx: CanvasRenderingContext2D,\n  color: ColorsDef,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  if (!Array.isArray(color)) {\n    if (color) {\n      ctx.strokeStyle = color\n      ctx.strokeRect(left, top, width, height)\n    }\n  } else {\n    const borderColors = style.toBoxArray(color)\n    canvasHelper.strokeColorsRect(ctx, borderColors, left, top, width, height)\n  }\n}\n\nexport class GridCanvasHelper<T> implements GridCanvasHelperAPI {\n  private _grid: ListGridAPI<T>\n  private _theme: RequiredThemeDefine\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n    this._theme = new ThemeResolver(grid)\n  }\n  public createCalculator(\n    context: CellContext,\n    font: string | undefined\n  ): {\n    calcWidth(width: number | string): number\n    calcHeight(height: number | string): number\n  } {\n    return {\n      calcWidth(width: number | string): number {\n        return toPx(width, {\n          get full() {\n            const rect = context.getRect()\n            return rect.width\n          },\n          get em() {\n            return getFontSize(context.getContext(), font).width\n          },\n        })\n      },\n      calcHeight(height: number | string): number {\n        return toPx(height, {\n          get full() {\n            const rect = context.getRect()\n            return rect.height\n          },\n          get em() {\n            return getFontSize(context.getContext(), font).height\n          },\n        })\n      },\n    }\n  }\n  public getColor(\n    color: ColorPropertyDefine,\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D\n  ): ColorDef\n  public getColor(\n    color: ColorsPropertyDefine,\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D\n  ): ColorsDef\n  public getColor(\n    color: ColorPropertyDefine | ColorsPropertyDefine,\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D\n  ): ColorsDef {\n    return getColor(color, col, row, this._grid, ctx)\n  }\n  public toBoxArray(\n    obj: ColorsDef\n  ): [ColorDef | null, ColorDef | null, ColorDef | null, ColorDef | null] {\n    return style.toBoxArray(obj)\n  }\n  public toBoxPixelArray(\n    value: number | string | (number | string)[],\n    context: CellContext,\n    font: string | undefined\n  ): [number, number, number, number] {\n    if (typeof value === 'string' || Array.isArray(value)) {\n      const calculator = this.createCalculator(context, font)\n      const box = style.toBoxArray(value)\n      return [\n        calculator.calcHeight(box[0]),\n        calculator.calcWidth(box[1]),\n        calculator.calcHeight(box[2]),\n        calculator.calcWidth(box[3]),\n      ]\n    }\n    return style.toBoxArray(value)\n  }\n  public get theme(): RequiredThemeDefine {\n    return this._theme\n  }\n  public drawWithClip(\n    context: CellContext,\n    draw: (ctx: CanvasRenderingContext2D) => void\n  ): void {\n    const drawRect = context.getDrawRect()\n    if (!drawRect) {\n      return\n    }\n    const ctx = context.getContext()\n    if (ctx) {\n      ctx.save()\n      try {\n        ctx.beginPath()\n        ctx.rect(drawRect.left, drawRect.top, drawRect.width, drawRect.height)\n        // clip\n        ctx.clip()\n\n        draw(ctx)\n      } finally {\n        ctx.restore()\n      }\n    }\n  }\n  public drawBorderWithClip(\n    context: CellContext,\n    draw: (ctx: CanvasRenderingContext2D) => void\n  ): void {\n    const drawRect = context.getDrawRect()\n    if (!drawRect) {\n      return\n    }\n    const rect = context.getRect()\n    const ctx = context.getContext()\n    if (ctx) {\n      ctx.save()\n      try {\n        ctx.lineCap = 'square'\n\n        // 对于划线clip\n        ctx.beginPath()\n        let clipLeft = drawRect.left\n        let clipWidth = drawRect.width\n        if (drawRect.left === rect.left) {\n          clipLeft += -1\n          clipWidth += 1\n        }\n        let clipTop = drawRect.top\n        let clipHeight = drawRect.height\n        if (drawRect.top === rect.top) {\n          clipTop += -1\n          clipHeight += 1\n        }\n        ctx.rect(clipLeft, clipTop, clipWidth, clipHeight)\n        ctx.clip()\n\n        draw(ctx)\n      } finally {\n        ctx.restore()\n      }\n    }\n  }\n  public getTextRect(\n    text: string,\n    context: CellContext,\n    {\n      padding,\n      offset = 2,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      font,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      padding?: number | string | (number | string)[]\n      offset?: number\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ) {\n    let rect = context.getRect()\n    const drawRect = context.getDrawRect()\n    const ctx = context.getContext()\n\n    const { col, row } = context\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    if (drawRect && ctx) {\n      ctx.save()\n      try {\n        font = getFont(font, context.col, context.row, this._grid, ctx)\n        if (padding) {\n          const paddingNums = this.toBoxPixelArray(padding, context, font)\n          const left = rect.left + paddingNums[3]\n          const top = rect.top + paddingNums[0]\n          const width = rect.width - paddingNums[1] - paddingNums[3]\n          const height = rect.height - paddingNums[0] - paddingNums[2]\n          rect = new Rect(left, top, width, height)\n        }\n\n        // 文字style\n        ctx.textAlign = textAlign\n        ctx.textBaseline = textBaseline\n        ctx.font = font || ctx.font\n\n        let inlines = buildInlines(icons, text) as Inline[]\n        if (\n          isAllowOverflow(textOverflow) &&\n          isOverflowInlines(ctx, inlines, rect.width)\n        ) {\n          const truncInlines = truncateInlines(\n            ctx,\n            inlines,\n            rect.width,\n            offset,\n            textOverflow\n          ).inlines\n          inlines = truncInlines\n        }\n\n        const inlineWidths = inlines.map(\n          (inline) => (inline.width({ ctx }) || 0) - 0\n        )\n        const offsetBottom = 0\n        const offsetTop = 0\n        let offsetRight =\n          inlineWidths.length > 0 ? inlineWidths.reduce((a, b) => a + b) : 0\n        let offsetLeft = 0\n        let rectLeft = rect.right\n        let rectTop = rect.bottom\n        let rectRight = 0\n        let rectBottom = 0\n        inlines.forEach((inline, index) => {\n          const inlineWidth = inlineWidths[index]\n          offsetRight -= inlineWidth\n          ctx.font = inline.font() || ctx.font\n          const inlineHeight = getFontSize(ctx, ctx.font).height\n          const pos = calcStartPosition(\n            ctx,\n            {\n              bottom: rect.top + rect.height,\n              height: rect.height,\n              left: rect.left,\n              right: rect.left + rect.width,\n              top: rect.top,\n              width: rect.width,\n            },\n            inlineWidth,\n            inlineHeight,\n            {\n              offset: offset + 1,\n              padding: {\n                bottom: offsetBottom,\n                left: offsetLeft,\n                right: offsetRight,\n                top: offsetTop,\n              },\n            }\n          )\n          rectLeft = Math.floor(Math.min(rectLeft, pos.x))\n          rectTop = Math.floor(Math.min(rectTop, pos.y))\n          rectRight = Math.ceil(Math.max(rectRight, pos.x + inlineWidth))\n          rectBottom = Math.ceil(Math.max(rectBottom, pos.y + inlineHeight))\n\n          offsetLeft += inlineWidth\n        })\n        rect = new Rect(\n          Math.min(rectLeft, rectRight),\n          Math.min(rectTop, rectBottom),\n          Math.abs(rectRight - rectLeft),\n          Math.abs(rectBottom - rectTop)\n        )\n      } finally {\n        ctx.restore()\n      }\n    }\n    return rect\n  }\n  public text(\n    text: string,\n    context: CellContext,\n    {\n      padding,\n      offset = 2,\n      color,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      font,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      padding?: number | string | (number | string)[]\n      offset?: number\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ): void {\n    let rect = context.getRect()\n\n    const { col, row } = context\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    this.drawWithClip(context, (ctx) => {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      if (padding) {\n        const paddingNums = this.toBoxPixelArray(padding, context, font)\n        const left = rect.left + paddingNums[3]\n        const top = rect.top + paddingNums[0]\n        const width = rect.width - paddingNums[1] - paddingNums[3]\n        const height = rect.height - paddingNums[0] - paddingNums[2]\n        rect = new Rect(left, top, width, height)\n      }\n      _inlineRect(this._grid, ctx, text, rect, col, row, {\n        color,\n        font,\n        icons,\n        offset,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    })\n  }\n  public multilineText(\n    multilines: string[],\n    context: CellContext,\n    {\n      padding,\n      offset = 2,\n      color,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      font,\n      lineHeight = '1em',\n      autoWrapText = false,\n      lineClamp = 0,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      padding?: number | string | (number | string)[]\n      offset?: number\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n      lineHeight?: string | number\n      autoWrapText?: boolean\n      lineClamp?: LineClamp\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ): void {\n    let rect = context.getRect()\n\n    const { col, row } = context\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    this.drawWithClip(context, (ctx) => {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      if (padding) {\n        const paddingNums = this.toBoxPixelArray(padding, context, font)\n        const left = rect.left + paddingNums[3]\n        const top = rect.top + paddingNums[0]\n        const width = rect.width - paddingNums[1] - paddingNums[3]\n        const height = rect.height - paddingNums[0] - paddingNums[2]\n        rect = new Rect(left, top, width, height)\n      }\n      const calculator = this.createCalculator(context, font)\n      lineHeight = calculator.calcHeight(lineHeight)\n      _multiInlineRect(this._grid, ctx, multilines, rect, col, row, {\n        autoWrapText,\n        color,\n        font,\n        icons,\n        lineClamp,\n        lineHeight,\n        offset,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    })\n  }\n  public fillText(\n    text: string,\n    x: number,\n    y: number,\n    context: CellContext,\n    {\n      color,\n      textAlign = 'left',\n      textBaseline = 'top',\n      font,\n    }: {\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n    } = {}\n  ): void {\n    const { col, row } = context\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    const ctx = context.getContext()\n    ctx.save()\n    try {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      ctx.fillStyle = getColor(color, col, row, this._grid, ctx)\n      ctx.textAlign = textAlign\n      ctx.textBaseline = textBaseline\n      ctx.font = font || ctx.font\n      ctx.fillText(text, x, y)\n    } finally {\n      ctx.restore()\n    }\n  }\n  public clearCell(context: CellContext): void {\n    const rect = context.getRect()\n    this.drawWithClip(context, (ctx) => {\n      ctx.clearRect(rect.left, rect.top, rect.width, rect.height)\n    })\n  }\n  public fillCell(\n    context: CellContext,\n    {\n      fillColor = this.theme.defaultBgColor,\n      selectionColor,\n    }: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ): void {\n    const rect = context.getRect()\n\n    this.drawWithClip(context, (ctx) => {\n      const col = context.col\n      const row = context.row\n      ctx.fillStyle = getColor(fillColor, col, row, this._grid, ctx)\n\n      ctx.beginPath()\n      ctx.clearRect(rect.left, rect.top, rect.width, rect.height)\n      ctx.rect(rect.left, rect.top, rect.width, rect.height)\n      ctx.fill()\n      if (selectionColor) {\n        ctx.fillStyle = getColor(selectionColor, col, row, this._grid, ctx)\n        ctx.fill()\n      }\n    })\n  }\n  public fillCellWithState(\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n      isEditing?: boolean\n    } = {}\n  ): void {\n    option.fillColor = this.getFillColorState(context, option)\n    if (option.isEditing) {\n      delete option.selectionColor\n      delete option.isEditing\n    } else {\n      option.selectionColor = this.getSelectionColorState(context, option)\n    }\n    this.fillCell(context, option)\n  }\n  public fillRect(\n    rect: RectProps,\n    context: CellContext,\n    {\n      fillColor = this.theme.defaultBgColor,\n      selectionColor,\n    }: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ) {\n    const ctx = context.getContext()\n    ctx.save()\n    try {\n      const col = context.col\n      const row = context.row\n      ctx.fillStyle = getColor(fillColor, col, row, this._grid, ctx)\n\n      ctx.beginPath()\n      ctx.rect(rect.left, rect.top, rect.width, rect.height)\n      ctx.fill()\n      if (selectionColor) {\n        ctx.fillStyle = getColor(selectionColor, col, row, this._grid, ctx)\n        ctx.fill()\n      }\n    } finally {\n      ctx.restore()\n    }\n  }\n  public fillRectWithState(\n    rect: RectProps,\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ) {\n    option.fillColor = this.getFillColorState(context, option)\n    option.selectionColor = this.getSelectionColorState(context, option)\n    this.fillRect(rect, context, option)\n  }\n  public getSelectionColorState(\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ): ColorPropertyDefine | undefined {\n    const sel = context.getSelection()\n    const { col, row } = context\n    if (option.selectionColor) {\n      return option.selectionColor\n    } else if (sel.dragged) {\n      return this.theme.selectionDragBgColor\n    } else if (\n      !cellInRange(context.range, sel.select.col, sel.select.row) &&\n      cellInRange(sel.range, col, row)\n    ) {\n      return this.theme.selectionBgColor\n    } else if (\n      cellInRange(context.range, sel.select.col, sel.select.row) &&\n      cellInRange(sel.range, col, row)\n    ) {\n      return this.theme.focusBgColor\n    } else {\n      return undefined\n    }\n  }\n  public getFillColorState(\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ): ColorPropertyDefine {\n    const sel = context.getSelection()\n    const { col, row } = context\n    if (\n      !cellInRange(context.range, sel.select.col, sel.select.row) &&\n      cellInRange(sel.range, col, row)\n    ) {\n      return this.theme.selectionBgColor\n    }\n    if (option.fillColor) {\n      return option.fillColor\n    }\n    if (cellInRange(context.range, sel.select.col, sel.select.row)) {\n      return this.theme.highlightBgColor\n    }\n    const isFrozenCell = this._grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      return this.theme.frozenRowsBgColor\n    }\n    return this.theme.defaultBgColor\n  }\n  public border(\n    context: CellContext,\n    {\n      borderColor = this.theme.borderColor,\n      lineWidth = 1,\n    }: { borderColor?: ColorsPropertyDefine; lineWidth?: number } = {}\n  ): void {\n    const rect = context.getRect()\n\n    this.drawBorderWithClip(context, (ctx) => {\n      const col = context.col\n      const row = context.row\n      let left = rect.left\n      let top = rect.top\n      let width = rect.width\n      let height = rect.height\n      if (col === 0) {\n        left += lineWidth\n        width -= lineWidth\n      }\n      if (row === 0) {\n        top += lineWidth\n        height -= lineWidth\n      }\n      const borderColors = getColor(borderColor, col, row, this._grid, ctx)\n\n      if (lineWidth === 1) {\n        ctx.lineWidth = 1\n        strokeRect(ctx, borderColors, left - 0.5, top - 0.5, width, height)\n      } else if (lineWidth === 2) {\n        ctx.lineWidth = 2\n        strokeRect(ctx, borderColors, left, top, width - 1, height - 1)\n      } else {\n        ctx.lineWidth = lineWidth\n        const startOffset = lineWidth / 2 - 1\n        strokeRect(\n          ctx,\n          borderColors,\n          left + startOffset,\n          top + startOffset,\n          width - lineWidth + 1,\n          height - lineWidth + 1\n        )\n      }\n    })\n  }\n  public borderSelection(\n    context: CellContext,\n    option: {\n      borderColor?: ColorsPropertyDefine\n      lineWidth?: number\n      highlightBorderWidth?: number\n      isEditing?: boolean\n    } = {}\n  ) {\n    const col = context.col\n    const row = context.row\n    const border = context.getSelection().border\n    const rect = context.getRect()\n    const drawRect = context.getDrawRect() || rect\n\n    // header color\n    const isFrozenCell = this._grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      option.borderColor = this.theme.frozenRowsBorderColor\n    }\n\n    option.lineWidth = 1\n    this.border(context, option)\n\n    // 编辑中不绘制选择边框\n    if (option.isEditing) {\n      return\n    }\n\n    let highlightBorderWidth = 1\n    if (option.highlightBorderWidth !== undefined) {\n      highlightBorderWidth = option.highlightBorderWidth\n    }\n\n    // 画边框\n    if (border.top || border.right || border.bottom || border.left) {\n      this.drawBorderWithClip(context, (ctx) => {\n        const borderColor = getColor(\n          this.theme.highlightBorderColor,\n          col,\n          row,\n          this._grid,\n          ctx\n        )\n        const borderColors = style.toBoxArray(borderColor)\n        ctx.lineWidth = highlightBorderWidth\n        if (ctx.lineWidth > 0) {\n          const offset = ctx.lineWidth / 2\n          if (row === 0) {\n            rect.top += offset\n          }\n          if (col === 0) {\n            rect.left += offset\n          }\n          if (border.top) {\n            ctx.strokeStyle = borderColors[0] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.left, rect.top)\n            ctx.lineTo(rect.right - offset, rect.top)\n            ctx.stroke()\n          }\n          if (border.right) {\n            ctx.strokeStyle = borderColors[1] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.right - offset, rect.top)\n            ctx.lineTo(rect.right - offset, rect.bottom - offset)\n            ctx.stroke()\n          }\n          if (border.bottom) {\n            ctx.strokeStyle = borderColors[2] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.right - offset, rect.bottom - offset)\n            ctx.lineTo(rect.left, rect.bottom - offset)\n            ctx.stroke()\n          }\n          if (border.left) {\n            ctx.strokeStyle = borderColors[3] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.left, rect.bottom - offset)\n            ctx.lineTo(rect.left, rect.top)\n            ctx.stroke()\n          }\n        }\n\n        if (border.right && border.bottom && this._grid.canDragSelection) {\n          // 右下角拖动点\n          const x = drawRect.right\n          const y = drawRect.bottom\n          ctx.lineWidth = 1\n          ctx.strokeStyle =\n            borderColors[1] || borderColors[2] || ctx.strokeStyle\n          ctx.beginPath()\n          ctx.moveTo(x - 8, y - 3)\n          ctx.lineTo(x - 3, y - 8)\n          ctx.moveTo(x - 5, y - 3)\n          ctx.lineTo(x - 3, y - 5)\n          ctx.stroke()\n        }\n      })\n    }\n\n    // 额外处理\n    const range = this._grid.selection.range\n    if (\n      range.start.row <= row &&\n      range.end.row >= row &&\n      range.end.col === col - 1\n    ) {\n      // 左边被选中\n      this.drawBorderWithClip(context, (ctx) => {\n        const borderColor = getColor(\n          this.theme.highlightBorderColor,\n          col - 1,\n          row,\n          this._grid,\n          ctx\n        )\n        const borderColors = style.toBoxArray(borderColor)\n        ctx.lineWidth = 1\n        ctx.strokeStyle = borderColors[1] || ctx.strokeStyle\n        ctx.beginPath()\n        ctx.moveTo(rect.left - 0.5, rect.top)\n        ctx.lineTo(rect.left - 0.5, rect.bottom)\n        ctx.stroke()\n      })\n    } else if (\n      range.start.col <= col &&\n      range.end.col >= col &&\n      range.end.row === row - 1\n    ) {\n      // 顶部被选中\n      this.drawBorderWithClip(context, (ctx) => {\n        const borderColor = getColor(\n          this.theme.highlightBorderColor,\n          col,\n          row - 1,\n          this._grid,\n          ctx\n        )\n        const borderColors = style.toBoxArray(borderColor)\n        ctx.lineWidth = 1\n        ctx.strokeStyle = borderColors[0] || ctx.strokeStyle\n        ctx.beginPath()\n        ctx.moveTo(rect.left, rect.top - 0.5)\n        ctx.lineTo(rect.right, rect.top - 0.5)\n        ctx.stroke()\n      })\n    }\n  }\n  // public borderWithState(\n  //   context: CellContext,\n  //   option: { borderColor?: ColorsPropertyDefine; lineWidth?: number } = {}\n  // ): void {\n  //   const rect = context.getRect()\n  //   const state = context.getSelectState()\n  //   const { col, row } = context\n\n  //   // 划线\n  //   if (state.selected) {\n  //     option.borderColor = this.theme.highlightBorderColor\n  //     option.lineWidth = 2\n  //     this.border(context, option)\n  //   } else {\n  //     // header color\n  //     const isFrozenCell = this._grid.isFrozenCell(col, row)\n  //     if (isFrozenCell && isFrozenCell.row) {\n  //       option.borderColor = this.theme.frozenRowsBorderColor\n  //     }\n\n  //     option.lineWidth = 1\n  //     this.border(context, option)\n\n  //     // 额外处理\n  //     const sel = this._grid.selection.select\n  //     if (sel.col + 1 === col && sel.row === row) {\n  //       // 左边被选中\n  //       this.drawBorderWithClip(context, ctx => {\n  //         const borderColors = style.toBoxArray(\n  //           getColor(\n  //             this.theme.highlightBorderColor,\n  //             sel.col,\n  //             sel.row,\n  //             this._grid,\n  //             ctx\n  //           )\n  //         )\n  //         ctx.lineWidth = 1\n  //         ctx.strokeStyle = borderColors[1] || ctx.strokeStyle\n  //         ctx.beginPath()\n  //         ctx.moveTo(rect.left - 0.5, rect.top)\n  //         ctx.lineTo(rect.left - 0.5, rect.bottom)\n  //         ctx.stroke()\n  //       })\n  //     } else if (sel.col === col && sel.row + 1 === row) {\n  //       // 顶部被选中\n  //       this.drawBorderWithClip(context, ctx => {\n  //         const borderColors = style.toBoxArray(\n  //           getColor(\n  //             this.theme.highlightBorderColor,\n  //             sel.col,\n  //             sel.row,\n  //             this._grid,\n  //             ctx\n  //           )\n  //         )\n  //         ctx.lineWidth = 1\n  //         ctx.strokeStyle = borderColors[0] || ctx.strokeStyle\n  //         ctx.beginPath()\n  //         ctx.moveTo(rect.left, rect.top - 0.5)\n  //         ctx.lineTo(rect.right, rect.top - 0.5)\n  //         ctx.stroke()\n  //       })\n  //     }\n  //   }\n  // }\n  public buildCheckBoxInline(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): InlineDrawer {\n    const self = this\n    const boxWidth = canvasHelper.measureCheckbox(context.getContext()).width\n\n    function draw(info: InlineDrawOption): void {\n      const col = context.col\n      const row = context.row\n      gridDrawCheckbox(info.ctx, info.rect, col, row, check, self, option, {\n        offset: info.offset + 1,\n        padding: {\n          bottom: info.offsetBottom,\n          left: info.offsetLeft + 1,\n          right: info.offsetRight,\n          top: info.offsetTop,\n        },\n      })\n    }\n    return new InlineDrawer({\n      color: undefined,\n      draw,\n      height: boxWidth + 1,\n      width: boxWidth + 3,\n    })\n  }\n  public buildSwitchBtnInline(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): InlineDrawer {\n    const self = this\n    const btnSize = getSwitchBtnSize(context.getRect())\n\n    function draw(info: InlineDrawOption) {\n      const col = context.col\n      const row = context.row\n      gridDrawSwitchBtn(info.ctx, info.rect, col, row, check, self, option, {\n        offset: info.offset + 1,\n        padding: {\n          bottom: info.offsetBottom,\n          left: info.offsetLeft + 1,\n          right: info.offsetRight,\n          top: info.offsetTop,\n        },\n      })\n    }\n    return new InlineDrawer({\n      color: undefined,\n      draw,\n      height: btnSize.height + 1,\n      width: btnSize.width + 3,\n    })\n  }\n  public checkbox(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): void {\n    this.drawWithClip(context, (ctx) => {\n      const { col, row } = context\n      gridDrawCheckbox(ctx, context.getRect(), col, row, check, this, option)\n    })\n  }\n  public radioButton(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      checkColor?: ColorPropertyDefine\n      uncheckBorderColor?: ColorPropertyDefine\n      checkBorderColor?: ColorPropertyDefine\n      bgColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): void {\n    this.drawWithClip(context, (ctx) => {\n      const { col, row } = context\n      gridDrawRadioButton(ctx, context.getRect(), col, row, check, this, option)\n    })\n  }\n  public switch(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): void {\n    this.drawWithClip(context, (ctx) => {\n      const col = context.col\n      const row = context.row\n      gridDrawSwitchBtn(ctx, context.getRect(), col, row, check, this, option)\n    })\n  }\n  public button(\n    caption: string,\n    context: CellContext,\n    {\n      bgColor = this.theme.button.bgColor,\n      padding,\n      offset = 2,\n      color = this.theme.button.color,\n      textAlign = 'center',\n      textBaseline = 'middle',\n      shadow,\n      font,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      bgColor?: ColorPropertyDefine\n      padding?: number | string | (number | string)[]\n      offset?: number\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      shadow?: DrawButtonOption['shadow']\n      font?: FontPropertyDefine\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ): void {\n    const rect = context.getRect()\n\n    this.drawWithClip(context, (ctx) => {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      const col = context.col\n      const row = context.row\n      const paddingNums = this.toBoxPixelArray(\n        padding || rect.height / 8,\n        context,\n        font\n      )\n      const left = rect.left + paddingNums[3]\n      const top = rect.top + paddingNums[0]\n      const width = rect.width - paddingNums[1] - paddingNums[3]\n      const height = rect.height - paddingNums[0] - paddingNums[2]\n\n      bgColor = getColor(bgColor, context.col, context.row, this._grid, ctx)\n\n      canvasHelper.drawButton(ctx, left, top, width, height, {\n        bgColor,\n        // offset,\n        radius: rect.height / 8,\n        shadow,\n      })\n      _inlineRect(\n        this._grid,\n        ctx,\n        caption,\n        new Rect(left, top, width, height),\n        col,\n        row,\n        {\n          color,\n          font,\n          icons,\n          offset,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        }\n      )\n    })\n  }\n  public testFontLoad(\n    font: string | undefined,\n    value: string,\n    context: CellContext\n  ): boolean {\n    return testFontLoad(font, value, context, this._grid)\n  }\n  public tree(\n    text: string,\n    context: CellContext,\n    {\n      font,\n      offset = 2,\n      color,\n      lineColor = this.theme.tree.lineColor,\n      buttonColor = this.theme.tree.buttonColor,\n      buttonBgColor = this.theme.tree.buttonBgColor,\n      buttonBorderColor = this.theme.tree.buttonBorderColor,\n      icons,\n      padding,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      textOverflow = 'clip',\n      treeInfo,\n      treeNodeSpace = 0,\n      isMultilineText = false,\n      autoWrapText = false,\n      lineHeight = '1em',\n      lineClamp = 0,\n    }: {\n      font?: FontPropertyDefine\n      offset?: number\n      color?: ColorPropertyDefine\n      lineColor?: ColorPropertyDefine\n      buttonColor?: ColorPropertyDefine\n      buttonBgColor?: ColorPropertyDefine\n      buttonBorderColor?: ColorPropertyDefine\n      icons?: SimpleColumnIconOption[]\n      padding?: number | string | (number | string)[]\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      textOverflow?: TextOverflow\n      treeInfo?: TreeInfo\n      treeNodeSpace?: number\n      isMultilineText?: boolean\n      autoWrapText?: boolean\n      lineHeight?: string | number\n      lineClamp?: LineClamp\n    } = {}\n  ): void {\n    let rect = context.getRect()\n\n    const col = context.col\n    const row = context.row\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    this.drawWithClip(context, (ctx) => {\n      let xOffset = rect.left\n      let lineNodeSpace = 0\n      if (treeInfo) {\n        const info = treeInfo as TreeInfo\n        const nodeRadius = 5\n        const rectTop = rect.top\n        const rectMiddle = rectTop + rect.height / 2\n        const rectBottom = rectTop + rect.height\n        lineNodeSpace = treeNodeSpace\n        ctx.strokeStyle = this.getColor(lineColor, col, row, ctx)\n        ctx.beginPath()\n        for (let i = 0; i < info.level; i++) {\n          xOffset += lineNodeSpace\n          const isLastLevel = i === info.level - 1\n          const isLastRecord = info.levelLast[i]\n          if (isLastLevel || !isLastRecord) {\n            ctx.moveTo(xOffset, rectTop)\n            if (isLastRecord) {\n              ctx.lineTo(xOffset, rectMiddle)\n            } else {\n              ctx.lineTo(xOffset, rectBottom)\n            }\n            if (isLastLevel) {\n              ctx.moveTo(xOffset, rectMiddle)\n              ctx.lineTo(xOffset + lineNodeSpace - nodeRadius, rectMiddle)\n            }\n          }\n        }\n        ctx.stroke()\n        if (!info.isLeaf) {\n          ctx.beginPath()\n          ctx.strokeStyle = this.getColor(buttonBorderColor, col, row, ctx)\n          ctx.moveTo(xOffset + lineNodeSpace + nodeRadius, rectMiddle)\n          ctx.arc(\n            xOffset + lineNodeSpace,\n            rectMiddle,\n            nodeRadius,\n            0,\n            2 * Math.PI\n          )\n          ctx.fillStyle = this.getColor(buttonBgColor, col, row, ctx)\n          ctx.fill()\n          ctx.stroke()\n\n          if (info.expanded) {\n            ctx.beginPath()\n            ctx.strokeStyle = this.getColor(lineColor, col, row, ctx)\n            ctx.moveTo(xOffset + lineNodeSpace, rectMiddle + nodeRadius)\n            ctx.lineTo(xOffset + lineNodeSpace, rectBottom)\n            ctx.stroke()\n          }\n\n          // 减号\n          const symbolRadius = nodeRadius - 2\n          ctx.beginPath()\n          ctx.lineWidth = 2\n          ctx.strokeStyle = this.getColor(buttonColor, col, row, ctx)\n          ctx.moveTo(xOffset + lineNodeSpace - symbolRadius, rectMiddle)\n          ctx.lineTo(xOffset + lineNodeSpace + symbolRadius, rectMiddle)\n          if (!info.expanded) {\n            // 加号\n            ctx.moveTo(xOffset + lineNodeSpace, rectMiddle - symbolRadius)\n            ctx.lineTo(xOffset + lineNodeSpace, rectMiddle + symbolRadius)\n          }\n          ctx.stroke()\n        }\n      }\n      rect.left = xOffset + lineNodeSpace * 2\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      if (padding) {\n        const paddingNums = this.toBoxPixelArray(padding, context, font)\n        const left = rect.left + paddingNums[3]\n        const top = rect.top + paddingNums[0]\n        const width = rect.width - paddingNums[1] - paddingNums[3]\n        const height = rect.height - paddingNums[0] - paddingNums[2]\n        rect = new Rect(left, top, width, height)\n      }\n      if (!isMultilineText) {\n        _inlineRect(this._grid, ctx, text, rect, col, row, {\n          color,\n          font,\n          icons,\n          offset,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      } else {\n        text = isDef(text) ? text + '' : ''\n        const multiInlines = text\n          .replace(/\\r?\\n/g, '\\n')\n          .replace(/\\r/g, '\\n')\n          .split('\\n')\n        const calculator = this.createCalculator(context, font)\n        lineHeight = calculator.calcHeight(lineHeight)\n        _multiInlineRect(this._grid, ctx, multiInlines, rect, col, row, {\n          autoWrapText,\n          color,\n          font,\n          icons,\n          lineClamp,\n          lineHeight,\n          offset,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n    })\n  }\n  public attachArea(rect: RectProps, context: CellContext): void {\n    this.drawWithClip(context, (ctx) => {\n      const sel = context.getSelection()\n      const { col, row } = context\n      if (!cellInRange(sel.range, col, row)) {\n        ctx.setLineDash([4, 4])\n      }\n      ctx.strokeStyle = '#D9D9D9'\n      ctx.lineWidth = 1\n      const r = 2\n      const x = rect.left\n      const y = rect.top\n      const width = rect.width\n      const height = rect.height\n      ctx.beginPath()\n      ctx.moveTo(x + r, y)\n      ctx.arcTo(x + width, y, x + width, y + r, r)\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r)\n      ctx.arcTo(x, y + height, x, y + height - r, r)\n      ctx.arcTo(x, y, x + r, y, r)\n      ctx.stroke()\n    })\n  }\n}\n","import { ListGridAPI } from '../ts-types'\nimport { TooltipElement } from './internal/TooltipElement'\n\nexport abstract class BaseTooltip<T> {\n  private _grid: ListGridAPI<T>\n  private _tooltipElement?: TooltipElement<T>\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n  }\n  public dispose() {\n    this.detachTooltipElement()\n    if (this._tooltipElement) {\n      this._tooltipElement.dispose()\n    }\n    delete this._tooltipElement\n  }\n  public attachTooltipElement(col: number, row: number, content: string) {\n    const tooltipElement = this._getTooltipElement()\n    tooltipElement.attach(this._grid, col, row, content)\n  }\n  public moveTooltipElement(col: number, row: number) {\n    const tooltipElement = this._getTooltipElement()\n    tooltipElement.move(this._grid, col, row)\n  }\n  public detachTooltipElement() {\n    const tooltipElement = this._getTooltipElement()\n    tooltipElement.detach()\n  }\n  public abstract createTooltipElementInternal(): TooltipElement<T>\n  private _getTooltipElement(): TooltipElement<T> {\n    return (\n      this._tooltipElement ||\n      (this._tooltipElement = this.createTooltipElementInternal())\n    )\n  }\n}\n","import { ListGridAPI } from '../../ts-types'\nimport { createElement } from '../../internal/dom'\nimport { EventHandler } from '../../internal/EventHandler'\nimport style from '../../internal/style'\n\nimport tooltipElementCss from './TooltipElement.css'\n\nconst CLASS_NAME = 'kaka-grid__tooltip-element'\nconst CONTENT_CLASS_NAME = `${CLASS_NAME}__content`\nconst HIDDEN_CLASS_NAME = `${CLASS_NAME}--hidden`\nconst SHOWN_CLASS_NAME = `${CLASS_NAME}--shown`\n\nexport class TooltipElement<T> {\n  private _handler: EventHandler\n  private _rootElement: HTMLDivElement\n  private _messageElement: HTMLElement | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._rootElement = this.createTooltipDomElement()\n    this._messageElement = this.createTooltipMessageElement(\n      this._rootElement,\n      CONTENT_CLASS_NAME\n    )\n  }\n  public dispose() {\n    this.detach()\n\n    const rootElement = this._rootElement\n    if (rootElement.parentElement) {\n      rootElement.parentElement.removeChild(rootElement)\n    }\n\n    this._handler.dispose()\n    this._messageElement = null\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    content: string\n  ) {\n    const rootElement = this._rootElement\n    const messageElement = this._messageElement\n\n    rootElement.classList.remove(SHOWN_CLASS_NAME)\n    rootElement.classList.add(HIDDEN_CLASS_NAME)\n\n    if (messageElement) {\n      this.doSetContent(messageElement, content)\n    }\n\n    if (this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASS_NAME)\n      rootElement.classList.remove(HIDDEN_CLASS_NAME)\n    } else {\n      this._detach()\n    }\n  }\n  public move(grid: ListGridAPI<T>, col: number, row: number) {\n    const rootElement = this._rootElement\n    if (this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASS_NAME)\n      rootElement.classList.remove(HIDDEN_CLASS_NAME)\n    } else {\n      this._detach()\n    }\n  }\n  public detach() {\n    this._detach()\n  }\n  protected createTooltipDomElement() {\n    style.inject('tooltipElement', tooltipElementCss)\n    const rootElement = createElement('div', {\n      classList: [CLASS_NAME, HIDDEN_CLASS_NAME],\n    })\n    return rootElement\n  }\n  protected createTooltipMessageElement(\n    rootElement: HTMLDivElement,\n    cls: string\n  ): HTMLElement {\n    const messageElement = createElement('pre', { classList: [cls] })\n    rootElement.appendChild(messageElement)\n    return messageElement\n  }\n  protected doSetContent(element: Element, content: string) {\n    element.textContent = content\n  }\n  private _detach() {\n    const rootElement = this._rootElement\n    if (rootElement.parentElement) {\n      // rootElement.parentElement.removeChild(rootElement);\n      rootElement.classList.remove(SHOWN_CLASS_NAME)\n      rootElement.classList.add(HIDDEN_CLASS_NAME)\n    }\n  }\n  private _attachCell(grid: ListGridAPI<T>, col: number, row: number) {\n    const rootElement = this._rootElement\n    const { element, rect } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n\n    const top = rect.top\n    const right = rect.right\n    const bottom = rect.bottom\n    const left = rect.left\n    const width = rect.width\n\n    const frozenRowCount = grid.frozenRowCount\n    const frozenColCount = grid.frozenColCount\n    if (row >= frozenRowCount && frozenRowCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(col, frozenRowCount - 1)\n      )\n      if (bottom < frozenRect.bottom) {\n        return false // 超出范围\n      }\n    } else {\n      if (bottom < 0) {\n        return false // 超出范围\n      }\n    }\n    if (col >= frozenColCount && frozenColCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(frozenColCount - 1, row)\n      )\n      if (right < frozenRect.right) {\n        return false // 超出范围\n      }\n    } else {\n      if (right < 0) {\n        return false // 超出范围\n      }\n    }\n    const offsetHeight = element.offsetHeight\n    const offsetWidth = element.offsetWidth\n    if (offsetHeight < top) {\n      return false // 超出范围\n    }\n    if (offsetWidth < left) {\n      return false // 超出范围\n    }\n\n    const rootTop = bottom\n    const rootLeft = left + width / 2\n    rootElement.style.top = `${rootTop.toFixed()}px`\n    rootElement.style.left = `${rootLeft.toFixed()}px`\n    rootElement.style.minWidth = `${width.toFixed()}px`\n    if (rootElement.parentElement !== element) {\n      element.appendChild(rootElement)\n    }\n\n    const rootHeight = rootElement.offsetHeight\n    const rootWidth = rootElement.offsetWidth\n    // 底部越界\n    if (rootTop + rootHeight > offsetHeight) {\n      const bTop = top - rootHeight\n      rootElement.style.top = `${bTop.toFixed()}px`\n    }\n    // 左右越界\n    if (rootLeft - rootWidth / 2 < 0) {\n      // 左\n      const lLeft = rootWidth / 2\n      rootElement.style.left = `${lLeft.toFixed()}px`\n    } else if (rootLeft + rootWidth / 2 > offsetWidth) {\n      // 右\n      const rLeft = offsetWidth - rootWidth / 2\n      rootElement.style.left = `${rLeft.toFixed()}px`\n    }\n\n    return true\n  }\n}\n","import { BaseTooltip } from './BaseTooltip'\nimport { TooltipElement } from './internal/TooltipElement'\n\nexport class Tooltip<T> extends BaseTooltip<T> {\n  public createTooltipElementInternal(): TooltipElement<T> {\n    return new TooltipElement()\n  }\n}\n","import { createElement } from '../../internal/dom'\nimport { TooltipElement } from './TooltipElement'\n\nexport class HtmlTooltipElement<T> extends TooltipElement<T> {\n  protected createTooltipMessageElement(\n    rootElement: HTMLDivElement,\n    cls: string\n  ): HTMLElement {\n    const messageElement = createElement('div', { classList: [cls] })\n    rootElement.appendChild(messageElement)\n    return messageElement\n  }\n  protected doSetContent(element: Element, content: string) {\n    element.innerHTML = content\n  }\n}\n","import { BaseTooltip } from './BaseTooltip'\nimport { HtmlTooltipElement } from './internal/HtmlTooltipElement'\n\nexport class HtmlTooltip<T> extends BaseTooltip<T> {\n  public createTooltipElementInternal(): HtmlTooltipElement<T> {\n    return new HtmlTooltipElement()\n  }\n}\n","import { ListGridAPI, CellRange } from '../ts-types'\nimport { LG_EVENT_TYPE } from '../list-grid/LG_EVENT_TYPE'\nimport { BaseTooltip } from './BaseTooltip'\nimport { Tooltip } from './Tooltip'\nimport { HtmlTooltip } from './HtmlTooltip'\nimport { cellInRange } from '../internal/utils'\n\nconst TOOLTIP_INSTANCE_FACTORY: {\n  [key: string]: <T>(grid: ListGridAPI<T>) => BaseTooltip<T>\n} = {\n  'overflow-html': <T>(grid: ListGridAPI<T>) => {\n    return new HtmlTooltip(grid)\n  },\n  'overflow-text': <T>(grid: ListGridAPI<T>) => {\n    return new Tooltip(grid)\n  },\n}\n\nfunction getTooltipInstanceInfo<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number\n) {\n  // overflow text tooltip\n  const overflowText = grid.getCellOverflowText(col, row)\n  if (overflowText) {\n    const overflowType = grid.getCellOverflowType(col, row)\n    return {\n      content: overflowText,\n      type: overflowType || 'overflow-text',\n    }\n  }\n  return null\n}\n\ntype AttachInfo<T> = {\n  instance: BaseTooltip<T>\n  range: CellRange\n}\n\nclass TooltipHandler<T> {\n  private _grid: ListGridAPI<T>\n  private _tooltipInstances: { [type: string]: BaseTooltip<T> }\n  private _attachInfo?: AttachInfo<T> | null\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n    this._tooltipInstances = {}\n    this._bindGridEvent(grid)\n  }\n  public dispose(): void {\n    const tooltipInstances = this._tooltipInstances\n    for (const k in tooltipInstances) {\n      tooltipInstances[k].dispose()\n    }\n    this._attachInfo = null\n  }\n  private _attach(col: number, row: number): void {\n    const info = this._attachInfo\n    const instanceInfo = this._getTooltipInstanceInfo(col, row)\n    if (info && (!instanceInfo || info.instance !== instanceInfo.instance)) {\n      info.instance.detachTooltipElement()\n      this._attachInfo = null\n    }\n    if (!instanceInfo) {\n      return\n    }\n    const { instance } = instanceInfo\n    instance.attachTooltipElement(col, row, instanceInfo.content)\n    const range = this._grid.getCellRange(col, row)\n    this._attachInfo = { range, instance }\n  }\n  private _move(col: number, row: number) {\n    const info = this._attachInfo\n    if (!info || !cellInRange(info.range, col, row)) {\n      return\n    }\n    const { instance } = info\n    instance.moveTooltipElement(col, row)\n  }\n  private _detach() {\n    const info = this._attachInfo\n    if (!info) {\n      return\n    }\n    const { instance } = info\n    instance.detachTooltipElement()\n    this._attachInfo = null\n  }\n  private _isAttachCell(col: number, row: number) {\n    const info = this._attachInfo\n    if (!info) {\n      return false\n    }\n    return cellInRange(info.range, col, row)\n  }\n  private _bindGridEvent(grid: ListGridAPI<T>) {\n    grid.listen(LG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n      if (e.related) {\n        if (this._isAttachCell(e.col, e.row)) {\n          return\n        }\n      }\n      this._attach(e.col, e.row)\n    })\n    grid.listen(LG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n      if (e.related) {\n        if (this._isAttachCell(e.related.col, e.related.row)) {\n          return\n        }\n      }\n      this._detach()\n    })\n    grid.listen(LG_EVENT_TYPE.SELECTED_CELL, (e) => {\n      if (this._isAttachCell(e.col, e.row)) {\n        this._detach()\n      }\n    })\n    grid.listen(LG_EVENT_TYPE.SCROLL, () => {\n      const info = this._attachInfo\n      if (!info) {\n        return\n      }\n      this._move(info.range.start.col, info.range.start.row)\n    })\n    grid.listen(LG_EVENT_TYPE.CHANGED_VALUE, (e) => {\n      if (this._isAttachCell(e.col, e.row)) {\n        this._detach()\n        this._attach(e.col, e.row)\n      }\n    })\n  }\n  private _getTooltipInstanceInfo(\n    col: number,\n    row: number\n  ): {\n    instance: Tooltip<T>\n    type: string\n    content: string\n  } | null {\n    const grid = this._grid\n    const tooltipInstances = this._tooltipInstances\n    const info = getTooltipInstanceInfo(grid, col, row)\n    if (!info) {\n      return null\n    }\n    const type = info.type\n    const instance =\n      tooltipInstances[type] ||\n      (tooltipInstances[type] = TOOLTIP_INSTANCE_FACTORY[type](grid))\n    return {\n      instance,\n      type,\n      content: info.content,\n    }\n  }\n}\n\nexport default TooltipHandler\n","import {\n  CellAddress,\n  CellContext,\n  CellRange,\n  ColorPropertyDefine,\n  ColumnIconOption,\n  ColumnStyleOption,\n  EventListenerId,\n  FieldData,\n  FieldDef,\n  HeaderValues,\n  LayoutObjectId,\n  ListGridAPI,\n  ListGridEventHandlersEventMap,\n  ListGridEventHandlersReturnMap,\n  MaybePromise,\n  MaybePromiseOrUndef,\n  Message,\n  SortState,\n  ThemeDefine,\n  PasteCellEvent,\n  SelectedCellEvent,\n  SetPasteValueTestData,\n  ColumnTypeAPI,\n  ListGridSpanBodyOptions,\n} from './ts-types'\nimport { DrawCellInfo } from './ts-types-internal'\nimport {\n  ColumnData,\n  ColumnDefine,\n  HeaderDefine,\n  HeadersDefine,\n  LayoutDefine,\n  LayoutMapAPI,\n  MultiLayoutMap,\n  SimpleHeaderLayoutMap,\n} from './list-grid/layout-map'\nimport { LayoutMap } from './list-grid/LayoutMap'\nimport {\n  DrawGrid,\n  DrawGridConstructorOptions,\n  DrawGridProtected,\n} from './core/DrawGrid'\nimport {\n  isDef,\n  obj,\n  then,\n  isPromise,\n  getOrApply,\n  event,\n  cellEquals,\n  cellMerge,\n  omit,\n} from './internal/utils'\nimport { BaseColumn } from './columns/type/BaseColumn'\nimport { icons } from './internal/icons'\nimport { columns } from './columns'\nimport { themes } from './themes'\nimport { MessageHandler } from './columns/message/MessageHandler'\nimport { createCellRange } from './core/draw-grid/DrawCellContext'\nimport { CachedDataSource } from './data/CachedDataSource'\nimport { DataSource } from './data/DataSource'\nimport { GridCanvasHelper } from './GridCanvasHelper'\nimport { BaseAction } from './header/action/BaseAction'\nimport { BaseStyle as HeaderBaseStyle } from './header/style'\nimport { EventHandler } from './internal/EventHandler'\nimport Rect from './internal/Rect'\nimport { Theme } from './themes/theme'\nimport TooltipHandler from './tooltip/TooltipHandler'\nimport { LG_EVENT_TYPE } from './list-grid/LG_EVENT_TYPE'\nimport { parsePasteRangeBoxValues } from './internal/paste-utils'\nimport { toPx } from './internal/calc'\nimport { getInlineEditingState } from './columns/utils'\n// protected symbol\nimport { getListGridSymbol } from './internal/symbolManager'\n\nconst _ = getListGridSymbol()\n\n// private methods\nfunction _arrayEqual(a: any[], b: any[]): boolean {\n  if (a.length !== b.length) {\n    return false\n  } else {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false\n      }\n    }\n    return true\n  }\n}\nfunction _getCellValues<T>(\n  grid: ListGrid<T>,\n  startCol: number,\n  endCol: number,\n  row: number\n): any[] {\n  const values = []\n  if (startCol <= endCol) {\n    for (let col = startCol; col <= endCol; col++) {\n      values.push(_getCellValue(grid, col, row))\n    }\n  } else {\n    for (let col = startCol; col >= endCol; col--) {\n      values.push(_getCellValue(grid, col, row))\n    }\n  }\n  return values\n}\nfunction _getBodyCellRange<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): CellRange | null {\n  let cellRange = null\n  const { spanBodyOptions, layoutMap } = grid[_]\n  if (spanBodyOptions && row >= layoutMap.headerRowCount) {\n    let startRow = row\n    let endRow = row\n    const { startCol, endCol } = spanBodyOptions\n    if (\n      (startCol <= col && col <= endCol) ||\n      (endCol <= col && col <= startCol)\n    ) {\n      const values = _getCellValues(grid, startCol, col, row)\n      while (startRow > layoutMap.headerRowCount) {\n        const pValues = _getCellValues(grid, startCol, col, startRow - 1)\n        if (_arrayEqual(values, pValues)) {\n          startRow--\n        } else {\n          break\n        }\n      }\n      while (endRow < grid.rowCount) {\n        const nValues = _getCellValues(grid, startCol, col, endRow + 1)\n        if (_arrayEqual(values, nValues)) {\n          endRow++\n        } else {\n          break\n        }\n      }\n    }\n    cellRange = {\n      start: {\n        col,\n        row: Math.min(startRow, endRow),\n      },\n      end: {\n        col,\n        row: Math.max(startRow, endRow),\n      },\n    }\n  }\n  return cellRange\n}\nfunction _getCellRange<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): CellRange {\n  const { layoutMap } = grid[_]\n  let cellRange = layoutMap.getCellRange(col, row)\n  const bodyCellRange = _getBodyCellRange(grid, col, row)\n  if (bodyCellRange) {\n    cellRange = cellMerge(cellRange, bodyCellRange)\n  }\n  const p = {\n    get col() {\n      return col\n    },\n    get row() {\n      return row\n    },\n    cellRange,\n  }\n  grid.fireListeners(LG_EVENT_TYPE.CELL_RANGE, p)\n  return p.cellRange\n}\nfunction _updateRect<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number,\n  context: CellContext\n): void {\n  context.setRectFilter((rect) => {\n    let { left, right, top, bottom } = rect\n    const {\n      start: { col: startCol, row: startRow },\n      end: { col: endCol, row: endRow },\n    } = _getCellRange(grid, col, row)\n    for (let c = col - 1; c >= startCol; c--) {\n      left -= grid.getColWidth(c)\n    }\n    for (let c = col + 1; c <= endCol; c++) {\n      right += grid.getColWidth(c)\n    }\n    for (let r = row - 1; r >= startRow; r--) {\n      top -= grid.getRowHeight(r)\n    }\n    for (let r = row + 1; r <= endRow; r++) {\n      bottom += grid.getRowHeight(r)\n    }\n    return Rect.bounds(left, top, right, bottom)\n  })\n  context.range = _getCellRange(grid, col, row) // !!! TODO\n}\nfunction _getCellValue<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): FieldData {\n  let cellValue\n  if (row < grid[_].layoutMap.headerRowCount) {\n    const { caption } = grid[_].layoutMap.getHeader(col, row)\n    cellValue = typeof caption === 'function' ? caption() : caption\n  } else {\n    const { field } = grid[_].layoutMap.getBody(col, row)\n    cellValue = _getField(grid, field, row)\n  }\n  const p = {\n    get col() {\n      return col\n    },\n    get row() {\n      return row\n    },\n    cellValue,\n  }\n  grid.fireListeners(LG_EVENT_TYPE.CELL_VALUE, p)\n  return p.cellValue\n}\nfunction _setCellValue<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number,\n  value: any\n): MaybePromise<boolean> {\n  if (row < grid[_].layoutMap.headerRowCount) {\n    // nop\n    return false\n  } else {\n    const { field } = grid[_].layoutMap.getBody(col, row)\n    if (field == null) {\n      return false\n    }\n    const index = _getRecordIndexByRow(grid, row)\n    return grid[_].dataSource.setField(index, field, value)\n  }\n}\nfunction _getContentHidden<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): boolean {\n  let contentHidden = false\n  if (row >= grid[_].layoutMap.headerRowCount) {\n    const column = grid[_].layoutMap.getBody(col, row)\n    if (column && column.contentHidden) {\n      contentHidden = getOrApply(\n        column.contentHidden,\n        grid.getRowRecord(row) as any\n      )\n    }\n  }\n  return contentHidden\n}\nfunction _getCellMessage<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): FieldData {\n  if (row < grid[_].layoutMap.headerRowCount) {\n    return null\n  } else {\n    const column = grid[_].layoutMap.getBody(col, row)\n    if (!column || !column.message) {\n      return null\n    }\n    return _getField(grid, column.message as FieldDef<T>, row)\n  }\n}\nfunction _getHeaderField<T>(grid: ListGrid<T>, field: any) {\n  if (typeof field === 'function') {\n    return field(grid.headerValues)\n  } else {\n    return grid.headerValues.get(field)\n  }\n}\nfunction _hasHeaderField<T>(grid: ListGrid<T>, field: any): boolean {\n  let has = false\n  grid[_].layoutMap.headerObjects.forEach((cell) => {\n    if (cell.field === field) {\n      has = true\n    }\n  })\n  return has\n}\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>\n): ColumnIconOption<T>\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>[]\n): ColumnIconOption<T>[]\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[]\n): ColumnIconOption<T> | ColumnIconOption<T>[]\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[]\n): ColumnIconOption<T> | ColumnIconOption<T>[] {\n  if (Array.isArray(icon)) {\n    return icon.map((i) => _getCellIcon1(grid, i))\n  }\n  if (!obj.isObject(icon) || typeof icon === 'function') {\n    return _getHeaderField(grid, icon)\n  }\n  const retIcon: any = {}\n  const iconOpt: any = icon\n  icons.iconPropKeys.forEach((k) => {\n    if (iconOpt[k]) {\n      const f = _getHeaderField(grid, iconOpt[k])\n      if (isDef(f)) {\n        retIcon[k] = f\n      } else {\n        if (!_hasHeaderField(grid, iconOpt[k])) {\n          retIcon[k] = iconOpt[k]\n        }\n      }\n    }\n  })\n  return retIcon\n}\nfunction _getHeaderIcon<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[] | null {\n  const icon = grid[_].layoutMap.getHeader(col, row).icon\n  if (icon == null) {\n    return null\n  }\n  return _getCellIcon1(grid, icon)\n}\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>,\n  row: number\n): ColumnIconOption<T>\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>[],\n  row: number\n): ColumnIconOption<T>[]\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[],\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[]\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[],\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[] {\n  if (Array.isArray(icon)) {\n    return icon.map((i) => _getCellIcon0(grid, i, row))\n  }\n  if (!obj.isObject(icon) || typeof icon === 'function') {\n    return _getField(grid, icon, row)\n  }\n  const retIcon: any = {}\n  const iconOpt: any = icon\n  icons.iconPropKeys.forEach((k) => {\n    if (iconOpt[k]) {\n      const f = _getField(grid, iconOpt[k], row)\n      if (isDef(f)) {\n        retIcon[k] = f\n      } else {\n        if (!_hasField(grid, iconOpt[k], row)) {\n          retIcon[k] = iconOpt[k]\n        }\n      }\n    }\n  })\n  return retIcon\n}\nfunction _getCellIcon<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[] | null {\n  const icon = grid[_].layoutMap.getBody(col, row).icon\n  if (icon == null) {\n    return null\n  }\n  return _getCellIcon0(grid, icon, row)\n}\nfunction _getField<T>(\n  grid: ListGrid<T>,\n  field: FieldDef<T> | undefined,\n  row: number\n): FieldData {\n  if (!isDef(field)) {\n    return null\n  }\n\n  if (row < grid[_].layoutMap.headerRowCount) {\n    return null\n  } else {\n    const index = _getRecordIndexByRow(grid, row)\n    return grid[_].dataSource.getField(index, field)\n  }\n}\nfunction _hasField<T>(\n  grid: ListGrid<T>,\n  field: FieldDef<T>,\n  row: number\n): boolean {\n  if (!isDef(field)) {\n    return false\n  }\n  if (row < grid[_].layoutMap.headerRowCount) {\n    return false\n  } else {\n    const index = _getRecordIndexByRow(grid, row)\n    return grid[_].dataSource.hasField(index, field)\n  }\n}\nfunction _onDrawValue<T>(\n  grid: ListGrid<T>,\n  cellValue: MaybePromise<unknown>,\n  context: CellContext,\n  { col, row }: CellAddress,\n  style: ColumnStyleOption | null | undefined,\n  draw: BaseColumn<T, any>['onDrawCell']\n): MaybePromise<void> {\n  const helper = grid[_].gridCanvasHelper\n  const isEditing = !!getInlineEditingState(grid).cellRange\n\n  const drawCellBg = ({\n    bgColor,\n  }: { bgColor?: ColorPropertyDefine } = {}): void => {\n    const fillOpt = {\n      fillColor: bgColor,\n      isEditing,\n    }\n    // 绘制整个cell\n    helper.fillCellWithState(context, fillOpt)\n  }\n  const drawCellBorder = () => {\n    if (context.col === grid.frozenColCount - 1) {\n      // 固定列规则\n      const rect = context.getRect()\n      helper.drawWithClip(context, (ctx: CanvasRenderingContext2D) => {\n        const borderColor =\n          context.row >= grid.frozenRowCount\n            ? helper.theme.borderColor\n            : helper.theme.frozenRowsBorderColor\n\n        const borderColors = helper.toBoxArray(\n          helper.getColor(borderColor, context.col, context.row, ctx)\n        )\n        if (borderColors[1]) {\n          ctx.lineWidth = 1\n          ctx.strokeStyle = borderColors[1]\n          ctx.beginPath()\n          ctx.moveTo(rect.right - 2.5, rect.top)\n          ctx.lineTo(rect.right - 2.5, rect.bottom)\n          ctx.stroke()\n        }\n      })\n    }\n\n    helper.borderSelection(context, {\n      isEditing,\n      highlightBorderWidth: toPx(\n        grid.highlightBorderWidth,\n        grid[_].calcWidthContext\n      ),\n    }) // !!! TODO\n    // _borderWithState(grid, helper, context)\n  }\n  const clearCellBase = () => {\n    helper.clearCell(context)\n  }\n  const drawCellBase = ({\n    bgColor,\n  }: { bgColor?: ColorPropertyDefine } = {}): void => {\n    drawCellBg({ bgColor })\n    drawCellBorder()\n  }\n  const info: DrawCellInfo<T> = {\n    getRecord: () => grid.getRowRecord(row),\n    getIcon: () => _getCellIcon(grid, col, row),\n    getMessage: () => _getCellMessage(grid, col, row),\n    messageHandler: grid[_].messageHandler,\n    style,\n    clearCellBase,\n    drawCellBase,\n    drawCellBg,\n    drawCellBorder,\n    getCell: () => ({ col, row }),\n    getHeaderIcon: () => _getHeaderIcon(grid, col, row),\n    getContentHidden: () => _getContentHidden(grid, col, row),\n  }\n\n  return draw(cellValue, info, context, grid)\n}\n// function _borderWithState<T>(\n//   grid: ListGrid<T>,\n//   helper: GridCanvasHelper<T>,\n//   context: CellContext\n// ): void {\n//   const { col, row } = context;\n//   const sel = grid.selection.select;\n//   const { layoutMap } = grid[_];\n\n//   const rect = context.getRect();\n//   const option: { borderColor?: ColorsPropertyDefine; lineWidth?: number } = {};\n\n//   const selRecordIndex = layoutMap.getRecordIndexByRow(sel.row);\n//   const selId = layoutMap.getCellId(sel.col, sel.row);\n//   function isSelectCell(col: number, row: number): boolean {\n//     if (col === sel.col && row === sel.row) {\n//       return true;\n//     }\n//     return (\n//       selId != null &&\n//       layoutMap.getCellId(col, row) === selId &&\n//       layoutMap.getRecordIndexByRow(row) === selRecordIndex\n//     );\n//   }\n\n//   // 边线\n//   if (isSelectCell(col, row)) {\n//     option.borderColor = helper.theme.highlightBorderColor;\n//     option.lineWidth = 2;\n//     helper.border(context, option);\n//   } else {\n//     option.lineWidth = 1;\n//     // header color\n//     const isFrozenCell = grid.isFrozenCell(col, row);\n//     if (isFrozenCell?.row) {\n//       option.borderColor = helper.theme.frozenRowsBorderColor;\n//     }\n//     helper.border(context, option);\n\n//     // 额外处理\n//     if (col > 0 && isSelectCell(col - 1, row)) {\n//       // 右边被选中\n//       helper.drawBorderWithClip(context, ctx => {\n//         const borderColors = helper.toBoxArray(\n//           helper.getColor(\n//             helper.theme.highlightBorderColor,\n//             sel.col,\n//             sel.row,\n//             ctx\n//           )\n//         );\n//         if (borderColors[1]) {\n//           ctx.lineWidth = 1;\n//           ctx.strokeStyle = borderColors[1];\n//           ctx.beginPath();\n//           ctx.moveTo(rect.left - 0.5, rect.top);\n//           ctx.lineTo(rect.left - 0.5, rect.bottom);\n//           ctx.stroke();\n//         }\n//       });\n//     } else if (row > 0 && isSelectCell(col, row - 1)) {\n//       // 顶部被选中\n//       helper.drawBorderWithClip(context, ctx => {\n//         const borderColors = helper.toBoxArray(\n//           helper.getColor(\n//             helper.theme.highlightBorderColor,\n//             sel.col,\n//             sel.row,\n//             ctx\n//           )\n//         );\n//         if (borderColors[0]) {\n//           ctx.lineWidth = 1;\n//           ctx.strokeStyle = borderColors[0];\n//           ctx.beginPath();\n//           ctx.moveTo(rect.left, rect.top - 0.5);\n//           ctx.lineTo(rect.right, rect.top - 0.5);\n//           ctx.stroke();\n//         }\n//       });\n//     }\n//   }\n// }\n\nfunction _refreshHeader<T>(grid: ListGrid<T>): void {\n  const protectedSpace = grid[_]\n  if (protectedSpace.headerEvents) {\n    protectedSpace.headerEvents.forEach((id: number) => grid.unlisten(id))\n  }\n\n  const headerEvents: EventListenerId[] = (protectedSpace.headerEvents = [])\n\n  headerEvents.forEach((id) => grid.unlisten(id))\n\n  let layoutMap: LayoutMap<T>\n  if (\n    protectedSpace.layout &&\n    (!Array.isArray(protectedSpace.layout) || protectedSpace.layout.length > 0)\n  ) {\n    layoutMap = protectedSpace.layoutMap = new LayoutMap(\n      new MultiLayoutMap(protectedSpace.layout)\n    )\n  } else {\n    layoutMap = protectedSpace.layoutMap = new LayoutMap(\n      new SimpleHeaderLayoutMap(protectedSpace.header ?? [])\n    )\n  }\n  layoutMap.hiddenHeader = protectedSpace.hiddenHeader\n\n  if (!grid.hiddenHeader) {\n    layoutMap.headerObjects.forEach((cell) => {\n      const ids = cell.headerType.bindGridEvent(grid, cell.id)\n      headerEvents.push(...ids)\n      if (cell.style) {\n        if (cell.style instanceof HeaderBaseStyle) {\n          const id = cell.style.listen(\n            HeaderBaseStyle.EVENT_TYPE.CHANGE_STYLE,\n            () => {\n              grid.invalidate()\n            }\n          )\n          headerEvents.push(id)\n        }\n      }\n      if (cell.action) {\n        if (cell.action instanceof BaseAction) {\n          const ids = cell.action.bindGridEvent(grid, cell.id)\n          headerEvents.push(...ids)\n        }\n      }\n    })\n  }\n  layoutMap.columnObjects.forEach((col) => {\n    if (col.action) {\n      const ids = col.action.bindGridEvent(grid, col.id)\n      headerEvents.push(...ids)\n    }\n    if (col.columnType) {\n      const ids = col.columnType.bindGridEvent(grid, col.id)\n      headerEvents.push(...ids)\n    }\n    if (col.style) {\n      if (col.style instanceof columns.style.BaseStyle) {\n        const id = col.style.listen(\n          columns.style.EVENT_TYPE.CHANGE_STYLE,\n          () => {\n            grid.invalidate()\n          }\n        )\n        headerEvents.push(id)\n      }\n    }\n  })\n  for (let col = 0; col < layoutMap.columnWidths.length; col++) {\n    const column = layoutMap.columnWidths[col]\n    const { width, minWidth, maxWidth, disableResize } = column\n    if (width && (width > 0 || typeof width === 'string')) {\n      grid.setColWidth(col, width)\n    }\n    if (minWidth && (minWidth > 0 || typeof minWidth === 'string')) {\n      grid.setMinColWidth(col, minWidth)\n    }\n    if (maxWidth && (maxWidth > 0 || typeof maxWidth === 'string')) {\n      grid.setMaxColWidth(col, maxWidth)\n    }\n    if (typeof disableResize === 'boolean') {\n      grid.setColDisableResize(col, disableResize)\n    }\n  }\n  if (!grid.hiddenHeader) {\n    const headerRowHeight = grid[_].headerRowHeight\n    for (let row = 0; row < layoutMap.headerRowCount; row++) {\n      const height = Array.isArray(headerRowHeight)\n        ? headerRowHeight[row]\n        : headerRowHeight\n      if (height && height > 0) {\n        grid.setRowHeight(row, height)\n      }\n    }\n  }\n  grid.colCount = layoutMap.colCount\n  _refreshRowCount(grid)\n  grid.frozenRowCount = layoutMap.headerRowCount\n}\nfunction _refreshRowCount<T>(grid: ListGrid<T>): void {\n  const { layoutMap } = grid[_]\n  grid.rowCount =\n    grid[_].dataSource.length * layoutMap.bodyRowCount +\n    layoutMap.headerRowCount\n}\nfunction _tryWithUpdateDataSource<T>(\n  grid: ListGrid<T>,\n  fn: (grid: ListGrid<T>) => void\n): void {\n  if (grid[_].dataSourceEventIds) {\n    grid[_].dataSourceEventIds.forEach((id: number) => grid[_].handler.off(id))\n  }\n\n  fn(grid)\n\n  grid[_].dataSourceEventIds = [\n    grid[_].handler.on(\n      grid[_].dataSource as any,\n      DataSource.EVENT_TYPE.UPDATED_LENGTH,\n      () => {\n        _refreshRowCount(grid)\n        grid.selection.fireSelectedEvent()\n        grid.invalidate()\n      }\n    ),\n    grid[_].handler.on(\n      grid[_].dataSource as any,\n      DataSource.EVENT_TYPE.UPDATED_ORDER,\n      () => {\n        grid.selection.fireSelectedEvent()\n        grid.invalidate()\n      }\n    ),\n    grid[_].handler.on(\n      grid[_].dataSource as any,\n      DataSource.EVENT_TYPE.REFRESH_DATA,\n      () => {\n        grid.selection.fireSelectedEvent()\n        grid.invalidate()\n      }\n    ),\n  ]\n}\nfunction _setRecords<T>(grid: ListGrid<T>, records: T[] = []): void {\n  _tryWithUpdateDataSource(grid, () => {\n    grid[_].records = records\n    const newDataSource = (grid[_].dataSource = CachedDataSource.ofArray(\n      records\n    ))\n    grid.addDisposable(newDataSource)\n  })\n}\nfunction _setDataSource<T>(grid: ListGrid<T>, dataSource: DataSource<T>): void {\n  _tryWithUpdateDataSource(grid, () => {\n    if (dataSource) {\n      if (dataSource instanceof DataSource) {\n        grid[_].dataSource = dataSource\n      } else {\n        const newDataSource = (grid[_].dataSource = new CachedDataSource(\n          dataSource\n        ))\n        grid.addDisposable(newDataSource)\n      }\n    } else {\n      grid[_].dataSource = DataSource.EMPTY\n    }\n    grid[_].records = null\n  })\n}\nfunction _getRecordIndexByRow<T>(grid: ListGrid<T>, row: number): number {\n  const { layoutMap } = grid[_]\n  return layoutMap.getRecordIndexByRow(row)\n}\nfunction _onRangePaste<T>(\n  this: ListGrid<T>,\n  text: string,\n  test: (data: SetPasteValueTestData<T>) => boolean = (): boolean => true\n): void {\n  const { layoutMap } = this[_]\n  const selectionRange = this.selection.range\n  const { start } = this.getCellRange(\n    selectionRange.start.col,\n    selectionRange.start.row\n  )\n  const { end } = this.getCellRange(\n    selectionRange.end.col,\n    selectionRange.end.row\n  )\n  const values = parsePasteRangeBoxValues(text)\n\n  const pasteRowCount = Math.min(\n    Math.max(end.row - start.row + 1, values.rowCount),\n    this.rowCount - start.row\n  )\n  const pasteColCount = Math.min(\n    Math.max(end.col - start.col + 1, values.colCount),\n    this.colCount - start.col\n  )\n\n  let hasEditable = false\n  const actionColumnsBox: ColumnData<T>[][] = []\n  for (let bodyRow = 0; bodyRow < layoutMap.bodyRowCount; bodyRow++) {\n    const actionColumnsRow: ColumnData<T>[] = []\n    actionColumnsBox.push(actionColumnsRow)\n    for (let offsetCol = 0; offsetCol < pasteColCount; offsetCol++) {\n      const body = layoutMap.getBody(\n        start.col + offsetCol,\n        bodyRow + layoutMap.headerRowCount\n      )\n      actionColumnsRow[offsetCol] = body\n      if (!hasEditable && body.action?.editable) {\n        hasEditable = true\n      }\n    }\n  }\n  if (!hasEditable) {\n    return\n  }\n\n  const startRow = layoutMap.getRecordStartRowByRecordIndex(\n    layoutMap.getRecordIndexByRow(start.row)\n  )\n  const startRowOffset = start.row - startRow\n\n  let duplicate: { [key: number]: boolean } = {}\n  let actionRow = startRowOffset\n  let valuesRow = 0\n  for (let offsetRow = 0; offsetRow < pasteRowCount; offsetRow++) {\n    let valuesCol = 0\n    for (let offsetCol = 0; offsetCol < pasteColCount; offsetCol++) {\n      const { action, id } = actionColumnsBox[actionRow][offsetCol]\n      if (!duplicate[id as number] && action?.editable) {\n        duplicate[id as number] = true\n        const col = start.col + offsetCol\n        const row = start.row + offsetRow\n        const cellValue = values.getCellValue(valuesCol, valuesRow)\n\n        then(this.getRowRecord(row), (record) => {\n          then(_getCellValue(this, col, row), (oldValue) => {\n            if (\n              test({\n                grid: this,\n                record: record as T,\n                col,\n                row,\n                value: cellValue,\n                oldValue,\n              })\n            ) {\n              action.onPasteCellRangeBox(this, { col, row }, cellValue)\n            }\n          })\n        })\n      }\n      valuesCol++\n      if (valuesCol >= values.colCount) {\n        valuesCol = 0\n      }\n    }\n    actionRow++\n    if (actionRow >= layoutMap.bodyRowCount) {\n      actionRow = 0\n      duplicate = {}\n    }\n    valuesRow++\n    if (valuesRow >= values.rowCount) {\n      valuesRow = 0\n    }\n  }\n\n  const newEnd = {\n    col: start.col + pasteColCount - 1,\n    row: start.row + pasteRowCount - 1,\n  }\n  this.selection.range = {\n    start,\n    end: newEnd,\n  }\n  this.invalidateCellRange(this.selection.range)\n}\n\nfunction _onRangeDelete<T>(this: ListGrid<T>): void {\n  const { layoutMap } = this[_]\n  const selectionRange = this.selection.range\n  const { start } = this.getCellRange(\n    selectionRange.start.col,\n    selectionRange.start.row\n  )\n  const { end } = this.getCellRange(\n    selectionRange.end.col,\n    selectionRange.end.row\n  )\n\n  const deleteRowCount = Math.min(\n    end.row - start.row + 1,\n    this.rowCount - start.row\n  )\n  const deleteColCount = Math.min(\n    end.col - start.col + 1,\n    this.colCount - start.col\n  )\n\n  let hasEditable = false\n  const actionColumnsBox: ColumnData<T>[][] = []\n  for (let bodyRow = 0; bodyRow < layoutMap.bodyRowCount; bodyRow++) {\n    const actionColumnsRow: ColumnData<T>[] = []\n    actionColumnsBox.push(actionColumnsRow)\n    for (let offsetCol = 0; offsetCol < deleteColCount; offsetCol++) {\n      const body = layoutMap.getBody(\n        start.col + offsetCol,\n        bodyRow + layoutMap.headerRowCount\n      )\n      actionColumnsRow[offsetCol] = body\n      if (!hasEditable && body.action?.editable) {\n        hasEditable = true\n      }\n    }\n  }\n  if (!hasEditable) {\n    return\n  }\n\n  const startRow = layoutMap.getRecordStartRowByRecordIndex(\n    layoutMap.getRecordIndexByRow(start.row)\n  )\n  const startRowOffset = start.row - startRow\n\n  let duplicate: { [key: number]: boolean } = {}\n  let actionRow = startRowOffset\n  for (let offsetRow = 0; offsetRow < deleteRowCount; offsetRow++) {\n    for (let offsetCol = 0; offsetCol < deleteColCount; offsetCol++) {\n      const { action, id } = actionColumnsBox[actionRow][offsetCol]\n      if (!duplicate[id as number] && action?.editable) {\n        duplicate[id as number] = true\n        const col = start.col + offsetCol\n        const row = start.row + offsetRow\n\n        then(this.getRowRecord(row), (_record) => {\n          then(_getCellValue(this, col, row), (_oldValue) => {\n            action.onDeleteCellRangeBox(this, { col, row })\n          })\n        })\n      }\n    }\n    actionRow++\n    if (actionRow >= layoutMap.bodyRowCount) {\n      actionRow = 0\n      duplicate = {}\n    }\n  }\n\n  this.invalidateCellRange(selectionRange)\n}\n\n// end private methods\n\ninterface ListGridProtected<T> extends DrawGridProtected {\n  dataSourceEventIds: number[]\n  headerEvents: number[]\n  layoutMap: LayoutMapAPI<T>\n  headerValues: HeaderValues\n  tooltipHandler: TooltipHandler<T>\n  messageHandler: MessageHandler<T>\n  theme: Theme | null\n  headerRowHeight: number | number[]\n  header: HeadersDefine<T>\n  layout: LayoutDefine<T>\n  gridCanvasHelper: GridCanvasHelper<T>\n  sortState: SortState\n  hiddenHeader: boolean\n  dataSource: DataSource<T>\n  records?: T[] | null\n  allowRangePaste: boolean\n  handler: EventHandler\n  disabled: boolean | ((record: T) => boolean)\n  readOnly: boolean | ((record: T) => boolean)\n  spanBodyOptions?: ListGridSpanBodyOptions\n}\n\ninterface ListGridConstructorOptions<T> extends DrawGridConstructorOptions {\n  /**\n   * Simple header property\n   */\n  header?: HeadersDefine<T>\n  /**\n   * Layout property\n   */\n  layout?: LayoutDefine<T>\n  /**\n   * Header row height(s)\n   */\n  headerRowHeight?: number[] | number\n  /**\n   * Hidden header\n   */\n  hiddenHeader?: boolean\n  /**\n   * Records data source\n   */\n  dataSource?: DataSource<T>\n  /**\n   * Simple records data\n   */\n  records?: T[]\n  /**\n   * Theme\n   */\n  theme?: ThemeDefine | string\n  /**\n   * If set to true to allow pasting of ranges. default false\n   */\n  allowRangePaste?: boolean\n  /**\n   * @deprecated Cannot be used with ListGrid.\n   * @override\n   */\n  rowCount?: undefined\n  /**\n   * @deprecated Cannot be used with ListGrid.\n   * @override\n   */\n  colCount?: undefined\n  /**\n   * @deprecated Cannot be used with ListGrid.\n   * @override\n   */\n  frozenRowCount?: undefined\n  disabled?: boolean | ((record: T) => boolean)\n  readonly?: boolean | ((record: T) => boolean)\n  spanBodyOptions?: ListGridSpanBodyOptions\n  monitorResize?: boolean\n}\n\n/**\n * ListGrid\n */\nexport class ListGrid<T> extends DrawGrid implements ListGridAPI<T> {\n  public static get EVENT_TYPE(): typeof LG_EVENT_TYPE {\n    return LG_EVENT_TYPE\n  }\n  private [_]: ListGridProtected<T>\n  /**\n   * constructor\n   * @param options - Constructor options\n   */\n  public constructor(options: ListGridConstructorOptions<T> = {}) {\n    super(omit(options, ['colCount', 'rowCount', 'frozenRowCount']))\n    this[_] = {} as any\n    const protectedSpace = this[_]\n    protectedSpace.disabled = options.disabled || false\n    protectedSpace.readOnly = options.readonly || false\n    protectedSpace.header = options.header || []\n    protectedSpace.layout = options.layout || []\n    protectedSpace.headerRowHeight = options.headerRowHeight || []\n    protectedSpace.hiddenHeader = !!options.hiddenHeader\n    protectedSpace.spanBodyOptions = options.spanBodyOptions || undefined\n    protectedSpace.handler = new EventHandler()\n    protectedSpace.sortState = {\n      col: -1,\n      order: undefined,\n      row: -1,\n    }\n    protectedSpace.gridCanvasHelper = new GridCanvasHelper(this)\n    protectedSpace.theme = themes.of(options.theme)\n    protectedSpace.messageHandler = new MessageHandler(\n      this,\n      (col: number, row: number): Message => _getCellMessage(this, col, row)\n    )\n    protectedSpace.tooltipHandler = new TooltipHandler(this)\n    if (options.dataSource) {\n      _setDataSource(this, options.dataSource)\n    } else {\n      _setRecords(this, options.records)\n    }\n    protectedSpace.allowRangePaste = options.allowRangePaste ?? false\n    _refreshHeader(this)\n    this.selection.fireSelectedEvent()\n    this.invalidate()\n    if (!isDef(options.monitorResize) || options.monitorResize === true) {\n      protectedSpace.handler.on(window, 'resize', () => this.resize())\n    }\n  }\n  /**\n   * Dispose the grid instance.\n   * @returns\n   */\n  public dispose(): void {\n    const protectedSpace = this[_]\n    protectedSpace.handler.dispose()\n    protectedSpace.messageHandler.dispose()\n    protectedSpace.tooltipHandler.dispose()\n    super.dispose()\n  }\n\n  /**\n   * Define of the header with the given data.\n   * <pre>\n   * column options\n   * -----\n   * caption: header caption\n   * field: field name\n   * width: column width\n   * minWidth: column min width\n   * maxWidth: column max width\n   * disableResize: column disable resize\n   * icon: icon name\n   * message: message key name\n   * columnType: column type\n   * action: column action\n   * style: column style\n   * headerType: header type\n   * headerStyle: header style\n   * headerAction: header action\n   * headerField: header field name\n   * sort: define sort setting\n   * -----\n   *\n   * multiline header\n   * -----\n   * caption: header caption\n   * columns: columns define\n   * -----\n   * </pre>\n   */\n  public get header() {\n    return this[_].header\n  }\n  public set header(header) {\n    this[_].header = header\n    _refreshHeader(this)\n    const oldRange = this.selection.range\n    const newRange = this.updateSelectionRange(this.selection.range)\n    if (\n      oldRange.start.col !== newRange.start.col ||\n      oldRange.end.col !== newRange.end.col ||\n      oldRange.start.row !== newRange.start.row ||\n      oldRange.end.row !== newRange.end.row\n    ) {\n      this.selection._forceUpdateRange()\n      this.selection.fireSelectedEvent()\n    }\n  }\n  /**\n   * The define of the layout.\n   */\n  get layout(): LayoutDefine<T> {\n    return this[_].layout\n  }\n  set layout(layout) {\n    this[_].layout = layout\n    _refreshHeader(this)\n  }\n  /**\n   * Get the row count per record\n   */\n  get recordRowCount(): number {\n    return this[_].layoutMap.bodyRowCount\n  }\n  /**\n   * Records.\n   */\n  public get records(): T[] | null {\n    return this[_].records || null\n  }\n  public set records(records) {\n    if (records == null) {\n      return\n    }\n    _setRecords(this, records)\n    _refreshRowCount(this)\n    this.invalidate()\n  }\n  /**\n   * Data source.\n   */\n  public get dataSource(): DataSource<T> {\n    return this[_].dataSource\n  }\n  public set dataSource(dataSource) {\n    _setDataSource(this, dataSource)\n    _refreshRowCount(this)\n    this.invalidate()\n  }\n  /**\n   * Theme.\n   */\n  public get theme(): Theme | null {\n    return this[_].theme\n  }\n  public set theme(theme) {\n    this[_].theme = themes.of(theme)\n    this.invalidate()\n  }\n  /**\n   * If set to true to allow pasting of ranges.\n   */\n  get allowRangePaste(): boolean {\n    return this[_].allowRangePaste\n  }\n  set allowRangePaste(allowRangePaste) {\n    this[_].allowRangePaste = allowRangePaste\n  }\n  /**\n   * Sort state.\n   */\n  public get sortState() {\n    return this[_].sortState\n  }\n  public set sortState(sortState) {\n    const oldState = this.sortState\n    let oldField\n    if (oldState.col >= 0 && oldState.row >= 0) {\n      oldField = this.getHeaderField(oldState.col, oldState.row)\n    }\n\n    const newState = (this[_].sortState = isDef(sortState)\n      ? sortState\n      : {\n          col: -1,\n          row: -1,\n          order: undefined,\n        })\n\n    let newField\n    if (newState.col >= 0 && newState.row >= 0) {\n      newField = this.getHeaderField(newState.col, newState.row)\n    }\n\n    // bind header value\n    if (isDef(oldField) && oldField !== newField) {\n      this.setHeaderValue(oldState.col, oldState.row, undefined)\n    }\n    if (isDef(newField)) {\n      this.setHeaderValue(newState.col, newState.row, newState.order)\n    }\n  }\n  /**\n   * Header values.\n   */\n  public get headerValues(): HeaderValues {\n    return this[_].headerValues || (this[_].headerValues = new Map())\n  }\n  public set headerValues(headerValues) {\n    this[_].headerValues = headerValues || new Map()\n  }\n  /**\n   * Whether to hide the column header.\n   */\n  public get hiddenHeader() {\n    return this[_].hiddenHeader\n  }\n  public set hiddenHeader(hidden) {\n    this[_].hiddenHeader = hidden\n    _refreshHeader(this)\n    this.invalidate()\n  }\n  /**\n   * Disabled.\n   */\n  public get disabled() {\n    return this[_].disabled\n  }\n  public set disabled(disabled) {\n    this[_].disabled = disabled\n  }\n  /**\n   * Read Only.\n   */\n  public get readOnly() {\n    return this[_].readOnly\n  }\n  public set readOnly(readOnly) {\n    this[_].readOnly = readOnly\n  }\n  public get readonly() {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    return this.readOnly\n  }\n  public set readonly(readOnly) {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    this.readOnly = readOnly\n  }\n  /**\n   * Span Body\n   */\n  public get spanBodyOptions(): ListGridSpanBodyOptions | null {\n    return this[_].spanBodyOptions ?? null\n  }\n  public set spanBodyOptions(spanBodyOptions) {\n    this[_].spanBodyOptions = spanBodyOptions ?? undefined\n  }\n  /**\n   * Get the field of the given column index.\n   * @param col - The column index.\n   * @param row - The row index.\n   * @returns The field object.\n   */\n  public getField(col: number, row: number): FieldDef<T> | undefined {\n    return this[_].layoutMap.getBody(\n      col,\n      row ?? this[_].layoutMap.headerRowCount\n    ).field\n  }\n  /**\n   * Get the column define of the given column index.\n   * @param col - The column index.\n   * @param row - The row index.\n   * @returns The column define object.\n   */\n  public getColumnDefine(col: number, row: number): ColumnDefine<T> {\n    return this[_].layoutMap.getBody(\n      col,\n      row ?? this[_].layoutMap.headerRowCount\n    ).define\n  }\n  public getColumnType(col: number, row: number): ColumnTypeAPI {\n    return this[_].layoutMap.getBody(col, row).columnType\n  }\n  /**\n   * Get the header field of the given header cell.\n   * @param col - The column index.\n   * @param row - The header row index.\n   * @returns The field object.\n   */\n  public getHeaderField(col: number, row: number) {\n    const hd = this[_].layoutMap.getHeader(col, row)\n    return hd.field\n  }\n  /**\n   * Get the header define of the given header cell.\n   * @param col - The column index.\n   * @param row - The header row index.\n   * @returns The header define object.\n   */\n  public getHeaderDefine(col: number, row: number): HeaderDefine<T> {\n    const hd = this[_].layoutMap.getHeader(col, row)\n    return hd.define\n  }\n  /**\n   * Get the column of the given column index.\n   * @param col - The column index.\n   * @returns The field object.\n   */\n  public getColumn(col: number, row?: number): ColumnData<T> {\n    return this[_].layoutMap.getBody(col, row || 0)\n  }\n  /**\n   * Get the record of the given row index.\n   * @param row - The row index.\n   * @returns The record.\n   */\n  public getRowRecord(row: number): MaybePromiseOrUndef<T> {\n    if (row < this[_].layoutMap.headerRowCount) {\n      return undefined\n    } else {\n      return this[_].dataSource.get(_getRecordIndexByRow(this, row))\n    }\n  }\n  /**\n   * Get the record index of the given row index.\n   * @param row -  The row index.\n   * @returns The record index.\n   */\n  public getRecordIndexByRow(row: number): number {\n    return _getRecordIndexByRow(this, row)\n  }\n  /**\n   * Get the record index of the given row index.\n   * @param row - The row index.\n   * @returns The record index.\n   */\n  public getRowRecordIndex(row: number): number {\n    window.console.warn(\n      \"'getRowRecordIndex' is deprecated, please use 'getRecordIndexByRow' instead\"\n    )\n    return this.getRecordIndexByRow(row)\n  }\n  /**\n   * Gets the row index starting at the given record index.\n   * @param index - The record index.\n   */\n  public getRecordStartRowByRecordIndex(index: number): number {\n    return this[_].layoutMap.getRecordStartRowByRecordIndex(index)\n  }\n  /**\n   * Get the column index of the given field.\n   * @param field - The field.\n   * @returns The column index.\n   */\n  public getColumnIndexByField(field: FieldDef<T>): number | null {\n    const range = this.getCellRangeByField(field, 0)\n    return range?.start.col ?? null\n  }\n  /**\n   * Get the column index of the given field.\n   * @param field - The field.\n   * @param index - The record index\n   * @returns The column index.\n   */\n  public getCellRangeByField(\n    field: FieldDef<T>,\n    index: number\n  ): CellRange | null {\n    const { layoutMap } = this[_]\n    const colObj = layoutMap.columnObjects.find((col) => col.field === field)\n    if (colObj) {\n      const layoutRange = layoutMap.getBodyLayoutRangeById(colObj.id)\n      const startRow = layoutMap.getRecordStartRowByRecordIndex(index)\n      return {\n        start: {\n          col: layoutRange.start.col,\n          row: startRow + layoutRange.start.row,\n        },\n        end: {\n          col: layoutRange.end.col,\n          row: startRow + layoutRange.end.row,\n        },\n      }\n    }\n    return null\n  }\n  /**\n   * Focus the cell.\n   * @param field - The field.\n   * @param index - The record index\n   * @returns\n   */\n  public focusGridCell(field: any, index: number) {\n    const {\n      start: { col: startCol, row: startRow },\n      end: { col: endCol, row: endRow },\n    } = this.selection.range\n\n    const newFocus = this.getCellRangeByField(field, index)?.start\n    if (newFocus == null) {\n      return\n    }\n    this.focusCell(newFocus.col, newFocus.row)\n    this.selection.select = newFocus\n    this.invalidateGridRect(startCol, startRow, endCol, endRow)\n    this.invalidateCell(newFocus.col, newFocus.row)\n  }\n  /**\n   * Scroll to where cell is visible.\n   * @param field - The field.\n   * @param index - The record index\n   * @returns\n   */\n  public makeVisibleGridCell(field: any, index: number) {\n    const cell = this.getCellRangeByField(field, index)?.start\n    this.makeVisibleCell(\n      cell?.col ?? 0,\n      cell?.row ?? this[_].layoutMap.headerRowCount\n    )\n  }\n  /**\n   * Select cell range\n   */\n  public selectCellRange(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number\n  ): void {\n    this.focusCell(startCol, startRow)\n    this.selection.range = createCellRange(startCol, startRow, endCol, endRow)\n    const {\n      start: { col: newStartCol, row: newStartRow },\n      end: { col: newEndCol, row: newEndRow },\n    } = this.selection.range\n    this.invalidateGridRect(newStartCol, newStartRow, newEndCol, newEndRow)\n  }\n  public getGridCanvasHelper(): GridCanvasHelper<T> {\n    return this[_].gridCanvasHelper\n  }\n  /**\n   * Get cell range information for a given cell.\n   * @param col - column index of the cell\n   * @param row - row index of the cell\n   * @returns cell range info\n   */\n  public getCellRange(col: number, row: number): CellRange {\n    return _getCellRange(this, col, row)\n  }\n  /**\n   * Get header range information for a given cell.\n   * @param col - column index of the cell\n   * @param row - row index of the cell\n   * @returns cell range info\n   */\n  public getHeaderCellRange(col: number, row: number) {\n    window.console.warn(\n      \"'getHeaderCellRange' is deprecated, please use 'getCellRange' instead\"\n    )\n    return this.getCellRange(col, row)\n  }\n  protected getCopyCellValue(\n    col: number,\n    row: number,\n    range?: CellRange\n  ): string {\n    const cellRange = _getCellRange(this, col, row)\n    const startCol = range\n      ? Math.max(range.start.col, cellRange.start.col)\n      : cellRange.start.col\n    const startRow = range\n      ? Math.max(range.start.row, cellRange.start.row)\n      : cellRange.start.row\n    if (startCol !== col || startRow !== row) {\n      return ''\n    }\n    const { layoutMap } = this[_]\n    let value = _getCellValue(this, col, row)\n    if (row >= layoutMap.headerRowCount) {\n      const columnType = layoutMap.getBody(col, row).columnType\n      value = columnType.getCopyCellValue(value, this, { col, row }) ?? value\n      value = columnType.convertCopyValue(value, { col, row }, this)\n    }\n    return value\n  }\n  protected onDrawCell(col: number, row: number, context: CellContext) {\n    const { layoutMap } = this[_]\n\n    let draw\n    let style\n    if (row < layoutMap.headerRowCount) {\n      const hd = layoutMap.getHeader(col, row)\n      draw = hd.headerType.onDrawCell\n      ;({ style } = hd)\n    } else {\n      const column = layoutMap.getBody(col, row)\n      draw = column.columnType.onDrawCell\n      ;({ style } = column)\n    }\n    _updateRect(this, col, row, context)\n    const cellValue = _getCellValue(this, col, row)\n    return _onDrawValue(\n      this,\n      cellValue,\n      context,\n      {\n        col,\n        row,\n      },\n      style,\n      draw\n    )\n  }\n  public doGetCellValue(\n    col: number,\n    row: number,\n    valueCallback: (value: any) => void\n  ) {\n    if (row < this[_].layoutMap.headerRowCount) {\n      // nop\n      return false\n    } else {\n      const value = _getCellValue(this, col, row)\n      if (isPromise(value)) {\n        // 在延迟期间被忽略\n        return false\n      }\n      valueCallback(value)\n    }\n    return true\n  }\n  public doChangeValue(\n    col: number,\n    row: number,\n    changeValueCallback: (before: any) => any\n  ) {\n    if (row < this[_].layoutMap.headerRowCount) {\n      // nop\n      return false\n    } else {\n      const record = this.getRowRecord(row)\n      if (isPromise(record)) {\n        // 在延迟期间被忽略\n        return false\n      }\n      const before = _getCellValue(this, col, row)\n      if (isPromise(before)) {\n        // 在延迟期间被忽略\n        return false\n      }\n      const after = changeValueCallback(before)\n      if (after === undefined) {\n        return false\n      }\n      return then(_setCellValue(this, col, row, after), (ret: any) => {\n        if (ret) {\n          const { field } = this[_].layoutMap.getBody(col, row)\n          this.fireListeners(LG_EVENT_TYPE.CHANGED_VALUE, {\n            col,\n            row,\n            field: field as FieldDef<T>,\n            record: record as T,\n            value: after,\n            oldValue: before,\n          })\n        }\n        return ret\n      })\n    }\n  }\n  public doSetPasteValue(\n    text: string,\n    test?: (data: SetPasteValueTestData<T>) => boolean\n  ): void {\n    _onRangePaste.call(\n      this,\n      text,\n      test as (data: SetPasteValueTestData<T>) => boolean\n    )\n  }\n  public getHeaderValue(col: number, row: number): any | undefined {\n    const field = this.getHeaderField(col, row)\n    return this.headerValues.get(field)\n  }\n  public setHeaderValue(col: number, row: number, newValue: any): void {\n    const field = this.getHeaderField(col, row)\n\n    const oldValue = this.headerValues.get(field)\n    this.headerValues.set(field, newValue)\n\n    this.fireListeners(LG_EVENT_TYPE.CHANGED_HEADER_VALUE, {\n      col,\n      field,\n      oldValue,\n      row,\n      value: newValue,\n    })\n  }\n  public getLayoutCellId(col: number, row: number): LayoutObjectId {\n    return this[_].layoutMap.getCellId(col, row)\n  }\n  public completeEdit() {\n    this.focus()\n  }\n  protected bindEventsInternal() {\n    this.listen(LG_EVENT_TYPE.SELECTED_CELL, (e: SelectedCellEvent) => {\n      if (e.selected) {\n        const beforeRange = _getCellRange(this, e.before.col, e.before.row)\n        const {\n          start: { col: beforeStartCol, row: beforeStartRow },\n          end: { col: beforeEndCol, row: beforeEndRow },\n        } = beforeRange\n        if (\n          beforeStartCol !== beforeEndCol ||\n          beforeStartRow !== beforeEndRow\n        ) {\n          this.invalidateGridRect(\n            beforeStartCol,\n            beforeStartRow,\n            beforeEndCol,\n            beforeEndRow\n          )\n        }\n\n        const range = _getCellRange(this, e.col, e.row)\n        const {\n          start: { col: startCol, row: startRow },\n          end: { col: endCol, row: endRow },\n        } = range\n        if (startCol !== endCol || startRow !== endRow) {\n          this.invalidateGridRect(startCol, startRow, endCol, endRow)\n        }\n      }\n    })\n    this.listen(LG_EVENT_TYPE.PASTE_CELL, (e: PasteCellEvent) => {\n      if (!this[_].allowRangePaste) {\n        return\n      }\n      const { start, end } = this.selection.range\n      if (!e.multi && cellEquals(start, end)) {\n        return\n      }\n      const { layoutMap } = this[_]\n\n      if (start.row < layoutMap.headerRowCount) {\n        return\n      }\n      event.cancel(e.event)\n      _onRangePaste.call(this, e.normalizeValue)\n    })\n    this.listen(LG_EVENT_TYPE.DELETE_CELL, (e) => {\n      const { start } = this.selection.range\n      const { layoutMap } = this[_]\n\n      if (start.row < layoutMap.headerRowCount) {\n        return\n      }\n      event.cancel(e.event)\n      _onRangeDelete.call(this)\n    })\n  }\n  protected getMoveLeftColByKeyDownInternal({ col, row }: CellAddress): number {\n    const {\n      start: { col: startCol },\n    } = _getCellRange(this, col, row)\n    col = startCol\n    return super.getMoveLeftColByKeyDownInternal({ col, row })\n  }\n  protected getMoveRightColByKeyDownInternal({\n    col,\n    row,\n  }: CellAddress): number {\n    const {\n      end: { col: endCol },\n    } = _getCellRange(this, col, row)\n    col = endCol\n    return super.getMoveRightColByKeyDownInternal({ col, row })\n  }\n  protected getMoveUpRowByKeyDownInternal({ col, row }: CellAddress): number {\n    const {\n      start: { row: startRow },\n    } = _getCellRange(this, col, row)\n    row = startRow\n    return super.getMoveUpRowByKeyDownInternal({ col, row })\n  }\n  protected getMoveDownRowByKeyDownInternal({ col, row }: CellAddress): number {\n    const {\n      end: { row: endRow },\n    } = _getCellRange(this, col, row)\n    row = endRow\n    return super.getMoveDownRowByKeyDownInternal({ col, row })\n  }\n  protected getOffsetInvalidateCells(): number {\n    return 1\n  }\n  protected getCopyRangeInternal(range: CellRange): CellRange {\n    const { start } = this.getCellRange(range.start.col, range.start.row)\n    const { end } = this.getCellRange(range.end.col, range.end.row)\n    return { start, end }\n  }\n  protected getAttachCellsAreaInternal(range: CellRange) {\n    const rect = super.getAttachCellsAreaInternal(range)\n    const {\n      start: { col, row },\n    } = this.getCellRange(range.start.col, range.start.row)\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      column.columnType.reviseAttachCellsArea(rect, row, this)\n    }\n    return rect\n  }\n  protected getAttachCellsPaddingInternal(\n    range: CellRange\n  ): [number, number, number, number] {\n    const padding = super.getAttachCellsPaddingInternal(range)\n    const {\n      start: { col, row },\n    } = this.getCellRange(range.start.col, range.start.row)\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      column.columnType.reviseAttachCellsPadding(padding, row, this)\n    }\n    return padding\n  }\n  protected getFocusRectInternal(col: number, row: number) {\n    const rect: Rect = super.getFocusRectInternal(col, row)\n    if (this[_] && row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      column.columnType.reviseFocusRect(rect, row, this)\n    }\n    return rect\n  }\n  protected getCellOverflowTextInternal(cell: CellAddress) {\n    const col = cell.col\n    const row = cell.row\n    let text = ''\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      const tooltip = column.tooltip\n      const record: any = this.getRowRecord(row)\n      if (record) {\n        if (typeof tooltip === 'function') {\n          text = tooltip.call(this, record)\n        } else if (typeof tooltip === 'string') {\n          text = record[tooltip]\n        }\n      }\n    } else {\n      const hd = this[_].layoutMap.getHeader(col, row)\n      if (hd) {\n        const tooltip = hd.tooltip\n        if (typeof tooltip === 'function') {\n          text = tooltip.call(this, {\n            cell: { col, row },\n            field: this.getHeaderField(col, row),\n          })\n        } else if (typeof tooltip === 'string') {\n          text = tooltip\n        }\n      }\n    }\n    return text || ''\n  }\n  protected getCellOverflowTypeInternal(cell: CellAddress) {\n    const col = cell.col\n    const row = cell.row\n    let type = ''\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      const tooltipType = column.tooltipType\n      const record = this.getRowRecord(row)\n      if (record) {\n        if (typeof tooltipType === 'function') {\n          type = tooltipType.call(this, record)\n        } else if (typeof tooltipType === 'string') {\n          type = tooltipType\n        }\n      }\n    } else {\n      const hd = this[_].layoutMap.getHeader(col, row)\n      if (hd) {\n        const tooltipType = hd.tooltipType\n        if (typeof tooltipType === 'function') {\n          type = tooltipType.call(this, {\n            cell: { col, row },\n            field: this.getHeaderField(col, row),\n          })\n        } else if (typeof tooltipType === 'string') {\n          type = tooltipType\n        }\n      }\n    }\n    return type || ''\n  }\n  protected getDefaultRowHeight() {\n    return (\n      (this[_] && this[_].gridCanvasHelper.theme.defaultRowHeight) ||\n      super.getDefaultRowHeight()\n    )\n  }\n  protected getDefaultColWidth() {\n    return (\n      (this[_] && this[_].gridCanvasHelper.theme.defaultColWidth) ||\n      super.getDefaultColWidth()\n    )\n  }\n  protected getHighlightBorderWidth() {\n    return (\n      (this[_] && this[_].gridCanvasHelper.theme.highlightBorderWidth) ||\n      super.getHighlightBorderWidth()\n    )\n  }\n  protected updateSelectionRange(range: CellRange) {\n    const oldStartCol = range.start.col\n    const oldStartRow = range.start.row\n    const oldEndCol = range.end.col\n    const oldEndRow = range.end.row\n    const startCol = Math.min(range.start.col, range.end.col)\n    const startRow = Math.min(range.start.row, range.end.row)\n    const endCol = Math.max(range.start.col, range.end.col)\n    const endRow = Math.max(range.start.row, range.end.row)\n    let newStartCol = startCol\n    let newStartRow = startRow\n    let newEndCol = endCol\n    let newEndRow = endRow\n    for (let row = startRow; row <= endRow; row++) {\n      for (let col = startCol; col <= endCol; col++) {\n        const r = this.getCellRange(col, row)\n        newStartCol = Math.min(r.start.col, newStartCol)\n        newStartRow = Math.min(r.start.row, newStartRow)\n        newEndCol = Math.max(r.end.col, newEndCol)\n        newEndRow = Math.max(r.end.row, newEndRow)\n      }\n    }\n    if (newStartCol < startCol) {\n      if (range.start.col > range.end.col) {\n        range.end.col = newStartCol\n      } else {\n        range.start.col = newStartCol\n      }\n    }\n    if (newStartRow < startRow) {\n      if (range.start.row > range.end.row) {\n        range.end.row = newStartRow\n      } else {\n        range.start.row = newStartRow\n      }\n    }\n    if (newEndCol > endCol) {\n      if (range.start.col > range.end.col) {\n        range.start.col = newEndCol\n      } else {\n        range.end.col = newEndCol\n      }\n    }\n    if (newEndRow > endRow) {\n      if (range.start.row > range.end.row) {\n        range.start.row = newEndRow\n      } else {\n        range.end.row = newEndRow\n      }\n    }\n    if (\n      oldStartCol !== range.start.col ||\n      oldStartRow !== range.start.row ||\n      oldEndCol !== range.end.col ||\n      oldEndRow !== range.end.row\n    ) {\n      range = this.updateSelectionRange(range)\n    }\n    return range\n  }\n  protected getDefaultFont(): string {\n    return this[_].gridCanvasHelper.theme.font\n  }\n  protected getDefaultUnderlayBackgroundColor(): string {\n    return this[_].gridCanvasHelper.theme.underlayBackgroundColor\n  }\n  protected getDefaultBorderColor(): string {\n    return this[_].gridCanvasHelper.theme.gridBorderColor\n  }\n  protected getDefaultBorderWidth(): number {\n    return this[_].gridCanvasHelper.theme.gridBorderWidth\n  }\n  fireListeners<TYPE extends keyof ListGridEventHandlersEventMap<T>>(\n    type: TYPE,\n    ...event: ListGridEventHandlersEventMap<T>[TYPE]\n  ): ListGridEventHandlersReturnMap[TYPE][] {\n    return super.fireListeners(type as any, ...event)\n  }\n}\n","import { IconDefine } from './ts-types'\nimport { Theme } from './themes/theme'\nimport { icons as iconPlugins } from './plugins/icons'\nimport { themes as themePlugins } from './plugins/themes'\n\nfunction registerPlugin<T>(\n  obj: { [key: string]: T },\n  name: string,\n  value: T\n): T {\n  const old = obj[name]\n  obj[name] = value\n  return old\n}\n\nfunction registerPlugins<T>(\n  obj: { [key: string]: T },\n  values: { [key: string]: T }\n): void {\n  for (const k in values) {\n    obj[k] = values[k]\n  }\n}\n\nfunction theme(name: string, theme?: Theme): Theme {\n  if (theme != null) {\n    return registerPlugin(themePlugins, name, theme)\n  } else {\n    return themePlugins[name]\n  }\n}\n\nfunction icon(name: string, icon?: IconDefine): IconDefine {\n  if (icon != null) {\n    return registerPlugin(iconPlugins, name, icon)\n  } else {\n    return iconPlugins[name]\n  }\n}\n\nfunction icons(icons: { [key: string]: IconDefine }): void {\n  return registerPlugins(iconPlugins, icons)\n}\n\nexport const register = {\n  theme,\n  icon,\n  icons,\n}\n","import { IconDefine } from './ts-types'\nimport { columns as _columns } from './columns'\nimport { core as _core } from './core'\nimport { data as _data } from './data'\nimport { headers as _headers } from './headers'\nimport { themes as _themes } from './themes'\nimport { tools as _tools } from './tools'\nimport { ListGrid as _ListGrid } from './ListGrid'\nimport { GridCanvasHelper as _GridCanvasHelper } from './GridCanvasHelper'\nimport { register as _register } from './register'\nimport { svgIcons } from './icons'\nimport { str } from './internal/utils'\n\n/**\n * Kaka Grid\n */\nconst _kakaGrid: {\n  version: string\n  core: typeof _core\n  tools: typeof _tools\n  ListGrid: typeof _ListGrid\n  columns: typeof _columns\n  data: typeof _data\n  headers: typeof _headers\n  themes: typeof _themes\n  GridCanvasHelper: typeof _GridCanvasHelper\n  readonly icons: {\n    [key: string]: IconDefine\n  }\n  template: typeof str.template\n  register: typeof _register\n} = {\n  version: 'VERSION',\n\n  core: _core,\n  tools: _tools,\n\n  // impl Grids\n  ListGrid: _ListGrid,\n\n  // objects\n  columns: _columns,\n  data: _data,\n  headers: _headers,\n  themes: _themes,\n\n  // helper\n  GridCanvasHelper: _GridCanvasHelper,\n  get icons() {\n    return svgIcons.get()\n  },\n  template: str.template,\n\n  // plugin registers\n  register: _register,\n}\n\nnamespace kakaGrid {\n  export const version: string = _kakaGrid.version\n  export class ListGrid<T> extends _kakaGrid.ListGrid<T> {}\n  export const core: typeof _kakaGrid.core = _kakaGrid.core\n  export const tools: typeof _kakaGrid.tools = _kakaGrid.tools\n  export const columns: typeof _kakaGrid.columns = _kakaGrid.columns\n  export const data: typeof _kakaGrid.data = _kakaGrid.data\n  export const headers: typeof _kakaGrid.headers = _kakaGrid.headers\n  export const themes: typeof _kakaGrid.themes = _kakaGrid.themes\n  export const GridCanvasHelper: typeof _kakaGrid.GridCanvasHelper =\n    _kakaGrid.GridCanvasHelper\n  export const icons: {\n    [key: string]: IconDefine\n  } = _kakaGrid.icons\n  export const template: typeof str.template = _kakaGrid.template\n  export const register: typeof _kakaGrid.register = _kakaGrid.register\n}\n\nexport default kakaGrid\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__spreadArrays","il","r","k","a","j","jl","__makeTemplateObject","cooked","raw","defineProperty","value","arrayFind","arrayFindIndex","isNode","window","array","find","arr","predicate","index","findIndex","undefined","isDef","data","isDefString","_a","Chrome","Edge","Firefox","IE","Safari","ua","navigator","userAgent","toLowerCase","exec","indexOf","analyzeUserAgent","each","obj","fn","key","defaults","source","defs","keys","result","push","get","val","set","configurable","enumerable","extend","_i","args","forEach","isDescendantElement","root","target","parentElement","applyChainSafe","names","getChainSafe","name","getOrApply","isPromise","Boolean","then","callback","cellEquals","col","row","cellInRange","range","start","end","browser","setReadonly","isObject","str","endsWith","searchString","position","subjectString","toString","isFinite","Math","floor","lastIndex","lastIndexOf","genChars","re","next","res","genWords","escape","html","replace","template","strings","values","dict","Number","isInteger","Infinity","join","event","getMouseButtons","e","buttons","which","button","getKeyCode","keyCode","isTouchEvent","changedTouches","cancel","preventDefault","stopPropagation","stopImmediatePropagation","style","toBoxArray","isArray","emptyFn","toggleValue","getBooleanOptionOfRecord","option","grid","record","getRowRecord","isDisabledRecord","disabled","isReadOnlyRecord","readOnly","DG_EVENT_TYPE","CLICK_CELL","DBLCLICK_CELL","DBLTAP_CELL","MOUSEDOWN_CELL","MOUSEUP_CELL","SELECTED_CELL","MOUSE_SELECTED_START","MOUSE_SELECTED_END","KEYDOWN","MOUSEMOVE_CELL","MOUSEENTER_CELL","MOUSELEAVE_CELL","MOUSEOVER_CELL","MOUSEOUT_CELL","CONTEXTMENU_CELL","INPUT_CELL","PASTE_CELL","DELETE_CELL","EDITABLEINPUT_CELL","MODIFY_STATUS_EDITABLEINPUT_CELL","RESIZE_COLUMN","SCROLL","FOCUS_GRID","BLUR_GRID","CAN_DRAG_SELECTION","DRAG_SELECTION","CLICK_UNDERLAY","DBLCLICK_UNDERLAY","DBLTAP_UNDERLAY","COPY","CUT","PASTE","KEY_ENTER","KEY_UP","KEY_DOWN","getCheckColumnStateId","getRadioColumnStateId","getSwitchColumnStateId","getButtonColumnStateId","getColumnActionStateId","getInlineInputEditorStateId","getInlineTextareaEditorStateId","getInlineLookupEditorStateId","getCheckHeaderStateId","getSwitchHeaderStateId","COLUMN_ACTION_STATE_ID","bindCellClickAction","cellId","action","mouseOver","mouseMove","mouseOut","isTarget","getLayoutCellId","actionState","listen","getElement","cursor","mouseActive","bindCellKeyAction","_b","acceptKeys","keyboardOptions","moveCellOnEnter","sel","selection","select","options","_disabled","BaseAction","onChangeDisabledInternal","_super","_this","_action","Action","_grid","state","getState","cell","mouseRelativePos","_getMouseRelativePoint","mouseActiveCell","getCellRange","invalidateCellRange","_readOnly","readonly","Editor","onChangeReadOnlyInternal","console","warn","_inAttachCellArea","bool","relativePos","rect","getAttachCellsArea","inPoint","x","y","BaseInputEditor","allowOpen","onOpenCellInternal","_keyCode","_e","_cellId","open","input","onInputCellInternal","multi","selectionRange","normalizeValue","shiftKey","onBeforeKeydownInternal","ctrlKey","metaKey","stopCellMoving","onChangeSelectCellInternal","selected","onGridScrollInternal","input_1","baseRect","getCellRect","rangeRect","getCellRangeRect","top","parseFloat","toFixed","left","width","height","onSetInputAttrsInternal","doChangeValue","_disableInput","disableInput","_disableAction","disableAction","BaseActionInput","isDisabledAction","isDisabledInput","ids","bindGridEvent","concat","inputValue","onActionInputCellInternal","onActionOpenCellInternal","Error","isDisabled","cubicBezier","x2","y2","x3","y3","step","c","abs","EASINGS","linear","easeIn","easeOut","easeInOut","raf","requestAnimationFrame","setTimeout","now","Date","animate","duration","easing","startedAt","easingFn","canceledFlg","createAnim","resolve","reject","anim","point","Promise","BaseCheckEditor","cellKey","block","ret","onChange_1","elapsed","selRange","pasteValue","trim","doGetCellValue","BUTTON_COLUMN_STATE_ID","ButtonAction","CHECK_COLUMN_STATE_ID","CheckEditor","SWITCH_COLUMN_STATE_ID","SwitchEditor","createElement","tagName","_c","classList","text","element","document","add","textContent","innerHTML","empty","dom","firstChild","removeChild","toNodeList","arg","result_1","node","nodeType","nodeName","slice","childNodes","toNode","appendHtml","inner","appendChild","disableFocus","el","dataset","disableBeforeTabIndex","tabIndex","children","isFocusable","findPrevSiblingFocusable","previousSibling","findNextSiblingFocusable","nextSibling","eventHandlerNextId","EventHandler","type","listener","addEventListener","id","_listeners","on","off","list","removeEventListener","clear","styleInject","css","styleElement","getElementById","HTMLStyleElement","head","getElementsByTagName","styleSheet","cssText","createTextNode","SCROLLBAR_SIZE","isPerfectScrollbar","PerfectScrollbar","initDocument","outer","visibility","overflow","body","w1","offsetWidth","w2","clientWidth","getScrollBarWidth","getScrollBarSize","inject","setInputValue","handler_1","dispose_1","dispose","once","INLINE_EDITING_STATE_ID","getInlineEditingState","toBoolean","setInputAttrs","editor","fixedType","_handler","_input","_bindInputEvents","InlineInputElement","detach","_beforePropEditor","_enabledMouseWheel","enabledMouseWheel","handler","remove","font","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","toJSON","valueAsDate","setInlineInputValue","_activeData","safeInputFocus","tryWithOffEvents","focus","selectionStart","selectionEnd","createTextRange","collapse","moveEnd","moveStart","cellRange","_attaching","gridFocus","_isActive","activeData","value_1","test","isNaN","getInlineInputValue","stopPropagationOnly","contains","_onKeydownEnter","_onKeydownTab","onKeyDownMove","moveCellOnTab","INLINE_INPUT_EDITOR_STATE_ID","globalInlineInputElement","globalInlineInputBindGridCount","attachInput","addDisposable","attach","detachInput","_classList","_type","InlineInputEditor","enabled","_cell","_selected","CLASSNAME_ILE","INPUT_CLASSNAME_ILE","DROPDOWN_CLASSNAME_ILE","DROPDOWN_HIDDEN_CLASSNAME_ILE","DROPDOWN_SHOWN_CLASSNAME_ILE","DROPDOWN_RIGHT_CLASSNAME_ILE","DROPDOWN_BOTTOM_CLASSNAME_ILE","DROPDOWN_ITEM_CLASSNAME_ILE","DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE","highlight","search","RegExp","_lookup","ul","createLookupElement","querySelector","_dropdown","InlineLookupElement","_editor","lookup","lookupRecords","_unbindLookupProps","valueField","captionField","filterFields","field","emptyRecord","beforeRecord","gridRecord","records","filter","lookupRecords_1","captionValue","allowOtherInput","dropdownInfo","disableFilterRecords","disableFilterSort","dropdownEmptyTemplate","dropdownTemplate","valueType","JSON","stringify","setLookupInputValue","_onInputValue","_bindLookupProps","lookup_1","_beforeValue","changeOnlyWhenAllowOtherInput","parse","getLookupInputValue","dropdown","item","findDropdownItemParents","_selectNode","onKeyupAndPress","items","querySelectorAll","before","_onInputValueChange","after","beforeNode","firstMatchedNode","isFirstChange","filterInfo","_filterRecords","isAll","filterRecords","itemNodes","isEmptyValue","saveValue","displayValue","otherLi","__isEmpty","li","__isBefore","__isMatched","__value","offset","scrollHeight","selectedNode","maxHeight","offsetTop","offsetHeight","clientHeight","offsetLeft","isSelected","scrollTop","allRecords","otherRecords","filterRecord","matched","matchValue","otherRecords_1","INLINE_LOOKUP_EDITOR_STATE_ID","globalInlineLookupElement","globalInlineLookupBindGridCount","attachLookupInput","rs","detachLookupInput","doChangeLookupValue","me","_record","_records","_valueField","_valueType","_captionField","_filterFields","_allowOtherInput","_disableFilterRecords","_disableFilterSort","disableDropdown","_filter","_dropdownTemplate","_dropdownEmptyTemplate","InlineLookupEditor","normalize","map","o","label","caption","normalizeToFn","CLASSNAME_IME","ITEM_CLASSNAME_IME","HIDDEN_CLASSNAME_IME","SHOWN_CLASSNAME_IME","EMPTY_ITEM_CLASSNAME_IME","findItemParents","attachElement","menu","autoWidth","lineHeight","openMenu","emptyItemEl","valueItemEl","setAttribute","span","optionToLi","focusEl","focusIndex","allHeight","transformOrigin","ceil","menuClientRect","getBoundingClientRect","scaleDiff","orgMenuTop","menuTop","menuBottom","winBottom","innerHeight","_menu","_bindMenuEvents","InlineMenuElement","owner","_focus","_col","_row","closeMenu","valueIndex","parseInt","getAttribute","_doChangeValue","ICON_PROP_KEYS","doms","props","toSimpleArray","iconProps","workData","count","prop","max","toPropArray","normarize","isIconKey","className","tagProps","beforeStyle","defaultView","getComputedStyle","content","getPropertyValue","substr","quoted","split","part","quote","color","isLiga","getIconProps","icons","toNormarizeArray","icon","iconPropKeys","_left","_top","_width","_height","_right","Rect","right","bottom","rect1","rect2","bounds","min","_bottom","x0","x1","y0","y1","another","loadIcons","context","helper","argIcon","toCurrentContext","iconList","testFontLoad","getActionTextPadding","appearance","textPadding","toBoxPixelArray","drawActionButton","stateId","textBaseline","active","getRect","iconPadding","path","cellOverflowText","getCellOverflowText","textAlign","setCellOverflowText","customDraw","draw","opt_1","getSelection","drawWithClip","ctx","isAttachArea","cellStyle","innerBox","reviseAttachCellsArea","reviseAttachCellsPadding","drawAttachArea","attachArea","_","eventTargetNextId","listeners","listenerData","EventTarget","splice","unlisten","defaultBaseStyle","defaultBaseStdStyle","defaultBaseCheckStyle","defaultStyle","defaultButtonStyle","defaultCheckStyle","defaultSwitchStyle","defaultDateStyle","BASE_STYLE_EVENT_TYPE","CHANGE_STYLE","bgColor","_bgColor","BaseStyle","doChangeStyle","fireListeners","_textAlign","_textBaseline","BaseStdStyle","uncheckBgColor","checkBgColor","borderColor","_uncheckBgColor","_checkBgColor","_borderColor","BaseCheckStyle","_color","_font","_padding","_inputPadding","inputPadding","_textOverflow","textOverflow","_appearance","Style","_buttonBgColor","buttonBgColor","ButtonStyle","CheckStyle","SwitchStyle","defaultDrawStyle","defaultIconStyle","defaultImageStyle","defaultLookupStyle","defaultMenuStyle","defaultMultilineTextStyle","defaultNumberStyle","defaultPercentCompleteBarStyle","defaultRadioStyle","defaultTreeStyle","adjustDateTimeStyleOption","DateStyle","DrawStyle","IconStyle","_imageSizing","imageSizing","_margin","margin","ImageStyle","LookupStyle","MenuStyle","_lineHeight","_autoWrapText","autoWrapText","_lineClamp","lineClamp","MultilineTextStyle","NumberStyle","DEFAULT_BAR_COLOR","num","_barColor","barColor","_barBgColor","barBgColor","_barHeight","barHeight","PercentCompleteBarStyle","checkColor","uncheckBorderColor","checkBorderColor","_checkColor","_uncheckBorderColor","_checkBorderColor","RadioStyle","adjustTreeStyleOption","_lineColor","lineColor","_buttonColor","buttonColor","_buttonBorderColor","buttonBorderColor","_linkColor","linkColor","TreeStyle","EVENT_TYPE","of","columnStyle","StyleClassDef","DEFAULT","COLUMN_FADEIN_STATE_ID","getFadinState","cells","_generateFadinPointAction","drawInternal","drawCellBase","stateKey","opacity","cellState","getContext","globalAlpha","fadinMgr","activeFadeins","f","onDrawCell","bind","_convert","convert","_convertCopy","convertCopy","_hidden","hidden","_fadeinWhenCallbackInPromise","fadeinWhenCallbackInPromise","BaseColumn","_rect","cellValue","info","getRecord","clearCellBase","getCell","getContentHidden","getGridCanvasHelper","actStyle","styleContents.of","StyleClass","drawEditingInternal","dragged","promise","start_1","getDrawRect","time","_currentContext","isContentHidden","doConvertInternal","drawMessageInternal","getMessage","isFadeinWhenCallbackInPromise","configure","message","messageHandler","drawCellMessage","convertCopyInternal","convertInternal","_context","_style","_helper","_info","contentHidden","_options","menuItems","MenuColumn","clone","getIcon","_convertInternal","columnUtils.loadIcons","basePadding","options_1","INLINE_MENU_EDITOR_STATE_ID","globalInlineMenuElement","globalInlineMenuBindGridCount","attachMenu","detachMenu","_autoWidth","InlineMenuEditor","pasteOpt","_pasteDataToOptionValue","_textToOptionValue","columnType","getColumnType","hasOptions","pasteValue_1","normalizePasteValueStr","captionOpt","opt","inputAutoHeight","h","minHeight","InlineTextAreaElement","minWidth","setTextInputValue","getTextInputValue","altKey","setRangeText","INLINE_TEXTAREA_EDITOR_STATE_ID","globalInlineTextAreaElement","InlineTextAreaEditor","RADIO_COLUMN_STATE_ID","defaultGroupResolver","offsetRow","getRecordStartRowByRecordIndex","getRecordIndexByRow","rowCount","recordRowCount","targetRow","frozenRowCount","_group","group","RadioEditor","_state","flag","actionCell","CLASSNAME_SDE","INPUT_CLASSNAME_SDE","HIDDEN_CLASSNAME_SDE","SHOWN_CLASSNAME_SDE","_dialog","createDialogElement","_bindDialogEvents","SmallDialogInputElement","dialog","helperText","unbindProps","errorMessage","bindProps","_validate","inputOnly","inputValidator","msg","validator","mess","SMALL_DIALOG_INPUT_EDITOR_STATE_ID","globalSmallDialogInputElement","globalSmallDialogInputBindGridCount","attachDialogInput","detachDialogInput","_helperText","_inputValidator","_validator","SmallDialogInputEditor","ImmutableCheckEditor","ImmutableRadioEditor","ImmutableInputEditor","ImmutableSwitchEditor","ACTIONS","CHECK","RADIO","INPUT","SWITCH","defaultBranchGraphStyle","_draw","BaseCheckColumn","utils.customDraw","animElapsedTime","doDrawInternal","DEFAULT_BRANCH_COLORS","_name","_branchColors","branchColors","_circleSize","circleSize","_branchLineWidth","branchLineWidth","_mergeStyle","mergeStyle","BranchGraphStyle","fromIndex","toIndex","colorIndex","commit","lines","tag","BranchPoint","l","fromLines","toLines","mergeLines","BRANCH_GRAPH_COLUMN_STATE_ID","joinLine","timeline","branchIndex","reverse","BranchLine","calcCommand","command","timelineData","cmd","from","branch","to","branches","fromTargetIndex","fromTL","findBranchRootIndex","branchTargetFromIndex","branchPoint","targetLine","merge","froms","fromTargetLine","pop","commitMerge","commitTag","calcBranchesInfo","dataSource","allData","getField","dataIndex_1","getAllColumnData","defaultDateTimeFormat","_start","_cache","cache","BranchGraphColumn","Map","has","_value","_d","upLineIndexKey","downLineIndexKey","radius","branchXPoints","w","tl","textWidth","measureText","calcBranchXPoints","line","downLineIndex","pointIndex","upLineIndex","reduce","sort","strokeStyle","lineWidth","lineCap","beginPath","upX","upRect","getCellRelativeRect","upY","moveTo","bezierCurveTo","lineTo","downX","downRect","downY","stroke","renderMerge","fillStyle","arc","PI","fill","closePath","fillText","_cellStyle","Column","columnUtils.reviseAttachCellsArea","columnUtils.reviseAttachCellsPadding","columnUtils.customDraw","columnUtils.getActionTextPadding","columnUtils.drawActionButton","columnUtils.drawAttachArea","_caption","_linkButton","linkButton","ButtonColumn","utils.loadIcons","getTextRect","theme","shadow","blur","offsetY","CheckColumn","checkbox","SwitchColumn","switch","_format","format","DateColumn","Intl","DateTimeFormat","fmt","defaultFormat","DrawColumn","utils.drawActionButton","_tagName","_className","_content","_iconWidth","iconWidth","IconColumn","icon_1","repeatArray","fontSizeCache","getFontSize","fontName","bk","em","calcStartPosition","_f","_g","_h","_j","cacheSize","_list","_map","_cacheSize","LRUCache","idx","shift","allCache","getCacheOrLoad0","src","error","img","Image","onload","onerror","url","loadImage","put","getCacheOrLoad","cacheName","ImageColumn","copy","utils.getActionTextPadding","size","maxWidth","newWidth","newHeight","calcKeepAspectRatioSize","pos","drawImage","lookupColumnPromiseDrawingCol","LookupColumn","_mergeRecords","_convertInternalValue","v","_lookupMap","recs","recs_1","MultilineTextColumn","multiline","multilineText","NumberColumn","NumberFormat","_min","_max","_formatter","formatter","PercentCompleteBarColumn","sValue","rate","barMaxWidth","MARGIN","barTop","barLeft","barSize","createArrayPromise","plist","all","setArrayField","compare","old","createArray","r1","r2","isFieldAssessor","DATA_SOURCE_EVENT_TYPE","REFRESH_DATA","UPDATED_LENGTH","UPDATED_ORDER","UPDATE_LENGTH","getValue","setPromiseBack","maybePromiseValue","promiseValue","fieldGet","ss","setField","fieldSet","obj_1","length_1","_getIndex","sortedIndexMap","mapIndex","_get","_length","_source","DataSource","getOriginal","_sortedIndexMap","getOriginalField","hasOriginalField","setOriginalField","order","orderFn","v1","v2","dummyPromise_1","catch","sort\n            .sortPromise","rel","setLength","refreshInternal","recordPromiseCallBackInternal","fieldPromiseCallBackInternal","_index","_field","results","_initLevel","ds","level","keyField","_levelMap","children_1","_pIdMap","_initLast","_lastMap","_expandAll","_expandMap","children_2","_getExpandRecords","children_3","_getCollapseRecordCount","_expand","silent","_collapseAll","children_4","_parentKey","_idMap","parentKeyField","_rebuildTree","parentKey","_rootRecords","records_1","_lazyLoadRecords","expandedKeys","hasNewRecords","records_2","pKey","_lazyLoadChildren","hasChildren","getChildren","_dataSource","TreeDataSource","expanded","isLeaf","isLast","levelLast","unshift","_updateLengthSilentCounter","ds1","record1","all1","silent1","ds2","record2","all2","silent2","parentKeys","parentKeys_1","expand","getIndexByKey","targets","expandToKey","_getTreeInfo","treeInfo","recordIndex","getTreeInfo","_getTreeNodeSpaceWidth","TREE_NODE_SPACE","_isTreeNodeSpace","treeNodeSpaceWidth","_canToggle","canToggle","_toggled","toggled","_multilineText","TreeColumn","isMultilineText","tree","treeNodeSpace","toggle","doMouseMove","doMouseLeave","params","selectCellRange","RadioColumn","radioButton","TYPES","NUMBER","BUTTON","IMAGE","MULTILINETEXT","DATE","LOOKUP","TREE","DRAW","columns","ColumnAction","columnAction","toUpperCase","ColumnStyle","styleOf","TYPE_PUNCTURE","createError","calc","PRECEDENCE","*","/","+","-","lex","tokens","buildBinaryExpNode","stack","op","token","deep_1","closeIndex","beforeOp","unit","calcStr","exp","reUnit","reNum","reOp","tokenize","calcNode","full","toPxInternal","toPx","ratio","setRatio","devicePixelRatio","canvas","wh","scale","drawImage_1","save","restore","_keys","_vals","_sorted","NumberMap","keyFrom","keyTo","ary","elm","low","high","indexFirst","MAX_SCROLL","_scrollable","_perfectScrollbar","minScrollbarLength","_p","_endPointElement","_update","Scrollbar","relativeTop","scrollLeft","domHeight","sbSize","vScrollRange","rScrollRange","domWidth","update","_canvas","Scrollable","maxScrollTop","maxScrollLeft","_events","_started","_moved","_mouseEndPoint","BaseMouseDownMover","moving","last","pt","_getMouseAbstractPoint","events","touchmove","_mouseMove","passive","touchend","_mouseUp","touchcancel","mousemove","mouseup","_moveInternal","_upInternal","vibrate","CellSelector","_getTargetCell","_forceFocusCell","_moveFocusCell","_bindMoveAndUp","_vibrate","oldCol","oldRow","newCol","newRow","makeVisibleCol","colCount","makeVisibleRow","makeVisibleCell","abstractPos","getCellAt","_targetCol","_x","_preX","_invalidateAbsoluteLeft","ColumnResizer","pageX","_resetColWidthOffset","moveX","pre","getColWidth","afterSize","_adjustColWidth","_storeAutoColWidthExprs","setColWidth","_getVisibleRect","_invalidateRect","updateScroll","invalidate","createCellRange","startCol","startRow","endCol","endRow","drawRect","drawing","drawLayers","_mode","_range","_ctx","_drawRect","_drawing","_selection","_drawLayers","_childContexts","DrawCellContext","_cancel","border","drag","inDrag","_getInitContext","rectFilter","_rectFilter","_getRectInternal","_isOutOfRange","absoluteRect","_toRelativeDrawRect","_toRelativeRect","addDraw","onTerminate","_onTerminate","visibleRect","intersection","isFrozenCell","frozenColCount","fRect","_level","DrawLayer","_layers","DrawLayers","_setSafeInputValue","scrollable","lastInputValue","_isComposition","_compositionEnd","clearTimeout","inputClear","handleCompositionEnd","stopCellMove","evt","fireKeyDownMove","deleteCellValueOnDel","dummyInput","pasteText","clipboardData","getData","types","cData","setData","FocusControl","_keyDownMoveCallback","selectAllOnCtrlA","calcTop","editMode","composition","attrs","attributes","removeNames","att","_inputStatus","name_1","removeName","removeAttribute","inputStatus","atts","updateRange","_sel","_end","_updateRange","Selection","_wrapFireSelectedEvent","_setSelectCell","_setFocusCell","_updatedSelection","_drag","inRange","inOldRange","inNewRange","oldStartCol","oldStartRow","oldEndCol","oldEndRow","newStartCol","newStartRow","newEndCol","newEndRow","invalidateGridRect","points","needChange","points_1","keepSelect","singleSelection","_isWraped","backup","_forceUpdateRange","dragging","SelectionResizer","cellAndRange","_getTargetCellAndRange","_oldRange","startDrag","_newRange","newRange","newCell","dragDone","oldRange","stopDrag","startRect","endRect","ab","ad","parsePasteRangeBoxValues","getCellValue","offsetCol","_getTargetRowAt","absoluteY","internal","getTargetRowAtInternal","candRow","defaultRowHeight","candBottom","_getRowsHeight","startBottom","_getRowHeight","findAfter","top_1","findBefore","_getTargetColAt","absoluteX","_getColWidth","_getTargetFrozenRowAt","scroll","_getTargetFrozenColAt","_getFrozenRowsRect","_getFrozenColsRect","_getCellDrawing","drawCells","_putCellDrawing","_removeCellDrawing","_drawCell","absoluteLeft","absoluteTop","skipAbsoluteTop","skipAbsoluteLeft","cellDrawing","dcContext_1","pCol_1","_delayMode","terminate","_drawRow","initFrozenCol","initCol","drawRight","drawOuter","outerLeft","underlayBackgroundColor","clearRect","colAbsoluteLeft","_isPreciseColWidth","_toPxWidth","calcWidthContext","_getColPreciseWidth","orgWidth","_applyColWidthLimits","limits","_getColWidthDefine","colWidthsMap","defaultColWidth","_getColWidthLimits","limit","colWidthsLimit","minDef","maxDef","isAutoDefine","_calcAutoColWidthExpr","others","autoCount","hasLimitsOnAuto","def","expr","autoPx","_colWidthDefineToPxWidth","_setColWidth","getRowHeightInternal","rowHeightsMap","getRowsHeightInternal","_setRowHeight","_getUnderlayWidth","bodyWidth","underlayColCount","underlayColWidth","_getScrollWidth","_getColsWidth","_getUnderlayHeight","bodyHeight","getRowHeight","underlayRowCount","underlayRowHeight","_getScrollHeight","getScrollHeightInternal","underlayHeight","_onScroll","lastLeft","lastTop","moveY","redrawRect","frozenRect","_onTabKeyDown","focusCell","getMoveLeftColByKeyDownInternal","getMoveRightColByKeyDownInternal","_onEnterKeyDown","getMoveUpRowByKeyDownInternal","getMoveDownRowByKeyDownInternal","_onKeyDownMove","move","hmove","vmove","selectAllOptions","shiftCtrlA","excludeFrozenCol","excludeFrozenRow","ctrlA","vDir","hDir","shiftKeyFlg","_bindEvents","getCellEventArgsSet","eventArgs","canResizeColumn","canResize","disableColumnResize","disableResize","eventArgsSet","_getResizeSelectionAt","selectionResizer","resizeCol","_getResizeColAt","columnResizer","cellSelector","hasListeners","doubleTapBefore","longTouchId","defaultPrevented","isMouseover","mouseEnterCell","mouseOverCell","onMouseenterCell","related","onMouseleaveCell","beforeMouseCell","onMouseoverCell","onMouseoutCell","scrollElement","enterCell","outCell","leaveCell","elementStyle","lastMoving","eventPhase","Event","AT_TARGET","focusControl","onKeyDown","onScroll","getCopyValue","copyValue","copyRange","getCopyRangeInternal","copyCellValue","getCopyCellValue","strCellValue","onCopy","onCut","onPaste","normalizeValue_1","rangeBoxValues_1","pasteCellEvent","rangeBoxValues","onInput","onDelete","onFocus","focusedGrid","invalidateCell","onBlur","abstractX","abstractY","cellRect","canDragSelection","_getScrollableVisibleRect","frozenColsWidth","frozenRowsHeight","highlightBorderWidth","_k","_l","_m","borderMode","_o","borderWidth","protectedSpace","hiDPI","alpha","updateSelectionRange","disableColResize","colWidthsOffset","cellTextOverflows","cellTypeOverflows","updateSize","bindEventsInternal","DrawGrid","_updateGridRange","setFocusCursor","getDefaultRowHeight","getDefaultColWidth","getHighlightBorderWidth","getDefaultFont","getDefaultUnderlayBackgroundColor","getDefaultBorderColor","getDefaultBorderWidth","getDefaultBorderMode","canStart","cfg","config","parent_1","parent_2","setFocusRect","getFocusRectInternal","total","round","_initColWidthsOffset","scrollWidth","setScrollSize","isFrozenStartCell","isFrozenEndCell","getCellsRect","isFrozenRow","isFrozenCol","frozen","getColAt","getRowAt","oldEditMode","resetInputStatus","selCol","selRow","storeInputStatus","setDefaultInputStatus","getOffsetInvalidateCells","cellsRect","invalidateTarget","visibleTop","initRow","visibleLeft","overflowText","getCellOverflowTextInternal","overflowType","getCellOverflowTypeInternal","disposable","disposables","getAttachCellsAreaInternal","getAttachCellsPaddingInternal","clientX","scrollX","clientY","pageY","scrollY","defaultColPxWidth","adj","silence","extendRange","beforeRange","beforeRect","afterRange","afterRect","invalidateRect","visibleRect_1","rowCount_1","drawBottom","initFrozenRow","drawGridBorder","isContent","outerTop","rowAbsoluteTop","offsetParent","_absoluteY","_startRow","_endRow","core","aggregateType","_rCache","_fCache","CachedDataSource","rowCache","fCache","_setFieldCache","_curIndex","_data","DataSourceIterator","_getIndexData","nest","dc","original","_owner","_dataSourceItr","_filteredList","_queues","FilterData","filteredList","queues","indexQueue","_findIndex","timeout_1","count_1","_findIndexWithTimeout","testTimeout","dataSourceItr","hasNext","movePrev","queue","FilterDataSource","type_1","_filterData","_getPivotRecordKey","pivots","distinctKeys","pivots_1","refresh","PivotDataSource","_keysMap","rowPivots","colPivots","begin","rowKey","colKey","_distinctMap","log","inMouse","isHeaderDisabledCell","BaseCheckAction","checked","getHeaderValue","setHeaderValue","CHECK_HEADER_STATE_ID","CheckHeaderAction","SWITCH_HEADER_STATE_ID","SwitchHeaderAction","_sort","SortHeaderAction","newState","fieldRow","sortState","_executeSort","ImmutableCheckHeaderAction","ImmutableSortHeaderAction","ImmutableSwitchHeaderAction","SORT","headerAction","defaultHeaderBaseStyle","defaultHeaderBaseStdStyle","defaultHeaderStyle","defaultHeaderBaseCheckStyle","defaultCheckHeaderStyle","defaultSortHeaderStyle","defaultSwitchHeaderStyle","HEADER_BASE_STYLE_EVENT_TYPE","CheckHeaderStyle","_sortArrowColor","sortArrowColor","SortHeaderStyle","SwitchHeaderStyle","MultilineTextHeaderStyle","headerStyle","headerValues","BaseHeader","BaseCheckHeader","inlineCheck","getInlineCheck","CheckHeader","buildCheckBoxInline","Header","getHeaderIcon","multiLines","headerUtils","SortHeader","arrowSize","multilines","getColor","header","SwitchHeader","buildSwitchBtnInline","MultilineTextHeader","headerType","headers","headerActionOf","ofCell","headerCell","sortMethod_1","headerStyleOf","headerTypeOf","themes","cacheLinearGradient","defaultBgColor","frozenRowsBgColor","colorStops","stopsKey","stop_1","grad","createLinearGradient","stop_2","addColorStop","getLinearGradient","0","1","highlightBorderColor","selectionBgColor","selectionDragBgColor","frozenRowsBorderColor","frozenRowsColor","getProp","superObj","defNames","superTheme","Theme","hasProperty","_checkbox","_radioButton","_button","_header","_switch","_tree","hasThemeProperty","BASIC","basicTheme","MATERIAL_DESIGN","materialDesignTheme","builtin","defTheme","u","getIgnoreCase","getChoices","plugins","getDefault","setDefault","defaultTheme","rgbMap","hexToNum","hex","createRGB","g","testRGB","rateToByte","colorToRGB0","tripleHexToRGB","g1","g2","b1","b2","sextupleHexToRGB","rgb","colorToRGB","dummy","styleColor","styleColorToRGB","calcElapsedColor","startColor","endColor","elapsedTime","startColorRGB","endColorRGB","getRGB","colorName","diff","roundRect","fillRoundRect","strokeRoundRect","fillCircle","strokeCircle","measureCheckbox","measureRadioButton","canvasHelper","drawButton","backgroundColor","blur_1","offsetX","ox","oy","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","drawCheckbox","check","boxSize","checkPoint","leftX","topY","leftWidth","rightWidth","leftLeftPos","leftTopPos","drawInlineImageRect","image","srcLeft","srcTop","srcWidth","srcHeight","destWidth","destHeight","clip","drawRadioButton","checkSize","drawSwitchButton","btnSize","fontSize","textMargin","backgroundFillStyle","trueFillStyle","falseFillStyle","bX","bY","bW","bH","sW","sH","sX","sY","drawSwitchBtn","cW","cH","offsetScale","fillTextRect","calcBasePosition","strokeColorsRect","borderColors","strokeRect","positions","preColor","pos1","pos2","pColor","strokeRectLines","tools","seqId","EmptyDataCache","rows","define","_columns","_headerCellIds","_headerObjects","_addHeaders","_headerObjectMap","_setupHeaderSpan","SimpleHeaderLayoutMap","headerRowCount","getCellId","_emptyDataCache","getHeader","getBody","roots","rowCells","_newRow","hd","headerField","headerIcon","tooltip","headerTooltip","tooltipType","headerTooltipType","colDef","prev","processed","cols","headerRowSpan","headerColSpan","rowSpan","colSpan","layout","transform","rowLayout","objects","objectMap","_findStartCell","rowIndex","objectGridRow","_getObjectGridRow","colIndex","_setWidthDataIfAbsent","_useColumnIndex","LayoutObjectGrid","objectGrid","columnCount","columnWidths","hbLayout","normalizeLayout","_body","_columnCount","widthDef","_columnWidths","MultiLayoutMap","bodyLayoutRow","bodyRowCount","_getCellRange","bodyRow","layoutRow","layoutMap","_layoutMap","LayoutMap","hiddenHeader","headerObjects","columnObjects","getBodyLayoutRangeById","LG_EVENT_TYPE","CHANGED_HEADER_VALUE","CHANGED_VALUE","CELL_RANGE","CELL_VALUE","BaseMessage","detachMessageElement","_messageElement","_getMessageElement","drawCellMessageInternal","createMessageElementInternal","CLASSNAME_ME","MESSAGE_CLASSNAME_ME","HIDDEN_CLASSNAME_ME","SHOWN_CLASSNAME_ME","rootElement","_rootElement","messageElement","createMessageDomElement","MessageElement","_attachCell","_detach","CLASSNAME_EME","drawExclamationMarkBox","boxRect","fillRect","fillColor","fillRectWithState","ErrorMessage","ErrorMessageElement","hasFocusGrid","drawBorderWithClip","InfoMessage","_message","drawInformationMarkBox","CLASSNAME_WME","WarningMessage","WarningMessageElement","EMPTY_MESSAGE","MESSAGE_INSTANCE_FACTORY","warning","normalizeMessage","hasMessage","_messageInstances","_bindGridEvent","MessageHandler","messageInstances","_getMessageInstanceOfMessage","_attachInfo","instance","attachMessageElement","moveMessageElement","onSelectMessage","_attach","_move","parser","DOMParser","findElement","child","svgCode","parseFromString","_svg","documentElement","_glyphs","_glyphUnis","Svg","_fontFace","svg","glyphName","unicode","walkGlyph","elementToPaths","getD","circle","cx","cy","ANGLE","anchorX","theta","cos","anchorY","sin","controlX","tan","controlY","paths","circleToPath","buildObject","isGlyph","ud","svgToIcon","fontFace","fontFaceElement","qualifiedName","fontElement","glyph","findGlyph","findGlyphByUnicode","fontHorizAdvX","fontVertAdvX","horizAdvX","vertAdvX","unitsPerEm","contentSize","outerHTML","glyphToJSON","viewBox","svgToJSON","builtins","arrowDownward","arrowUpward","edit","star","starBorder","starHalf","svgIcons","mag","sqrt","angle","sign","acos","dot","ellipseFromEllipticalArc","rx","ry","phi","fA","fS","xPrime","cost","sint","rotClockwise","xPrime2","pointMul","rx2","ry2","lambda","factor","cPrime","sum","rotCounterClockwise","meanVec","x1UnitVector","x2UnitVector","translate","rotate","lMx","lMy","reflected","lx","ly","lastCommand","makeReflected","M","px","py","m","L","H","V","Z","z","C","cp1x","cp1y","cp2x","cp2y","S","cpx","cpy","Q","quadraticCurveTo","q","T","A","xAxisRotation","largeArcFlag","sweepFlag","builder","argsProvider","_commands","PathCommands","buildPush","_ops","arcTo","ellipse","PathCommandsParser","numArgs","ops","pathTokens","cmd_1","subsequentCommand","fst_1","Path2DShim","CanvasRenderingContext2D","originalFill","getPath2D","Path2D","path2DManager","module","upsideDown","xRate","yRate","_Path2D","path2d","getWidth","breakWidth","itr","candidateIndex","chars","beforeWidth","charWidth","beforeContent","afterContent","Inline","_callback","offsetRight","offsetBottom","allWidth","candidate","InlineDrawer","_arg","testStr","display","white-space","font-variant","font-size","font-style","font-weight","line-height","computeStyle","_el","FontRuler","LastResortFonts","SERIF","SANS_SERIF","watchRunners","activeCallbacks","inactiveCallbacks","status","lastResortWidths_","fontRulerA_","fontRulerB_","lastResortRulerA","lastResortRulerB","started_","check_","FontWatchRunner","activeCallback","inactiveCallback","widthA","widthB","isFallbackFont_","isLastResortFont_","finish_","widthMatches_","lastResortFont","HAS_WEBKIT_FALLBACK_BUG","match","hasWebKitFallbackBug","widthsMatchLastResortWidths_","callbacks","cb","load","loads","legacy","fonts","ready","_icon","InlineIcon","letterSpacing","imageLeft","imageTop","imageWidth","imageHeight","_src","_imageLeft","_imageTop","_imageWidth","_imageHeight","_onloaded","_loadImage","InlineImage","_inlineImg","_inlineImgPromise","_path","InlinePath2D","buildSvgDataUrl","XMLSerializer","serializeToString","encodeURIComponent","getSvgElement","doc","nodes","SVGElement","svgElem","elmWidth","elmHeight","numElmWidth","numElmHeight","InlineSvg","iconOf","isIconConstructorOption","isInlineImageConstructorOption","isInlineSvgConstructorOption","regedIcons","regedIcon_1","width_1","drawWidth","drawHeight","drawRegisteredIcon","buildInlines","inline","getThemeColor","defaultThemeColor","gridThemeColor","ThemeResolver","SWITCH_STYLE","default","INLINE_ELLIPSIS","inlineUtils.of","getFont","getGridThemeColor","getGridThemeFont","frozenRowsFont","drawInlines","inlines","drawInline","canDraw","onReady","inlineWidths_1","offsetRight_1","offsetLeft_1","inlineWidth","inlineUtils.buildInlines","inlineToString","inlineUtils.string","getOverflowInline","isAllowOverflow","getOverflowInlinesIndex","remWidth","isOverflowInlines","breakWidthInlines","indexData","afterInlines","beforeInlines","canBreak","breakWord","breakAll","splitIndex","truncateInlines","overflowInline","_inlineRect","truncInlines","_multiInlineRect","multiInlines","buildedMultiInlines","rectHeight","procLineClamp_1","tis","procLine","lineRow","pad","buildedInline","gridDrawCheckbox","positionOpt","boxWidth","getSwitchBtnSize","gridDrawSwitchBtn","_theme","GridCanvasHelper","calcWidth","calcHeight","calculator","createCalculator","box","clipLeft","clipWidth","clipTop","clipHeight","paddingNums","inlineWidths_2","offsetRight_2","offsetLeft_2","rectLeft_1","rectTop_1","rectRight_1","rectBottom_1","inlineHeight","top_2","top_3","selectionColor","getFillColorState","isEditing","getSelectionColorState","fillCell","focusBgColor","highlightBgColor","startOffset","self","gridDrawRadioButton","_q","xOffset","lineNodeSpace","rectTop","rectMiddle","rectBottom","isLastLevel","isLastRecord","nodeRadius","top_4","setLineDash","BaseTooltip","detachTooltipElement","_tooltipElement","_getTooltipElement","createTooltipElementInternal","CLASS_NAME","HIDDEN_CLASS_NAME","SHOWN_CLASS_NAME","createTooltipDomElement","createTooltipMessageElement","TooltipElement","doSetContent","cls","rootTop","rootLeft","rootHeight","rootWidth","bTop","lLeft","rLeft","Tooltip","HtmlTooltipElement","HtmlTooltip","TOOLTIP_INSTANCE_FACTORY","overflow-html","overflow-text","_tooltipInstances","TooltipHandler","tooltipInstances","instanceInfo","_getTooltipInstanceInfo","attachTooltipElement","moveTooltipElement","_isAttachCell","getCellOverflowType","getTooltipInstanceInfo","_arrayEqual","_getCellValues","_getCellValue","bodyCellRange","spanBodyOptions","_getBodyCellRange","_getField","_getCellMessage","column","_getHeaderField","_getCellIcon1","retIcon","iconOpt","_hasHeaderField","_getCellIcon0","_getRecordIndexByRow","hasField","_hasField","_onDrawValue","gridCanvasHelper","drawCellBg","fillOpt","fillCellWithState","drawCellBorder","rect_1","borderSelection","_getCellIcon","clearCell","_getHeaderIcon","_getContentHidden","_refreshHeader","headerEvents","HeaderBaseStyle","ids_1","setMinColWidth","setMaxColWidth","setColDisableResize","headerRowHeight","setRowHeight","_refreshRowCount","_tryWithUpdateDataSource","dataSourceEventIds","fireSelectedEvent","_setRecords","newDataSource","ofArray","_setDataSource","EMPTY","_onRangePaste","pasteRowCount","pasteColCount","hasEditable","actionColumnsBox","actionColumnsRow","editable","startRowOffset","duplicate","actionRow","valuesRow","valuesCol","col_1","row_1","cellValue_1","this_1","oldValue","onPasteCellRangeBox","newEnd","_onRangeDelete","deleteRowCount","deleteColCount","col_2","row_2","this_2","_oldValue","onDeleteCellRangeBox","registerPlugin","kakaGrid","register","themePlugins","iconPlugins","registerPlugins","_kakaGrid","version","_core","_tools","ListGrid","omits","omit","tooltipHandler","allowRangePaste","monitorResize","resize","oldField","oldState","getHeaderField","newField","getCellRangeByField","colObj","layoutRange","newFocus","convertCopyValue","setRectFilter","_updateRect","valueCallback","changeValueCallback","record_1","before_1","after_1","_setCellValue","newValue","beforeStartCol","beforeStartRow","beforeEndCol","beforeEndRow","reviseFocusRect","gridBorderColor","gridBorderWidth","_headers","_themes","_GridCanvasHelper","_register"],"mappings":"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"}