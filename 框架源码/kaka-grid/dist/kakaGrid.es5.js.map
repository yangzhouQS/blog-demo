{"version":3,"file":"kakaGrid.es5.js","sources":["tslib/tslib.es6.js","src/internal/utils.ts","src/columns/action/action-utils.ts","src/core/draw-grid/DG_EVENT_TYPE.ts","src/core/draw-grid/KEY_CODE.ts","src/internal/symbolManager.ts","src/columns/action/actionBind.ts","src/columns/action/BaseAction.ts","src/columns/action/Action.ts","src/columns/action/Editor.ts","src/columns/action/BaseInputEditor.ts","src/columns/action/BaseActionInput.ts","src/internal/animate.ts","src/columns/action/BaseCheckEditor.ts","src/columns/action/ButtonAction.ts","src/columns/action/CheckEditor.ts","src/columns/action/SwitchEditor.ts","src/internal/dom.ts","src/internal/EventHandler.ts","src/internal/style.ts","src/columns/action/internal/input-value-handler.ts","src/columns/utils/index.ts","src/columns/action/internal/InlineInputElement.ts","src/columns/action/InlineInputEditor.ts","src/columns/action/internal/InlineLookupElement.ts","src/columns/action/InlineLookupEditor.ts","src/internal/menu-items.ts","src/columns/action/internal/InlineMenuElement.ts","src/internal/icons.ts","src/internal/Rect.ts","src/columns/type/columnUtils.ts","src/core/EventTarget.ts","src/columns/style/BaseStyle.ts","src/columns/style/BaseStdStyle.ts","src/columns/style/BaseCheckStyle.ts","src/columns/style/Style.ts","src/columns/style/ButtonStyle.ts","src/columns/style/CheckStyle.ts","src/columns/style/SwitchStyle.ts","src/columns/style/DateStyle.ts","src/columns/style/DrawStyle.ts","src/columns/style/IconStyle.ts","src/columns/style/ImageStyle.ts","src/columns/style/LookupStyle.ts","src/columns/style/MenuStyle.ts","src/columns/style/MultilineTextStyle.ts","src/columns/style/NumberStyle.ts","src/columns/style/PercentCompleteBarStyle.ts","src/columns/style/RadioStyle.ts","src/columns/style/TreeStyle.ts","src/columns/style.ts","src/columns/type/BaseColumn.ts","src/columns/type/MenuColumn.ts","src/columns/action/InlineMenuEditor.ts","src/columns/action/internal/InlineTextAreaElement.ts","src/columns/action/InlineTextAreaEditor.ts","src/columns/action/RadioEditor.ts","src/columns/action/internal/SmallDialogInputElement.ts","src/columns/action/SmallDialogInputEditor.ts","src/columns/immutable/ImmutableCheckEditor.ts","src/columns/immutable/ImmutableRadioEditor.ts","src/columns/immutable/ImmutableInputEditor.ts","src/columns/immutable/ImmutableSwitchEditor.ts","src/columns/action.ts","src/columns/type/BaseCheckColumn.ts","src/columns/style/BranchGraphStyle.ts","src/columns/type/branch/BranchLine.ts","src/columns/type/branch/BranchPoint.ts","src/columns/type/BranchGraphColumn.ts","src/columns/type/Column.ts","src/columns/type/ButtonColumn.ts","src/columns/type/CheckColumn.ts","src/columns/type/SwitchColumn.ts","src/columns/type/DateColumn.ts","src/columns/type/DrawColumn.ts","src/columns/type/IconColumn.ts","src/internal/canvases.ts","src/internal/LRUCache.ts","src/internal/imgs.ts","src/columns/type/ImageColumn.ts","src/columns/type/LookupColumn.ts","src/columns/type/MultilineTextColumn.ts","src/columns/type/NumberColumn.ts","src/columns/type/PercentCompleteBarColumn.ts","src/internal/sort.ts","src/data/DataSource.ts","src/data/TreeDataSource.ts","src/columns/type/TreeColumn.ts","src/columns/type/RadioColumn.ts","src/columns/type.ts","src/columns.ts","src/internal/calc.ts","src/internal/hiDPI.ts","src/internal/NumberMap.ts","src/internal/Scrollbar.ts","src/internal/Scrollable.ts","src/core/draw-grid/BaseMouseDownMover.ts","src/core/draw-grid/CellSelector.ts","src/core/draw-grid/ColumnResizer.ts","src/core/draw-grid/DrawCellContext.ts","src/core/draw-grid/DrawLayer.ts","src/core/draw-grid/DrawLayers.ts","src/core/draw-grid/FocusControl.ts","src/core/draw-grid/Selection.ts","src/core/draw-grid/SelectionResizer.ts","src/internal/paste-utils.ts","src/core/DrawGrid.ts","src/core.ts","src/data/CachedDataSource.ts","src/data/filter/DataSourceIterator.ts","src/data/filter/FilterData.ts","src/data/FilterDataSource.ts","src/data/PivotDataSource.ts","src/data.ts","src/header/action/BaseAction.ts","src/header/action/actionBind.ts","src/header/action/action-utils.ts","src/header/action/BaseCheckAction.ts","src/header/action/CheckHeaderAction.ts","src/header/action/SwitchHeaderAction.ts","src/header/action/SortHeaderAction.ts","src/header/immutable/ImmutableCheckHeaderAction.ts","src/header/immutable/ImmutableSortHeaderAction.ts","src/header/immutable/ImmutableSwitchHeaderAction.ts","src/header/action.ts","src/header/style/BaseStyle.ts","src/header/style/BaseStdStyle.ts","src/header/style/Style.ts","src/header/style/BaseCheckStyle.ts","src/header/style/CheckHeaderStyle.ts","src/header/style/SortHeaderStyle.ts","src/header/style/SwitchHeaderStyle.ts","src/header/style/MultilineTextHeaderStyle.ts","src/header/style.ts","src/header/type/BaseHeader.ts","src/header/type/BaseCheckHeader.ts","src/header/type/CheckHeader.ts","src/header/type/headerUtils.ts","src/header/type/Header.ts","src/header/type/SortHeader.ts","src/header/type/SwitchHeader.ts","src/header/type/MultilineTextHeader.ts","src/header/type.ts","src/headers.ts","src/plugins/themes.ts","src/themes/BASIC.ts","src/themes/MATERIAL_DESIGN.ts","src/themes/theme.ts","src/themes.ts","src/internal/color.ts","src/tools/canvasHelper.ts","src/tools.ts","src/list-grid/layout-map/internal/utils.ts","src/list-grid/layout-map/internal/simple-header-layout.ts","src/list-grid/layout-map/internal/multi-layout.ts","src/list-grid/LayoutMap.ts","src/list-grid/LG_EVENT_TYPE.ts","src/columns/message/BaseMessage.ts","src/columns/message/internal/MessageElement.ts","src/columns/message/internal/ErrorMessageElement.ts","src/columns/message/messageUtils.ts","src/columns/message/ErrorMessage.ts","src/columns/message/InfoMessage.ts","src/columns/message/internal/WarningMessageElement.ts","src/columns/message/WarningMessage.ts","src/columns/message/MessageHandler.ts","src/plugins/icons.ts","src/tools/Svg.ts","src/tools/svgToIcon.ts","src/icons.ts","src/internal/legacy/canvas/PathCommands.ts","src/internal/legacy/canvas/PathCommandsParser.ts","src/internal/legacy/canvas/Path2DShim.ts","src/internal/path2DManager.ts","src/element/Inline.ts","src/element/InlineDrawer.ts","src/internal/legacy/fontwatch/FontRuler.ts","src/internal/legacy/fontwatch/FontWatchRunner.ts","src/internal/fonts.ts","src/element/InlineIcon.ts","src/element/InlineImage.ts","src/element/InlinePath2D.ts","src/element/InlineSvg.ts","src/element/inlines.ts","src/GridThemeHelper.ts","src/GridCanvasHelper.ts","src/tooltip/BaseTooltip.ts","src/tooltip/internal/TooltipElement.ts","src/tooltip/Tooltip.ts","src/tooltip/internal/HtmlTooltipElement.ts","src/tooltip/HtmlTooltip.ts","src/tooltip/TooltipHandler.ts","src/ListGrid.ts","src/register.ts","src/kakaGrid.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { CellAddress, CellRange, MaybeCall, MaybePromise } from '../ts-types'\n\nconst isNode =\n  typeof window === 'undefined' || typeof window.window === 'undefined'\n\ntype ArrayElementPredicate<E> = (t: E, i: number, arr: E[]) => boolean\n// type ObjectElementPredicate<T, K extends keyof T> = (\n//   t: T[K],\n//   key?: K,\n//   obj?: T\n// ) => boolean;\n\ntype ArrayElementFunction<E> = (t: E, i: number, arr: E[]) => void\ntype ObjectElementFunction<T, K extends keyof T> = (\n  t: T[K],\n  key: K,\n  obj: T\n) => void\nlet arrayFind: <T>(\n  arr: T[],\n  predicate: ArrayElementPredicate<T>\n) => T | undefined\nlet arrayFindIndex: <T>(arr: T[], predicate: ArrayElementPredicate<T>) => number\nconst array = {\n  get find(): typeof arrayFind {\n    if (arrayFind) {\n      return arrayFind\n    }\n    if (Array.prototype.find) {\n      arrayFind = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): T | undefined => Array.prototype.find.call(arr, predicate)\n    } else {\n      arrayFind = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): T | undefined => {\n        const index = array.findIndex(arr, predicate)\n        return index >= 0 ? arr[index] : undefined\n      }\n    }\n    return arrayFind\n  },\n  get findIndex(): typeof arrayFindIndex {\n    if (arrayFindIndex) {\n      return arrayFindIndex\n    }\n    if (Array.prototype.findIndex) {\n      arrayFindIndex = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): number => Array.prototype.findIndex.call(arr, predicate)\n    } else {\n      arrayFindIndex = <T>(\n        arr: T[],\n        predicate: ArrayElementPredicate<T>\n      ): number => {\n        const { length } = arr\n        for (let i = 0; i < length; i++) {\n          const value = arr[i]\n          if (predicate(value, i, arr)) {\n            return i\n          }\n        }\n        return -1\n      }\n    }\n    return arrayFindIndex\n  },\n}\n\nconst isDef = <T>(data: T | null | undefined | void): data is T => {\n  return data !== null && typeof data !== 'undefined'\n}\n\nconst isDefString = <T>(data: T | null | undefined | void): data is T => {\n  return isDef(data) && (typeof data !== 'string' || data !== '')\n}\n\nfunction analyzeUserAgent(): {\n  IE: boolean\n  Edge: boolean\n  Chrome: boolean\n  Firefox: boolean\n  Safari: boolean\n} {\n  if (isNode) {\n    return {\n      Chrome: false,\n      Edge: false,\n      Firefox: false,\n      IE: false,\n      Safari: false,\n    }\n  } else {\n    const ua = window.navigator.userAgent.toLowerCase()\n    return {\n      IE: !!/(msie|trident)/.exec(ua),\n      Edge: ua.indexOf('edge') > -1,\n      Chrome: ua.indexOf('chrome') > -1 && ua.indexOf('edge') === -1,\n      Firefox: ua.indexOf('firefox') > -1,\n      Safari: ua.indexOf('safari') > -1 && ua.indexOf('edge') === -1,\n    }\n  }\n}\nconst { IE, Chrome, Firefox, Edge, Safari } = analyzeUserAgent()\n\nfunction setReadonly<T, K extends keyof T>(obj: T, name: K, value: T[K]): void {\n  Object.defineProperty(obj, name, {\n    enumerable: false,\n    configurable: true,\n    value,\n  })\n}\n\nexport function each<E>(obj: E[], fn: ArrayElementFunction<E>): void\nexport function each<T, K extends keyof T>(\n  obj: T,\n  fn: ObjectElementFunction<T, K>\n): void\n\nexport function each(obj: any, fn: any): void {\n  for (const key in obj) {\n    fn(obj[key], key, obj)\n  }\n}\n\nfunction isObject(obj: any): obj is Record<string, any> {\n  return obj === Object(obj)\n}\n\nexport function omit<T, K extends keyof T>(source: T, omits: K[]): Omit<T, K> {\n  const result = {} as Omit<T, K>\n  for (const key in source) {\n    if (omits.indexOf(key as never) >= 0) {\n      continue\n    }\n    Object.defineProperty(result, key, {\n      get() {\n        return source[key]\n      },\n      set(val) {\n        source[key] = val\n      },\n      configurable: true,\n      enumerable: true,\n    })\n  }\n  return result\n}\n\nexport function defaults<T>(source: T, defs: Partial<T>): T {\n  const keys: string[] = []\n  const result = {} as T\n  for (const key in source) {\n    keys.push(key)\n    Object.defineProperty(result, key, {\n      get() {\n        const val = source[key]\n        return val === undefined ? defs[key] : val\n      },\n      set(val) {\n        source[key] = val\n      },\n      configurable: true,\n      enumerable: true,\n    })\n  }\n  for (const key in defs) {\n    if (keys.indexOf(key) >= 0) {\n      continue\n    }\n    Object.defineProperty(result, key, {\n      get() {\n        const val = source[key]\n        return val === undefined ? defs[key] : val\n      },\n      set(val) {\n        source[key] = val\n      },\n      configurable: true,\n      enumerable: true,\n    })\n  }\n  return result\n}\n\nfunction extend<T, U>(t: T, u: U): T & U\nfunction extend<T, U, V>(t: T, u: U, v: V): T & U & V\nfunction extend<T>(...args: T[]): T\nfunction extend<T>(...args: T[]): T {\n  const result = {} as T\n  args.forEach((source) => {\n    for (const key in source) {\n      Object.defineProperty(result, key, {\n        get() {\n          return source[key]\n        },\n        set(val) {\n          source[key] = val\n        },\n        configurable: true,\n        enumerable: true,\n      })\n    }\n  })\n  return result\n}\n\nfunction isDescendantElement(root: HTMLElement, target: HTMLElement): boolean {\n  while (target && target.parentElement) {\n    const p = target.parentElement\n    if (root === p) {\n      return true\n    }\n    target = p\n  }\n  return false\n}\n\nfunction applyChainSafe(\n  obj: any,\n  fn: (value: any, name: string) => any,\n  ...names: string[]\n): any {\n  let value = obj\n  for (let i = 0; i < names.length && isDef(value); i++) {\n    value = fn(value, names[i])\n  }\n  return value\n}\n\nfunction getChainSafe(obj: any, ...names: string[]): any {\n  return applyChainSafe(obj, (val, name) => val[name], ...names)\n}\n\nfunction getOrApply<T, A extends any[]>(value: undefined, ...args: A): undefined\nfunction getOrApply<T, A extends any[]>(value: null, ...args: A): null\nfunction getOrApply<T, A extends any[]>(value: MaybeCall<T, A>, ...args: A): T\nfunction getOrApply<T, A extends any[]>(value: MaybeCall<T, A>, ...args: A): T {\n  if (typeof value === 'function') {\n    return (value as any)(...args)\n  } else {\n    return value\n  }\n}\n\nfunction endsWith(\n  str: string,\n  searchString: string,\n  position?: number\n): boolean {\n  const subjectString = str.toString()\n  if (\n    typeof position !== 'number' ||\n    !isFinite(position) ||\n    Math.floor(position) !== position ||\n    position > subjectString.length\n  ) {\n    position = subjectString.length\n  }\n  position -= searchString.length\n  const lastIndex = subjectString.lastIndexOf(searchString, position)\n  return lastIndex !== -1 && lastIndex === position\n}\n\nfunction genChars(s: string): { next(): string | null } {\n  // Surrogate Code Point\n  // [\\uD800-\\uDBFF]\n  // Variation Selectors\n  // FVS [\\u180B-\\u180D]\n  // VS1～VS16 [\\uFE00-\\uFE0F]\n  // VS17～VS256 \\uDB40[\\uDD00-\\uDDEF]\n  const re = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\r\\n|[^\\uD800-\\uDFFF])([\\u180B-\\u180D]|[\\uFE00-\\uFE0F]|\\uDB40[\\uDD00-\\uDDEF])?/g\n  return {\n    next(): string | null {\n      const res = re.exec(s)\n      return res !== null ? res[0] : null\n    },\n  }\n}\n\nexport type GenWordsResult = {\n  next(): string | null\n}\nfunction genWords(s: string): GenWordsResult {\n  const re = /[!-~]+|[^!-~\\s]+|\\s+/g\n  return {\n    next(): string | null {\n      const res = re.exec(s)\n      return res !== null ? res[0] : null\n    },\n  }\n}\n\nconst template = (strings: TemplateStringsArray, ...keys: any[]) => {\n  return (...values: any[]) => {\n    const dict = values[values.length - 1] || {}\n    const result = [strings[0]]\n    keys.forEach((key, i) => {\n      const isInteger = Number.isInteger\n        ? Number.isInteger(key)\n        : typeof key === 'number' && key !== Infinity && Math.floor(key) === key\n      const value = isInteger ? values[key] : dict[key]\n      result.push(value, strings[i + 1])\n    })\n    return result.join('')\n  }\n}\n\nconst escape = (html: string) => {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\nfunction isPromise<T>(data: T | Promise<T> | undefined): data is Promise<T> {\n  return Boolean(data && typeof (data as Promise<T>).then === 'function')\n}\nfunction then<T, R>(\n  result: MaybePromise<T>,\n  callback: (arg: T) => MaybePromise<R>\n): MaybePromise<R>\nfunction then<T, R>(\n  result: MaybePromise<T>,\n  callback: (arg: T) => R\n): MaybePromise<R>\nfunction then<T, R>(\n  result: MaybePromise<T>,\n  callback: (arg: T) => R\n): MaybePromise<R> {\n  return isPromise(result) ? result.then((r) => callback(r)) : callback(result)\n}\n\nfunction getMouseButtons(e: MouseEvent): number {\n  if (isDef(e.buttons)) {\n    return e.buttons\n  }\n  /* for legacy */\n  if (isDef(e.which)) {\n    if (e.which === 3) {\n      // right?\n      return 4\n    }\n    if (e.which === 2) {\n      // middle?\n      return 4\n    }\n    return e.which // left or no\n  }\n\n  if (e.button === 0 || e.button === 1) {\n    return 1 // candidate left\n  }\n  if (e.button === 2) {\n    return 2 // right\n  }\n  return 0 // no or middle?\n}\n\nfunction getKeyCode(e: KeyboardEvent): number {\n  return e.keyCode || e.which\n}\n\nfunction isTouchEvent(e: Event): e is TouchEvent {\n  return !!(e as TouchEvent).changedTouches\n}\n\nfunction getIgnoreCase(obj: any, name: string): any {\n  if (obj[name]) {\n    return obj[name]\n  }\n  const l = name.toLowerCase()\n  if (obj[l]) {\n    return obj[l]\n  }\n  const u = name.toLowerCase()\n  if (obj[u]) {\n    return obj[u]\n  }\n  for (const k in obj) {\n    if (k.toLowerCase() === l) {\n      return obj[k]\n    }\n  }\n  return undefined\n}\n\nfunction cancel(e: Event): void {\n  e.preventDefault()\n  e.stopPropagation()\n  e.stopImmediatePropagation()\n}\n\nfunction toBoxArray<T>(obj: T | T[]): [T, T, T, T] {\n  if (!Array.isArray(obj)) {\n    return [obj /*top*/, obj /*right*/, obj /*bottom*/, obj /*left*/]\n  }\n  if (obj.length === 3) {\n    return [\n      obj[0] /*top*/,\n      obj[1] /*right*/,\n      obj[2] /*bottom*/,\n      obj[1] /*left*/,\n    ]\n  }\n  if (obj.length === 2) {\n    return [\n      obj[0] /*top*/,\n      obj[1] /*right*/,\n      obj[0] /*bottom*/,\n      obj[1] /*left*/,\n    ]\n  }\n  if (obj.length === 1) {\n    return [\n      obj[0] /*top*/,\n      obj[0] /*right*/,\n      obj[0] /*bottom*/,\n      obj[0] /*left*/,\n    ]\n  }\n  return obj as [T, T, T, T]\n}\n\nexport {\n  isNode,\n  isDef,\n  isDefString,\n  extend,\n  isDescendantElement,\n  getChainSafe,\n  applyChainSafe,\n  getOrApply,\n  getIgnoreCase,\n  isPromise,\n  then,\n  array,\n}\n\nexport function cellEquals(a: CellAddress, b: CellAddress): boolean {\n  return a.col === b.col && a.row === b.row\n}\n\nexport function cellInRange(\n  range: CellRange,\n  col: number,\n  row: number\n): boolean {\n  return (\n    range.start.col <= col &&\n    col <= range.end.col &&\n    range.start.row <= row &&\n    row <= range.end.row\n  )\n}\n\nexport function cellMerge(a: CellRange, b: CellRange): CellRange {\n  const startCol = Math.min(a.start.col, a.end.col, b.start.col, b.end.col)\n  const startRow = Math.min(a.start.row, a.end.row, b.start.row, b.end.row)\n  const endCol = Math.max(a.start.col, a.end.col, b.start.col, b.end.col)\n  const endRow = Math.max(a.start.row, a.end.row, b.start.row, b.end.row)\n  return {\n    start: {\n      col: startCol,\n      row: startRow,\n    },\n    end: {\n      col: endCol,\n      row: endRow,\n    },\n  }\n}\n\nexport const browser = {\n  IE,\n  Edge,\n  Chrome,\n  Firefox,\n  Safari,\n  // Chrome 33554431\n  // FireFox 17895588\n  // IE 10737433\n  heightLimit: Chrome ? 33554431 : Firefox ? 17895588 : 10737433, // default IE limit\n}\n\nexport const obj = {\n  setReadonly,\n  isObject,\n}\nexport const str = {\n  endsWith,\n  genChars,\n  genWords,\n  escape,\n  template,\n}\nexport const event = {\n  getMouseButtons,\n  getKeyCode,\n  isTouchEvent,\n  cancel,\n}\nexport const style = {\n  toBoxArray,\n}\nexport const emptyFn = () => {}\n","import { ListGridAPI } from '../../ts-types'\nimport { isPromise } from '../../internal/utils'\n\nexport function toggleValue(val: number): number\nexport function toggleValue(val: string): string\nexport function toggleValue(val: unknown): boolean\nexport function toggleValue(\n  val: number | string | unknown\n): number | string | boolean {\n  if (typeof val === 'number') {\n    if (val === 0) {\n      return 1\n    } else {\n      return 0\n    }\n  } else if (typeof val === 'string') {\n    if (val === 'false') {\n      return 'true'\n    } else if (val === 'off') {\n      return 'on'\n    } else if (/^0+$/.exec(val)) {\n      return val.replace(/^(0*)0$/, '$11')\n    } else if (val === 'true') {\n      return 'false'\n    } else if (val === 'on') {\n      return 'off'\n    } else if (/^0*1$/.exec(val)) {\n      return val.replace(/^(0*)1$/, '$10')\n    }\n  }\n  return !val\n}\n\nconst getBooleanOptionOfRecord = <T>(\n  option: boolean | ((record?: T) => boolean),\n  grid: ListGridAPI<T>,\n  row: number\n) => {\n  if (typeof option === 'function') {\n    const record = grid.getRowRecord(row)\n    if (isPromise(record)) {\n      return true\n    }\n    return !!option(record)\n  }\n  return !!option\n}\n\nexport const isDisabledRecord = <T>(\n  option: boolean | ((record: T) => boolean),\n  grid: ListGridAPI<T>,\n  row: number\n) => {\n  return (\n    getBooleanOptionOfRecord(grid.disabled, grid, row) ||\n    getBooleanOptionOfRecord(option, grid, row)\n  )\n}\n\nexport const isReadOnlyRecord = <T>(\n  option: boolean | ((record: T) => boolean),\n  grid: ListGridAPI<T>,\n  row: number\n) => {\n  return (\n    getBooleanOptionOfRecord(grid.readOnly, grid, row) ||\n    getBooleanOptionOfRecord(option, grid, row)\n  )\n}\n","export interface DrawGridEvents {\n  /**\n   * Indicates when the cell was clicked.\n   */\n  CLICK_CELL: 'click_cell'\n  /**\n   * Indicates when the cell was double-clicked.\n   */\n  DBLCLICK_CELL: 'dblclick_cell'\n  /**\n   * Indicates when the cell was double-taped.\n   */\n  DBLTAP_CELL: 'dbltap_cell'\n  /**\n   * Indicates when pointing device button is pressed in a cell.\n   */\n  MOUSEDOWN_CELL: 'mousedown_cell'\n  /**\n   * Indicates when pointing device button is released in a cell.\n   */\n  MOUSEUP_CELL: 'mouseup_cell'\n  /**\n   * Indicates the cell selection state has changed.\n   */\n  SELECTED_CELL: 'selected_cell'\n  MOUSE_SELECTED_START: 'mouse_selected_start'\n  MOUSE_SELECTED_END: 'mouse_selected_end'\n  /**\n   * Indicates key-downed.\n   */\n  KEYDOWN: 'keydown'\n  MOUSEMOVE_CELL: 'mousemove_cell'\n  MOUSEENTER_CELL: 'mouseenter_cell'\n  MOUSELEAVE_CELL: 'mouseleave_cell'\n  MOUSEOVER_CELL: 'mouseover_cell'\n  MOUSEOUT_CELL: 'mouseout_cell'\n  /**\n   * Indicates when the user attempts to open a context menu in the cell.\n   */\n  CONTEXTMENU_CELL: 'contextmenu_cell'\n  INPUT_CELL: 'input_cell'\n  PASTE_CELL: 'paste_cell'\n  DELETE_CELL: 'delete_cell'\n  EDITABLEINPUT_CELL: 'editableinput_cell'\n  MODIFY_STATUS_EDITABLEINPUT_CELL: 'modify_status_editableinput_cell'\n  /**\n   * Indicates when the column width has changed.\n   */\n  RESIZE_COLUMN: 'resize_column'\n  /**\n   * Indicates when scrolled.\n   */\n  SCROLL: 'scroll'\n  FOCUS_GRID: 'focus_grid'\n  BLUR_GRID: 'blur_grid'\n\n  CAN_DRAG_SELECTION: 'can_drag_selection'\n  DRAG_SELECTION: 'drag_selection'\n  CLICK_UNDERLAY: 'click_underlay'\n  DBLCLICK_UNDERLAY: 'dblclick_underlay'\n  DBLTAP_UNDERLAY: 'dbltap_underlay'\n  COPY: 'copydata'\n  CUT: 'cutdata'\n  PASTE: 'pastedata'\n}\n\nexport const DG_EVENT_TYPE: DrawGridEvents = {\n  CLICK_CELL: 'click_cell',\n  DBLCLICK_CELL: 'dblclick_cell',\n  DBLTAP_CELL: 'dbltap_cell',\n  MOUSEDOWN_CELL: 'mousedown_cell',\n  MOUSEUP_CELL: 'mouseup_cell',\n  SELECTED_CELL: 'selected_cell',\n  MOUSE_SELECTED_START: 'mouse_selected_start',\n  MOUSE_SELECTED_END: 'mouse_selected_end',\n  KEYDOWN: 'keydown',\n  MOUSEMOVE_CELL: 'mousemove_cell',\n  MOUSEENTER_CELL: 'mouseenter_cell',\n  MOUSELEAVE_CELL: 'mouseleave_cell',\n  MOUSEOVER_CELL: 'mouseover_cell',\n  MOUSEOUT_CELL: 'mouseout_cell',\n  CONTEXTMENU_CELL: 'contextmenu_cell',\n  INPUT_CELL: 'input_cell',\n  PASTE_CELL: 'paste_cell',\n  DELETE_CELL: 'delete_cell',\n  EDITABLEINPUT_CELL: 'editableinput_cell',\n  MODIFY_STATUS_EDITABLEINPUT_CELL: 'modify_status_editableinput_cell',\n  RESIZE_COLUMN: 'resize_column',\n  SCROLL: 'scroll',\n  FOCUS_GRID: 'focus_grid',\n  BLUR_GRID: 'blur_grid',\n\n  CAN_DRAG_SELECTION: 'can_drag_selection',\n  DRAG_SELECTION: 'drag_selection',\n  CLICK_UNDERLAY: 'click_underlay',\n  DBLCLICK_UNDERLAY: 'dblclick_underlay',\n  DBLTAP_UNDERLAY: 'dbltap_underlay',\n  COPY: 'copydata',\n  CUT: 'cutdata',\n  PASTE: 'pastedata',\n}\n","export const KEY_BS = 8\nexport const KEY_TAB = 9\nexport const KEY_ENTER = 13\nexport const KEY_ESC = 27\nexport const KEY_SPACE = 32\nexport const KEY_END = 35\nexport const KEY_HOME = 36\nexport const KEY_LEFT = 37\nexport const KEY_UP = 38\nexport const KEY_RIGHT = 39\nexport const KEY_DOWN = 40\nexport const KEY_DEL = 46\nexport const KEY_ALPHA_A = 65\nexport const KEY_ALPHA_C = 67\nexport const KEY_ALPHA_V = 86\nexport const KEY_F2 = 113\n","// import utils from \"./utils\";\n\n// type SymbolType = (description?: string | number) => symbol;\n\n// const Symbol: SymbolType = utils.isNode\n//   ? (global.Symbol as SymbolType)\n//   : (window.Symbol as SymbolType)\n//   ? (window.Symbol as SymbolType)\n//   : ((): SymbolType => {\n//       function random(): string {\n//         const c = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n//         const cl = c.length;\n//         let r = \"\";\n//         for (let i = 0; i < 10; i++) {\n//           r += c[Math.floor(Math.random() * cl)];\n//         }\n//         return r;\n//       }\n//       return (name?: string | number): symbol => {\n//         if (name) {\n//           return `#${name}_${random()}` as any;\n//         } else {\n//           return `#_${random()}` as any;\n//         }\n//       };\n//     })();\n// const mem: { [key: string]: symbol } = {};\n\nfunction get(name?: string): '$$$$private symbol$$$$' {\n  // if (name) {\n  //   return (mem[name] ? mem[name] : (mem[name] = Symbol(name))) as any;\n  // } else {\n  //   return Symbol() as any;\n  // }\n  return (name || '_') as any\n}\n\nexport function getEventTargetSymbol(): '$$$$event_target_symbol$$$$' {\n  return get('protected.event_target') as any\n}\nexport function getThemeSymbol(): '$$$$theme_symbol$$$$' {\n  return get('protected.theme') as any\n}\nexport function getDrawGridSymbol(): '$$$$draw_grid_symbol$$$$' {\n  return get('protected.draw_grid') as any\n}\nexport function getListGridSymbol(): '$$$$list_grid_symbol$$$$' {\n  return get('protected.list_grid') as any\n}\nexport function getCheckColumnStateId(): '$$$$chkcol.stateID symbol$$$$' {\n  return get('chkcol.stateID') as any\n}\nexport function getRadioColumnStateId(): '$$$$rdcol.stateID symbol$$$$' {\n  return get('rdcol.stateID') as any\n}\nexport function getSwitchColumnStateId(): '$$$$swtcol.stateID symbol$$$$' {\n  return get('swtcol.stateID') as any\n}\nexport function getButtonColumnStateId(): '$$$$btncol.stateID symbol$$$$' {\n  return get('btncol.stateID') as any\n}\nexport function getColumnActionStateId(): '$$$$col.action_stateID symbol$$$$' {\n  return get('col.action.stateID') as any\n}\nexport function getColumnFadeinStateId(): '$$$$col.fadein_stateID symbol$$$$' {\n  return get('col.fadein_stateID') as any\n}\nexport function getInlineEditingStateId(): '$$$$col.inline_editing_stateID symbol$$$$' {\n  return get('col.inline_editing_stateID') as any\n}\nexport function getBranchGraphColumnStateId(): '$$$$branch_graph_col.stateID symbol$$$$' {\n  return get('branch_graph_col.stateID') as any\n}\nexport function getSmallDialogInputEditorStateId(): '$$$$small_dialog_input_editor.stateID symbol$$$$' {\n  return get('small_dialog_input_editor.stateID') as any\n}\nexport function getInlineInputEditorStateId(): '$$$$inline_input_editor.stateID symbol$$$$' {\n  return get('inline_input_editor.stateID') as any\n}\nexport function getInlineTextareaEditorStateId(): '$$$$inline_textarea_editor.stateID symbol$$$$' {\n  return get('inline_textarea_editor.stateID') as any\n}\nexport function getInlineLookupEditorStateId(): '$$$$inline_lookup_editor.stateID symbol$$$$' {\n  return get('inline_lookup_editor.stateID') as any\n}\nexport function getInlineMenuEditorStateId(): '$$$$inline_menu_editor.stateID symbol$$$$' {\n  return get('inline_menu_editor.stateID') as any\n}\nexport function getCheckHeaderStateId(): '$$$$check_header.stateID symbol$$$$' {\n  return get('check_header.stateID') as any\n}\nexport function getSwitchHeaderStateId(): '$$$$switch_header.stateID symbol$$$$' {\n  return get('switch_header.stateID') as any\n}\n","import {\n  ListGridAPI,\n  CellAddress,\n  LayoutObjectId,\n  EventListenerId,\n} from '../../ts-types'\nimport { event, isPromise, obj } from '../../internal/utils'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\nimport { getColumnActionStateId } from '../../internal/symbolManager'\n\nconst COLUMN_ACTION_STATE_ID = getColumnActionStateId()\n\nexport function bindCellClickAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    mouseOver,\n    mouseMove,\n    mouseOut,\n  }: {\n    action: (cell: CellAddress) => void\n    mouseOver: (cell: CellAddress, event: any) => boolean\n    mouseMove?: (cell: CellAddress, event: any) => boolean\n    mouseOut: (cell: CellAddress) => void\n  }\n): EventListenerId[] {\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n\n  if (!(grid as any)[COLUMN_ACTION_STATE_ID]) {\n    obj.setReadonly(grid as any, COLUMN_ACTION_STATE_ID, {})\n  }\n\n  const actionState = (grid as any)[COLUMN_ACTION_STATE_ID]\n\n  return [\n    // click\n    grid.listen(DG_EVENT_TYPE.CLICK_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      action({\n        col: e.col,\n        row: e.row,\n      })\n    }),\n    // mouse move\n    grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      if (mouseMove) {\n        if (\n          !mouseMove(\n            {\n              col: e.col,\n              row: e.row,\n            },\n            e.event\n          )\n        ) {\n          grid.getElement().style.cursor = ''\n          actionState.mouseActive = false\n          return\n        }\n      }\n      grid.getElement().style.cursor = 'pointer'\n      actionState.mouseActive = true\n    }),\n    grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      if (mouseOver) {\n        if (\n          !mouseOver(\n            {\n              col: e.col,\n              row: e.row,\n            },\n            e.event\n          )\n        ) {\n          grid.getElement().style.cursor = ''\n          actionState.mouseActive = false\n          return\n        }\n      }\n      grid.getElement().style.cursor = 'pointer'\n      actionState.mouseActive = true\n    }),\n    grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (mouseOut) {\n        mouseOut({\n          col: e.col,\n          row: e.row,\n        })\n      }\n      grid.getElement().style.cursor = ''\n      actionState.mouseActive = false\n    }),\n  ]\n}\nexport function bindCellKeyAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    acceptKeys = [],\n  }: {\n    action: (option: CellAddress) => void\n    acceptKeys?: number[]\n  }\n) {\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n  acceptKeys = [...acceptKeys, KEY_ENTER, KEY_SPACE]\n  return [\n    // enter key down\n    grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n      if (acceptKeys.indexOf(e.keyCode) === -1) {\n        return\n      }\n      if (grid.keyboardOptions?.moveCellOnEnter && e.keyCode === KEY_ENTER) {\n        // When moving with the enter key, no action is taken with the enter key.\n        return\n      }\n      const sel = grid.selection.select\n      if (!isTarget(sel.col, sel.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(sel.row))) {\n        return\n      }\n      action({\n        col: sel.col,\n        row: sel.row,\n      })\n      event.cancel(e.event)\n    }),\n  ]\n}\n","import {\n  BaseActionOption,\n  ListGridAPI,\n  EventListenerId,\n  LayoutObjectId,\n  CellAddress,\n} from '../../ts-types'\n\nexport abstract class BaseAction<T> {\n  protected _disabled: boolean | ((record: T) => boolean)\n  public constructor(options: BaseActionOption<T> = {}) {\n    this._disabled = options.disabled || false\n  }\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public set disabled(disabled) {\n    if (this._disabled !== disabled) {\n      this._disabled = disabled\n      this.onChangeDisabledInternal()\n    }\n  }\n  public abstract get editable(): boolean\n  public abstract clone(): BaseAction<T>\n  public abstract bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[]\n\n  public abstract onPasteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    value: string\n  ): void\n  public abstract onDeleteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ): void\n  protected onChangeDisabledInternal(): void {\n    // nothing\n  }\n}\n","import {\n  ActionListener,\n  ActionOption,\n  ListGridAPI,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { emptyFn, isDef } from '../../internal/utils'\nimport { isDisabledRecord } from './action-utils'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { BaseAction } from './BaseAction'\n\nexport class Action<T> extends BaseAction<T> {\n  private _action: ActionListener<T>\n  public constructor(options: ActionOption<T> = {}) {\n    super(options)\n    this._action = options.action || emptyFn\n  }\n  get editable(): boolean {\n    return false\n  }\n  public get action() {\n    return this._action\n  }\n  public set action(action) {\n    this._action = action\n  }\n  public clone(): Action<T> {\n    return new Action(this)\n  }\n  public getState(_grid: any): any {\n    return {}\n  }\n  public bindGridEvent(grid: ListGridAPI<T>, cellId: LayoutObjectId): any[] {\n    const state = this.getState(grid)\n    const action = (cell: CellAddress) => {\n      if (isDisabledRecord(this.disabled, grid, cell.row)) {\n        return\n      }\n      const record = grid.getRowRecord(cell.row)\n      this._action.apply(this, [\n        record,\n        {\n          cell,\n          grid,\n        },\n      ])\n    }\n    const actionMouse = (cell: CellAddress) => {\n      if (state.mouseActive) {\n        action(cell)\n      }\n    }\n    const mouseOut = (cell: CellAddress) => {\n      delete state.mouseRelativePos\n      delete state.mouseActiveCell\n      delete state.mouseActive\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n    }\n    const mouseMove = (cell: CellAddress, event: any) => {\n      if (isDisabledRecord(this.disabled, grid, cell.row)) {\n        return false\n      }\n      state.mouseRelativePos = grid._getMouseRelativePoint(event)\n      state.mouseActiveCell = {\n        col: cell.col,\n        row: cell.row,\n      }\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n      return isDef(state.mouseActive) ? state.mouseActive : true\n    }\n\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action: actionMouse,\n        mouseMove,\n        mouseOut,\n        mouseOver: mouseMove,\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action,\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(): void {\n    // noop\n  }\n  public onDeleteCellRangeBox(): void {\n    // noop\n  }\n}\n","import { BaseAction } from './BaseAction'\nimport { EditorOption } from '../../ts-types'\n\nexport abstract class Editor<T> extends BaseAction<T> {\n  protected _readOnly: boolean | ((record: T) => boolean)\n  public constructor(options: EditorOption<T> = {}) {\n    super(options)\n    this._readOnly = options.readOnly || (options as any).readonly || false\n  }\n  public get editable(): boolean {\n    return true\n  }\n  public get readOnly() {\n    return this._readOnly\n  }\n  public set readOnly(readOnly) {\n    if (this._readOnly !== readOnly) {\n      this._readOnly = readOnly\n      this.onChangeReadOnlyInternal()\n    }\n  }\n  public get readonly() {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    return this.readOnly\n  }\n  public set readonly(readOnly) {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    this.readOnly = readOnly\n  }\n  protected onChangeReadOnlyInternal() {\n    // nothing\n  }\n}\n","import {\n  EditorOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { KEY_ENTER, KEY_F2 } from '../../core/draw-grid/KEY_CODE'\nimport { event, cellEquals } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { Editor } from './Editor'\n\nimport Rect from '../../internal/Rect'\n\nfunction _inAttachCellArea<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number,\n  event: TouchEvent | MouseEvent\n) {\n  let bool = false\n  const relativePos = grid._getMouseRelativePoint(event)\n  const rect = grid.getAttachCellsArea(grid.getCellRange(col, row)).rect\n  if (relativePos) {\n    if ((rect as Rect).inPoint(relativePos.x, relativePos.y)) {\n      bool = true\n    }\n  }\n  return bool\n}\n\nexport abstract class BaseInputEditor<T> extends Editor<T> {\n  public constructor(options: EditorOption<T> = {}) {\n    super(options)\n  }\n  public open(grid: ListGridAPI<T>, cell: CellAddress): boolean {\n    const allowOpen =\n      !isReadOnlyRecord(this.readOnly, grid, cell.row) &&\n      !isDisabledRecord(this.disabled, grid, cell.row)\n    if (allowOpen) {\n      this.onOpenCellInternal(grid, cell)\n    }\n    return allowOpen\n  }\n  public abstract clone(): BaseInputEditor<T>\n  abstract onInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ): void\n  abstract onOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress): void\n  abstract onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    selected: boolean\n  ): void\n  abstract onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    input: HTMLInputElement\n  ): void\n  abstract onGridScrollInternal(grid: ListGridAPI<T>): void\n  public onBeforeKeydownInternal(\n    _grid: ListGridAPI<T>,\n    _keyCode: number,\n    _e: KeyboardEvent,\n    _cellId: LayoutObjectId\n  ) {\n    return true\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const open = (cell: CellAddress): boolean => {\n      return this.open(grid, cell)\n    }\n\n    const input = (cell: CellAddress, value: any) => {\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row)\n      ) {\n        return\n      }\n      this.onInputCellInternal(grid, cell, value)\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      grid.listen(DG_EVENT_TYPE.INPUT_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        input(\n          {\n            col: e.col,\n            row: e.row,\n          },\n          e.value\n        )\n      }),\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        event.cancel(e.event)\n        input(\n          {\n            col: e.col,\n            row: e.row,\n          },\n          e.normalizeValue\n        )\n      }),\n      grid.listen(DG_EVENT_TYPE.DBLCLICK_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (!_inAttachCellArea(grid, e.col, e.row, e.event)) {\n          return\n        }\n        open({\n          col: e.col,\n          row: e.row,\n        })\n        event.cancel(e.event)\n      }),\n      grid.listen(DG_EVENT_TYPE.DBLTAP_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (!_inAttachCellArea(grid, e.col, e.row, e.event)) {\n          return\n        }\n        open({\n          col: e.col,\n          row: e.row,\n        })\n        event.cancel(e.event)\n      }),\n      grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n        if (\n          (e.keyCode !== KEY_F2 && e.keyCode !== KEY_ENTER) ||\n          (e.keyCode === KEY_ENTER && e.event.shiftKey)\n        ) {\n          return\n        }\n        const sel = grid.selection.select\n        if (!isTarget(sel.col, sel.row)) {\n          return\n        }\n        if (\n          this.onBeforeKeydownInternal(grid, e.keyCode, e.event, cellId) ===\n          false\n        ) {\n          return false\n        }\n        if (e.event.ctrlKey || e.event.metaKey) {\n          return\n        }\n        if (\n          open({\n            col: sel.col,\n            row: sel.row,\n          })\n        ) {\n          event.cancel(e.event)\n          e.stopCellMoving()\n        }\n      }),\n      grid.listen(DG_EVENT_TYPE.SELECTED_CELL, (e) => {\n        this.onChangeSelectCellInternal(\n          grid,\n          { col: e.col, row: e.row },\n          e.selected\n        )\n      }),\n      grid.listen(DG_EVENT_TYPE.SCROLL, () => {\n        this.onGridScrollInternal(grid)\n      }),\n      grid.listen(DG_EVENT_TYPE.EDITABLEINPUT_CELL, (cell) => {\n        if (!isTarget(cell.col, cell.row)) {\n          return false\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n          isDisabledRecord(this.disabled, grid, cell.row)\n        ) {\n          return false\n        }\n        return true\n      }),\n      grid.listen(DG_EVENT_TYPE.MODIFY_STATUS_EDITABLEINPUT_CELL, (cell) => {\n        if (!isTarget(cell.col, cell.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n          isDisabledRecord(this.disabled, grid, cell.row)\n        ) {\n          return\n        }\n        const range = grid.getCellRange(cell.col, cell.row)\n        if (\n          range.start.col !== range.end.col ||\n          range.start.row !== range.end.row\n        ) {\n          const { input } = cell\n          const baseRect = grid.getCellRect(cell.col, cell.row)\n          const rangeRect = grid.getCellRangeRect(range)\n          input.style.top = `${(\n            parseFloat(input.style.top) +\n            (rangeRect.top - baseRect.top)\n          ).toFixed()}px`\n          input.style.left = `${(\n            parseFloat(input.style.left) +\n            (rangeRect.left - baseRect.left)\n          ).toFixed()}px`\n          input.style.width = `${rangeRect.width.toFixed()}px`\n          input.style.height = `${rangeRect.height.toFixed()}px`\n        }\n        this.onSetInputAttrsInternal(\n          grid,\n          {\n            col: cell.col,\n            row: cell.row,\n          },\n          cell.input\n        )\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    grid.doChangeValue(cell.col, cell.row, () => value)\n  }\n  public onDeleteCellRangeBox(grid: ListGridAPI<T>, cell: CellAddress): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    grid.doChangeValue(cell.col, cell.row, () => '')\n  }\n}\n","import { KEY_ENTER } from '../../core/draw-grid/KEY_CODE'\nimport { event, isDef } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { bindCellClickAction } from './actionBind'\nimport { BaseInputEditor } from './BaseInputEditor'\nimport {\n  ActionListener,\n  BaseActionInputOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\n\nexport abstract class BaseActionInput<T> extends BaseInputEditor<T> {\n  private _disableInput: boolean | ActionListener<T>\n  private _disableAction: boolean | ActionListener<T>\n  private _action?: ActionListener<T>\n  public constructor(options: BaseActionInputOption<T> = {}) {\n    super(options)\n    this._disableInput = options.disableInput || false\n    this._disableAction = options.disableAction || false\n    this._action = options.action\n  }\n  public get disableInput() {\n    return this._disableInput\n  }\n  public set disableInput(disableInput) {\n    this._disableInput = disableInput\n  }\n  public get disableAction() {\n    return this._disableAction\n  }\n  public set disableAction(disableAction) {\n    this._disableAction = disableAction\n  }\n  public get action() {\n    return this._action\n  }\n  public set action(action) {\n    this._action = action\n  }\n  public onBeforeKeydownInternal(\n    grid: ListGridAPI<T>,\n    keyCode: number,\n    e: KeyboardEvent,\n    cellId: LayoutObjectId\n  ) {\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    const sel = grid.selection.select\n    if (\n      isReadOnlyRecord(this.readOnly, grid, sel.row) ||\n      isDisabledRecord(this.disabled, grid, sel.row) ||\n      !isTarget(sel.col, sel.row) ||\n      !this._action ||\n      this.isDisabledAction(grid, sel)\n    ) {\n      return true\n    }\n    if (\n      (this.isDisabledInput(grid, sel) &&\n        keyCode === KEY_ENTER &&\n        !e.ctrlKey &&\n        !e.metaKey) ||\n      (keyCode === KEY_ENTER && (e.ctrlKey || e.metaKey))\n    ) {\n      const record = grid.getRowRecord(sel.row)\n      if (this._action) {\n        this._action.apply(this, [\n          record,\n          {\n            cell: {\n              col: sel.col,\n              row: sel.row,\n            },\n            grid,\n          },\n        ])\n        event.cancel(e)\n        return false\n      }\n    }\n    return true\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const state = this.getState(grid)\n    const action = (cell: CellAddress) => {\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row) ||\n        !this._action ||\n        this.isDisabledAction(grid, cell)\n      ) {\n        return\n      }\n      if (state.mouseActive) {\n        const record = grid.getRowRecord(cell.row)\n        if (this._action) {\n          this._action.apply(this, [\n            record,\n            {\n              cell,\n              grid,\n            },\n          ])\n        }\n      }\n    }\n    const mouseOut = (cell: CellAddress) => {\n      delete state.mouseRelativePos\n      delete state.mouseActiveCell\n      delete state.mouseActive\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n    }\n    const mouseMove = (cell: CellAddress, event: any) => {\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row) ||\n        !this._action ||\n        this.isDisabledAction(grid, cell)\n      ) {\n        return false\n      }\n      state.mouseRelativePos = grid._getMouseRelativePoint(event)\n      state.mouseActiveCell = {\n        col: cell.col,\n        row: cell.row,\n      }\n      const range = grid.getCellRange(cell.col, cell.row)\n      grid.invalidateCellRange(range)\n      return isDef(state.mouseActive) ? state.mouseActive : true\n    }\n    let ids = super.bindGridEvent(grid, cellId)\n    ids = ids.concat(\n      bindCellClickAction(grid, cellId, {\n        action,\n        mouseMove,\n        mouseOut,\n        mouseOver: mouseMove,\n      })\n    )\n    return ids\n  }\n  public onInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    if (this.isDisabledInput(grid, cell)) {\n      return\n    }\n    this.onActionInputCellInternal(grid, cell, inputValue)\n  }\n  public onOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    if (this.isDisabledInput(grid, cell)) {\n      return\n    }\n    this.onActionOpenCellInternal(grid, cell)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    throw new Error()\n  }\n  public onActionOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    throw new Error()\n  }\n  protected abstract getState(grid: any): any\n  private isDisabledInput(grid: ListGridAPI<T>, cell: CellAddress) {\n    return this.isDisabled(this._disableInput, grid, cell)\n  }\n  private isDisabledAction(grid: ListGridAPI<T>, cell: CellAddress) {\n    return this.isDisabled(this._disableAction, grid, cell)\n  }\n  private isDisabled(\n    p: boolean | ActionListener<T>,\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ) {\n    let isDisabled = false\n    if (p) {\n      if (typeof p === 'function') {\n        const record = grid.getRowRecord(cell.row)\n        if (\n          p.apply(this, [\n            record,\n            {\n              cell,\n              grid,\n            },\n          ])\n        ) {\n          isDisabled = true\n        }\n      } else {\n        isDisabled = true\n      }\n    }\n    return isDisabled\n  }\n}\n","import { isNode } from './utils'\n\nfunction cubicBezier(\n  x2: number,\n  y2: number,\n  x3: number,\n  y3: number\n): EasingFunction {\n  let step: number\n  const err = 0.0001\n\n  x2 *= 3\n  y2 *= 3\n  x3 *= 3\n  y3 *= 3\n\n  return function (t: number): number {\n    let p, a, b, c, d, x, s\n    if (t < 0 || 1 < t) {\n      throw new Error(`${t}`)\n    }\n\n    p = step || t\n\n    do {\n      a = 1 - p\n      b = a * a\n      c = p * p\n      d = c * p\n\n      x = x2 * b * p + x3 * a * c + d\n      s = t - x\n      p += s * 0.5\n    } while (err < Math.abs(s))\n\n    step = p\n    return y2 * b * p + y3 * a * c + d\n  }\n}\n\nconst EASINGS = {\n  linear(p: number): number {\n    return p\n  },\n  easeIn: cubicBezier(0.42, 0.0, 1.0, 1.0),\n  easeOut: cubicBezier(0.0, 0.0, 0.58, 1.0),\n  easeInOut: cubicBezier(0.42, 0.0, 0.58, 1.0),\n}\n\nconst raf: typeof requestAnimationFrame = (isNode\n  ? (): void => {}\n  : window.requestAnimationFrame ||\n    ((fn: () => void): any =>\n      setTimeout(fn, 1))) as typeof requestAnimationFrame\n\nfunction now(): number {\n  return Date.now()\n}\n\nexport type EasingFunction = (t: number) => number\nexport type EasingKind = keyof typeof EASINGS\nexport type StepFunction = (s: number) => void\n/**\n * <pre>\n * Animates.\n * </pre>\n * @param duration - animation time.\n * @param step - step\n * @param easing - easing\n * @returns Deferred object.\n */\nexport function animate(\n  duration: number,\n  step: StepFunction,\n  easing?: EasingKind | EasingFunction\n): {\n  cancel: () => void\n} {\n  const startedAt = now()\n\n  const easingFn: EasingFunction =\n    easing == null\n      ? EASINGS.easeInOut\n      : typeof easing === 'string'\n      ? EASINGS[easing]\n      : easing\n\n  let canceledFlg = false\n  const createAnim = (\n    resolve: (value: any) => void,\n    reject: () => void\n  ): (() => void) => {\n    const anim = (): void => {\n      const point = now() - startedAt\n      if (canceledFlg) {\n        //cancel\n        if (reject) {\n          reject()\n        }\n      } else if (point >= duration) {\n        //end\n        step(1)\n        if (resolve) {\n          resolve(undefined)\n        }\n      } else {\n        step(easingFn(point / duration))\n\n        raf(anim)\n      }\n    }\n    return anim\n  }\n  const cancel = (): void => {\n    canceledFlg = true\n  }\n  if (typeof Promise !== 'undefined') {\n    const result: any = new Promise<unknown>((resolve, reject) => {\n      const anim = createAnim(resolve, reject)\n      step(0)\n      anim()\n    })\n    result.cancel = cancel\n    return result\n  } else {\n    const anim = createAnim(\n      () => {},\n      () => {}\n    )\n    step(0)\n    anim()\n    return {\n      cancel,\n    }\n  }\n}\n","import {\n  EditorOption,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { GridInternal, CheckColumnState } from '../../ts-types-internal'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\nimport { animate } from '../../internal/animate'\nimport { isPromise, event, cellEquals } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord, toggleValue } from './action-utils'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { Editor } from './Editor'\n\nexport abstract class BaseCheckEditor<T> extends Editor<T> {\n  public constructor(options: EditorOption<T> = {}) {\n    super(options)\n  }\n  public bindGridEvent(\n    grid: GridInternal<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const state = this.getState(grid)\n\n    const action = (cell: CellAddress) => {\n      const range = grid.getCellRange(cell.col, cell.row)\n      const cellKey = `${range.start.col}:${range.start.row}`\n      if (\n        isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n        isDisabledRecord(this.disabled, grid, cell.row) ||\n        state.block[cellKey]\n      ) {\n        return\n      }\n      const ret = grid.doChangeValue(cell.col, cell.row, toggleValue)\n      if (ret) {\n        const onChange = () => {\n          // checkbox animation\n          animate(200, (point) => {\n            if (point === 1) {\n              delete state.elapsed[cellKey]\n            } else {\n              state.elapsed[cellKey] = point\n            }\n            grid.invalidateCellRange(range)\n          })\n        }\n        if (isPromise(ret)) {\n          state.block[cellKey] = true\n          ret.then(() => {\n            delete state.block[cellKey]\n            onChange()\n          })\n        } else {\n          onChange()\n        }\n      }\n    }\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          if (isDisabledRecord(this.disabled, grid, e.row)) {\n            return false\n          }\n          state.mouseActiveCell = {\n            col: e.col,\n            row: e.row,\n          }\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n          return true\n        },\n        mouseOut: (e) => {\n          delete state.mouseActiveCell\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n        },\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action: (e) => {\n          const selRange = grid.selection.range\n          const col = grid.selection.select.col\n          for (let row = selRange.start.row; row <= selRange.end.row; row++) {\n            if (!isTarget(col, row)) {\n              continue\n            }\n            action({\n              col,\n              row,\n            })\n          }\n        },\n        acceptKeys: [KEY_ENTER, KEY_SPACE],\n      }),\n      // paste value\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        const pasteValue = e.normalizeValue.trim()\n        grid.doGetCellValue(e.col, e.row, (value) => {\n          const newValue = toggleValue(value)\n          if (`${newValue}`.trim() === pasteValue) {\n            event.cancel(e.event)\n\n            action({\n              col: e.col,\n              row: e.row,\n            })\n          }\n        })\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: GridInternal<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const pasteValue = value.trim()\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      const newValue = toggleValue(value)\n      if (`${newValue}`.trim() === pasteValue) {\n        grid.doChangeValue(cell.col, cell.row, toggleValue)\n      }\n    })\n  }\n  public onDeleteCellRangeBox(): void {\n    // noop\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckColumnState\n}\n","import { ButtonActionOption } from '../../ts-types'\nimport { obj } from '../../internal/utils'\nimport { Action } from './Action'\nimport { getButtonColumnStateId } from '../../internal/symbolManager'\n\nconst BUTTON_COLUMN_STATE_ID = getButtonColumnStateId()\n\nexport class ButtonAction<T> extends Action<T> {\n  public constructor(options: ButtonActionOption<T> = {}) {\n    super(options)\n  }\n  public getState(grid: any): any {\n    if (!grid[BUTTON_COLUMN_STATE_ID]) {\n      obj.setReadonly(grid, BUTTON_COLUMN_STATE_ID, {})\n    }\n    return grid[BUTTON_COLUMN_STATE_ID]\n  }\n}\n","import { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckEditor } from './BaseCheckEditor'\nimport { getCheckColumnStateId } from '../../internal/symbolManager'\n\nconst CHECK_COLUMN_STATE_ID = getCheckColumnStateId()\n\nexport class CheckEditor<T> extends BaseCheckEditor<T> {\n  public clone(): CheckEditor<T> {\n    return new CheckEditor(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[CHECK_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, CHECK_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { getSwitchColumnStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckEditor } from './BaseCheckEditor'\n\nconst SWITCH_COLUMN_STATE_ID = getSwitchColumnStateId()\n\nexport class SwitchEditor<T> extends BaseCheckEditor<T> {\n  public clone(): SwitchEditor<T> {\n    return new SwitchEditor(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[SWITCH_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, SWITCH_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import { isDef } from './utils'\n\nexport function createElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  {\n    classList,\n    text,\n    html,\n  }: { classList?: string[] | string; text?: string; html?: string } = {}\n): HTMLElementTagNameMap[K] {\n  const element = document.createElement(tagName)\n  if (classList) {\n    if (Array.isArray(classList)) {\n      element.classList.add(...classList)\n    } else {\n      element.classList.add(classList)\n    }\n  }\n  if (text) {\n    element.textContent = text\n  } else if (html) {\n    element.innerHTML = html\n  }\n  return element\n}\n\nexport function empty(dom: HTMLElement): void {\n  let c\n  while ((c = dom.firstChild)) {\n    dom.removeChild(c)\n  }\n}\n\nfunction isNode(arg: HTMLElement | string): arg is HTMLElement {\n  return !!((arg as any).nodeType && (arg as any).nodeName)\n}\n\nfunction toNode(arg: HTMLElement | string): HTMLElement | HTMLElement[] {\n  if (isNode(arg)) {\n    return arg\n  }\n  const dom = createElement('div', { html: arg })\n  return Array.prototype.slice.call(dom.childNodes) as HTMLElement[]\n}\n\nexport function toNodeList(\n  arg: HTMLElement | HTMLElement[] | string\n): HTMLElement[] {\n  if (Array.isArray(arg)) {\n    const result: HTMLElement[] = []\n    arg.forEach((e) => {\n      result.push(...toNodeList(e))\n    })\n    return result\n  }\n  const node = toNode(arg)\n  return Array.isArray(node) ? (node as HTMLElement[]) : [node]\n}\n\nexport function appendHtml(\n  dom: HTMLElement,\n  inner: HTMLElement | HTMLElement[] | string\n): void {\n  toNodeList(inner).forEach((node) => {\n    dom.appendChild(node)\n  })\n}\n\nexport function disableFocus(el: HTMLElement): void {\n  el.dataset.disableBeforeTabIndex = `${el.tabIndex}`\n  el.tabIndex = -1\n  Array.prototype.slice\n    .call(el.children || el.childNodes, 0)\n    .forEach(disableFocus)\n}\n\nexport function enableFocus(el: HTMLElement): void {\n  if ('disableBeforeTabIndex' in el.dataset) {\n    el.tabIndex = Number(el.dataset.disableBeforeTabIndex)\n  }\n  Array.prototype.slice\n    .call(el.children || el.childNodes, 0)\n    .forEach(enableFocus)\n}\n\nexport function isFocusable(el: Node): el is HTMLElement {\n  return (\n    isDef((el as HTMLElement).tabIndex) && (el as HTMLElement).tabIndex > -1\n  )\n}\n\nexport function findPrevSiblingFocusable(el: HTMLElement): HTMLElement | null {\n  let n = el.previousSibling\n  while (n && !isFocusable(n)) {\n    n = n.previousSibling\n  }\n  return n\n}\n\nexport function findNextSiblingFocusable(el: HTMLElement): HTMLElement | null {\n  let n = el.nextSibling\n  while (n && !isFocusable(n)) {\n    n = n.nextSibling\n  }\n  return n\n}\n","import { AnyFunction, EventListenerId } from '../ts-types'\nimport { EventTarget as CustomEventTarget } from '../core/EventTarget'\nimport { each } from './utils'\n\nlet eventHandlerNextId = 1\n\ntype EventHandlerTarget = EventTarget | CustomEventTarget\ntype Listener = AnyFunction\ntype EventListenerObject = {\n  target: EventHandlerTarget\n  type: string\n  listener: Listener\n  options: any[]\n}\n\nexport class EventHandler {\n  private _listeners: {\n    [key: string]: EventListenerObject\n  } = {}\n  public on<TYPE extends keyof GlobalEventHandlersEventMap>(\n    target: EventHandlerTarget,\n    type: TYPE,\n    listener: (event: GlobalEventHandlersEventMap[TYPE]) => any,\n    ...options: any[]\n  ): EventListenerId\n  public on(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: any[]\n  ): EventListenerId\n  public on(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: any[]\n  ): EventListenerId {\n    if (target.addEventListener) {\n      target.addEventListener(type, listener, ...(options as []))\n    }\n    const obj = {\n      target,\n      type,\n      listener,\n      options,\n    }\n    const id = eventHandlerNextId++\n    this._listeners[id] = obj\n    return id\n  }\n  public once<TYPE extends keyof GlobalEventHandlersEventMap>(\n    target: EventHandlerTarget,\n    type: TYPE,\n    listener: (event: GlobalEventHandlersEventMap[TYPE]) => any,\n    ...options: any[]\n  ): EventListenerId\n  public once(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: (boolean | AddEventListenerOptions)[]\n  ): EventListenerId\n  public once(\n    target: EventHandlerTarget,\n    type: string,\n    listener: Listener,\n    ...options: (boolean | AddEventListenerOptions)[]\n  ): EventListenerId {\n    const id = this.on(\n      target,\n      type,\n      (...args) => {\n        this.off(id)\n        listener(...args)\n      },\n      ...options\n    )\n    return id\n  }\n  public tryWithOffEvents(\n    target: EventHandlerTarget,\n    type: string,\n    call: () => void\n  ): void {\n    const list: EventListenerObject[] = []\n    try {\n      each(this._listeners, (obj) => {\n        if (obj.target === target && obj.type === type) {\n          if (obj.target.removeEventListener) {\n            obj.target.removeEventListener(\n              obj.type,\n              obj.listener,\n              ...(obj.options as [])\n            )\n          }\n          list.push(obj)\n        }\n      })\n      call()\n    } finally {\n      list.forEach((obj) => {\n        if (obj.target.addEventListener) {\n          obj.target.addEventListener(\n            obj.type,\n            obj.listener,\n            ...(obj.options as [])\n          )\n        }\n      })\n    }\n  }\n  public off(id: EventListenerId | null | undefined): void {\n    if (id == null) {\n      return\n    }\n    const obj = this._listeners[id]\n    if (!obj) {\n      return\n    }\n    delete this._listeners[id]\n    if (obj.target.removeEventListener) {\n      obj.target.removeEventListener(\n        obj.type,\n        obj.listener,\n        ...(obj.options as [])\n      )\n    }\n  }\n  public fire(target: EventTarget, type: string, ...args: any[]): void {\n    each(this._listeners, (obj) => {\n      if (obj.target === target && obj.type === type) {\n        obj.listener.call(obj.target, ...args)\n      }\n    })\n  }\n  public hasListener(target: EventTarget, type: string): boolean {\n    let result = false\n    each(this._listeners, (obj) => {\n      if (obj.target === target && obj.type === type) {\n        result = true\n      }\n    })\n    return result\n  }\n  public clear(): void {\n    each(this._listeners, (obj) => {\n      if (obj.target.removeEventListener) {\n        obj.target.removeEventListener(\n          obj.type,\n          obj.listener,\n          ...(obj.options as [])\n        )\n      }\n    })\n    this._listeners = {}\n  }\n  public dispose(): void {\n    this.clear()\n  }\n}\n","import styleCss from './style.css'\n\nfunction styleInject(id: string, css: string) {\n  if (css && typeof document !== 'undefined') {\n    let styleElement\n    if (id) {\n      const el = document.getElementById(id)\n      if (el instanceof HTMLStyleElement) {\n        styleElement = el as HTMLStyleElement\n      }\n    }\n    if (!styleElement) {\n      styleElement = document.createElement('style')\n      styleElement.type = 'text/css'\n      styleElement.id = id\n      const headElement =\n        document.head || document.getElementsByTagName('head')[0]\n      headElement.appendChild(styleElement)\n    }\n    if ((styleElement as any).styleSheet) {\n      ;(styleElement as any).styleSheet.cssText = css\n    } else {\n      styleElement.innerHTML = ''\n      styleElement.appendChild(document.createTextNode(css))\n    }\n  }\n}\n\nfunction getScrollBarWidth() {\n  // https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes\n  const inner = document.createElement('p')\n  inner.style.width = '100%'\n  inner.style.height = '200px'\n\n  const outer = document.createElement('div')\n  outer.style.position = 'absolute'\n  outer.style.top = '0px'\n  outer.style.left = '0px'\n  outer.style.visibility = 'hidden'\n  outer.style.width = '200px'\n  outer.style.height = '150px'\n  outer.style.overflow = 'hidden'\n  outer.appendChild(inner)\n\n  document.body.appendChild(outer)\n  const w1 = inner.offsetWidth\n  outer.style.overflow = 'scroll'\n  let w2 = inner.offsetWidth\n  if (w1 === w2) {\n    w2 = outer.clientWidth\n  }\n\n  document.body.removeChild(outer)\n\n  return w1 - w2\n}\n\nlet SCROLLBAR_SIZE: number = 0\n\nconst isPerfectScrollbar = () => !!(window as any).PerfectScrollbar\n\nconst initDocument = () => {\n  let css = styleCss\n  if (isPerfectScrollbar()) {\n    css += `\n      .kaka-grid .grid-scroll-end-point {\n        width: 1px;\n        height: 1px;\n      }`\n  } else {\n    SCROLLBAR_SIZE = getScrollBarWidth() || 10\n    css += `\n      .kaka-grid .grid-scrollable {\n        overflow: scroll;\n      }\n      .kaka-grid .grid-scroll-end-point {\n        width: ${SCROLLBAR_SIZE}px;\n        height: ${SCROLLBAR_SIZE}px;\n      }\n      .kaka-grid > canvas {\n        width: -webkit-calc(100% - ${SCROLLBAR_SIZE}px);\n        width: calc(100% - ${SCROLLBAR_SIZE}px);\n        height: -webkit-calc(100% - ${SCROLLBAR_SIZE}px);\n        height: calc(100% - ${SCROLLBAR_SIZE}px);\n      }`\n  }\n  styleInject('style', css)\n}\n\nconst style = {\n  initDocument() {\n    style.initDocument = () => {\n      // nothing\n    }\n    initDocument()\n  },\n  getScrollBarSize() {\n    return SCROLLBAR_SIZE\n  },\n  inject: styleInject,\n  isPerfectScrollbar,\n}\n\nexport default style\n","import { EventHandler } from '../../../internal/EventHandler'\n\nexport function setInputValue(input: HTMLInputElement, value: string): void {\n  const sign = input.type === 'number' && value === '-'\n  if (sign) {\n    // When `type=\"number\"`, the minus sign is not accepted, so change it to `type=\"text\"` once.\n    input.type = ''\n    let handler: EventHandler | null = new EventHandler()\n    const dispose = (): void => {\n      if (handler) {\n        handler.dispose()\n        handler = null\n      }\n    }\n    handler.once(input, 'input', (_e) => {\n      input.type = 'number'\n      dispose()\n    })\n    handler.once(input, 'blur', (_e) => {\n      dispose()\n    })\n  }\n\n  input.value = value ?? ''\n}\n","import { getInlineEditingStateId } from '../../internal/symbolManager'\nimport { GridInternal, InlineEditingState } from 'src/ts-types-internal'\nimport { obj } from '../../internal/utils'\n\nconst INLINE_EDITING_STATE_ID = getInlineEditingStateId()\n\nexport function getInlineEditingState<T>(\n  grid: GridInternal<T>\n): InlineEditingState {\n  let state = grid[INLINE_EDITING_STATE_ID]\n  if (!state) {\n    state = {}\n    obj.setReadonly(grid, INLINE_EDITING_STATE_ID, state)\n  }\n  return state\n}\n\nexport function toBoolean(val: unknown): boolean {\n  if (typeof val === 'string') {\n    if (val === 'false') {\n      return false\n    } else if (val === 'off') {\n      return false\n    } else if (/^0+$/.exec(val)) {\n      return false\n    }\n  }\n  return Boolean(val)\n}\n","import { ListGridAPI } from '../../../ts-types'\nimport { KEY_ENTER, KEY_ESC, KEY_TAB } from '../../../core/draw-grid/KEY_CODE'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport { isDef, event } from '../../../internal/utils'\nimport inlineInputElementCss from './InlineInputElement.css'\nimport { setInputValue } from './input-value-handler'\nimport { getInlineEditingState } from '../../../columns/utils'\n\nconst CLASSNAME_IIE = 'kaka-grid__inline-input'\n\nfunction createInputElement() {\n  style.inject('inlineInputElement', inlineInputElementCss)\n  return createElement('input', { classList: CLASSNAME_IIE })\n}\n\nconst INPUT_EDITOR_TYPE = 'editor_type'\nconst BEFORE_INPUT_VALUE = 'before_value'\n\nfunction setInlineInputValue(\n  type: string = '',\n  input: HTMLInputElement,\n  value: any,\n  inputValue?: string\n) {\n  input.dataset[INPUT_EDITOR_TYPE] = type\n  if (type === 'date') {\n    if (value instanceof Date) {\n      if (input.type === 'text') {\n        input.value = value.toJSON().slice(0, 10)\n      } else {\n        input.valueAsDate = value\n      }\n    } else {\n      input.value = ''\n    }\n  } else if (type === 'number') {\n    if (typeof value === 'number' || typeof value === 'string') {\n      input.value = String(value)\n    } else {\n      input.value = ''\n    }\n  } else if (isDef(value)) {\n    input.value = value\n  } else {\n    input.value = ''\n  }\n  input.dataset[BEFORE_INPUT_VALUE] = input.value\n  if (inputValue) {\n    setInputValue(input, inputValue)\n  }\n}\n\nfunction getInlineInputValue(input: HTMLInputElement) {\n  let value: any\n  switch (input.dataset[INPUT_EDITOR_TYPE]) {\n    case 'date':\n      if (\n        /(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)/.test(\n          input.value\n        )\n      ) {\n        value = new Date(input.value)\n      } else {\n        value = null\n      }\n      break\n    case 'number':\n      value = input.value ? Number(input.value) : null\n      if (isNaN(value)) {\n        value = null\n      }\n      break\n    default:\n      value = input.value\n      break\n  }\n  return value\n}\n\nfunction isInputValueChanged(input: HTMLInputElement) {\n  return input.value !== input.dataset[BEFORE_INPUT_VALUE]\n}\n\ntype EditorProps = {\n  type?: string\n  classList?: string[]\n  enabledMouseWheel: boolean\n}\n\ntype ActiveData<T> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps\n}\n\nfunction setInputAttrs<T>(\n  editor: EditorProps,\n  _grid: ListGridAPI<T>,\n  input: HTMLInputElement,\n  fixedType?: string\n): void {\n  const { classList, type } = editor\n  if (classList) {\n    input.classList.add(...classList)\n  }\n  try {\n    input.type = fixedType || type || ''\n  } catch (e) {\n    input.type = ''\n  }\n}\n\nexport class InlineInputElement<T> {\n  public static setInputAttrs<T>(\n    editor: EditorProps,\n    grid: ListGridAPI<T>,\n    input: HTMLInputElement,\n    fixedType?: string\n  ) {\n    setInputAttrs(editor, grid, input, fixedType)\n  }\n  private _handler: EventHandler\n  private _input: HTMLInputElement\n  private _beforePropEditor?: EditorProps | null\n  private _activeData?: ActiveData<T> | null\n  private _attaching: boolean\n  private _enabledMouseWheel: boolean = false\n  public constructor() {\n    this._handler = new EventHandler()\n    this._input = createInputElement()\n    this._bindInputEvents()\n  }\n  public dispose(): void {\n    const input = this._input\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    input.parentElement?.removeChild(input)\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps,\n    col: number,\n    row: number,\n    value: string,\n    inputValue?: string\n  ): void {\n    const input = this._input\n    this._enabledMouseWheel = editor.enabledMouseWheel\n\n    if (input.parentElement) {\n      // 解决 chrome 下 Failed to execute 'appendChild' on 'Node': The node to be removed is no longer a child of this node. Perhaps it was moved in a 'blur' event handler? 问题\n      // 问题原因：\n      //  正在输入的时候，双击其他单元格，正常情况要先触发 blur 再执行此方法，但 chrome 有时会延后执行 blur\n      //  element.appendChild(input) 执行此行代码的过程中会执行 blur 事件内容，导致此错误\n      // 解决办法：\n      //  如果发现 blur 还没有执行，则不执行此方法\n      return\n    }\n\n    const handler = this._handler\n\n    if (this._beforePropEditor) {\n      const { classList } = this._beforePropEditor\n      if (classList) {\n        input.classList.remove(...classList)\n      }\n    }\n\n    input.style.font = grid.font || '16px sans-serif'\n\n    const { element, rect, padding } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    input.style.top = `${rect.top.toFixed()}px`\n    input.style.left = `${rect.left.toFixed()}px`\n    input.style.width = `${rect.width.toFixed()}px`\n    input.style.height = `${rect.height.toFixed()}px`\n    input.style.paddingTop = `${padding[0]}px`\n    input.style.paddingRight = `${padding[1]}px`\n    input.style.paddingBottom = `${padding[2]}px`\n    input.style.paddingLeft = `${padding[3]}px`\n    element.appendChild(input)\n\n    setInputAttrs(editor, grid, input)\n    setInlineInputValue(editor.type, input, value, inputValue)\n\n    this._activeData = { grid, col, row, editor }\n    this._beforePropEditor = editor\n\n    const focus = () => {\n      input.focus()\n\n      const end = input.value.length\n      try {\n        if (typeof input.selectionStart !== 'undefined') {\n          input.selectionStart = end\n          input.selectionEnd = end\n          return\n        }\n      } catch (e) {\n        // ignore\n      }\n      if ((document as any).selection) {\n        const range = (input as any).createTextRange()\n        range.collapse()\n        range.moveEnd('character', end)\n        range.moveStart('character', end)\n        range.select()\n      }\n    }\n    const safeInputFocus = () => {\n      handler.tryWithOffEvents(input, 'blur', () => {\n        focus()\n      })\n      const state = getInlineEditingState(grid)\n      state.cellRange = grid.getCellRange(col, row)\n      grid.invalidateCellRange(state.cellRange)\n    }\n\n    this._attaching = true\n    setTimeout(() => {\n      safeInputFocus()\n      this._attaching = false\n    })\n  }\n  public detach(gridFocus?: boolean) {\n    if (this._isActive()) {\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      const input = this._input\n      this._handler.tryWithOffEvents(input, 'blur', () => {\n        if (input.parentElement) {\n          input.parentElement.removeChild(input)\n        }\n      })\n      const state = getInlineEditingState(grid)\n      delete state.cellRange\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    delete this._activeData\n    this._enabledMouseWheel = false\n  }\n  public doChangeValue() {\n    if (!this._isActive()) {\n      return\n    }\n    if (isInputValueChanged(this._input)) {\n      const value = getInlineInputValue(this._input)\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      grid.doChangeValue(col, row, () => value)\n    }\n  }\n  private _isActive() {\n    const input = this._input\n    if (!input || !input.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindInputEvents() {\n    const handler = this._handler\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 终止事件传播\n    handler.on(input, 'click', stopPropagationOnly)\n    handler.on(input, 'mousedown', stopPropagationOnly)\n    handler.on(input, 'touchstart', stopPropagationOnly)\n    handler.on(input, 'dblclick', stopPropagationOnly)\n    handler.on(input, 'mousewheel', (e) => {\n      if (!this._enabledMouseWheel) {\n        e.preventDefault()\n      }\n    })\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n    })\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      }\n    })\n    handler.on(input, 'blur', (e) => {\n      this.doChangeValue()\n      this.detach()\n    })\n  }\n  private _onKeydownEnter(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n\n    const { grid } = this._activeData!\n\n    this.doChangeValue()\n    this.detach(true)\n\n    event.cancel(e)\n\n    if (grid.keyboardOptions?.moveCellOnEnter) {\n      grid.onKeyDownMove(e)\n    }\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n\n    const { grid } = this._activeData!\n    if (!grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    this.doChangeValue()\n    this.detach(true)\n    grid.onKeyDownMove(e)\n  }\n}\n","import {\n  InlineInputEditorOption,\n  ListGridAPI,\n  CellAddress,\n} from '../../ts-types'\nimport { obj } from '../../internal/utils'\nimport { BaseActionInput } from './BaseActionInput'\nimport { InlineInputElement } from './internal/InlineInputElement'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nlet globalInlineInputElement: InlineInputElement<any> | null = null\nlet globalInlineInputBindGridCount = 0\n\nfunction attachInput<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineInputEditor<T>,\n  value: any,\n  inputValue?: string\n) {\n  if (!globalInlineInputElement) {\n    globalInlineInputElement = new InlineInputElement()\n  }\n  const state = (editor as any).getState(grid)\n  if (!state.element) {\n    state.element = globalInlineInputElement\n    globalInlineInputBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineInputBindGridCount--\n        if (!globalInlineInputBindGridCount && globalInlineInputElement) {\n          globalInlineInputElement.dispose()\n          globalInlineInputElement = null\n        }\n      },\n    })\n  }\n\n  globalInlineInputElement.attach(\n    grid,\n    editor,\n    cell.col,\n    cell.row,\n    value,\n    inputValue\n  )\n}\nfunction detachInput(gridFocus?: boolean) {\n  if (globalInlineInputElement) {\n    globalInlineInputElement.detach(gridFocus)\n  }\n}\nfunction doChangeValue<T>(_grid: ListGridAPI<T>) {\n  if (globalInlineInputElement) {\n    globalInlineInputElement.doChangeValue()\n  }\n}\n\nexport class InlineInputEditor<T> extends BaseActionInput<T> {\n  private _classList?: string | string[]\n  private _type?: string\n  private _enabledMouseWheel: boolean\n  public constructor(options: InlineInputEditorOption<T> = {}) {\n    super(options)\n    this._classList = options.classList\n    this._type = options.type\n    this._enabledMouseWheel = !!options.enabledMouseWheel\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get type() {\n    return this._type\n  }\n  public set type(type) {\n    this._type = type\n  }\n  public get enabledMouseWheel() {\n    return this._enabledMouseWheel\n  }\n  public set enabledMouseWheel(enabled) {\n    this._enabledMouseWheel = enabled\n  }\n  public clone(): InlineInputEditor<T> {\n    return new InlineInputEditor(this)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ): void {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value, inputValue)\n    })\n  }\n  public onActionOpenCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ): void {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    _selected: boolean\n  ): void {\n    doChangeValue(grid)\n    detachInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    doChangeValue(grid)\n    detachInput(true)\n  }\n  public onChangeDisabledInternal(): void {\n    // cancel input\n    detachInput(true)\n  }\n  public onChangeReadOnlyInternal(): void {\n    // cancel input\n    detachInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    input: HTMLInputElement\n  ): void {\n    InlineInputElement.setInputAttrs(this, grid, input, 'text')\n  }\n  protected getState(grid: any): any {\n    if (!grid[INLINE_INPUT_EDITOR_STATE_ID]) {\n      obj.setReadonly(grid, INLINE_INPUT_EDITOR_STATE_ID, {})\n    }\n    return grid[INLINE_INPUT_EDITOR_STATE_ID]\n  }\n}\n","import { ListGridAPI } from '../../../ts-types'\nimport {\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_ESC,\n  KEY_UP,\n  KEY_TAB,\n} from '../../../core/draw-grid/KEY_CODE'\nimport {\n  createElement,\n  findPrevSiblingFocusable,\n  isFocusable,\n  appendHtml,\n  empty,\n  findNextSiblingFocusable,\n} from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport {\n  isDef,\n  isDefString,\n  getOrApply,\n  str,\n  event,\n} from '../../../internal/utils'\nimport InlineLookupElementCss from './InlineLookupElement.css'\nimport { getInlineEditingState } from '../../../columns/utils'\n\ntype EditorProps<T, L> = {\n  type?: string\n  classList?: string[]\n  valueField?: string\n  valueType: 'string' | 'number'\n  captionField?: string\n  filterFields: string | string[]\n  filter?: (lookupRecord: L, record: T) => boolean\n  allowOtherInput: boolean | ((rec: T) => boolean)\n  disableFilterRecords: boolean\n  disableFilterSort: boolean\n  dropdownTemplate?: (...values: any[]) => string\n  dropdownEmptyTemplate?: (...values: any[]) => string\n}\n\ntype ActiveData<T, L> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps<T, L>\n  dropdownInfo: {\n    records: L[]\n    valueField: string\n    valueType: 'string' | 'number'\n    filterFields: string[]\n    captionField: string\n    allowOtherInput: boolean\n    disableFilterRecords: boolean\n    disableFilterSort: boolean\n    beforeRecord?: L\n    emptyRecord?: L\n    dropdownTemplate: (...values: any[]) => string\n    dropdownEmptyTemplate: (...values: any[]) => string\n  }\n}\n\nconst CLASSNAME_ILE = 'kaka-grid__inline-lookup'\nconst INPUT_CLASSNAME_ILE = `${CLASSNAME_ILE}__input`\nconst DROPDOWN_CLASSNAME_ILE = `${CLASSNAME_ILE}__dropdown`\nconst DROPDOWN_HIDDEN_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--hidden`\nconst DROPDOWN_SHOWN_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--shown`\nconst DROPDOWN_RIGHT_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--right`\nconst DROPDOWN_BOTTOM_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}--bottom`\nconst DROPDOWN_ITEM_CLASSNAME_ILE = `${DROPDOWN_CLASSNAME_ILE}-item`\nconst DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE = `${DROPDOWN_ITEM_CLASSNAME_ILE}--empty`\nconst DROPDOWN_ITEM_OTHER_CLASSNAME_ILE = `${DROPDOWN_ITEM_CLASSNAME_ILE}--other`\nconst DROPDOWN_ITEM_FIRST_CLASSNAME_ILE = `${DROPDOWN_ITEM_CLASSNAME_ILE}--first`\nconst DEFAULT_DROPDOWN_VALUE_FIELD = 'id'\n\nfunction highlight(data: string, search: string) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: booeyOH\n  // +   improved by: Ates Goral (http://magnetiq.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   bugfixed by: Onno Marsman\n  // *     example 1: preg_quote(\"$40\");\n  // *     returns 1: '\\$40'\n  // *     example 2: preg_quote(\"*RRRING* Hello?\");\n  // *     returns 2: '\\*RRRING\\* Hello\\?'\n  // *     example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\");\n  // *     returns 3: '\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}\\=\\!\\<\\>\\|\\:'\n  const s = (search + '').replace(/([\\\\.+*?[^\\]$(){}=!<>|:])/g, '\\\\$1')\n  return s ? data.replace(new RegExp('(' + s + ')', 'gi'), '<b>$1</b>') : data\n}\n\nfunction createLookupElement() {\n  style.inject('InlineLookupElement', InlineLookupElementCss)\n  const element = createElement('div', { classList: CLASSNAME_ILE })\n  const input = createElement('input', { classList: INPUT_CLASSNAME_ILE })\n  const ul = createElement('ul', { classList: DROPDOWN_CLASSNAME_ILE })\n  ul.tabIndex = -1\n  element.appendChild(input)\n  element.appendChild(ul)\n  return element\n}\n\nconst LOOKUP_BEFORE_VALUE = 'before_value'\nconst LOOKUP_SELECT_VALUE = 'select_value'\nconst LOOKUP_VALUE_TYPE = 'value_type'\n\nfunction setLookupInputValue(\n  type: 'string' | 'number',\n  input: HTMLInputElement,\n  value: any,\n  captionValue: string,\n  inputValue?: string\n) {\n  input.value = captionValue\n  input.dataset[LOOKUP_VALUE_TYPE] = type\n  input.dataset[LOOKUP_BEFORE_VALUE] = JSON.stringify(value)\n  input.dataset[LOOKUP_SELECT_VALUE] = JSON.stringify(value)\n  if (inputValue) {\n    input.value = inputValue\n  }\n}\n\nfunction getLookupInputValue(input: HTMLInputElement) {\n  let value = JSON.parse(input.dataset[LOOKUP_SELECT_VALUE] || 'null')\n  if (input.dataset[LOOKUP_VALUE_TYPE] === 'number' && isDef(value)) {\n    value = value - 0\n    if (isNaN(value)) {\n      value = null\n    }\n  }\n  return value\n}\n\nfunction isLookupInputValueChanged(input: HTMLInputElement) {\n  return (\n    input.dataset[LOOKUP_BEFORE_VALUE] !== input.dataset[LOOKUP_SELECT_VALUE]\n  )\n}\n\nfunction findDropdownItemParents(target: HTMLElement) {\n  let el: HTMLElement | null = target\n  while (!el.classList.contains(DROPDOWN_ITEM_CLASSNAME_ILE)) {\n    el = el.parentElement\n    if (!el || el.classList.contains(DROPDOWN_CLASSNAME_ILE)) {\n      return undefined\n    }\n  }\n  return el\n}\n\nexport class InlineLookupElement<T, L> {\n  public static setInputAttrs<T, L>(\n    _editor: EditorProps<T, L>,\n    _grid: ListGridAPI<T>,\n    input: HTMLInputElement\n  ): void {\n    input.type = 'text'\n  }\n  private _handler: EventHandler\n  private _lookup: HTMLDivElement\n  private _input: HTMLInputElement\n  private _dropdown: HTMLUListElement\n  private _attaching: boolean = false\n  private _beforeValue?: string\n  private _activeData?: ActiveData<T, L>\n  private _beforePropEditor?: EditorProps<T, L> | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._lookup = createLookupElement()\n    this._input = this._lookup.querySelector(\n      `.${INPUT_CLASSNAME_ILE}`\n    ) as HTMLInputElement\n    this._dropdown = this._lookup.querySelector(\n      `.${DROPDOWN_CLASSNAME_ILE}`\n    ) as HTMLUListElement\n    this._bindInputEvents()\n  }\n  public dispose(): void {\n    const lookup = this._lookup\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    lookup.parentElement?.removeChild(lookup)\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps<T, L>,\n    col: number,\n    row: number,\n    value: any,\n    lookupRecords: L[],\n    inputValue?: string\n  ) {\n    const handler = this._handler\n    const lookup = this._lookup\n    const input = this._input\n\n    if (this._beforePropEditor) {\n      this._unbindLookupProps(grid, lookup, input, this._beforePropEditor)\n    }\n\n    const { element, rect, padding } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    lookup.style.top = `${rect.top.toFixed()}px`\n    lookup.style.left = `${rect.left.toFixed()}px`\n    lookup.style.width = `${rect.width.toFixed()}px`\n    lookup.style.height = `${rect.height.toFixed()}px`\n    input.style.width = lookup.style.width\n    input.style.height = lookup.style.height\n    input.style.paddingTop = `${padding[0]}px`\n    input.style.paddingRight = `${padding[1]}px`\n    input.style.paddingBottom = `${padding[2]}px`\n    input.style.paddingLeft = `${padding[3]}px`\n    element.appendChild(lookup)\n\n    input.style.font = grid.font || '16px sans-serif'\n    const valueField = editor.valueField || DEFAULT_DROPDOWN_VALUE_FIELD\n    const captionField = editor.captionField || valueField\n\n    // 让 valueField 和 captionField 默认在 filterFields 中\n    const filterFields =\n      !isDefString(editor.filterFields) ||\n      (Array.isArray(editor.filterFields) && editor.filterFields.length === 0)\n        ? [valueField, captionField]\n        : []\n    if (Array.isArray(editor.filterFields)) {\n      editor.filterFields.forEach((field) => {\n        if (filterFields.indexOf(field) < 0 && field) {\n          filterFields.push(field)\n        }\n      })\n    } else if (\n      isDef(editor.filterFields) &&\n      filterFields.indexOf(editor.filterFields) < 0 &&\n      editor.filterFields\n    ) {\n      filterFields.push(editor.filterFields)\n    }\n\n    const gridRecord = grid.getRowRecord(row) as T\n    const records: L[] = []\n    let emptyRecord: any // 找到表示空的记录\n    let beforeRecord: any // 找到上一个值对应的记录\n    const filter =\n      typeof editor.filter === 'function' ? editor.filter : () => true\n    for (const record of lookupRecords) {\n      if (filter(record, gridRecord)) {\n        records.push(record)\n        if (!isDefString((record as any)[valueField])) {\n          emptyRecord = record\n          if (!isDefString(value)) {\n            beforeRecord = record\n          }\n        } else if ((record as any)[valueField] === value) {\n          beforeRecord = record\n        }\n      }\n    }\n    // 进入编辑状态时，输入框中显示 captionField 的值\n    // 如果 captionField 没有值则显示 valueField 的值\n    // 如果 valueField 为空，显示空格\n    let captionValue = isDef(value) ? value + '' : ''\n    if (beforeRecord) {\n      if (beforeRecord !== emptyRecord) {\n        captionValue = beforeRecord[captionField] + '' || captionValue\n      } else {\n        captionValue = ''\n      }\n    }\n\n    const allowOtherInput = getOrApply(editor.allowOtherInput, gridRecord)\n\n    const activeData: ActiveData<T, L> = {\n      col,\n      dropdownInfo: {\n        allowOtherInput,\n        beforeRecord: isDef(inputValue) ? undefined : beforeRecord,\n        captionField,\n        disableFilterRecords: editor.disableFilterRecords,\n        disableFilterSort: editor.disableFilterSort,\n        dropdownEmptyTemplate: editor.dropdownEmptyTemplate\n          ? editor.dropdownEmptyTemplate\n          : str.template`${captionField}`,\n        dropdownTemplate: editor.dropdownTemplate\n          ? editor.dropdownTemplate\n          : str.template`${captionField}`,\n        emptyRecord,\n        filterFields,\n        records,\n        valueField,\n        valueType: editor.valueType,\n      },\n      editor,\n      grid,\n      row,\n    }\n\n    setLookupInputValue(\n      editor.valueType,\n      input,\n      value,\n      captionValue,\n      inputValue\n    )\n    this._onInputValue(input, activeData)\n\n    this._bindLookupProps(grid, lookup, input, editor)\n\n    this._activeData = activeData\n    this._beforePropEditor = editor\n\n    const focus = () => {\n      input.focus()\n\n      const end = input.value.length\n      try {\n        if (typeof input.selectionStart !== 'undefined') {\n          input.selectionStart = end\n          input.selectionEnd = end\n          return\n        }\n      } catch (e) {\n        // ignore\n      }\n      if ((document as any).selection) {\n        const range = (input as any).createTextRange()\n        range.collapse()\n        range.moveEnd('character', end)\n        range.moveStart('character', end)\n        range.select()\n      }\n    }\n    const safeInputFocus = () => {\n      handler.tryWithOffEvents(input, 'blur', () => {\n        focus()\n      })\n      const state = getInlineEditingState(grid)\n      state.cellRange = grid.getCellRange(col, row)\n      grid.invalidateCellRange(state.cellRange)\n    }\n\n    this._attaching = true\n    setTimeout(() => {\n      safeInputFocus()\n      this._attaching = false\n    })\n  }\n  public detach(gridFocus?: boolean) {\n    if (this._isActive()) {\n      const lookup = this._lookup\n      const input = this._input\n      this._handler.tryWithOffEvents(input, 'blur', () => {\n        if (lookup.parentElement) {\n          this._onInputValue(input)\n          lookup.parentElement.removeChild(lookup)\n        }\n      })\n      const { grid, col, row } = this._activeData!\n      const state = getInlineEditingState(grid)\n      delete state.cellRange\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    delete this._beforeValue\n    delete this._activeData\n  }\n  public doChangeValue(changeOnlyWhenAllowOtherInput?: boolean) {\n    if (!this._isActive()) {\n      return\n    }\n    if (\n      changeOnlyWhenAllowOtherInput &&\n      this._activeData &&\n      !this._activeData.dropdownInfo.allowOtherInput\n    ) {\n      return\n    }\n    if (isLookupInputValueChanged(this._input)) {\n      const value = getLookupInputValue(this._input)\n      const { grid, col, row } = this._activeData!\n      grid.doChangeValue(col, row, () => value)\n    }\n  }\n  private _isActive() {\n    const lookup = this._lookup\n    if (!lookup || !lookup.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindInputEvents() {\n    const handler = this._handler\n    const dropdown = this._dropdown\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 终止事件传播\n    handler.on(input, 'click', stopPropagationOnly)\n    handler.on(input, 'mousedown', stopPropagationOnly)\n    handler.on(input, 'touchstart', stopPropagationOnly)\n    handler.on(input, 'dblclick', stopPropagationOnly)\n    handler.on(dropdown, 'mousedown', stopPropagationOnly)\n    handler.on(dropdown, 'touchstart', stopPropagationOnly)\n    handler.on(dropdown, 'dblclick', stopPropagationOnly)\n\n    handler.on(dropdown, 'click', (e) => {\n      e.stopPropagation()\n      const item = findDropdownItemParents(e.target as HTMLElement)\n      if (item) {\n        this._selectNode(item)\n        this.doChangeValue()\n        this.detach(true)\n      } else {\n        this._input.focus()\n      }\n    })\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n      this._onInputValue(input)\n    })\n    const onKeyupAndPress = (e: Event) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      this._onInputValue(input)\n    }\n    handler.on(input, 'keyup', onKeyupAndPress)\n    handler.on(input, 'keypress', onKeyupAndPress)\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      } else if (keyCode === KEY_UP) {\n        const n = this._dropdown.querySelector(\n          '[data-select=true]'\n        ) as HTMLLIElement\n        if (n) {\n          this._selectNode(n, false)\n          let next = findPrevSiblingFocusable(n) as HTMLElement\n          if (!next) {\n            const items = this._dropdown.querySelectorAll(\n              `.${DROPDOWN_ITEM_CLASSNAME_ILE}`\n            )\n            next = items[items.length - 1] as HTMLElement\n            if (!isFocusable(next)) {\n              next = findPrevSiblingFocusable(next) as HTMLElement\n            }\n          }\n          if (next) {\n            this._selectNode(next)\n            event.cancel(e)\n          }\n        }\n      } else if (keyCode === KEY_DOWN) {\n        const n = this._dropdown.querySelector(\n          '[data-select=true]'\n        ) as HTMLLIElement\n        if (n) {\n          this._selectNode(n, false)\n          let next = findNextSiblingFocusable(n) as HTMLElement\n          if (!next) {\n            next = this._dropdown.querySelector(\n              `.${DROPDOWN_ITEM_CLASSNAME_ILE}`\n            ) as HTMLElement\n            if (!isFocusable(next)) {\n              next = findNextSiblingFocusable(next) as HTMLElement\n            }\n          }\n          if (next) {\n            this._selectNode(next)\n            event.cancel(e)\n          }\n        }\n      } else {\n        this._onInputValue(input)\n      }\n    })\n    handler.on(input, 'blur', () => setTimeout(() => this.detach(), 300))\n  }\n  private _onKeydownEnter(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    this.doChangeValue()\n    this.detach(true)\n    if (grid.keyboardOptions?.moveCellOnEnter) {\n      grid.onKeyDownMove(e)\n    } else {\n      event.cancel(e)\n    }\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    if (!grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    this.doChangeValue()\n    this.detach(true)\n    grid.onKeyDownMove(e)\n  }\n  private _onInputValue(\n    input: HTMLInputElement,\n    activeData?: ActiveData<T, L>\n  ) {\n    const before = this._beforeValue\n    const value = input.value\n    if (before !== value) {\n      this._onInputValueChange(value, before as string, activeData)\n    }\n    this._beforeValue = value\n  }\n  private _onInputValueChange(\n    after: string,\n    before: string,\n    activeData?: ActiveData<T, L>\n  ) {\n    activeData = activeData || this._activeData!\n    const grid = activeData.grid\n    const dropdownInfo = activeData.dropdownInfo\n    const isFirstChange = !isDef(before)\n\n    // 过滤下拉数据\n    const filterInfo = this._filterRecords(\n      dropdownInfo.records,\n      dropdownInfo.filterFields,\n      after,\n      dropdownInfo.valueField,\n      dropdownInfo.disableFilterRecords,\n      dropdownInfo.disableFilterSort,\n      dropdownInfo.emptyRecord,\n      isFirstChange ? dropdownInfo.beforeRecord : undefined\n    )\n    const isAll = filterInfo.isAll\n    const filterRecords = filterInfo.filterRecords\n    const itemNodes: HTMLElement[] = []\n    let beforeNode: any\n    let firstMatchedNode: any\n    // 只在有输入内容时显示输入内容选项\n    let isEmptyValue = false\n    if (dropdownInfo.allowOtherInput) {\n      let saveValue: any = after\n      let displayValue: string = str.escape(after)\n      if (dropdownInfo.valueType === 'number') {\n        if (saveValue.trim()) {\n          saveValue = Number(after)\n          if (isNaN(saveValue)) {\n            saveValue = null\n          }\n        } else {\n          saveValue = null\n        }\n        if (saveValue === null) {\n          displayValue = str.escape('<null>')\n          isEmptyValue = true\n        }\n      } else {\n        if (!saveValue) {\n          displayValue = str.escape('<Empty>')\n          isEmptyValue = true\n        }\n      }\n      if (\n        (dropdownInfo.valueType === 'number' &&\n          (saveValue !== null ||\n            (isAll && isEmptyValue && !dropdownInfo.emptyRecord))) ||\n        (dropdownInfo.valueType !== 'number' &&\n          (saveValue || (isEmptyValue && !dropdownInfo.emptyRecord)))\n      ) {\n        const otherLi = createElement('li', {\n          classList: [\n            DROPDOWN_ITEM_CLASSNAME_ILE,\n            isEmptyValue\n              ? DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE\n              : DROPDOWN_ITEM_OTHER_CLASSNAME_ILE,\n          ],\n        })\n        otherLi.tabIndex = 0\n        otherLi.dataset.value = JSON.stringify(saveValue)\n        appendHtml(otherLi, displayValue)\n        itemNodes.push(otherLi)\n      }\n    }\n    if (itemNodes.length === 0 || isEmptyValue || !isAll) {\n      // 当 allowOtherInput === true 并\"有非空输入内容\"且\"无匹配\"时，不显示参照列表、只显示其他值\n      // 显示过滤后的选项\n      filterRecords.forEach((record: any) => {\n        const classList = [DROPDOWN_ITEM_CLASSNAME_ILE]\n        let html\n        if (record.__isEmpty) {\n          classList.push(DROPDOWN_ITEM_EMPTY_CLASSNAME_ILE)\n          html = dropdownInfo.dropdownEmptyTemplate(record)\n        } else {\n          html = dropdownInfo.dropdownTemplate(record)\n        }\n        const li = createElement('li', {\n          classList,\n        })\n        if (record.__isBefore) {\n          beforeNode = li\n        }\n        if (!isDef(firstMatchedNode) && record.__isMatched) {\n          firstMatchedNode = li\n        }\n        li.tabIndex = 0\n        li.dataset.value = JSON.stringify(record.__value)\n        appendHtml(li, html)\n        itemNodes.push(li)\n      })\n    }\n\n    empty(this._dropdown)\n    const offset = this._dropdown.scrollHeight + 2\n    if (itemNodes.length > 0) {\n      itemNodes[0].classList.add(DROPDOWN_ITEM_FIRST_CLASSNAME_ILE)\n      let selectedNode\n      if (isFirstChange && dropdownInfo.beforeRecord && beforeNode) {\n        selectedNode = beforeNode\n      } else if (firstMatchedNode) {\n        selectedNode = firstMatchedNode\n      } else {\n        selectedNode = itemNodes[0]\n      }\n      this._selectNode(selectedNode)\n      this._dropdown.style.maxHeight = ''\n      appendHtml(this._dropdown, itemNodes)\n      // 确定下拉框显示位置\n      if (\n        this._lookup.offsetTop +\n          this._lookup.offsetHeight +\n          this._dropdown.offsetHeight >\n          grid.getElement().clientHeight &&\n        this._lookup.offsetTop >\n          grid.getElement().clientHeight -\n            this._lookup.offsetTop -\n            this._lookup.offsetHeight\n      ) {\n        // 上方显示\n        this._dropdown.classList.add(DROPDOWN_BOTTOM_CLASSNAME_ILE)\n        this._dropdown.style.maxHeight = this._lookup.offsetTop - offset + 'px'\n      } else {\n        // 下方显示\n        this._dropdown.style.maxHeight =\n          grid.getElement().clientHeight -\n          this._lookup.offsetTop -\n          this._lookup.offsetHeight -\n          offset +\n          'px'\n        this._dropdown.classList.remove(DROPDOWN_BOTTOM_CLASSNAME_ILE)\n      }\n      if (\n        this._lookup.offsetLeft +\n          this._lookup.offsetWidth +\n          this._dropdown.offsetWidth >\n          grid.getElement().clientWidth &&\n        this._lookup.offsetLeft >\n          grid.getElement().clientWidth -\n            this._lookup.offsetLeft -\n            this._lookup.offsetWidth\n      ) {\n        this._dropdown.classList.add(DROPDOWN_RIGHT_CLASSNAME_ILE)\n      } else {\n        this._dropdown.classList.remove(DROPDOWN_RIGHT_CLASSNAME_ILE)\n      }\n      this._dropdown.classList.remove(DROPDOWN_HIDDEN_CLASSNAME_ILE)\n      this._dropdown.classList.add(DROPDOWN_SHOWN_CLASSNAME_ILE)\n    } else {\n      this._selectNode()\n      this._dropdown.classList.remove(DROPDOWN_SHOWN_CLASSNAME_ILE)\n      this._dropdown.classList.add(DROPDOWN_HIDDEN_CLASSNAME_ILE)\n    }\n  }\n  private _selectNode(node?: HTMLElement, isSelected?: boolean) {\n    if (node) {\n      if (isSelected !== false) {\n        node.dataset.select = 'true'\n        this._input.dataset[LOOKUP_SELECT_VALUE] = node.dataset.value\n        // 滚动到可视位置\n        if (node.parentElement) {\n          if (node.offsetTop < node.parentElement.scrollTop) {\n            node.parentElement.scrollTop = node.offsetTop\n          } else if (\n            node.offsetTop + node.offsetHeight >\n            node.parentElement.scrollTop + node.parentElement.clientHeight\n          ) {\n            node.parentElement.scrollTop =\n              node.offsetTop +\n              node.offsetHeight -\n              node.parentElement.clientHeight\n          }\n        }\n      } else {\n        delete node.dataset.select\n        this._input.dataset[LOOKUP_SELECT_VALUE] = this._input.dataset[\n          LOOKUP_BEFORE_VALUE\n        ]\n      }\n    } else {\n      this._input.dataset[LOOKUP_SELECT_VALUE] = this._input.dataset[\n        LOOKUP_BEFORE_VALUE\n      ]\n    }\n  }\n  private _filterRecords(\n    records: L[],\n    filterFields: string[],\n    inputValue: string,\n    valueField: string,\n    disableFilterRecords: boolean,\n    disableFilterSort: boolean,\n    emptyRecord?: L,\n    beforeRecord?: L\n  ) {\n    const filterRecords: L[] = []\n    const allRecords: L[] = []\n    const otherRecords: L[] = []\n    records.forEach((record) => {\n      const filterRecord: any = {}\n      let matched = false\n      for (const key in record) {\n        const value = isDef(record[key]) ? record[key] + '' : ''\n        if (filterFields.indexOf(key) >= 0) {\n          const matchValue = highlight(value, inputValue)\n          filterRecord[key] = matchValue\n          matched = matched || matchValue !== value || !inputValue\n        } else {\n          filterRecord[key] = value\n        }\n      }\n      filterRecord.__isMatched = matched\n      filterRecord.__value = (record as any)[valueField]\n      filterRecord.__isBefore = beforeRecord === record\n      filterRecord.__isEmpty = emptyRecord === record\n      if (matched || filterRecord.__isBefore || disableFilterSort) {\n        filterRecords.push(filterRecord)\n      } else if (disableFilterRecords) {\n        otherRecords.push(filterRecord)\n      }\n      allRecords.push(filterRecord)\n    })\n    const isAll =\n      filterFields.length === 0 ||\n      (!inputValue && !beforeRecord) ||\n      filterRecords.length === 0\n    if (!isAll && disableFilterRecords) {\n      for (const record of otherRecords) {\n        filterRecords.push(record)\n      }\n    }\n    return {\n      filterRecords: isAll ? allRecords : filterRecords,\n      isAll,\n    }\n  }\n  private _bindLookupProps(\n    grid: ListGridAPI<T>,\n    lookup: HTMLDivElement,\n    input: HTMLInputElement,\n    editor: EditorProps<T, L>\n  ) {\n    const classList = editor.classList\n    if (classList) {\n      lookup.classList.add(...classList)\n    }\n    InlineLookupElement.setInputAttrs(editor, grid, input)\n  }\n  private _unbindLookupProps(\n    _grid: ListGridAPI<T>,\n    lookup: HTMLDivElement,\n    _input: HTMLInputElement,\n    editor: EditorProps<T, L>\n  ) {\n    const classList = editor.classList\n    if (classList) {\n      lookup.classList.remove(...classList)\n    }\n  }\n}\n","import {\n  InlineLookupEditorOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { getOrApply, isPromise, isDef, obj } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { BaseActionInput } from './BaseActionInput'\nimport { InlineLookupElement } from './internal/InlineLookupElement'\nimport { getInlineLookupEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_LOOKUP_EDITOR_STATE_ID = getInlineLookupEditorStateId()\n\nlet globalInlineLookupElement: InlineLookupElement<any, any> | null = null\nlet globalInlineLookupBindGridCount = 0\n\nfunction attachLookupInput<T, L>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineLookupEditor<T, L>,\n  value: any,\n  inputValue?: string\n) {\n  if (!globalInlineLookupElement) {\n    globalInlineLookupElement = new InlineLookupElement()\n  }\n  const state = (editor as any).getState(grid)\n  if (!state.element) {\n    state.element = globalInlineLookupElement\n    globalInlineLookupBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineLookupBindGridCount--\n        if (!globalInlineLookupBindGridCount && globalInlineLookupElement) {\n          globalInlineLookupElement.dispose()\n          globalInlineLookupElement = null\n        }\n      },\n    })\n  }\n\n  const records = getOrApply(\n    editor.records || [],\n    grid.getRowRecord(cell.row) as any\n  )\n  if (isPromise(records)) {\n    records.then((rs) => {\n      if (globalInlineLookupElement) {\n        globalInlineLookupElement.attach(\n          grid,\n          editor,\n          cell.col,\n          cell.row,\n          value,\n          rs,\n          inputValue\n        )\n      }\n    })\n  } else {\n    globalInlineLookupElement.attach(\n      grid,\n      editor,\n      cell.col,\n      cell.row,\n      value,\n      records,\n      inputValue\n    )\n  }\n}\nfunction detachLookupInput(gridFocus?: boolean) {\n  if (globalInlineLookupElement) {\n    globalInlineLookupElement.detach(gridFocus)\n  }\n}\n\nfunction doChangeLookupValue() {\n  if (globalInlineLookupElement) {\n    globalInlineLookupElement.doChangeValue(true)\n  }\n}\n\nexport class InlineLookupEditor<T, L> extends BaseActionInput<T> {\n  private _classList?: string | string[]\n  private _records: L[] | ((rec: T) => L[] | Promise<L[]>)\n  private _valueField: string\n  private _valueType: 'string' | 'number'\n  private _captionField: string\n  private _filterFields: string | string[]\n  private _allowOtherInput: boolean | ((rec: T) => boolean)\n  private _disableFilterRecords: boolean\n  private _disableFilterSort: boolean\n  private _filter?: (lookupRecord: L, record: T) => boolean\n  private _dropdownTemplate?: (...values: any[]) => string\n  private _dropdownEmptyTemplate?: (...values: any[]) => string\n  public constructor(options: InlineLookupEditorOption<T, L> = {}) {\n    super(options)\n    this.action =\n      this.action ||\n      ((me) => (\n        _record: T,\n        data: {\n          grid: ListGridAPI<T>\n          cell: CellAddress\n        }\n      ) => {\n        if (\n          isReadOnlyRecord(me.readOnly, data.grid, data.cell.row) ||\n          isDisabledRecord(me.disabled, data.grid, data.cell.row)\n        ) {\n          return\n        }\n        me.onOpenCellInternal(data.grid, data.cell)\n      })(this)\n    this._classList = options.classList\n    this._records = options.records || []\n    this._valueField = options.valueField || ''\n    this._valueType = options.valueType || 'string'\n    this._captionField = options.captionField || ''\n    this._filterFields = options.filterFields || ''\n    this._allowOtherInput = options.allowOtherInput || false\n    this._disableFilterRecords = !!options.disableFilterRecords\n    this._disableFilterSort = !!options.disableFilterSort\n\n    if (isDef(options.disableDropdown)) {\n      this.disableDropdown = !!options.disableDropdown\n    }\n\n    this._filter = options.filter\n    this._dropdownTemplate = options.dropdownTemplate\n    this._dropdownEmptyTemplate = options.dropdownEmptyTemplate\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get records() {\n    return this._records\n  }\n  public set records(records) {\n    this._records = records\n  }\n  public get valueField() {\n    return this._valueField\n  }\n  public set valueField(valueField) {\n    this._valueField = valueField\n  }\n  public get valueType() {\n    return this._valueType\n  }\n  public set valueType(valueType) {\n    this._valueType = valueType\n  }\n  public get captionField() {\n    return this._captionField\n  }\n  public set captionField(captionField) {\n    this._captionField = captionField\n  }\n  public get filterFields() {\n    return this._filterFields\n  }\n  public set filterFields(filterFields) {\n    this._filterFields = filterFields\n  }\n  public get allowOtherInput() {\n    return this._allowOtherInput\n  }\n  public set allowOtherInput(allowOtherInput) {\n    this._allowOtherInput = allowOtherInput || false\n  }\n  public get disableFilterRecords() {\n    return this._disableFilterRecords\n  }\n  public set disableFilterRecords(disableFilterRecords) {\n    this._disableFilterRecords = !!disableFilterRecords\n  }\n  public get disableFilterSort() {\n    return this._disableFilterSort\n  }\n  public set disableFilterSort(disableFilterSort) {\n    this._disableFilterSort = !!disableFilterSort\n  }\n  public get disableDropdown() {\n    window.console.warn(\n      \"'disableDropdown' is deprecated, please use 'disableInput' instead\"\n    )\n    return !!this.disableInput\n  }\n  public set disableDropdown(disableDropdown) {\n    window.console.warn(\n      \"'disableDropdown' is deprecated, please use 'disableInput' instead\"\n    )\n    this.disableInput = !!disableDropdown\n  }\n  public get filter() {\n    return this._filter\n  }\n  public set filter(filter) {\n    this._filter = filter\n  }\n  public get dropdownTemplate() {\n    return this._dropdownTemplate\n  }\n  public set dropdownTemplate(dropdownTemplate) {\n    this._dropdownTemplate = dropdownTemplate\n  }\n  public get dropdownEmptyTemplate() {\n    return this._dropdownEmptyTemplate\n  }\n  public set dropdownEmptyTemplate(dropdownEmptyTemplate) {\n    this._dropdownEmptyTemplate = dropdownEmptyTemplate\n  }\n  public clone(): InlineLookupEditor<T, L> {\n    return new InlineLookupEditor(this)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachLookupInput(grid, cell, this, value, inputValue)\n    })\n  }\n  public onActionOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachLookupInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    _grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    _selected: boolean\n  ) {\n    // cancel input\n    doChangeLookupValue()\n    detachLookupInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    // cancel input\n    doChangeLookupValue()\n    detachLookupInput(true)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachLookupInput(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachLookupInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    input: HTMLInputElement\n  ) {\n    InlineLookupElement.setInputAttrs(this, grid, input)\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const ids = super.bindGridEvent(grid, cellId)\n    const detach = () => {\n      doChangeLookupValue()\n      detachLookupInput(true)\n    }\n    ids.push(grid.listen(DG_EVENT_TYPE.CLICK_UNDERLAY, detach))\n    ids.push(grid.listen(DG_EVENT_TYPE.DBLCLICK_UNDERLAY, detach))\n    ids.push(grid.listen(DG_EVENT_TYPE.DBLTAP_UNDERLAY, detach))\n    return ids\n  }\n  protected getState(grid: any): any {\n    if (!(grid as any)[INLINE_LOOKUP_EDITOR_STATE_ID]) {\n      obj.setReadonly(grid, INLINE_LOOKUP_EDITOR_STATE_ID, {})\n    }\n    return grid[INLINE_LOOKUP_EDITOR_STATE_ID]\n  }\n}\n","import { ColumnMenuItemOption, ColumnMenuItemOptions } from '../ts-types'\n\nfunction extend<T, U>(a: T, b: U): T & U {\n  const o: any = {}\n  for (const k in a) {\n    o[k] = a[k]\n  }\n  for (const k in b) {\n    o[k] = b[k]\n  }\n  return o\n}\n\n/**\n * Normalize the given menu options.\n * @param options - menu options to given\n * @returns Normalized options\n */\nfunction normalize(\n  options: ColumnMenuItemOptions | undefined\n): ColumnMenuItemOption[] {\n  if (!options) {\n    return []\n  }\n  if (Array.isArray(options)) {\n    return (options as any).map(\n      (e: any): ColumnMenuItemOption =>\n        extend(e, { label: e.caption || e.label })\n    )\n  }\n  if (typeof options === 'string') {\n    return normalize(JSON.parse(options))\n  }\n  const result = []\n  for (const k in options) {\n    if (options.hasOwnProperty(k)) {\n      result.push({\n        label: options[k],\n        value: k,\n      })\n    }\n  }\n  return result\n}\n\n/**\n * Normalize the given menu options.\n * @param options - menu options to given\n * @returns Normalized options\n */\nfunction normalizeToFn<T>(\n  options:\n    | ColumnMenuItemOptions\n    | ((record: T | undefined) => ColumnMenuItemOptions)\n    | undefined\n): (record: T | undefined) => ColumnMenuItemOption[] {\n  if (typeof options === 'function') {\n    return (record: T | undefined): ColumnMenuItemOption[] =>\n      normalize(options(record))\n  }\n  return (): ColumnMenuItemOption[] => normalize(options)\n}\n\nexport default {\n  normalize,\n  normalizeToFn,\n}\n","import { ListGridAPI, ColumnMenuItemOption, RectProps } from '../../../ts-types'\nimport {\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_ESC,\n  KEY_TAB,\n  KEY_UP,\n} from '../../../core/draw-grid/KEY_CODE'\nimport {\n  createElement,\n  appendHtml,\n  empty,\n  disableFocus,\n  findPrevSiblingFocusable,\n  findNextSiblingFocusable,\n  isFocusable,\n} from '../../../internal/dom'\nimport { isDef, event } from '../../../internal/utils'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport Rect from '../../../internal/Rect'\nimport style from '../../../internal/style'\n\nimport inlineMenuElementCss from './InlineMenuElement.css'\n\nconst CLASSNAME_IME = 'kaka-grid__inline-menu'\nconst ITEM_CLASSNAME_IME = `${CLASSNAME_IME}__menu-item`\nconst HIDDEN_CLASSNAME_IME = `${CLASSNAME_IME}--hidden`\nconst SHOWN_CLASSNAME_IME = `${CLASSNAME_IME}--shown`\nconst EMPTY_ITEM_CLASSNAME_IME = `${ITEM_CLASSNAME_IME}--empty`\n\nfunction findItemParents(target: HTMLElement) {\n  let el: HTMLElement | null = target\n  while (!el.classList.contains(ITEM_CLASSNAME_IME)) {\n    el = el.parentElement\n    if (!el || el.classList.contains(CLASSNAME_IME)) {\n      return undefined\n    }\n  }\n  return el\n}\n\nfunction createMenuElement() {\n  style.inject('inlineMenuElement', inlineMenuElementCss)\n  return createElement('ul', { classList: CLASSNAME_IME })\n}\nfunction attachElement(\n  element: HTMLElement,\n  rect: RectProps,\n  menu: HTMLUListElement,\n  autoWidth?: boolean\n) {\n  menu.style.top = `${rect.top.toFixed()}px`\n  menu.style.left = `${rect.left.toFixed()}px`\n  menu.style.width = autoWidth ? '' : `${rect.width.toFixed()}px`\n  menu.style.lineHeight = `${rect.height.toFixed()}px`\n  element.appendChild(menu)\n}\n\nfunction optionToLi(\n  { classList, label, value, html }: ColumnMenuItemOption,\n  index: number\n) {\n  const item = createElement('li', { classList: ITEM_CLASSNAME_IME })\n  item.tabIndex = 0\n  item.setAttribute('data-value-index', index + '')\n  if (classList) {\n    item.classList.add(...(Array.isArray(classList) ? classList : [classList]))\n  }\n\n  if (label) {\n    const span = createElement('span', { text: label })\n    item.appendChild(span)\n  } else if (html) {\n    appendHtml(item, html)\n  }\n\n  if (value === '' || !isDef(value)) {\n    item.classList.add(EMPTY_ITEM_CLASSNAME_IME)\n  }\n\n  return item\n}\n\nfunction openMenu<T>(\n  grid: ListGridAPI<T>,\n  editor: EditorProps<T>,\n  col: number,\n  row: number,\n  value: any,\n  options: ColumnMenuItemOption[],\n  menu: HTMLUListElement\n) {\n  const { classList } = editor\n  menu.classList.remove(SHOWN_CLASSNAME_IME)\n  menu.classList.add(HIDDEN_CLASSNAME_IME)\n  empty(menu)\n  menu.style.font = grid.font || '16px sans-serif'\n  let emptyItemEl: HTMLLIElement | null = null\n  let valueItemEl: HTMLLIElement | null = null\n\n  options.forEach((option, i) => {\n    const item = optionToLi(option, i)\n    menu.appendChild(item)\n    if (option.value === value) {\n      valueItemEl = item\n      item.dataset.select = 'select'\n    }\n    if (item.classList.contains(EMPTY_ITEM_CLASSNAME_IME)) {\n      emptyItemEl = item\n    }\n  })\n  const focusEl =\n    valueItemEl ||\n    emptyItemEl ||\n    ((menu.children || menu.childNodes)[0] as HTMLLIElement)\n  if (classList) {\n    menu.classList.add(...classList)\n  }\n  const children = Array.prototype.slice.call(\n    menu.children || menu.childNodes,\n    0\n  )\n  const focusIndex = children.indexOf(focusEl)\n  const { element, rect } = grid.getAttachCellsArea(grid.getCellRange(col, row))\n\n  // Cover the right line\n  rect.width++\n\n  // append for calculation\n  attachElement(element, rect, menu, editor.autoWidth)\n\n  // Make the selection item at the middle\n  let offset = 0\n  let allHeight = 0\n  for (let i = 0; i < children.length; i++) {\n    const offsetHeight = children[i].offsetHeight\n    if (i < focusIndex) {\n      offset += offsetHeight\n    }\n    allHeight += offsetHeight\n  }\n  ;(rect as Rect).offsetTop(-offset)\n  menu.style.transformOrigin = `center ${\n    offset + Math.ceil(children[focusIndex].offsetHeight / 2)\n  }px 0px`\n  attachElement(element, rect, menu, editor.autoWidth)\n\n  // Control not to overflow the screen range\n  const menuClientRect = menu.getBoundingClientRect()\n  const scaleDiff = (allHeight - menuClientRect.height) / 2\n  const orgMenuTop = menuClientRect.top - scaleDiff\n  let menuTop = orgMenuTop\n  const menuBottom = menuTop + allHeight\n  const winBottom = window.innerHeight\n  const winMargin = 20\n  if (menuBottom > winBottom - winMargin) {\n    const diff = menuBottom - winBottom + winMargin\n    menuTop -= diff\n  }\n  if (menuTop < 0 /*winTop*/ + winMargin) {\n    menuTop = winMargin\n  }\n  if (menuTop !== orgMenuTop) {\n    ;(rect as Rect).offsetTop(-(orgMenuTop - menuTop))\n    // re update\n    attachElement(element, rect, menu, editor.autoWidth)\n  }\n\n  if (focusEl) {\n    focusEl.focus()\n  }\n  menu.classList.remove(HIDDEN_CLASSNAME_IME)\n  menu.classList.add(SHOWN_CLASSNAME_IME)\n}\n\nfunction closeMenu<T>(\n  _grid: ListGridAPI<T>,\n  _col: number,\n  _row: number,\n  menu: HTMLUListElement\n) {\n  menu.classList.remove(SHOWN_CLASSNAME_IME)\n  menu.classList.add(HIDDEN_CLASSNAME_IME)\n  disableFocus(menu)\n}\n\ntype EditorProps<T> = {\n  classList?: string[]\n  options: (record: T | undefined) => ColumnMenuItemOption[]\n  autoWidth?: boolean\n}\ntype ActiveData<T> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps<T>\n  options: ColumnMenuItemOption[]\n}\n\nexport class InlineMenuElement<T> {\n  private _handler: EventHandler\n  private _menu: HTMLUListElement\n  private _beforePropEditor?: EditorProps<T> | null\n  private _activeData?: ActiveData<T> | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._menu = createMenuElement()\n    this._bindMenuEvents()\n  }\n  public dispose(): void {\n    const menu = this._menu\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    menu.parentElement?.removeChild(menu)\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps<T>,\n    col: number,\n    row: number,\n    value: string,\n    record: T | undefined\n  ): void {\n    const menu = this._menu\n\n    if (this._beforePropEditor) {\n      const classList = this._beforePropEditor.classList\n      if (classList) {\n        menu.classList.remove(...classList)\n      }\n    }\n\n    const options = editor.options(record)\n\n    openMenu(grid, editor, col, row, value, options, menu)\n\n    // 当焦点离开菜单时，关闭菜单\n    const owner: any = menu\n    for (let i = 0; i < menu.childNodes.length; i++) {\n      const el = menu.childNodes[i]\n      this._handler.on(el, 'focus', () => {\n        owner._focus = true\n      })\n      this._handler.on(el, 'blur', () => {\n        owner._focus = false\n        setTimeout(() => {\n          if (!owner._focus) {\n            this.detach()\n          }\n        }, 0)\n      })\n    }\n\n    this._activeData = { grid, col, row, editor, options }\n    this._beforePropEditor = editor\n  }\n  public detach(gridFocus?: boolean): void {\n    if (this._isActive()) {\n      const { grid, col, row } = this._activeData!\n      const menu = this._menu\n      closeMenu(grid, col, row, menu)\n\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    this._activeData = null\n  }\n  private _doChangeValue(valueIndex: string | null): void {\n    if (this._isActive() && valueIndex) {\n      const { grid, col, row, options } = this._activeData!\n      const option = options[parseInt(valueIndex, 10)]\n      if (option) {\n        const { value } = option\n        grid.doChangeValue(col, row, () => value)\n      }\n    }\n  }\n  private _isActive() {\n    const menu = this._menu\n    if (!menu || !menu.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindMenuEvents() {\n    const handler = this._handler\n    const menu = this._menu\n\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 为了不在grid中传播\n\n    handler.on(menu, 'mousedown', stopPropagationOnly)\n    handler.on(menu, 'touchstart', stopPropagationOnly)\n    handler.on(menu, 'dblclick', stopPropagationOnly)\n\n    handler.on(menu, 'click', (e) => {\n      e.stopPropagation()\n      const item = findItemParents(e.target as HTMLElement)\n      if (!item) {\n        return\n      }\n      const valueIndex = item.getAttribute('data-value-index')\n      this._doChangeValue(valueIndex)\n      this.detach(true)\n    })\n    handler.on(menu, 'keydown', (e) => {\n      const item = findItemParents(e.target as HTMLElement)\n      if (!item || !this._isActive()) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(menu, item, e)\n      } else if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_UP) {\n        const n = findPrevSiblingFocusable(item)\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      } else if (keyCode === KEY_DOWN) {\n        const n = findNextSiblingFocusable(item)\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(menu, item, e)\n      }\n    })\n  }\n  private _onKeydownEnter(\n    _menu: HTMLUListElement,\n    item: HTMLElement,\n    e: KeyboardEvent\n  ): void {\n    const grid = this._isActive() ? this._activeData!.grid : null\n\n    const valueIndex = item.getAttribute('data-value-index')\n    this._doChangeValue(valueIndex)\n    this.detach(true)\n    event.cancel(e)\n    if (grid) {\n      if (grid.keyboardOptions?.moveCellOnEnter) {\n        grid.onKeyDownMove(e)\n      }\n    }\n  }\n  private _onKeydownTab(\n    menu: HTMLUListElement,\n    item: HTMLElement,\n    e: KeyboardEvent\n  ): void {\n    if (this._isActive()) {\n      const { grid } = this._activeData!\n      if (grid.keyboardOptions?.moveCellOnTab) {\n        const valueIndex = item.getAttribute('data-value-index')\n        this._doChangeValue(valueIndex || '')\n        this.detach(true)\n        grid.onKeyDownMove(e)\n        return\n      }\n    }\n    if (!e.shiftKey) {\n      if (!findNextSiblingFocusable(item)) {\n        let n: HTMLElement | null = menu.querySelector(\n          `.${ITEM_CLASSNAME_IME}`\n        ) as HTMLElement\n        if (!isFocusable(n)) {\n          n = findNextSiblingFocusable(n)\n        }\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      }\n    } else {\n      if (!findPrevSiblingFocusable(item)) {\n        const items = menu.querySelectorAll(`.${ITEM_CLASSNAME_IME}`)\n        let n: HTMLElement | null = items[items.length - 1] as HTMLElement\n        if (!isFocusable(n)) {\n          n = findPrevSiblingFocusable(n)\n        }\n        if (n) {\n          n.focus()\n          event.cancel(e)\n        }\n      }\n    }\n  }\n}\n","import {\n  ColumnIconOption,\n  FontIcon,\n  ImageIcon,\n  NamedIcon,\n  PathIcon,\n  SvgIcon,\n} from '../ts-types'\nimport { SimpleColumnIconOption } from '../ts-types-internal'\nimport { isDef } from './utils'\n\ntype ColumnIconArrayOption = {\n  content?: (string | null)[]\n  font?: (string | null)[]\n  color?: (string | null)[]\n  className?: (string | null)[]\n  tagName?: (string | null)[]\n  isLiga?: (boolean | null)[]\n  width?: (number | null)[]\n  src?: (string | null)[]\n  svg?: (string | null)[]\n  name?: (string | null)[]\n  path?: (string | null)[]\n}\n\ntype IconPropKey = (\n  | keyof FontIcon<unknown>\n  | keyof ImageIcon<unknown>\n  | keyof PathIcon<unknown>\n  | keyof SvgIcon<unknown>\n  | keyof NamedIcon<unknown>\n) &\n  keyof SimpleColumnIconOption\n\nconst ICON_PROP_KEYS: IconPropKey[] = [\n  'content',\n  'font',\n  'color',\n  'className',\n  'tagName',\n  'isLiga',\n  'width',\n  'src',\n  'svg',\n  'name',\n  'path',\n]\n\nfunction quote(name: string): string {\n  const quoted = []\n  const split = name.split(/,\\s*/)\n  for (let i = 0; i < split.length; i++) {\n    const part = split[i].replace(/['\"]/g, '')\n    if (part.indexOf(' ') === -1 && !/^\\d/.test(part)) {\n      quoted.push(part)\n    } else {\n      quoted.push(`'${part}'`)\n    }\n  }\n  return quoted.join(',')\n}\n\nconst doms: {\n  [tagName: string]: HTMLElement\n} = {}\nconst props: {\n  [tagName: string]: {\n    [className: string]: {}\n  }\n} = {}\n\nfunction getIconProps(\n  tagName: string,\n  className: string\n): SimpleColumnIconOption {\n  const tagProps = props[tagName] || (props[tagName] = {})\n  if (tagProps[className]) {\n    return tagProps[className]\n  }\n  const dom = doms[tagName] || (doms[tagName] = document.createElement(tagName))\n  dom.className = className\n  document.body.appendChild(dom)\n  try {\n    const beforeStyle = (document.defaultView || window).getComputedStyle(\n      dom,\n      '::before'\n    )\n    let content = beforeStyle.getPropertyValue('content')\n    if (content === 'none') {\n      content = '' // 解决部分IE11浏览器显示\"none\"的问题，并不是所有的IE11都有此问题，原因未知、暂无法解决\n    }\n    if (content.length >= 3 && (content[0] === '\"' || content[0] === \"'\")) {\n      if (content[0] === content[content.length - 1]) {\n        content = content.substr(1, content.length - 2)\n      }\n    }\n    let font = beforeStyle.getPropertyValue('font')\n    if (!font) {\n      font = `${beforeStyle.getPropertyValue(\n        'font-style'\n      )} ${beforeStyle.getPropertyValue(\n        'font-variant'\n      )} ${beforeStyle.getPropertyValue(\n        'font-weight'\n      )} ${beforeStyle.getPropertyValue(\n        'font-size'\n      )}/${beforeStyle.getPropertyValue('line-height')} ${quote(\n        beforeStyle.getPropertyValue('font-family')\n      )}`\n    }\n    const color = beforeStyle.getPropertyValue('color')\n    const width = dom.clientWidth\n    const isLiga =\n      (beforeStyle.getPropertyValue('font-feature-settings') || '').indexOf(\n        'liga'\n      ) > -1\n\n    return (tagProps[className] = {\n      color,\n      content,\n      font,\n      isLiga,\n      width,\n    })\n  } finally {\n    document.body.removeChild(dom)\n  }\n}\n\nfunction toPropArray<T>(prop: T, count: number): (T | null)[] {\n  const result: (T | null)[] = []\n  if (Array.isArray(prop)) {\n    result.push(...prop)\n    for (let i = prop.length; i < count; i++) {\n      result.push(null)\n    }\n  } else {\n    for (let i = 0; i < count; i++) {\n      result.push(prop)\n    }\n  }\n  return result\n}\n\nfunction toSimpleArray(\n  iconProps: ColumnIconOption<unknown> | ColumnIconOption<unknown>[]\n): SimpleColumnIconOption[] {\n  if (!iconProps) {\n    return iconProps\n  } else if (Array.isArray(iconProps)) {\n    return iconProps\n  }\n\n  const workData = {} as Required<ColumnIconArrayOption>\n\n  let count = 0\n  ICON_PROP_KEYS.forEach((k) => {\n    const prop = (iconProps as any)[k]\n    if (prop) {\n      if (Array.isArray(prop)) {\n        count = Math.max(count, prop.length)\n      } else {\n        count = Math.max(count, 1)\n      }\n    }\n  })\n\n  ICON_PROP_KEYS.forEach((k) => {\n    const arr = toPropArray((iconProps as any)[k], count)\n    ;(workData as any)[k] = arr\n  })\n\n  const result: SimpleColumnIconOption[] = []\n  for (let i = 0; i < count; i++) {\n    const data = {} as SimpleColumnIconOption\n    ICON_PROP_KEYS.forEach((k) => {\n      const val = (workData as any)[k][i]\n      ;(data as any)[k] = val\n    })\n    result.push(data)\n  }\n  return result\n}\n\nfunction normarize(iconProps: SimpleColumnIconOption): SimpleColumnIconOption {\n  const data: SimpleColumnIconOption = {}\n  for (const k in iconProps) {\n    if (k === 'className') {\n      continue\n    }\n    if (isIconKey(k)) {\n      data[k] = iconProps[k] as any\n    }\n  }\n  if (iconProps.className) {\n    const prop = getIconProps(iconProps.tagName || 'i', iconProps.className)\n    for (const k in prop) {\n      if (isIconKey(k)) {\n        if (!isDef(iconProps[k])) {\n          data[k] = prop[k] as any\n        }\n      }\n    }\n  }\n  return data\n}\n\nfunction toNormarizeArray(\n  iconProps: ColumnIconOption<unknown> | ColumnIconOption<unknown>[]\n): SimpleColumnIconOption[] {\n  const icons = toSimpleArray(iconProps)\n  if (!icons) {\n    return icons\n  }\n  return icons.map((icon) => normarize(icon))\n}\nconst iconPropKeys = ICON_PROP_KEYS\n\nfunction isIconKey(k: string): k is IconPropKey {\n  return ICON_PROP_KEYS.indexOf(k as any) >= 0\n}\n\nexport const icons = {\n  toNormarizeArray,\n  iconPropKeys,\n}\n","export default class Rect {\n  public static bounds(\n    left: number,\n    top: number,\n    right: number,\n    bottom: number\n  ) {\n    return new Rect(left, top, right - left, bottom - top)\n  }\n  public static max(rect1: Rect, rect2: Rect) {\n    return Rect.bounds(\n      Math.min(rect1.left, rect2.left),\n      Math.min(rect1.top, rect2.top),\n      Math.max(rect1.right, rect2.right),\n      Math.max(rect1.bottom, rect2.bottom)\n    )\n  }\n  private _left: number\n  private _top: number\n  private _width: number\n  private _height: number\n  private _right: number | undefined\n  private _bottom: number | undefined\n  public constructor(left: number, top: number, width: number, height: number) {\n    this._left = left\n    this._top = top\n    this._width = width\n    this._height = height\n    this._right = undefined\n  }\n  public get left() {\n    return this._left\n  }\n  public set left(left) {\n    const right = this.right\n    this._left = left\n    this.right = right\n  }\n  public get top() {\n    return this._top\n  }\n  public set top(top) {\n    const bottom = this.bottom\n    this._top = top\n    this.bottom = bottom\n  }\n  public get width() {\n    return this._width\n  }\n  public set width(width) {\n    this._width = width\n    this._right = undefined\n  }\n  public get height() {\n    return this._height\n  }\n  public set height(height) {\n    this._height = height\n    this._bottom = undefined\n  }\n  public get right() {\n    return this._right !== undefined\n      ? this._right\n      : (this._right = this.left + this.width)\n  }\n  public set right(right) {\n    this._right = right\n    this.width = right - this.left\n  }\n  public get bottom() {\n    return this._bottom !== undefined\n      ? this._bottom\n      : (this._bottom = this.top + this.height)\n  }\n  public set bottom(bottom) {\n    this._bottom = bottom\n    this.height = bottom - this.top\n  }\n  public offsetLeft(offset: number) {\n    this._left += offset\n    this._right = undefined\n  }\n  public offsetTop(offset: number) {\n    this._top += offset\n    this._bottom = undefined\n  }\n  public copy() {\n    return new Rect(this.left, this.top, this.width, this.height)\n  }\n  public intersection(rect: Rect) {\n    const x0 = Math.max(this.left, rect.left)\n    const x1 = Math.min(this.left + this.width, rect.left + rect.width)\n    if (x0 <= x1) {\n      const y0 = Math.max(this.top, rect.top)\n      const y1 = Math.min(this.top + this.height, rect.top + rect.height)\n      if (y0 <= y1) {\n        return Rect.bounds(x0, y0, x1, y1)\n      }\n    }\n    return null\n  }\n  public contains(another: Rect) {\n    return (\n      this.left <= another.left &&\n      this.left + this.width >= another.left + another.width &&\n      this.top <= another.top &&\n      this.top + this.height >= another.top + another.height\n    )\n  }\n  public inPoint(x: number, y: number) {\n    return (\n      this.left <= x &&\n      this.left + this.width >= x &&\n      this.top <= y &&\n      this.top + this.height >= y\n    )\n  }\n}\n","import { icons } from '../../internal/icons'\nimport {\n  MaybePromise,\n  ColumnIconOption,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  DrawCallback,\n  CellStyle,\n  AttachCellStyle,\n} from '../../ts-types'\nimport { SimpleColumnIconOption } from '../../ts-types-internal'\nimport Rect from '../../internal/Rect'\nimport { cellInRange, obj, isPromise, isDefString } from '../../internal/utils'\nimport { Style } from '../style'\n\nexport function loadIcons(\n  icon: MaybePromise<ColumnIconOption<any> | ColumnIconOption<any>[]> | null,\n  context: CellContext,\n  helper: GridCanvasHelperAPI,\n  callback: (\n    icon: SimpleColumnIconOption[] | undefined,\n    context: CellContext\n  ) => void\n): void {\n  let argIcon = undefined\n  if (icon) {\n    if (isPromise(icon)) {\n      icon.then((i) => {\n        loadIcons(i, context.toCurrentContext(), helper, callback)\n      })\n    } else {\n      const iconList = icons.toNormarizeArray(icon)\n      iconList.forEach((i) => {\n        if (i.font && i.content) {\n          helper.testFontLoad(i.font, i.content, context)\n        }\n      })\n      argIcon = iconList\n    }\n  }\n  callback(argIcon, context)\n}\nexport function getActionTextPadding(\n  context: CellContext,\n  helper: GridCanvasHelperAPI,\n  style: Style\n) {\n  const font = style.font\n  const padding = style.padding\n  const appearance = style.appearance\n\n  const basePadding = helper.toBoxPixelArray(padding || 0, context, font)\n  const textPadding = basePadding.slice(0)\n  if (appearance !== 'none' && isDefString(appearance)) {\n    textPadding[1] += 26 // 文字距离有边框位置，右侧图标\n  }\n  return textPadding\n}\nexport function drawActionButton<T>(\n  grid: ListGridAPI<T>,\n  context: CellContext,\n  stateId: any,\n  helper: GridCanvasHelperAPI,\n  style: Style\n) {\n  const textBaseline = style.textBaseline\n  const font = style.font\n  const padding = style.padding\n  const appearance = style.appearance\n  const color = style.color\n\n  let active = false\n  const state = (grid as any)[stateId]\n  if (state) {\n    if (\n      state.mouseActiveCell &&\n      cellInRange(context.range, state.mouseActiveCell.col, state.mouseActiveCell.row)\n    ) {\n      if (state.mouseRelativePos) {\n        let rect = context.getRect()\n        const btnWidth = 32\n        rect = new Rect(\n          rect.left + rect.width - btnWidth,\n          rect.top,\n          btnWidth,\n          rect.height\n        )\n        active =\n          rect.left <= state.mouseRelativePos.x &&\n          rect.right >= state.mouseRelativePos.x &&\n          rect.top <= state.mouseRelativePos.y &&\n          rect.bottom >= state.mouseRelativePos.y\n        state.mouseActive = active\n      }\n    }\n  }\n  if (appearance !== 'none' && isDefString(appearance)) {\n    const basePadding = helper.toBoxPixelArray(padding || 0, context, font)\n    const iconPadding = basePadding.slice(0)\n    iconPadding[1] += 8 // 图标距离右边框位置\n    let icon\n    if (appearance === 'menulist-button') {\n      // draw dropdown arrow icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        path: 'M0 2 5 7 10 2z',\n        width: 10,\n      }\n    } else if (appearance === 'lookup-button') {\n      // draw lookup icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        // tslint:disable-next-line:max-line-length\n        path:\n          'M4.7997924,9.6 C2.15326327,9.6 0,7.44655046 0,4.79937714 C0,2.15261906 2.15326327,0 4.7997924,0 C7.44673673,0 9.6,2.15261906 9.6,4.79937714 C9.6,7.44655046 7.44673673,9.6 4.7997924,9.6 Z M4.79959481,0.9 C2.64922597,0.9 0.9,2.64900249 0.9,4.79918953 C0.9,6.95018703 2.64922597,8.7 4.79959481,8.7 C6.95036883,8.7 8.7,6.95018703 8.7,4.79918953 C8.7,2.64940773 6.95036883,0.9 4.79959481,0.9 Z M11.579002,12 C11.4749824,12 11.3709629,11.9593028 11.289322,11.8774707 L7.93168591,8.56830498 C7.76260228,8.39851441 7.75555713,8.11713467 7.91510908,7.93902961 C8.07631871,7.76136216 8.34237677,7.75261007 8.51104597,7.92065022 L11.8686821,11.2315664 C12.0373513,11.4004817 12.0443964,11.6822991 11.8848445,11.8608417 C11.8019603,11.9527387 11.6904812,12 11.579002,12 Z',\n        width: 12,\n      }\n    } else if (appearance === 'clear-button') {\n      // draw clear icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        // tslint:disable-next-line:max-line-length\n        path:\n          'M5.26896659,6.00000686 L0.152356675,11.1166168 C-0.048420546,11.317394 -0.0501211184,11.6463861 0.151753253,11.8482467 C0.355026465,12.05152 0.681179729,12.0498468 0.883383238,11.8476433 L5.99999314,6.73103342 L11.1166168,11.8476433 C11.317394,12.0484205 11.6463861,12.0501211 11.8482467,11.8482467 C12.05152,11.6449735 12.0498468,11.3188203 11.8476433,11.1166168 L6.73103341,6.00000686 L11.8476433,0.883383238 C12.0484205,0.682606017 12.0501074,0.3536139 11.8482467,0.151753253 C11.6449598,-0.0515199596 11.3188065,-0.0498468209 11.1166168,0.152356675 L6.00000686,5.2689803 L0.883383238,0.152356688 C0.682606017,-0.0484205326 0.3536139,-0.0501073814 0.151753253,0.151753266 C-0.0515199596,0.355040202 -0.0498468209,0.681193466 0.152356675,0.883383252 L5.26896659,6.00000686 Z',\n        width: 12,\n      }\n    } else if (appearance === 'date-button') {\n      // draw date icon\n      icon = {\n        color: active ? 'rgba(0, 0, 0, .9)' : 'rgba(0, 0, 0, .54)',\n        // tslint:disable-next-line:max-line-length\n        path:\n          'M5.6,6.8h0.9c0.2,0,0.4-0.2,0.4-0.4C6.8,6.2,6.7,6,6.4,6c0,0,0,0,0,0H5.6C5.3,6,5.1,6.2,5.1,6.4c0,0,0,0,0,0C5.1,6.7,5.3,6.8,5.6,6.8L5.6,6.8z M5.6,8.6h0.9c0.2,0,0.4-0.2,0.4-0.4c0-0.2-0.2-0.4-0.4-0.4c0,0,0,0,0,0H5.6c-0.2,0-0.4,0.2-0.4,0.4c0,0,0,0,0,0C5.1,8.4,5.3,8.6,5.6,8.6L5.6,8.6z M10.3,0.9H8.6V0.4C8.6,0.2,8.4,0,8.1,0c0,0,0,0,0,0C7.9,0,7.7,0.2,7.7,0.4c0,0,0,0,0,0v0.4H4.3V0.4C4.3,0.2,4.1,0,3.9,0c0,0,0,0,0,0C3.6,0,3.4,0.2,3.4,0.4c0,0,0,0,0,0v0.4H1.7C0.8,0.9,0,1.6,0,2.6v6.8c0,0.9,0.8,1.7,1.7,1.7h8.6c0.9,0,1.7-0.8,1.7-1.7V2.6C12,1.6,11.2,0.9,10.3,0.9L10.3,0.9z M11.1,9.4c0,0.5-0.4,0.9-0.9,0.9H1.7c-0.5,0-0.9-0.4-0.9-0.9V4.3h10.3V9.4z M11.1,3.4H0.9V2.6c0-0.5,0.4-0.9,0.9-0.9h1.7v0.4c0,0.2,0.2,0.4,0.4,0.4s0.4-0.2,0.4-0.4V1.7h3.4v0.4c0,0.2,0.2,0.4,0.4,0.4c0.2,0,0.4-0.2,0.4-0.4V1.7h1.7c0.5,0,0.9,0.4,0.9,0.9L11.1,3.4L11.1,3.4z M3,8.6h0.9c0.2,0,0.4-0.2,0.4-0.4c0-0.2-0.2-0.4-0.4-0.4c0,0,0,0,0,0H3c-0.2,0-0.4,0.2-0.4,0.4c0,0,0,0,0,0C2.6,8.4,2.8,8.6,3,8.6z M8.1,6.8H9c0.2,0,0.4-0.2,0.4-0.4C9.4,6.2,9.2,6,9,6c0,0,0,0,0,0H8.1C7.9,6,7.7,6.2,7.7,6.4c0,0,0,0,0,0C7.7,6.7,7.9,6.8,8.1,6.8L8.1,6.8z M3,6.8h0.9c0.2,0,0.4-0.2,0.4-0.4C4.3,6.2,4.1,6,3.9,6c0,0,0,0,0,0H3C2.8,6,2.6,6.2,2.6,6.4c0,0,0,0,0,0C2.6,6.7,2.8,6.8,3,6.8z M8.1,8.6H9c0.2,0,0.4-0.2,0.4-0.4c0-0.2-0.2-0.4-0.4-0.4c0,0,0,0,0,0H8.1c-0.2,0-0.4,0.2-0.4,0.4c0,0,0,0,0,0C7.7,8.4,7.9,8.6,8.1,8.6z',\n        width: 12,\n      }\n    } else if (typeof appearance === 'function') {\n      icon = appearance(active)\n    } else if (obj.isObject(appearance)) {\n      icon = appearance\n    } else {\n      window.console.warn(`unsupported appearance:${appearance}`)\n    }\n    if (icon) {\n      // 绘制按钮图标时，不应影响到 overflowText\n      const cellOverflowText =\n        grid.getCellOverflowText(context.col, context.row) || ''\n      helper.text('', context, {\n        color,\n        font,\n        icons: [icon],\n        padding: iconPadding,\n        textAlign: 'right',\n        textBaseline,\n      })\n      grid.setCellOverflowText(context.col, context.row, cellOverflowText)\n    }\n  }\n}\nexport function customDraw<T>(\n  helper: GridCanvasHelperAPI,\n  draw: DrawCallback | undefined,\n  value: any,\n  context: CellContext,\n  grid: ListGridAPI<T>,\n  record: unknown\n) {\n  let b = false\n  if (draw) {\n    const rect = context.getRect()\n    const row = context.row\n    const col = context.col\n    const selection = context.getSelection()\n    const opt = {\n      grid,\n      record,\n      rect,\n      row,\n      col,\n      selection,\n    }\n    helper.drawWithClip(context, (ctx) => {\n      b = draw(value, ctx, opt) === false\n    })\n  }\n  return b\n}\nexport function isAttachArea<T>(record: T, cellStyle?: CellStyle) {\n  let s: AttachCellStyle | undefined\n  if (typeof cellStyle === 'function') {\n    s = cellStyle(record)\n  } else {\n    s = cellStyle\n  }\n  let b = false\n  if (s && s.innerBox === 'dashed') {\n    b = true\n  }\n  return b\n}\n\nexport function reviseAttachCellsArea<T>(\n  rect: Rect,\n  row: number,\n  grid: ListGridAPI<T>,\n  cellStyle?: CellStyle\n) {\n  const record = grid.getRowRecord(row)\n  if (isAttachArea(record, cellStyle)) {\n    rect.left += 4\n    rect.top += 4\n    rect.right -= 4\n    rect.bottom -= 4\n  }\n}\nexport function reviseAttachCellsPadding<T>(\n  padding: [number, number, number, number],\n  row: number,\n  grid: ListGridAPI<T>,\n  cellStyle?: CellStyle\n) {\n  const record = grid.getRowRecord(row)\n  if (isAttachArea(record, cellStyle)) {\n    padding[3] -= 4\n    if (padding[3] < 0) {\n      padding[3] = 0\n    }\n    padding[1] -= 4\n    if (padding[1] < 0) {\n      padding[1] = 0\n    }\n  }\n}\nexport function drawAttachArea<T>(\n  grid: ListGridAPI<T>,\n  record: unknown,\n  context: CellContext,\n  helper: GridCanvasHelperAPI,\n  cellStyle?: CellStyle\n) {\n  if (isAttachArea(record, cellStyle)) {\n    const rect = context.getRect()\n    rect.top += 4\n    rect.right -= 4\n    rect.bottom -= 4\n    rect.left += 4\n    helper.attachArea(rect, context)\n  }\n}\n","import { AnyListener, EventListenerId } from '../ts-types'\nimport { each, isDef } from '../internal/utils'\n\nimport { getEventTargetSymbol } from '../internal/symbolManager'\nconst _ = getEventTargetSymbol()\n\nlet eventTargetNextId = 1\n\n/**\n * event target.\n */\nexport class EventTarget {\n  private [_]: {\n    listeners: { [type: string]: AnyListener[] }\n    listenerData: {\n      [id: number]: {\n        type: string\n        listener: AnyListener\n        remove: () => void\n      }\n    }\n  } = {\n    listeners: {},\n    listenerData: {},\n  }\n  /**\n   * Adds an event listener.\n   * @param type - The event type id.\n   * @param listener - Callback method.\n   * @returns unique id for the listener.\n   */\n  public listen(type: string, listener: AnyListener): EventListenerId {\n    const list = this[_].listeners[type] || (this[_].listeners[type] = [])\n    list.push(listener)\n\n    const id = eventTargetNextId++\n    this[_].listenerData[id] = {\n      listener,\n      remove: () => {\n        delete this[_].listenerData[id]\n        const index = list.indexOf(listener)\n        list.splice(index, 1)\n        if (!this[_].listeners[type].length) {\n          delete this[_].listeners[type]\n        }\n      },\n      type,\n    }\n    return id\n  }\n  /**\n   * Removes an event listener which was added with listen() by the id returned by listen().\n   * @param id - the id returned by listen().\n   * @returns\n   */\n  public unlisten(id: EventListenerId): void {\n    if (!this[_]) {\n      return\n    }\n    this[_].listenerData[id].remove()\n  }\n  /**\n   * Adds an event listener.\n   * @param type - The event type id.\n   * @param listener - Callback method.\n   * @returns\n   */\n  public addEventListener(type: string, listener: AnyListener): void {\n    this.listen(type, listener)\n  }\n  /**\n   * Removes an event listener.\n   * @param type - The event type id.\n   * @param listener - Callback method.\n   * @returns\n   */\n  public removeEventListener(type: string, listener: AnyListener): void {\n    if (!this[_]) {\n      return\n    }\n    each(this[_].listenerData, (obj, id) => {\n      if (obj.type === type && obj.listener === listener) {\n        this.unlisten(id as number)\n      }\n    })\n  }\n  /**\n   * @param type - The event type id.\n   * @returns\n   */\n  public hasListeners(type: string): boolean {\n    return !!this[_].listeners[type]\n  }\n  /**\n   * Fires all registered listeners\n   * @param type - The type of the listeners to fire.\n   * @param args - fire arguments\n   * @returns the result of the last listener\n   */\n  public fireListeners(type: string, ...args: any[]): any[] {\n    const list = this[_].listeners[type]\n    if (!list) {\n      return []\n    }\n    return list.map((listener) => listener.call(this, ...args)).filter(isDef)\n  }\n  /**\n   * @returns\n   */\n  public dispose(): void {}\n}\n","import { ColumnStyle, ColorDef, BaseStyleOption } from '../../ts-types'\nimport { EventTarget } from '../../core/EventTarget'\n\nconst BASE_STYLE_EVENT_TYPE = {\n  CHANGE_STYLE: 'change_style' as const,\n}\n\nlet defaultBaseStyle: BaseStyle\n\nexport class BaseStyle extends EventTarget implements ColumnStyle {\n  public static get EVENT_TYPE(): { CHANGE_STYLE: 'change_style' } {\n    return BASE_STYLE_EVENT_TYPE\n  }\n  public static get DEFAULT(): BaseStyle {\n    return defaultBaseStyle\n      ? defaultBaseStyle\n      : (defaultBaseStyle = new BaseStyle())\n  }\n  private _bgColor?: ColorDef\n  public constructor({ bgColor }: BaseStyleOption = {}) {\n    super()\n    this._bgColor = bgColor\n  }\n  public get bgColor(): ColorDef | undefined {\n    return this._bgColor\n  }\n  public set bgColor(bgColor) {\n    this._bgColor = bgColor\n    this.doChangeStyle()\n  }\n  public doChangeStyle(): void {\n    this.fireListeners(BASE_STYLE_EVENT_TYPE.CHANGE_STYLE)\n  }\n  public clone(): BaseStyle {\n    return new BaseStyle(this)\n  }\n}\n","import { BaseStdStyleOption } from '../../ts-types'\nimport { BaseStyle } from './BaseStyle'\n\nlet defaultBaseStdStyle: BaseStdStyle\n\nexport class BaseStdStyle extends BaseStyle {\n  public static get DEFAULT(): BaseStdStyle {\n    return defaultBaseStdStyle\n      ? defaultBaseStdStyle\n      : (defaultBaseStdStyle = new BaseStdStyle())\n  }\n  private _textAlign: CanvasTextAlign\n  private _textBaseline: CanvasTextBaseline\n  public constructor(style: BaseStdStyleOption = {}) {\n    super(style)\n    this._textAlign = style.textAlign || 'left'\n    this._textBaseline = style.textBaseline || 'middle'\n  }\n  public get textAlign(): CanvasTextAlign {\n    return this._textAlign\n  }\n  public set textAlign(textAlign) {\n    this._textAlign = textAlign\n    this.doChangeStyle()\n  }\n  public get textBaseline(): CanvasTextBaseline {\n    return this._textBaseline\n  }\n  public set textBaseline(textBaseline) {\n    this._textBaseline = textBaseline\n    this.doChangeStyle()\n  }\n  public clone(): BaseStdStyle {\n    return new BaseStdStyle(this)\n  }\n}\n","import { ColorDef, BaseCheckStyleOption } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\nimport { defaults } from '../../internal/utils'\n\nlet defaultBaseCheckStyle: BaseCheckStyle\n\nexport class BaseCheckStyle extends BaseStdStyle {\n  public static get DEFAULT(): BaseCheckStyle {\n    return defaultBaseCheckStyle\n      ? defaultBaseCheckStyle\n      : (defaultBaseCheckStyle = new BaseCheckStyle())\n  }\n  private _uncheckBgColor?: ColorDef\n  private _checkBgColor?: ColorDef\n  private _borderColor?: ColorDef\n  public constructor(style: BaseCheckStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    const { uncheckBgColor, checkBgColor, borderColor } = style\n    this._uncheckBgColor = uncheckBgColor\n    this._checkBgColor = checkBgColor\n    this._borderColor = borderColor\n  }\n  public get uncheckBgColor(): ColorDef | undefined {\n    return this._uncheckBgColor\n  }\n  public set uncheckBgColor(uncheckBgColor) {\n    this._uncheckBgColor = uncheckBgColor\n    this.doChangeStyle()\n  }\n  public get checkBgColor(): ColorDef | undefined {\n    return this._checkBgColor\n  }\n  public set checkBgColor(checkBgColor) {\n    this._checkBgColor = checkBgColor\n    this.doChangeStyle()\n  }\n  public get borderColor(): ColorDef | undefined {\n    return this._borderColor\n  }\n  public set borderColor(borderColor) {\n    this._borderColor = borderColor\n    this.doChangeStyle()\n  }\n  public clone(): BaseCheckStyle {\n    return new BaseCheckStyle(this)\n  }\n}\n","import { ColorDef, TextOverflow, StyleOption, Appearance } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\n\nlet defaultStyle: Style\n\nexport class Style extends BaseStdStyle {\n  public static get DEFAULT(): Style {\n    return defaultStyle ? defaultStyle : (defaultStyle = new Style())\n  }\n  private _color?: ColorDef\n  private _font?: string\n  private _padding?: number | string | (number | string)[]\n  private _inputPadding?: number | string | (number | string)[]\n  private _textOverflow: TextOverflow\n  private _appearance: Appearance\n  public constructor(style: StyleOption = {}) {\n    super(style)\n    this._color = style.color\n    this._font = style.font\n    this._padding = style.padding\n    this._inputPadding = style.inputPadding\n    this._textOverflow = style.textOverflow || 'clip'\n    this._appearance = style.appearance || 'none'\n  }\n  public get color(): ColorDef | undefined {\n    return this._color\n  }\n  public set color(color) {\n    this._color = color\n    this.doChangeStyle()\n  }\n  public get font(): string | undefined {\n    return this._font\n  }\n  public set font(font) {\n    this._font = font\n    this.doChangeStyle()\n  }\n  public get padding(): number | string | (number | string)[] | undefined {\n    return this._padding\n  }\n  public set padding(padding) {\n    this._padding = padding\n    this.doChangeStyle()\n  }\n  public get inputPadding(): number | string | (number | string)[] | undefined {\n    return this._inputPadding\n  }\n  public set inputPadding(inputPadding) {\n    this._inputPadding = inputPadding\n    this.doChangeStyle()\n  }\n  public get textOverflow(): TextOverflow {\n    return this._textOverflow\n  }\n  public set textOverflow(textOverflow) {\n    this._textOverflow = textOverflow\n    this.doChangeStyle()\n  }\n  public get appearance(): Appearance {\n    return this._appearance\n  }\n  public set appearance(appearance) {\n    this._appearance = appearance\n    this.doChangeStyle()\n  }\n  public clone(): Style {\n    return new Style(this)\n  }\n}\n","import { ButtonStyleOption, ColorDef } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultButtonStyle: ButtonStyle\n\nexport class ButtonStyle extends Style {\n  public static get DEFAULT() {\n    return defaultButtonStyle\n      ? defaultButtonStyle\n      : (defaultButtonStyle = new ButtonStyle())\n  }\n  private _buttonBgColor?: ColorDef\n  public constructor(style: ButtonStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    this._buttonBgColor = style.buttonBgColor\n  }\n  public get buttonBgColor(): ColorDef | undefined {\n    return this._buttonBgColor\n  }\n  public set buttonBgColor(buttonBgColor) {\n    this._buttonBgColor = buttonBgColor\n    this.doChangeStyle()\n  }\n  public clone(): ButtonStyle {\n    return new ButtonStyle(this)\n  }\n}\n","import { CheckStyleOption } from '../../ts-types'\nimport { BaseCheckStyle } from './BaseCheckStyle'\n\nlet defaultCheckStyle: CheckStyle\n\nexport class CheckStyle extends BaseCheckStyle {\n  public static get DEFAULT(): CheckStyle {\n    return defaultCheckStyle\n      ? defaultCheckStyle\n      : (defaultCheckStyle = new CheckStyle())\n  }\n  public constructor(style: CheckStyleOption = {}) {\n    super(style)\n  }\n  public clone(): CheckStyle {\n    return new CheckStyle(this)\n  }\n}\n","import { SwitchStyleOption } from '../../ts-types'\nimport { BaseCheckStyle } from './BaseCheckStyle'\n\nlet defaultSwitchStyle: SwitchStyle\n\nexport class SwitchStyle extends BaseCheckStyle {\n  public static get DEFAULT(): SwitchStyle {\n    return defaultSwitchStyle\n      ? defaultSwitchStyle\n      : (defaultSwitchStyle = new SwitchStyle())\n  }\n  public constructor(style: SwitchStyleOption = {}) {\n    super(style)\n  }\n  public clone(): SwitchStyle {\n    return new SwitchStyle(this)\n  }\n}\n","import { DateStyleOption } from '../../ts-types'\nimport { Style } from './Style'\n\nfunction adjustDateTimeStyleOption(style: DateStyleOption): DateStyleOption {\n  style.textAlign = style.textAlign || 'right'\n  return style\n}\n\nlet defaultDateStyle: DateStyle\n\nexport class DateStyle extends Style {\n  public static get DEFAULT(): DateStyle {\n    return defaultDateStyle\n      ? defaultDateStyle\n      : (defaultDateStyle = new DateStyle())\n  }\n  public constructor(style: DateStyleOption = {}) {\n    super(adjustDateTimeStyleOption(style))\n  }\n  public clone(): DateStyle {\n    return new DateStyle(this)\n  }\n}\n","import { DrawStyleOption, Appearance } from '../../ts-types'\nimport { BaseStyle } from './BaseStyle'\n\nlet defaultDrawStyle: DrawStyle\n\nexport class DrawStyle extends BaseStyle {\n  private _appearance: Appearance\n  public static get DEFAULT(): DrawStyle {\n    return defaultDrawStyle\n      ? defaultDrawStyle\n      : (defaultDrawStyle = new DrawStyle())\n  }\n  public constructor(style: DrawStyleOption = {}) {\n    super(style)\n    this._appearance = style.appearance || 'none'\n  }\n  public get appearance(): Appearance {\n    return this._appearance\n  }\n  public set appearance(appearance) {\n    this._appearance = appearance\n    this.doChangeStyle()\n  }\n  public clone(): DrawStyle {\n    return new DrawStyle(this)\n  }\n}\n","import { IconStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultIconStyle: IconStyle\n\nexport class IconStyle extends Style {\n  public static get DEFAULT() {\n    return defaultIconStyle\n      ? defaultIconStyle\n      : (defaultIconStyle = new IconStyle())\n  }\n  public constructor(style: IconStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n  }\n  public clone(): IconStyle {\n    return new IconStyle(this)\n  }\n}\n","import { ImageStyleOption, Appearance } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\nimport { defaults } from '../../internal/utils'\n\nlet defaultImageStyle: ImageStyle\n\nexport class ImageStyle extends BaseStdStyle {\n  public static get DEFAULT(): ImageStyle {\n    return defaultImageStyle\n      ? defaultImageStyle\n      : (defaultImageStyle = new ImageStyle())\n  }\n  private _margin: number\n  private _imageSizing?: 'keep-aspect-ratio'\n  private _appearance?: Appearance\n  public constructor(style: ImageStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    this._imageSizing = style.imageSizing\n    this._margin = style.margin || 4\n    this._appearance = style.appearance || 'none'\n  }\n  public get imageSizing(): 'keep-aspect-ratio' | undefined {\n    return this._imageSizing\n  }\n  public set imageSizing(imageSizing) {\n    this._imageSizing = imageSizing\n    this.doChangeStyle()\n  }\n  public get margin(): number {\n    return this._margin\n  }\n  public set margin(margin) {\n    this._margin = margin\n    this.doChangeStyle()\n  }\n  public get appearance(): Appearance | undefined {\n    return this._appearance\n  }\n  public set appearance(appearance) {\n    this._appearance = appearance\n    this.doChangeStyle()\n  }\n  public clone(): ImageStyle {\n    return new ImageStyle(this)\n  }\n}\n","import { LookupStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultLookupStyle: LookupStyle\n\nexport class LookupStyle extends Style {\n  public static get DEFAULT() {\n    return defaultLookupStyle\n      ? defaultLookupStyle\n      : (defaultLookupStyle = new LookupStyle())\n  }\n  public constructor(style: LookupStyleOption = {}) {\n    super(defaults(style, { textAlign: 'left' }))\n    this.appearance = style.appearance || 'menulist-button'\n  }\n  public clone(): LookupStyle {\n    return new LookupStyle(this)\n  }\n}\n","import { MenuStyleOption } from '../../ts-types'\nimport { Style } from './Style'\n\nlet defaultMenuStyle: MenuStyle\n\nexport class MenuStyle extends Style {\n  public static get DEFAULT(): MenuStyle {\n    return defaultMenuStyle\n      ? defaultMenuStyle\n      : (defaultMenuStyle = new MenuStyle())\n  }\n  public constructor(style: MenuStyleOption = {}) {\n    super(style)\n    this.appearance = style.appearance || 'menulist-button'\n  }\n  public clone(): MenuStyle {\n    return new MenuStyle(this)\n  }\n}\n","import { LineClamp, MultilineTextStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultMultilineTextStyle: MultilineTextStyle\n\nexport class MultilineTextStyle extends Style {\n  public static get DEFAULT() {\n    return defaultMultilineTextStyle\n      ? defaultMultilineTextStyle\n      : (defaultMultilineTextStyle = new MultilineTextStyle())\n  }\n  private _lineHeight: string | number\n  private _autoWrapText: boolean\n  private _lineClamp: LineClamp\n  public constructor(style: MultilineTextStyleOption = {}) {\n    super(defaults(style, { textBaseline: 'middle', textOverflow: 'ellipsis' }))\n    this._lineHeight = style.lineHeight || '1em'\n    this._autoWrapText = style.autoWrapText || false\n    this._lineClamp = style.lineClamp || 'auto'\n  }\n  public clone() {\n    return new MultilineTextStyle(this)\n  }\n  public get lineHeight(): string | number {\n    return this._lineHeight\n  }\n  public set lineHeight(lineHeight) {\n    this._lineHeight = lineHeight\n    this.doChangeStyle()\n  }\n  public get lineClamp(): LineClamp {\n    return this._lineClamp\n  }\n  public set lineClamp(lineClamp) {\n    this._lineClamp = lineClamp\n    this.doChangeStyle()\n  }\n  public get autoWrapText(): boolean {\n    return this._autoWrapText\n  }\n  public set autoWrapText(autoWrapText) {\n    this._autoWrapText = autoWrapText\n    this.doChangeStyle()\n  }\n}\n","import { NumberStyleOption } from '../../ts-types'\nimport { Style } from './Style'\nimport { defaults } from '../../internal/utils'\n\nlet defaultNumberStyle: NumberStyle\n\nexport class NumberStyle extends Style {\n  public static get DEFAULT() {\n    return defaultNumberStyle\n      ? defaultNumberStyle\n      : (defaultNumberStyle = new NumberStyle())\n  }\n  public constructor(style: NumberStyleOption = {}) {\n    super(defaults(style, { textAlign: 'right' }))\n  }\n  public clone(): NumberStyle {\n    return new NumberStyle(this)\n  }\n}\n","import { PercentCompleteBarStyleOption, ColorDef } from '../../ts-types'\nimport { Style } from './Style'\n\nlet defaultPercentCompleteBarStyle: PercentCompleteBarStyle\n\nconst DEFAULT_BAR_COLOR = (num: number): string => {\n  if (num > 80) {\n    return '#20a8d8'\n  }\n  if (num > 50) {\n    return '#4dbd74'\n  }\n  if (num > 20) {\n    return '#ffc107'\n  }\n  return '#f86c6b'\n}\n\nexport class PercentCompleteBarStyle extends Style {\n  public static get DEFAULT(): PercentCompleteBarStyle {\n    return defaultPercentCompleteBarStyle\n      ? defaultPercentCompleteBarStyle\n      : (defaultPercentCompleteBarStyle = new PercentCompleteBarStyle())\n  }\n  private _barColor: ColorDef | ((num: number) => ColorDef)\n  private _barBgColor: ColorDef\n  private _barHeight: number\n  public constructor(style: PercentCompleteBarStyleOption = {}) {\n    super(style)\n    this._barColor = style.barColor || DEFAULT_BAR_COLOR\n    this._barBgColor = style.barBgColor || '#f0f3f5'\n    this._barHeight = style.barHeight || 3\n  }\n  public get barColor(): ColorDef | ((num: number) => ColorDef) {\n    return this._barColor\n  }\n  public set barColor(barColor) {\n    this._barColor = barColor\n    this.doChangeStyle()\n  }\n  public get barBgColor(): ColorDef {\n    return this._barBgColor\n  }\n  public set barBgColor(barBgColor) {\n    this._barBgColor = barBgColor\n    this.doChangeStyle()\n  }\n  public get barHeight(): number {\n    return this._barHeight\n  }\n  public set barHeight(barHeight) {\n    this._barHeight = barHeight\n    this.doChangeStyle()\n  }\n  public clone(): PercentCompleteBarStyle {\n    return new PercentCompleteBarStyle(this)\n  }\n}\n","import { ColorDef, RadioStyleOption } from '../../ts-types'\nimport { BaseStdStyle } from './BaseStdStyle'\nimport { defaults } from '../../internal/utils'\n\nlet defaultRadioStyle: RadioStyle\nexport class RadioStyle extends BaseStdStyle {\n  public static get DEFAULT(): RadioStyle {\n    return defaultRadioStyle\n      ? defaultRadioStyle\n      : (defaultRadioStyle = new RadioStyle())\n  }\n  private _checkColor?: ColorDef\n  private _uncheckBorderColor?: ColorDef\n  private _checkBorderColor?: ColorDef\n  private _uncheckBgColor?: ColorDef\n  private _checkBgColor?: ColorDef\n  public constructor(style: RadioStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    const {\n      checkColor,\n      uncheckBorderColor,\n      checkBorderColor,\n      uncheckBgColor,\n      checkBgColor,\n    } = style\n    this._checkColor = checkColor\n    this._uncheckBorderColor = uncheckBorderColor\n    this._checkBorderColor = checkBorderColor\n    this._uncheckBgColor = uncheckBgColor\n    this._checkBgColor = checkBgColor\n  }\n  public get checkColor(): ColorDef | undefined {\n    return this._checkColor\n  }\n  public set checkColor(checkColor) {\n    this._checkColor = checkColor\n    this.doChangeStyle()\n  }\n  public get uncheckBorderColor(): ColorDef | undefined {\n    return this._uncheckBorderColor\n  }\n  public set uncheckBorderColor(uncheckBorderColor) {\n    this._uncheckBorderColor = uncheckBorderColor\n    this.doChangeStyle()\n  }\n  public get checkBorderColor(): ColorDef | undefined {\n    return this._checkBorderColor\n  }\n  public set checkBorderColor(checkBorderColor) {\n    this._checkBorderColor = checkBorderColor\n    this.doChangeStyle()\n  }\n  public get uncheckBgColor(): ColorDef | undefined {\n    return this._uncheckBgColor\n  }\n  public set uncheckBgColor(uncheckBgColor) {\n    this._uncheckBgColor = uncheckBgColor\n    this.doChangeStyle()\n  }\n  public get checkBgColor(): ColorDef | undefined {\n    return this._checkBgColor\n  }\n  public set checkBgColor(checkBgColor) {\n    this._checkBgColor = checkBgColor\n    this.doChangeStyle()\n  }\n  public clone(): RadioStyle {\n    return new RadioStyle(this)\n  }\n}\n","import { TreeStyleOption, ColorDef, LineClamp } from '../../ts-types'\nimport { Style } from './Style'\n\nfunction adjustTreeStyleOption(style: TreeStyleOption) {\n  style.textAlign = style.textAlign || 'left'\n  return style\n}\n\nlet defaultTreeStyle: TreeStyle\n\nexport class TreeStyle extends Style {\n  public static get DEFAULT(): TreeStyle {\n    return defaultTreeStyle\n      ? defaultTreeStyle\n      : (defaultTreeStyle = new TreeStyle())\n  }\n  private _lineColor?: ColorDef\n  private _buttonColor?: ColorDef\n  private _buttonBgColor?: ColorDef\n  private _buttonBorderColor?: ColorDef\n  private _linkColor?: ColorDef\n  private _lineHeight: string | number\n  private _autoWrapText: boolean\n  private _lineClamp: LineClamp\n  public constructor(style: TreeStyleOption = {}) {\n    super(adjustTreeStyleOption(style))\n    this._lineColor = style.lineColor\n    this._buttonColor = style.buttonColor\n    this._buttonBgColor = style.buttonBgColor\n    this._buttonBorderColor = style.buttonBorderColor\n    this._linkColor = style.linkColor\n    this._lineHeight = style.lineHeight || '1em'\n    this._autoWrapText = style.autoWrapText || false\n    this._lineClamp = style.lineClamp || 'auto'\n  }\n  public get lineColor(): ColorDef | undefined {\n    return this._lineColor\n  }\n  public set lineColor(lineColor) {\n    this._lineColor = lineColor\n    this.doChangeStyle()\n  }\n  public get buttonColor(): ColorDef | undefined {\n    return this._buttonColor\n  }\n  public set buttonColor(buttonColor) {\n    this._buttonColor = buttonColor\n    this.doChangeStyle()\n  }\n  public get buttonBgColor(): ColorDef | undefined {\n    return this._buttonBgColor\n  }\n  public set buttonBgColor(buttonBgColor) {\n    this._buttonBgColor = buttonBgColor\n    this.doChangeStyle()\n  }\n  public get buttonBorderColor(): ColorDef | undefined {\n    return this._buttonBorderColor\n  }\n  public set buttonBorderColor(buttonBorderColor) {\n    this._buttonBorderColor = buttonBorderColor\n    this.doChangeStyle()\n  }\n  public get linkColor(): ColorDef | undefined {\n    return this._linkColor\n  }\n  public set linkColor(linkColor) {\n    this._linkColor = linkColor\n    this.doChangeStyle()\n  }\n  public get lineHeight(): string | number {\n    return this._lineHeight\n  }\n  public set lineHeight(lineHeight) {\n    this._lineHeight = lineHeight\n    this.doChangeStyle()\n  }\n  public get lineClamp(): LineClamp {\n    return this._lineClamp\n  }\n  public set lineClamp(lineClamp) {\n    this._lineClamp = lineClamp\n    this.doChangeStyle()\n  }\n  public get autoWrapText(): boolean {\n    return this._autoWrapText\n  }\n  public set autoWrapText(autoWrapText) {\n    this._autoWrapText = autoWrapText\n    this.doChangeStyle()\n  }\n  public clone(): TreeStyle {\n    return new TreeStyle(this)\n  }\n}\n","import { ColumnStyleOption } from '../ts-types'\nimport { BaseStyle } from './style/BaseStyle'\nimport { BaseStdStyle } from './style/BaseStdStyle'\nimport { BaseCheckStyle } from './style/BaseCheckStyle'\nimport { ButtonStyle } from './style/ButtonStyle'\nimport { CheckStyle } from './style/CheckStyle'\nimport { SwitchStyle } from './style/SwitchStyle'\nimport { DateStyle } from './style/DateStyle'\nimport { DrawStyle } from './style/DrawStyle'\nimport { IconStyle } from './style/IconStyle'\nimport { ImageStyle } from './style/ImageStyle'\nimport { LookupStyle } from './style/LookupStyle'\nimport { MenuStyle } from './style/MenuStyle'\nimport { MultilineTextStyle } from './style/MultilineTextStyle'\nimport { NumberStyle } from './style/NumberStyle'\nimport { PercentCompleteBarStyle } from './style/PercentCompleteBarStyle'\nimport { RadioStyle } from './style/RadioStyle'\nimport { Style } from './style/Style'\nimport { TreeStyle } from './style/TreeStyle'\n\nconst { EVENT_TYPE } = BaseStyle\nexport {\n  EVENT_TYPE,\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  NumberStyle,\n  CheckStyle,\n  RadioStyle,\n  SwitchStyle,\n  ButtonStyle,\n  ImageStyle,\n  IconStyle,\n  PercentCompleteBarStyle,\n  MultilineTextStyle,\n  MenuStyle,\n  DateStyle,\n  LookupStyle,\n  TreeStyle,\n  DrawStyle,\n}\n\nexport function of(\n  columnStyle: ColumnStyleOption | null | undefined,\n  record: any,\n  StyleClassDef: typeof BaseStyle = Style\n): BaseStyle {\n  if (columnStyle) {\n    if (columnStyle instanceof BaseStyle) {\n      return columnStyle\n    } else if (typeof columnStyle === 'function') {\n      return of(columnStyle(record), record, StyleClassDef)\n    } else if (\n      typeof columnStyle === 'string' &&\n      record &&\n      columnStyle in record\n    ) {\n      return of(record[columnStyle], record, StyleClassDef)\n    }\n    return new StyleClassDef(columnStyle as any)\n  } else {\n    return StyleClassDef.DEFAULT\n  }\n}\n","import * as styleContents from '../style'\nimport {\n  BaseColumnOption,\n  CellAddress,\n  CellContext,\n  ColumnTypeAPI,\n  EventListenerId,\n  GridCanvasHelperAPI,\n  LayoutObjectId,\n  ListGridAPI,\n  MaybePromise,\n  Message,\n  Convert,\n} from '../../ts-types'\nimport {\n  DrawCellInfo,\n  ColumnFadeinState,\n  GridInternal,\n} from '../../ts-types-internal'\nimport {\n  obj,\n  isDef,\n  getOrApply,\n  isPromise,\n  cellInRange,\n} from '../../internal/utils'\nimport { BaseStyle } from '../style/BaseStyle'\nimport { Style } from '../style/Style'\nimport { animate } from '../../internal/animate'\nimport Rect from '../../internal/Rect'\nimport { getColumnFadeinStateId } from '../../internal/symbolManager'\nimport { getInlineEditingState } from '../utils'\n\nconst COLUMN_FADEIN_STATE_ID = getColumnFadeinStateId()\n\nfunction getFadinState<T>(grid: GridInternal<T>): ColumnFadeinState {\n  let state = grid[COLUMN_FADEIN_STATE_ID]\n  if (!state) {\n    state = { cells: {} }\n    obj.setReadonly(grid, COLUMN_FADEIN_STATE_ID, state)\n  }\n  return state\n}\nfunction _generateFadinPointAction<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number,\n  context: CellContext,\n  drawInternal: () => void,\n  drawCellBase: () => void\n): (point: number) => void {\n  return (point: number) => {\n    const state = getFadinState(grid)\n    const stateKey = `${col}:${row}`\n    if (point === 1) {\n      delete state.cells[stateKey]\n    } else {\n      state.cells[stateKey] = {\n        opacity: point,\n      }\n    }\n    drawCellBase()\n\n    drawInternal()\n\n    const cellState = state.cells[stateKey]\n    if (cellState) {\n      // 透明背景覆盖透明度\n      const ctx = context.getContext()\n      ctx.globalAlpha = 1 - cellState.opacity\n      try {\n        drawCellBase()\n      } finally {\n        ctx.globalAlpha = 1\n      }\n    }\n  }\n}\nconst fadinMgr = {\n  animate<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    context: CellContext,\n    drawInternal: () => void,\n    drawCellBase: () => void\n  ): void {\n    // fadein animation\n    const state = getFadinState(grid)\n\n    const activeFadeins = [\n      _generateFadinPointAction(\n        grid,\n        col,\n        row,\n        context,\n        drawInternal,\n        drawCellBase\n      ),\n    ]\n    state.activeFadeins = activeFadeins\n\n    animate(500, (point) => {\n      activeFadeins.forEach((f) => f(point))\n      if (point === 1) {\n        delete state.activeFadeins\n      }\n    })\n  },\n  margeAnimate<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    context: CellContext,\n    drawInternal: () => void,\n    drawCellBase: () => void\n  ): void {\n    const state = getFadinState(grid)\n    if (state.activeFadeins) {\n      state.activeFadeins.push(\n        _generateFadinPointAction(\n          grid,\n          col,\n          row,\n          context,\n          drawInternal,\n          drawCellBase\n        )\n      )\n    } else {\n      drawInternal()\n    }\n  },\n}\n\nexport abstract class BaseColumn<T, V> implements ColumnTypeAPI {\n  private _convert?: Convert\n  private _convertCopy?: Convert\n  private _fadeinWhenCallbackInPromise: boolean\n  private _hidden?: boolean | ((record: T) => boolean)\n  public constructor(options: BaseColumnOption<T> = {}) {\n    this.onDrawCell = this.onDrawCell.bind(this) // 修复范围\n\n    this._convert = options.convert\n    this._convertCopy = options.convertCopy\n    this._hidden = options.hidden\n\n    // 使用Promise的回调显示淡入\n    this._fadeinWhenCallbackInPromise =\n      options.fadeinWhenCallbackInPromise || false\n  }\n  public get StyleClass(): typeof BaseStyle {\n    return BaseStyle\n  }\n  public get fadeinWhenCallbackInPromise(): boolean | undefined {\n    return this._fadeinWhenCallbackInPromise\n  }\n  public get convert(): Convert | undefined {\n    return this._convert\n  }\n  public get convertCopy(): Convert | undefined {\n    return this._convertCopy\n  }\n  public get hidden(): boolean | ((record: T) => boolean) | undefined {\n    return this._hidden\n  }\n  public set hidden(hidden) {\n    this._hidden = hidden\n  }\n  public reviseAttachCellsArea(\n    _rect: Rect,\n    _row: number,\n    _grid: ListGridAPI<T>\n  ) {\n    // nothing\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    const state = getInlineEditingState(grid)\n    if (state.inputPadding) {\n      padding[0] += state.inputPadding[0]\n      padding[1] += state.inputPadding[1]\n      padding[2] += state.inputPadding[2]\n      padding[3] += state.inputPadding[3]\n    }\n  }\n  public reviseFocusRect(_rect: Rect, _row: number, _grid: ListGridAPI<T>) {\n    // nothing\n  }\n  public onDrawCell(\n    cellValue: MaybePromise<unknown>,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: ListGridAPI<T>\n  ): void | Promise<void> {\n    const {\n      style,\n      getRecord,\n      clearCellBase,\n      drawCellBase,\n      getCell,\n      getContentHidden,\n    } = info\n\n    const record = getRecord() as T\n    const helper = grid.getGridCanvasHelper()\n    const state = getInlineEditingState(grid)\n    if (\n      state.cellRange &&\n      cellInRange(state.cellRange, context.col, context.row)\n    ) {\n      // 被编辑单元格\n      drawCellBase({ bgColor: '#FFF' })\n      const actStyle = styleContents.of(style, record, this.StyleClass)\n      this.drawEditingInternal(context, actStyle, helper, grid, info)\n      return\n    }\n    if (!state.cellRange) {\n      // 在绘制单元格时，在编辑前，顺便保存当前焦点单元格的 inputPadding\n      const sel = context.getSelection()\n      const { col, row } = context\n      if (\n        !sel.dragged &&\n        cellInRange(context.range, sel.select.col, sel.select.row) &&\n        cellInRange(sel.range, col, row)\n      ) {\n        // 焦点单元格\n        const actStyle = styleContents.of(style, record, this.StyleClass)\n        if (actStyle instanceof Style && actStyle.inputPadding) {\n          state.inputPadding = helper.toBoxPixelArray(\n            actStyle.inputPadding,\n            context,\n            actStyle.font\n          )\n        } else {\n          delete state.inputPadding\n        }\n      }\n    }\n    clearCellBase()\n\n    let promise\n    if (!record) {\n      return // 过滤过程中 record 可能没有值\n    } else if (isPromise(record)) {\n      promise = record.then(() => cellValue)\n    } else if (isPromise(cellValue)) {\n      promise = cellValue\n    }\n    // 文字\n    if (promise) {\n      const start = Date.now()\n      return promise.then((val: any) => {\n        const currentContext = context.toCurrentContext()\n        const drawRect = currentContext.getDrawRect()\n        if (!drawRect) {\n          return\n        }\n        const time = Date.now() - start\n\n        const drawInternal = () => {\n          const _currentContext = context.toCurrentContext()\n          const _drawRect = _currentContext.getDrawRect()\n          if (!_drawRect) {\n            return\n          }\n          const _record = getRecord() as T\n          if (isPromise(_record)) {\n            return\n          }\n\n          const actStyle = styleContents.of(style, _record, this.StyleClass)\n          if (actStyle.bgColor) {\n            drawCellBase({ bgColor: actStyle.bgColor })\n          } else {\n            drawCellBase()\n          }\n\n          if (this.isContentHidden(_record, getContentHidden)) {\n            return\n          }\n\n          this.drawInternal(\n            this.doConvertInternal(val, getCell(), grid),\n            _currentContext,\n            actStyle,\n            helper,\n            grid,\n            info\n          )\n          this.drawMessageInternal(\n            info.getMessage(),\n            context,\n            actStyle,\n            helper,\n            grid,\n            info\n          )\n        }\n\n        let isFadeinWhenCallbackInPromise = this._fadeinWhenCallbackInPromise\n        if (!isDef(isFadeinWhenCallbackInPromise)) {\n          isFadeinWhenCallbackInPromise = !!grid.configure(\n            'fadeinWhenCallbackInPromise'\n          )\n        }\n\n        if (!isFadeinWhenCallbackInPromise) {\n          drawInternal() // 简单的绘图\n        } else {\n          const col = context.col\n          const row = context.row\n          if (time < 80) {\n            // 80 ms内的PromiseCallback被集成到之前的动画中\n            fadinMgr.margeAnimate(\n              grid,\n              col,\n              row,\n              context,\n              drawInternal,\n              drawCellBase\n            )\n          } else {\n            // 动画\n            fadinMgr.animate(\n              grid,\n              col,\n              row,\n              context,\n              drawInternal,\n              drawCellBase\n            )\n          }\n        }\n      })\n    } else {\n      const actStyle = styleContents.of(style, record, this.StyleClass)\n      if (actStyle.bgColor) {\n        drawCellBase({ bgColor: actStyle.bgColor })\n      } else {\n        drawCellBase()\n      }\n      if (this.isContentHidden(record, getContentHidden)) {\n        return\n      }\n      this.drawInternal(\n        this.doConvertInternal(cellValue, getCell(), grid),\n        context,\n        actStyle,\n        helper,\n        grid,\n        info\n      )\n      this.drawMessageInternal(\n        info.getMessage(),\n        context,\n        actStyle,\n        helper,\n        grid,\n        info\n      )\n      // 在淡入的情况下透明背景覆盖透明度\n      const col = context.col\n      const row = context.row\n      const stateKey = `${col}:${row}`\n      const cellState =\n        (grid as any)[COLUMN_FADEIN_STATE_ID] &&\n        (grid as any)[COLUMN_FADEIN_STATE_ID][stateKey]\n      if (cellState) {\n        const ctx = context.getContext()\n        ctx.globalAlpha = 1 - cellState.opacity\n        try {\n          drawCellBase()\n        } finally {\n          ctx.globalAlpha = 1\n        }\n      }\n      return\n    }\n  }\n  public abstract clone(): BaseColumn<T, V>\n  public abstract drawInternal(\n    value: V,\n    context: CellContext,\n    style: BaseStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void\n  public drawMessageInternal(\n    message: Message,\n    context: CellContext,\n    style: BaseStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    info.messageHandler.drawCellMessage(\n      message,\n      context,\n      style,\n      helper,\n      grid,\n      info\n    )\n  }\n  public bindGridEvent(\n    _grid: ListGridAPI<T>,\n    _cellId: LayoutObjectId\n  ): EventListenerId[] {\n    return []\n  }\n  public getCopyCellValue(\n    value: V,\n    _grid: ListGridAPI<T>,\n    _cell: CellAddress\n  ): string {\n    return value as any\n  }\n  public convertCopyValue(\n    value: unknown,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ) {\n    let displayValue = this.convertCopyInternal(value)\n    if (this.convertCopy) {\n      displayValue = this.convertCopy(value, displayValue, cell, grid)\n    }\n    return displayValue\n  }\n  protected doConvertInternal(\n    value: unknown,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ) {\n    let displayValue = this.convertInternal(value)\n    if (this.convert) {\n      displayValue = this.convert(value, displayValue, cell, grid)\n    }\n    return displayValue\n  }\n  protected convertInternal(value: unknown): V {\n    return (isDef(value) ? value : '') as V\n  }\n  protected convertCopyInternal(value: unknown): V {\n    return this.convertInternal(value)\n  }\n  protected drawEditingInternal(\n    _context: CellContext,\n    _style: BaseStyle,\n    _helper: GridCanvasHelperAPI,\n    _grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    // nothing\n  }\n  private isContentHidden(record: T, getContentHidden: () => boolean) {\n    let contentHidden = getOrApply(this.hidden, record)\n    if (!isDef(contentHidden)) {\n      contentHidden = getContentHidden()\n    }\n    return contentHidden\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  CellAddress,\n  MenuColumnOption,\n  ColumnMenuItemOptions,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  SimpleColumnMenuItemOption,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { BaseColumn } from './BaseColumn'\nimport { MenuStyle } from '../style/MenuStyle'\nimport { isDef } from '../../internal/utils'\nimport menuItems from '../../internal/menu-items'\n\nexport class MenuColumn<T> extends BaseColumn<T, unknown> {\n  private _options: SimpleColumnMenuItemOption[]\n  public constructor(options: MenuColumnOption<T> = {}) {\n    super(options)\n    this._options = menuItems.normalize(options.options)\n  }\n  public get StyleClass(): typeof MenuStyle {\n    return MenuStyle\n  }\n  public get options(): SimpleColumnMenuItemOption[] {\n    return this._options\n  }\n  public clone(): MenuColumn<T> {\n    return new MenuColumn(this)\n  }\n  public withOptions(options: ColumnMenuItemOptions): MenuColumn<T> {\n    const c = this.clone()\n    c._options = menuItems.normalize(options)\n    return c\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: MenuStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getCell, getIcon }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      font,\n      padding,\n      textOverflow,\n      appearance,\n    } = style\n    let { color } = style\n    const text = this._convertInternal(value, getCell(), grid)\n    helper.testFontLoad(font, text, context)\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const basePadding = helper.toBoxPixelArray(padding || 0, context, font)\n      const textPadding = basePadding.slice(0)\n      textPadding[1] += 26 // icon padding\n      const iconPadding = basePadding.slice(0)\n      iconPadding[1] += 8\n      if (!isDef(color) && (!isDef(value) || value === '')) {\n        color = 'rgba(0, 0, 0, .38)'\n      }\n      helper.text(text, ctx, {\n        color,\n        font,\n        icons,\n        padding: textPadding,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n      if (appearance === 'menulist-button') {\n        // draw dropdown arrow icon\n        helper.text('', context, {\n          color,\n          font,\n          icons: [\n            {\n              color: 'rgba(0, 0, 0, .54)',\n              path: 'M0 2 5 7 10 2z',\n              width: 10,\n            },\n          ],\n          padding: iconPadding,\n          textAlign: 'right',\n          textBaseline,\n        })\n      } else if (appearance !== 'none') {\n        window.console.warn(`unsupported appearance:${appearance}`)\n      }\n    })\n  }\n  protected convertInternal(value: unknown) {\n    return value\n  }\n  private _convertInternal(\n    value: unknown,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ): string {\n    const options = this._options\n    for (const option of options) {\n      if (option.value === value) {\n        value = option.label\n        break\n      }\n    }\n    return super.doConvertInternal(value, cell, grid) as string\n  }\n  public getCopyCellValue(\n    value: unknown,\n    grid: ListGridAPI<T>,\n    cell: CellAddress\n  ): string {\n    return this._convertInternal(value, cell, grid)\n  }\n}\n","import {\n  InlineMenuEditorOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n  SimpleColumnMenuItemOption,\n  ColumnTypeAPI,\n  ColumnMenuItemOption,\n} from '../../ts-types'\nimport { KEY_ENTER, KEY_F2 } from '../../core/draw-grid/KEY_CODE'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport menuItems from '../../internal/menu-items'\nimport {\n  obj,\n  event,\n  array,\n  then,\n  isPromise,\n  cellEquals,\n} from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord } from './action-utils'\nimport { Editor } from './Editor'\nimport { InlineMenuElement } from './internal/InlineMenuElement'\n\nimport { GridInternal, InputEditorState } from '../../ts-types-internal'\nimport { getInlineMenuEditorStateId } from '../../internal/symbolManager'\nimport { MenuColumn } from '../type/MenuColumn'\n\nconst INLINE_MENU_EDITOR_STATE_ID = getInlineMenuEditorStateId()\n\nlet globalInlineMenuElement: InlineMenuElement<any> | null = null\nlet globalInlineMenuBindGridCount = 0\n\nfunction getState<T>(grid: GridInternal<T>): InputEditorState {\n  let state = grid[INLINE_MENU_EDITOR_STATE_ID]\n  if (!state) {\n    state = {}\n    obj.setReadonly(grid, INLINE_MENU_EDITOR_STATE_ID, state)\n  }\n  return state\n}\n\nfunction attachMenu<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineMenuEditor<T>,\n  value: any,\n  record: T | undefined\n) {\n  const state = getState(grid as any)\n  if (!globalInlineMenuElement) {\n    globalInlineMenuElement = new InlineMenuElement()\n  }\n  if (!state.element) {\n    state.element = globalInlineMenuElement\n    globalInlineMenuBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineMenuBindGridCount--\n        if (!globalInlineMenuBindGridCount && globalInlineMenuElement) {\n          globalInlineMenuElement.dispose()\n          globalInlineMenuElement = null\n        }\n      },\n    })\n  }\n\n  globalInlineMenuElement.attach(\n    grid,\n    editor,\n    cell.col,\n    cell.row,\n    value,\n    record\n  )\n}\nfunction detachMenu(gridFocus?: boolean) {\n  if (globalInlineMenuElement) {\n    globalInlineMenuElement.detach(gridFocus)\n  }\n}\n\nexport class InlineMenuEditor<T> extends Editor<T> {\n  private _classList?: string | string[]\n  private _options: (record: T | undefined) => ColumnMenuItemOption[]\n  private _autoWidth: boolean\n  public constructor(options: InlineMenuEditorOption<T> = {}) {\n    super(options)\n    this._classList = options.classList || ''\n    this._options = menuItems.normalizeToFn(options.options)\n    this._autoWidth = options.autoWidth || false\n  }\n  public dispose() {\n    // nothing\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get options(): (record: T | undefined) => ColumnMenuItemOption[] {\n    return this._options\n  }\n  public set options(options) {\n    this._options = menuItems.normalizeToFn(options)\n  }\n  public get autoWidth(): boolean {\n    return this._autoWidth\n  }\n  public set autoWidth(autoWidth) {\n    this._autoWidth = autoWidth\n  }\n  public clone(): InlineMenuEditor<T> {\n    return new InlineMenuEditor(this)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachMenu(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachMenu(true)\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const open = (cell: CellAddress): boolean => {\n      const allowOpen =\n        !isReadOnlyRecord(this.readOnly, grid, cell.row) &&\n        !isDisabledRecord(this.disabled, grid, cell.row)\n      if (allowOpen) {\n        grid.doGetCellValue(cell.col, cell.row, (value) => {\n          const record = grid.getRowRecord(cell.row)\n          if (isPromise(record)) {\n            return\n          }\n          attachMenu(grid, cell, this, value, record)\n        })\n      }\n      return allowOpen\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      grid.listen(DG_EVENT_TYPE.CLICK_CELL, (cell) => {\n        if (!isTarget(cell.col, cell.row)) {\n          return\n        }\n        open({\n          col: cell.col,\n          row: cell.row,\n        })\n      }),\n      grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n        if (\n          (e.keyCode !== KEY_F2 && e.keyCode !== KEY_ENTER) ||\n          (e.keyCode === KEY_ENTER && e.event.shiftKey)\n        ) {\n          return\n        }\n        const sel = grid.selection.select\n        if (!isTarget(sel.col, sel.row)) {\n          return\n        }\n        if (\n          open({\n            col: sel.col,\n            row: sel.row,\n          })\n        ) {\n          event.cancel(e.event)\n          e.stopCellMoving()\n        }\n      }),\n      grid.listen(DG_EVENT_TYPE.SELECTED_CELL, (e) => {\n        detachMenu()\n      }),\n      grid.listen(DG_EVENT_TYPE.SCROLL, () => {\n        detachMenu(true)\n      }),\n\n      // mouse move\n      grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, e.row) ||\n          isDisabledRecord(this.disabled, grid, e.row)\n        ) {\n          return\n        }\n        grid.getElement().style.cursor = 'pointer'\n      }),\n      grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, e.row) ||\n          isDisabledRecord(this.disabled, grid, e.row)\n        ) {\n          return\n        }\n        if (!grid.getElement().style.cursor) {\n          grid.getElement().style.cursor = 'pointer'\n        }\n      }),\n      grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        grid.getElement().style.cursor = ''\n      }),\n\n      // paste value\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (\n          isReadOnlyRecord(this.readOnly, grid, e.row) ||\n          isDisabledRecord(this.disabled, grid, e.row)\n        ) {\n          return\n        }\n        const record = grid.getRowRecord(e.row)\n        if (isPromise(record)) {\n          return\n        }\n        const pasteOpt = this._pasteDataToOptionValue(\n          e.normalizeValue,\n          grid,\n          e,\n          record\n        )\n        if (pasteOpt) {\n          event.cancel(e.event)\n          then(\n            grid.doChangeValue(e.col, e.row, () => pasteOpt.value),\n            () => {\n              const range = grid.getCellRange(e.col, e.row)\n              grid.invalidateCellRange(range)\n            }\n          )\n        }\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const record = grid.getRowRecord(cell.row)\n    if (isPromise(record)) {\n      return\n    }\n    const pasteOpt = this._pasteDataToOptionValue(value, grid, cell, record)\n    if (pasteOpt) {\n      grid.doChangeValue(cell.col, cell.row, () => pasteOpt.value)\n    }\n  }\n  public onDeleteCellRangeBox(grid: ListGridAPI<T>, cell: CellAddress): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const record = grid.getRowRecord(cell.row)\n    if (isPromise(record)) {\n      return\n    }\n    const pasteOpt = this._pasteDataToOptionValue('', grid, cell, record)\n    if (pasteOpt) {\n      grid.doChangeValue(cell.col, cell.row, () => pasteOpt.value)\n    }\n  }\n  private _pasteDataToOptionValue(\n    value: string,\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    record: T | undefined\n  ): SimpleColumnMenuItemOption | undefined {\n    const options = this._options(record)\n    const pasteOpt = _textToOptionValue(value, options)\n    if (pasteOpt) {\n      return pasteOpt\n    }\n    const columnType = grid.getColumnType(cell.col, cell.row)\n    if (hasOptions(columnType)) {\n      // Find with caption.\n      const pasteValue = normalizePasteValueStr(value)\n      const captionOpt = array.find(\n        columnType.options,\n        (opt) => normalizePasteValueStr(opt.label) === pasteValue\n      )\n      if (captionOpt) {\n        return _textToOptionValue(captionOpt.value, options)\n      }\n    }\n    return undefined\n  }\n}\n\nfunction _textToOptionValue<T>(\n  value: string,\n  options: SimpleColumnMenuItemOption[]\n): SimpleColumnMenuItemOption | undefined {\n  const pasteValue = normalizePasteValueStr(value)\n  const pasteOpt = array.find(\n    options,\n    (opt) => normalizePasteValueStr(opt.value) === pasteValue\n  )\n  if (pasteOpt) {\n    return pasteOpt\n  }\n  return undefined\n}\n\nfunction normalizePasteValueStr(value: any): string {\n  if (value == null) {\n    return ''\n  }\n  return `${value}`.trim()\n}\n\nfunction hasOptions(columnType: ColumnTypeAPI): columnType is MenuColumn<any> {\n  if (columnType instanceof MenuColumn) {\n    return true\n  }\n  if (Array.isArray((columnType as any).options)) {\n    return true\n  }\n\n  return false\n}\n","import { ListGridAPI } from '../../../ts-types'\nimport { KEY_ENTER, KEY_ESC, KEY_TAB } from '../../../core/draw-grid/KEY_CODE'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport { event, isDef } from '../../../internal/utils'\n\nimport { InlineTextAreaEditor } from '../InlineTextAreaEditor'\nimport InlineTextAreaElementCss from './InlineTextAreaElement.css'\nimport { getInlineEditingState } from '../../../columns/utils'\n\nconst CLASSNAME_ITAE = 'kaka-grid__inline-textarea'\n\nfunction createInputElement() {\n  style.inject('InlineTextAreaElement', InlineTextAreaElementCss)\n  return createElement('textarea', { classList: CLASSNAME_ITAE })\n}\n\nconst BEFORE_TEXTAREA_VALUE = 'before_value'\n\nfunction inputAutoHeight(input: HTMLTextAreaElement) {\n  const h = input.style.minHeight\n  input.style.minHeight = '0px'\n  input.style.height = '0px'\n  input.style.height = input.scrollHeight + 'px'\n  input.style.minHeight = h\n}\n\nfunction setTextInputValue(\n  input: HTMLTextAreaElement,\n  value: any,\n  inputValue?: string\n) {\n  if (isDef(value)) {\n    input.value = value\n  } else {\n    input.value = ''\n  }\n  input.dataset[BEFORE_TEXTAREA_VALUE] = input.value\n  if (inputValue) {\n    input.value = inputValue\n  }\n  inputAutoHeight(input)\n}\n\nfunction getTextInputValue(input: HTMLTextAreaElement) {\n  return input.value\n}\n\nfunction isTextInputValueChanged(input: HTMLTextAreaElement) {\n  return input.value !== input.dataset[BEFORE_TEXTAREA_VALUE]\n}\n\ninterface ActiveData<T> {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: InlineTextAreaEditor<T>\n}\n\nexport class InlineTextAreaElement<T> {\n  public static setInputAttrs<T>(\n    editor: InlineTextAreaEditor<T>,\n    _grid: ListGridAPI<T>,\n    input: HTMLElement\n  ) {\n    const classList = editor.classList\n    if (classList) {\n      input.classList.add(...classList)\n    }\n  }\n  private _handler: EventHandler\n  private _input: HTMLTextAreaElement\n  private _attaching: boolean = false\n  private _activeData?: ActiveData<T>\n  private _beforePropEditor?: InlineTextAreaEditor<T>\n  public constructor() {\n    this._handler = new EventHandler()\n    this._input = createInputElement()\n    this._bindInputEvents()\n  }\n  public dispose() {\n    this.detach()\n    this._handler.dispose()\n    delete this._beforePropEditor\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: InlineTextAreaEditor<T>,\n    col: number,\n    row: number,\n    value: any,\n    inputValue?: string\n  ) {\n    const input = this._input\n\n    if (input.parentElement) {\n      // 参见 InlineInputElement.ts\n      return\n    }\n\n    const handler = this._handler\n\n    if (this._beforePropEditor) {\n      const classList = this._beforePropEditor.classList\n      if (classList) {\n        input.classList.remove(...classList)\n      }\n    }\n\n    input.style.font = grid.font || '16px sans-serif'\n\n    const { element, rect, padding } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    input.style.top = `${rect.top.toFixed()}px`\n    input.style.left = `${rect.left.toFixed()}px`\n    input.style.minWidth = `${rect.width.toFixed()}px`\n    input.style.width = input.style.minWidth\n    input.style.minHeight = `${rect.height.toFixed()}px`\n    input.style.height = input.style.minHeight\n    input.style.paddingTop = `${padding[0]}px`\n    input.style.paddingRight = `${padding[1]}px`\n    input.style.paddingBottom = `${padding[2]}px`\n    input.style.paddingLeft = `${padding[3]}px`\n    element.appendChild(input)\n\n    InlineTextAreaElement.setInputAttrs(editor, grid, input)\n    setTextInputValue(input, value, inputValue)\n\n    this._activeData = { grid, col, row, editor }\n    this._beforePropEditor = editor\n\n    const focus = () => {\n      input.focus()\n\n      const end = input.value.length\n      try {\n        if (typeof input.selectionStart !== 'undefined') {\n          input.selectionStart = end\n          input.selectionEnd = end\n          return\n        }\n      } catch (e) {\n        // ignore\n      }\n      if ((document as any).selection) {\n        const range = (input as any).createTextRange()\n        range.collapse()\n        range.moveEnd('character', end)\n        range.moveStart('character', end)\n        range.select()\n      }\n    }\n    const safeInputFocus = () => {\n      handler.tryWithOffEvents(input, 'blur', () => {\n        focus()\n      })\n      const state = getInlineEditingState(grid)\n      state.cellRange = grid.getCellRange(col, row)\n      grid.invalidateCellRange(state.cellRange)\n    }\n\n    this._attaching = true\n    setTimeout(() => {\n      safeInputFocus()\n      this._attaching = false\n    })\n  }\n  public detach(gridFocus?: boolean) {\n    if (this._isActive()) {\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      const input = this._input\n      this._handler.tryWithOffEvents(input, 'blur', () => {\n        if (input.parentElement) {\n          input.parentElement.removeChild(input)\n        }\n      })\n      const state = getInlineEditingState(grid)\n      delete state.cellRange\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    delete this._activeData\n  }\n  public doChangeValue() {\n    if (!this._isActive()) {\n      return\n    }\n    if (isTextInputValueChanged(this._input)) {\n      const value = getTextInputValue(this._input)\n      const activeData = this._activeData!\n      const grid = activeData.grid\n      const col = activeData.col\n      const row = activeData.row\n      grid.doChangeValue(col, row, () => value)\n    }\n  }\n  private _isActive() {\n    const input = this._input\n    if (!input || !input.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindInputEvents() {\n    const handler = this._handler\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // grid为了不在活动中传播\n    handler.on(input, 'click', stopPropagationOnly)\n    handler.on(input, 'mousedown', stopPropagationOnly)\n    handler.on(input, 'touchstart', stopPropagationOnly)\n    handler.on(input, 'dblclick', stopPropagationOnly)\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n    })\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e, input)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      }\n    })\n    handler.on(input, 'blur', (e) => {\n      this.doChangeValue()\n      this.detach()\n    })\n    handler.on(input, 'input', (e) => {\n      inputAutoHeight(input)\n    })\n  }\n  private _onKeydownEnter(e: KeyboardEvent, input: HTMLTextAreaElement): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    if (e.altKey || e.ctrlKey) {\n      input.setRangeText('\\n')\n      input.selectionStart++\n      setTimeout(() => {\n        inputAutoHeight(input)\n      }, 0)\n      event.cancel(e)\n    } else {\n      const { grid } = this._activeData!\n      this.doChangeValue()\n      this.detach(true)\n      if (grid.keyboardOptions?.moveCellOnEnter) {\n        grid.onKeyDownMove(e)\n      }\n      event.cancel(e)\n    }\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    if (grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    this.doChangeValue()\n    this.detach(true)\n    grid.onKeyDownMove(e)\n  }\n}\n","import { obj } from '../../internal/utils'\nimport { BaseActionInput } from './BaseActionInput'\nimport { InlineTextAreaElement } from './internal/InlineTextAreaElement'\nimport { getInlineTextareaEditorStateId } from '../../internal/symbolManager'\nimport {\n  InlineTextAreaEditorOption,\n  ListGridAPI,\n  CellAddress,\n} from '../../ts-types'\n\nconst INLINE_TEXTAREA_EDITOR_STATE_ID = getInlineTextareaEditorStateId()\n\nlet globalInlineTextAreaElement: InlineTextAreaElement<any> | null = null\nlet globalInlineInputBindGridCount = 0\n\nfunction attachInput<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: InlineTextAreaEditor<T>,\n  value: any,\n  inputValue?: string\n) {\n  if (!globalInlineTextAreaElement) {\n    globalInlineTextAreaElement = new InlineTextAreaElement()\n  }\n  const state = (editor as any).getState(grid)\n  if (!state.element) {\n    state.element = globalInlineTextAreaElement\n    globalInlineInputBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalInlineInputBindGridCount--\n        if (!globalInlineInputBindGridCount && globalInlineTextAreaElement) {\n          globalInlineTextAreaElement.dispose()\n          globalInlineTextAreaElement = null\n        }\n      },\n    })\n  }\n\n  globalInlineTextAreaElement.attach(\n    grid,\n    editor,\n    cell.col,\n    cell.row,\n    value,\n    inputValue\n  )\n}\nfunction detachInput(gridFocus?: boolean) {\n  if (globalInlineTextAreaElement) {\n    globalInlineTextAreaElement.detach(gridFocus)\n  }\n}\nfunction doChangeValue<T>(grid: ListGridAPI<T>) {\n  if (globalInlineTextAreaElement) {\n    globalInlineTextAreaElement.doChangeValue()\n  }\n}\n\nexport class InlineTextAreaEditor<T> extends BaseActionInput<T> {\n  private _classList: string | string[]\n  public constructor(options: InlineTextAreaEditorOption<T> = {}) {\n    super(options)\n    this._classList = options.classList || ''\n  }\n  public get classList() {\n    return (\n      this._classList &&\n      (Array.isArray(this._classList) ? this._classList : [this._classList])\n    )\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public clone(): InlineTextAreaEditor<T> {\n    return new InlineTextAreaEditor(this)\n  }\n  public onActionInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value, inputValue)\n    })\n  }\n  public onActionOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    selected: any\n  ) {\n    doChangeValue(grid)\n    detachInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    doChangeValue(grid)\n    detachInput(true)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachInput(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    _cell: CellAddress,\n    input: HTMLInputElement\n  ) {\n    InlineTextAreaElement.setInputAttrs(this, grid, input)\n  }\n  protected getState(grid: any): any {\n    if (!(grid as any)[INLINE_TEXTAREA_EDITOR_STATE_ID]) {\n      obj.setReadonly(grid, INLINE_TEXTAREA_EDITOR_STATE_ID, {})\n    }\n    return grid[INLINE_TEXTAREA_EDITOR_STATE_ID]\n  }\n}\n","import {\n  CellAddress,\n  EventListenerId,\n  GetRadioEditorGroup,\n  LayoutObjectId,\n  RadioEditorOption,\n} from '../../ts-types'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { cellEquals, event, isPromise, obj } from '../../internal/utils'\nimport { isDisabledRecord, isReadOnlyRecord, toggleValue } from './action-utils'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { Editor } from './Editor'\nimport { GridInternal } from '../../ts-types-internal'\nimport { animate } from '../../internal/animate'\nimport { getRadioColumnStateId } from '../../internal/symbolManager'\nimport { toBoolean } from '../utils'\n\nconst RADIO_COLUMN_STATE_ID = getRadioColumnStateId()\n\nconst defaultGroupResolver: GetRadioEditorGroup<any> = ({ grid, col, row }) => {\n  const cellId = grid.getLayoutCellId(col, row)\n  const recordStartRow = grid.getRecordStartRowByRecordIndex(\n    grid.getRecordIndexByRow(row)\n  )\n  const offsetRow = row - recordStartRow\n\n  const result = []\n  const { rowCount, recordRowCount } = grid\n  for (\n    let targetRow = grid.frozenRowCount + offsetRow;\n    targetRow < rowCount;\n    targetRow += recordRowCount\n  ) {\n    if (grid.getLayoutCellId(col, targetRow) === cellId) {\n      result.push({ col, row: targetRow })\n    }\n  }\n  return result\n}\n\nexport class RadioEditor<T> extends Editor<T> {\n  protected _group: GetRadioEditorGroup<T>\n  public constructor(option: RadioEditorOption<T> = {}) {\n    super(option)\n    this._group = option.group || defaultGroupResolver\n  }\n  public clone(): RadioEditor<T> {\n    return new RadioEditor(this)\n  }\n  public get group(): GetRadioEditorGroup<T> {\n    return this._group\n  }\n  public set group(group) {\n    this._group = group\n  }\n  public bindGridEvent(\n    grid: GridInternal<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    let _state = grid[RADIO_COLUMN_STATE_ID]\n    if (!_state) {\n      _state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, RADIO_COLUMN_STATE_ID, _state)\n    }\n    const state = _state\n\n    const action = (cell: CellAddress): void => {\n      this._action(grid, cell)\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          if (isDisabledRecord(this.disabled, grid, e.row)) {\n            return false\n          }\n          state.mouseActiveCell = {\n            col: e.col,\n            row: e.row,\n          }\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n          return true\n        },\n        mouseOut: (e) => {\n          delete state.mouseActiveCell\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n        },\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action,\n      }),\n\n      // paste value\n      grid.listen(DG_EVENT_TYPE.PASTE_CELL, (e) => {\n        if (e.multi) {\n          // ignore multi cell values\n          return\n        }\n        const selectionRange = grid.selection.range\n        if (!cellEquals(selectionRange.start, selectionRange.end)) {\n          // ignore multi paste values\n          return\n        }\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n\n        const pasteValue = e.normalizeValue.trim()\n        if (!toBoolean(pasteValue)) {\n          return\n        }\n        event.cancel(e.event)\n\n        action({\n          col: e.col,\n          row: e.row,\n        })\n      }),\n    ]\n  }\n  public onPasteCellRangeBox(\n    grid: GridInternal<T>,\n    cell: CellAddress,\n    value: string\n  ): void {\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row)\n    ) {\n      return\n    }\n    const pasteValue = value.trim()\n    if (!toBoolean(pasteValue)) {\n      return\n    }\n    this._action(grid, {\n      col: cell.col,\n      row: cell.row,\n    })\n  }\n  public onDeleteCellRangeBox(): void {\n    // noop\n  }\n  private _action(grid: GridInternal<T>, cell: CellAddress): void {\n    const state = grid[RADIO_COLUMN_STATE_ID]!\n    const range = grid.getCellRange(cell.col, cell.row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n\n    if (\n      isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n      isDisabledRecord(this.disabled, grid, cell.row) ||\n      state.block[cellKey]\n    ) {\n      return\n    }\n\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      if (toBoolean(value)) {\n        return\n      }\n\n      const targets = this._group({ grid, col: cell.col, row: cell.row })\n      targets.forEach(({ col, row }) => {\n        const range = grid.getCellRange(col, row)\n        const cellKey = `${range.start.col}:${range.start.row}`\n\n        if (\n          isReadOnlyRecord(this.readOnly, grid, cell.row) ||\n          isDisabledRecord(this.disabled, grid, cell.row) ||\n          state.block[cellKey]\n        ) {\n          return\n        }\n\n        actionCell(grid, col, row, col === cell.col && row === cell.row)\n      })\n    })\n  }\n}\n\nfunction actionCell<T>(\n  grid: GridInternal<T>,\n  col: number,\n  row: number,\n  flag: boolean\n): void {\n  grid.doGetCellValue(col, row, (value) => {\n    if (toBoolean(value) === flag) {\n      return\n    }\n\n    const state = grid[RADIO_COLUMN_STATE_ID]!\n    const range = grid.getCellRange(col, row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n    const ret = grid.doChangeValue(col, row, toggleValue)\n    if (ret) {\n      const onChange = (): void => {\n        // checkbox animation\n        animate(200, (point) => {\n          if (point === 1) {\n            delete state.elapsed[cellKey]\n          } else {\n            state.elapsed[cellKey] = point\n          }\n          grid.invalidateCellRange(range)\n        })\n      }\n      if (isPromise(ret)) {\n        state.block[cellKey] = true\n        ret.then(() => {\n          delete state.block[cellKey]\n          onChange()\n        })\n      } else {\n        onChange()\n      }\n    }\n  })\n}\n","import { ListGridAPI, MaybePromise } from '../../../ts-types'\nimport { KEY_ENTER, KEY_ESC, KEY_TAB } from '../../../core/draw-grid/KEY_CODE'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\nimport { event, then, browser } from '../../../internal/utils'\nimport smallDialogInputElementCss from './SmallDialogInputElement.css'\nimport { setInputValue } from './input-value-handler'\n\nconst CLASSNAME_SDE = 'kaka-grid__small-dialog-input'\nconst INPUT_CLASSNAME_SDE = `${CLASSNAME_SDE}__input`\nconst HIDDEN_CLASSNAME_SDE = `${CLASSNAME_SDE}--hidden`\nconst SHOWN_CLASSNAME_SDE = `${CLASSNAME_SDE}--shown`\n\nfunction _focus(input: HTMLInputElement, handler: EventHandler): void {\n  const focus = () => {\n    input.focus()\n\n    const end = input.value.length\n    try {\n      if (typeof input.selectionStart !== 'undefined') {\n        input.selectionStart = end\n        input.selectionEnd = end\n        return\n      }\n    } catch (e) {\n      // ignore\n    }\n    if ((document as any).selection) {\n      const range = (input as any).createTextRange()\n      range.collapse()\n      range.moveEnd('character', end)\n      range.moveStart('character', end)\n      range.select()\n    }\n  }\n  handler.tryWithOffEvents(input, 'blur', () => {\n    focus()\n  })\n}\n\nfunction createDialogElement(): HTMLDivElement {\n  style.inject('smallDialogInputElement', smallDialogInputElementCss)\n  const element = createElement('div', {\n    classList: [CLASSNAME_SDE, HIDDEN_CLASSNAME_SDE],\n  })\n  const input = createElement('input', { classList: INPUT_CLASSNAME_SDE })\n  // input.readOnly = true;\n  input.tabIndex = -1\n  element.appendChild(input)\n  return element\n}\n\ntype GetValueResult<T, R> = (\n  value: string,\n  info: { grid: ListGridAPI<T>; col: number; row: number }\n) => R\n\ntype EditorProps<T> = {\n  type?: string\n  classList?: string[]\n  helperText?: string | GetValueResult<T, string>\n  inputValidator?: GetValueResult<T, MaybePromise<string>>\n  validator?: GetValueResult<T, MaybePromise<string>>\n}\n\ntype ActiveData<T> = {\n  grid: ListGridAPI<T>\n  col: number\n  row: number\n  editor: EditorProps<T>\n}\n\nfunction bindProps<T>(\n  grid: ListGridAPI<T>,\n  dialog: HTMLDivElement,\n  input: HTMLInputElement,\n  editor: EditorProps<T>\n): void {\n  const { classList, helperText } = editor\n  if (classList) {\n    dialog.classList.add(...classList)\n  }\n  if (helperText && typeof helperText !== 'function') {\n    dialog.dataset.helperText = helperText\n  }\n  setInputAttrs(editor, grid, input)\n}\n\nfunction unbindProps<T>(\n  _grid: ListGridAPI<T>,\n  dialog: HTMLDivElement,\n  input: HTMLInputElement,\n  editor: EditorProps<T>\n): void {\n  const { classList } = editor\n  if (classList) {\n    dialog.classList.remove(...classList)\n  }\n  delete dialog.dataset.helperText\n  input.type = ''\n}\n\nfunction setInputAttrs<T>(\n  editor: EditorProps<T>,\n  _grid: ListGridAPI<T>,\n  input: HTMLInputElement\n): void {\n  const { type } = editor\n  input.type = type || ''\n}\n\nexport class SmallDialogInputElement<T> {\n  public static setInputAttrs<T>(\n    editor: EditorProps<T>,\n    grid: ListGridAPI<T>,\n    input: HTMLInputElement\n  ) {\n    setInputAttrs(editor, grid, input)\n  }\n  private _handler: EventHandler\n  private _dialog: HTMLDivElement\n  private _input: HTMLInputElement\n  private _beforePropEditor?: EditorProps<T> | null\n  private _activeData?: ActiveData<T> | null\n  private _attaching?: boolean\n  private _beforeValue?: string | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._dialog = createDialogElement()\n    this._input = this._dialog.querySelector(\n      `.${INPUT_CLASSNAME_SDE}`\n    ) as HTMLInputElement\n    this._bindDialogEvents()\n  }\n  public dispose(): void {\n    const dialog = this._dialog\n    this.detach()\n    this._handler.dispose()\n    this._beforePropEditor = null\n    if (dialog.parentElement) {\n      dialog.parentElement.removeChild(dialog)\n    }\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    editor: EditorProps<T>,\n    col: number,\n    row: number,\n    value: string\n  ): void {\n    const handler = this._handler\n    const dialog = this._dialog\n    const input = this._input\n\n    if (this._beforePropEditor) {\n      unbindProps(grid, dialog, input, this._beforePropEditor)\n    }\n\n    delete dialog.dataset.errorMessage\n    dialog.classList.remove(SHOWN_CLASSNAME_SDE)\n    dialog.classList.add(HIDDEN_CLASSNAME_SDE)\n    // input.readOnly = false;\n    input.tabIndex = 0\n    const { element, rect } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    dialog.style.top = `${rect.top.toFixed()}px`\n    dialog.style.left = `${rect.left.toFixed()}px`\n    dialog.style.width = `${rect.width.toFixed()}px`\n    input.style.height = `${rect.height.toFixed()}px`\n    element.appendChild(dialog)\n\n    setInputValue(input, value)\n\n    input.style.font = grid.font || '16px sans-serif'\n    const activeData = { grid, col, row, editor }\n    this._onInputValue(input, activeData)\n    if (!browser.IE) {\n      _focus(input, handler)\n    } else {\n      // On the paste-event on IE, since it may not be focused, it will be delayed and focused.\n      setTimeout(() => _focus(input, handler))\n    }\n    dialog.classList.add(SHOWN_CLASSNAME_SDE)\n    dialog.classList.remove(HIDDEN_CLASSNAME_SDE)\n    // input.readOnly = true;\n\n    bindProps(grid, dialog, input, editor)\n\n    this._activeData = activeData\n    this._beforePropEditor = editor\n\n    this._attaching = true\n    setTimeout(() => {\n      delete this._attaching\n    })\n  }\n  public detach(gridFocus?: boolean): void {\n    if (this._isActive()) {\n      const dialog = this._dialog\n      const input = this._input\n\n      dialog.classList.remove(SHOWN_CLASSNAME_SDE)\n      dialog.classList.add(HIDDEN_CLASSNAME_SDE)\n      // input.readOnly = false;\n      input.tabIndex = -1\n\n      const { grid, col, row } = this._activeData!\n\n      const range = grid.getCellRange(col, row)\n      grid.invalidateCellRange(range)\n      if (gridFocus) {\n        grid.focus()\n      }\n    }\n    this._activeData = null\n    this._beforeValue = null\n  }\n  private _doChangeValue(): MaybePromise<boolean> {\n    if (!this._isActive()) {\n      return false\n    }\n    const input = this._input\n    const { value } = input\n    return then(this._validate(value), (res: boolean) => {\n      if (res && value === input.value) {\n        const { grid, col, row } = this._activeData!\n        grid.doChangeValue(col, row, () => value)\n        return true\n      }\n      return false\n    })\n  }\n  private _isActive(): boolean {\n    const dialog = this._dialog\n    if (!dialog || !dialog.parentElement) {\n      return false\n    }\n    if (!this._activeData) {\n      return false\n    }\n    return true\n  }\n  private _bindDialogEvents(): void {\n    const handler = this._handler\n    const dialog = this._dialog\n    const input = this._input\n    const stopPropagationOnly = (e: Event) => e.stopPropagation() // 终止事件传播\n    handler.on(dialog, 'click', stopPropagationOnly)\n    handler.on(dialog, 'dblclick', stopPropagationOnly)\n    handler.on(dialog, 'mousedown', stopPropagationOnly)\n    handler.on(dialog, 'touchstart', stopPropagationOnly)\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n    })\n    handler.on(input, 'compositionend', (e) => {\n      input.classList.remove('composition')\n      this._onInputValue(input)\n    })\n    const onKeyupAndPress = (_e: KeyboardEvent): void => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      this._onInputValue(input)\n    }\n    handler.on(input, 'keyup', onKeyupAndPress)\n    handler.on(input, 'keypress', onKeyupAndPress)\n    handler.on(input, 'keydown', (e) => {\n      if (input.classList.contains('composition')) {\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      if (keyCode === KEY_ESC) {\n        this.detach(true)\n        event.cancel(e)\n      } else if (keyCode === KEY_ENTER) {\n        this._onKeydownEnter(e)\n      } else if (keyCode === KEY_TAB) {\n        this._onKeydownTab(e)\n      } else {\n        this._onInputValue(input)\n      }\n    })\n  }\n  private _onKeydownEnter(e: KeyboardEvent): void {\n    if (this._attaching) {\n      return\n    }\n    const input = this._input\n    const { value } = input\n    then(this._doChangeValue(), (r) => {\n      if (r && value === input.value) {\n        const grid = this._isActive() ? this._activeData!.grid : null\n        this.detach(true)\n\n        if (grid?.keyboardOptions?.moveCellOnEnter) {\n          grid.onKeyDownMove(e)\n        }\n      }\n    })\n    event.cancel(e)\n  }\n  private _onKeydownTab(e: KeyboardEvent): void {\n    if (!this._isActive() || this._attaching) {\n      return\n    }\n    const { grid } = this._activeData!\n    if (!grid.keyboardOptions?.moveCellOnTab) {\n      return\n    }\n    const input = this._input\n    const { value } = input\n    then(this._doChangeValue(), (r) => {\n      if (r && value === input.value) {\n        this.detach(true)\n        grid.onKeyDownMove(e)\n      }\n    })\n    event.cancel(e)\n  }\n  private _onInputValue(\n    input: HTMLInputElement,\n    activeData?: ActiveData<T>\n  ): void {\n    const before = this._beforeValue\n    const { value } = input\n    if (before !== value) {\n      this._onInputValueChange(value, activeData)\n    }\n    this._beforeValue = value\n  }\n  private _onInputValueChange(after: string, activeData?: ActiveData<T>): void {\n    activeData = (activeData || this._activeData)!\n    const dialog = this._dialog\n    const { grid, col, row, editor } = activeData\n    if (typeof editor.helperText === 'function') {\n      const helperText = editor.helperText(after, { grid, col, row })\n      if (helperText) {\n        dialog.dataset.helperText = helperText\n      } else {\n        delete dialog.dataset.helperText\n      }\n    }\n    if ('errorMessage' in dialog.dataset) {\n      this._validate(after, true)\n    }\n  }\n  private _validate(value: any, inputOnly?: boolean): MaybePromise<boolean> {\n    const dialog = this._dialog\n    const input = this._input\n    const { grid, col, row, editor } = this._activeData!\n    let message: MaybePromise<string> = ''\n    if (editor.inputValidator) {\n      message = editor.inputValidator(value, { grid, col, row })\n    }\n    return then(message, (msg: MaybePromise<string>) => {\n      if (!msg && editor.validator && !inputOnly) {\n        msg = editor.validator(value, { grid, col, row })\n      }\n      return then(msg, (mess) => {\n        if (mess && value === input.value) {\n          dialog.dataset.errorMessage = mess\n        } else {\n          delete dialog.dataset.errorMessage\n        }\n        return !mess\n      })\n    })\n  }\n}\n","import { obj } from '../../internal/utils'\nimport { BaseInputEditor } from './BaseInputEditor'\nimport { SmallDialogInputElement } from './internal/SmallDialogInputElement'\n\nimport { GridInternal, InputEditorState } from '../../ts-types-internal'\nimport { getSmallDialogInputEditorStateId } from '../../internal/symbolManager'\nimport {\n  SmallDialogInputEditorOption,\n  ListGridAPI,\n  MaybePromise,\n  CellAddress,\n} from '../../ts-types'\n\nconst SMALL_DIALOG_INPUT_EDITOR_STATE_ID = getSmallDialogInputEditorStateId()\n\nlet globalSmallDialogInputElement: SmallDialogInputElement<any> | null = null\nlet globalSmallDialogInputBindGridCount = 0\n\nfunction getState<T>(grid: GridInternal<T>): InputEditorState {\n  let state = grid[SMALL_DIALOG_INPUT_EDITOR_STATE_ID]\n  if (!state) {\n    state = {}\n    obj.setReadonly(grid, SMALL_DIALOG_INPUT_EDITOR_STATE_ID, state)\n  }\n  return state\n}\n\nfunction attachDialogInput<T>(\n  grid: ListGridAPI<T>,\n  cell: CellAddress,\n  editor: SmallDialogInputEditor<T>,\n  value: string\n): void {\n  const state = getState(grid as any)\n  if (!globalSmallDialogInputElement) {\n    globalSmallDialogInputElement = new SmallDialogInputElement()\n  }\n  if (!state.element) {\n    state.element = globalSmallDialogInputElement\n    globalSmallDialogInputBindGridCount++\n    grid.addDisposable({\n      dispose() {\n        globalSmallDialogInputBindGridCount--\n        if (\n          !globalSmallDialogInputBindGridCount &&\n          globalSmallDialogInputElement\n        ) {\n          globalSmallDialogInputElement.dispose()\n          globalSmallDialogInputElement = null\n        }\n      },\n    })\n  }\n\n  globalSmallDialogInputElement.attach(grid, editor, cell.col, cell.row, value)\n}\n\nfunction detachDialogInput(gridFocus?: boolean) {\n  if (globalSmallDialogInputElement) {\n    globalSmallDialogInputElement.detach(gridFocus)\n  }\n}\ntype GetValueResult<T, R> = (\n  value: string,\n  info: { grid: ListGridAPI<T>; col: number; row: number }\n) => R\n\nexport class SmallDialogInputEditor<T> extends BaseInputEditor<T> {\n  private _helperText?: string | GetValueResult<T, string>\n  private _inputValidator?: GetValueResult<T, MaybePromise<string>>\n  private _validator?: GetValueResult<T, MaybePromise<string>>\n  private _classList?: string | string[]\n  private _type?: string\n  public constructor(options: SmallDialogInputEditorOption<T> = {}) {\n    super(options)\n    this._helperText = options.helperText\n    this._inputValidator = options.inputValidator\n    this._validator = options.validator\n    this._classList = options.classList || ''\n    this._type = options.type || ''\n  }\n  public dispose() {\n    // noop\n  }\n  public get classList(): string[] | undefined {\n    if (!this._classList) {\n      return undefined\n    }\n    return Array.isArray(this._classList) ? this._classList : [this._classList]\n  }\n  public set classList(classList) {\n    this._classList = classList\n  }\n  public get type() {\n    return this._type\n  }\n  public set type(type) {\n    this._type = type\n  }\n  public get helperText() {\n    return this._helperText\n  }\n  public get inputValidator() {\n    return this._inputValidator\n  }\n  public get validator() {\n    return this._validator\n  }\n  public clone(): SmallDialogInputEditor<T> {\n    return new SmallDialogInputEditor(this)\n  }\n  public onInputCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    inputValue: string\n  ) {\n    attachDialogInput(grid, cell, this, inputValue)\n  }\n  public onOpenCellInternal(grid: ListGridAPI<T>, cell: CellAddress) {\n    grid.doGetCellValue(cell.col, cell.row, (value) => {\n      attachDialogInput(grid, cell, this, value)\n    })\n  }\n  public onChangeSelectCellInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    selected: any\n  ) {\n    // cancel input\n    detachDialogInput()\n  }\n  public onGridScrollInternal(grid: ListGridAPI<T>) {\n    // cancel input\n    detachDialogInput(true)\n  }\n  public onChangeDisabledInternal() {\n    // cancel input\n    detachDialogInput(true)\n  }\n  public onChangeReadOnlyInternal() {\n    // cancel input\n    detachDialogInput(true)\n  }\n  public onSetInputAttrsInternal(\n    grid: ListGridAPI<T>,\n    cell: CellAddress,\n    input: HTMLInputElement\n  ) {\n    SmallDialogInputElement.setInputAttrs(this, grid, input)\n  }\n}\n","import { CheckEditor } from '../action/CheckEditor'\n\nexport class ImmutableCheckEditor<T> extends CheckEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { RadioEditor } from '../action/RadioEditor'\n\nexport class ImmutableRadioEditor<T> extends RadioEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { SmallDialogInputEditor } from '../action/SmallDialogInputEditor'\n\nexport class ImmutableInputEditor<T> extends SmallDialogInputEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { SwitchEditor } from '../action/SwitchEditor'\n\nexport class ImmutableSwitchEditor<T> extends SwitchEditor<T> {\n  public get disabled(): boolean | ((record: T) => boolean) {\n    return this._disabled\n  }\n  public get readOnly(): boolean | ((record: T) => boolean) {\n    return this._readOnly\n  }\n}\n","import { ColumnActionOption } from '../ts-types'\nimport { Action } from './action/Action'\nimport { BaseAction } from './action/BaseAction'\nimport { BaseActionInput } from './action/BaseActionInput'\nimport { BaseInputEditor } from './action/BaseInputEditor'\nimport { BaseCheckEditor } from './action/BaseCheckEditor'\nimport { ButtonAction } from './action/ButtonAction'\nimport { CheckEditor } from './action/CheckEditor'\nimport { Editor } from './action/Editor'\nimport { SwitchEditor } from './action/SwitchEditor'\nimport { InlineInputEditor } from './action/InlineInputEditor'\nimport { InlineLookupEditor } from './action/InlineLookupEditor'\nimport { InlineMenuEditor } from './action/InlineMenuEditor'\nimport { InlineTextAreaEditor } from './action/InlineTextAreaEditor'\nimport { RadioEditor } from './action/RadioEditor'\nimport { SmallDialogInputEditor } from './action/SmallDialogInputEditor'\n\nimport { ImmutableCheckEditor } from './immutable/ImmutableCheckEditor'\nimport { ImmutableRadioEditor } from './immutable/ImmutableRadioEditor'\nimport { ImmutableInputEditor } from './immutable/ImmutableInputEditor'\nimport { ImmutableSwitchEditor } from './immutable/ImmutableSwitchEditor'\n\nexport interface ImmutableActions {\n  CHECK: ImmutableCheckEditor<any>\n  RADIO: ImmutableRadioEditor<any>\n  INPUT: ImmutableInputEditor<any>\n  SWITCH: ImmutableSwitchEditor<any>\n}\n\nexport const ACTIONS: ImmutableActions = {\n  CHECK: new ImmutableCheckEditor<any>(),\n  RADIO: new ImmutableRadioEditor<any>(),\n  INPUT: new ImmutableInputEditor<any>(),\n  SWITCH: new ImmutableSwitchEditor<any>(),\n}\n\nexport {\n  BaseAction,\n  Editor,\n  BaseCheckEditor,\n  BaseInputEditor,\n  BaseActionInput,\n  Action,\n  CheckEditor,\n  RadioEditor,\n  SwitchEditor,\n  ButtonAction,\n  SmallDialogInputEditor,\n  InlineInputEditor,\n  InlineTextAreaEditor,\n  InlineLookupEditor,\n  InlineMenuEditor,\n}\n\nexport function of<T>(\n  columnAction: ColumnActionOption | BaseAction<T> | null | undefined\n): BaseAction<T> | undefined {\n  if (!columnAction) {\n    return undefined\n  } else if (typeof columnAction === 'string') {\n    const key = columnAction.toUpperCase() as keyof typeof ACTIONS\n    return ACTIONS[key] || of(null)\n  } else {\n    return columnAction\n  }\n}\n","import * as utils from './columnUtils'\nimport {\n  CellContext,\n  GridCanvasHelperAPI,\n  InlineCheckOption,\n  DrawCallback,\n  BaseCheckColumnOption,\n} from '../../ts-types'\nimport {\n  GridInternal,\n  DrawCellInfo,\n  CheckColumnState,\n} from '../../ts-types-internal'\nimport { isDef } from '../../internal/utils'\nimport { BaseColumn } from './BaseColumn'\nimport { CheckStyle } from '../style'\nimport { toBoolean } from '../utils'\n\nexport abstract class BaseCheckColumn<T> extends BaseColumn<T, boolean> {\n  private _draw?: DrawCallback\n  public constructor(options: BaseCheckColumnOption<T> = {}) {\n    super(options)\n    this._draw = options.draw\n  }\n  public get draw() {\n    return this._draw\n  }\n  public drawInternal(\n    value: boolean,\n    context: CellContext,\n    style: CheckStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    { getRecord }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n    } = style\n\n    const isCustomDraw = utils.customDraw(\n      helper,\n      this.draw,\n      value,\n      context,\n      grid,\n      getRecord()\n    )\n    if (!isCustomDraw) {\n      const { col, row } = context\n      const range = grid.getCellRange(col, row)\n      const cellKey = `${range.start.col}:${range.start.row}`\n      const state = this.getState(grid)\n      const elapsed = state?.elapsed[cellKey]\n\n      const opt: InlineCheckOption = {\n        borderColor,\n        checkBgColor,\n        textAlign,\n        textBaseline,\n        uncheckBgColor,\n      }\n      if (isDef(elapsed)) {\n        opt.animElapsedTime = elapsed\n      }\n      this.doDrawInternal(helper, value, context, opt)\n    }\n  }\n  protected convertInternal(value: any) {\n    return toBoolean(value)\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckColumnState\n  protected abstract doDrawInternal(\n    helper: GridCanvasHelperAPI,\n    value: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): void\n}\n","import { BranchGraphStyleOption, ColorDef } from '../../ts-types'\nimport { BaseStyle } from './BaseStyle'\n\nlet defaultBranchGraphStyle: BranchGraphStyle\n\nconst DEFAULT_BRANCH_COLORS = (_name: string, index: number): string => {\n  switch (index % 3) {\n    case 0:\n      return '#979797'\n    case 1:\n      return '#008fb5'\n    case 2:\n      return '#f1c109'\n    default:\n  }\n  return '#979797'\n}\n\nexport class BranchGraphStyle extends BaseStyle {\n  private _branchColors: ColorDef | ((name: string, index: number) => ColorDef)\n  private _margin: number\n  private _circleSize: number\n  private _branchLineWidth: number\n  private _mergeStyle: 'straight' | 'bezier'\n  public static get DEFAULT(): BranchGraphStyle {\n    return defaultBranchGraphStyle\n      ? defaultBranchGraphStyle\n      : (defaultBranchGraphStyle = new BranchGraphStyle())\n  }\n  public constructor(style: BranchGraphStyleOption = {}) {\n    super(style)\n    this._branchColors = style.branchColors || DEFAULT_BRANCH_COLORS\n    this._margin = style.margin || 4\n    this._circleSize = style.circleSize || 16\n    this._branchLineWidth = style.branchLineWidth || 4\n    this._mergeStyle = style.mergeStyle === 'straight' ? 'straight' : 'bezier'\n  }\n  public get branchColors():\n    | ColorDef\n    | ((name: string, index: number) => ColorDef) {\n    return this._branchColors\n  }\n  public set branchColors(branchColors) {\n    this._branchColors = branchColors\n    this.doChangeStyle()\n  }\n  public get margin(): number {\n    return this._margin\n  }\n  public set margin(margin) {\n    this._margin = margin\n    this.doChangeStyle()\n  }\n  public get circleSize(): number {\n    return this._circleSize\n  }\n  public set circleSize(circleSize) {\n    this._circleSize = circleSize\n    this.doChangeStyle()\n  }\n  public get branchLineWidth(): number {\n    return this._branchLineWidth\n  }\n  public set branchLineWidth(branchLineWidth) {\n    this._branchLineWidth = branchLineWidth\n    this.doChangeStyle()\n  }\n  public get mergeStyle(): 'straight' | 'bezier' {\n    return this._mergeStyle\n  }\n  public set mergeStyle(mergeStyle) {\n    this._mergeStyle = mergeStyle\n    this.doChangeStyle()\n  }\n  public clone(): BranchGraphStyle {\n    return new BranchGraphStyle(this)\n  }\n}\n","import { BranchPoint } from './BranchPoint'\n\nexport class BranchLine {\n  public fromIndex?: number\n  public toIndex?: number\n  public colorIndex: number\n  public point?: BranchPoint\n  public constructor({\n    fromIndex,\n    toIndex,\n    colorIndex,\n    point,\n  }: {\n    fromIndex?: number\n    toIndex?: number\n    colorIndex: number\n    point?: BranchPoint\n  }) {\n    this.fromIndex = fromIndex\n    this.toIndex = toIndex\n    this.colorIndex = colorIndex\n    this.point = point\n  }\n}\n","import { isDef } from '../../../internal/utils'\nimport { BranchLine } from './BranchLine'\n\nexport class BranchPoint {\n  public static mergeLines(lines: BranchLine[]): BranchLine[] {\n    const result = lines.filter((l) => isDef(l.fromIndex) && isDef(l.toIndex))\n\n    const fromLines = lines.filter(\n      (l) => isDef(l.fromIndex) && !isDef(l.toIndex)\n    )\n    const toLines = lines.filter((l) => !isDef(l.fromIndex) && isDef(l.toIndex))\n\n    fromLines.forEach((f) => {\n      for (let i = 0; i < toLines.length; i++) {\n        const t = toLines[i]\n        if (t.point) {\n          continue\n        }\n        if (f.colorIndex === t.colorIndex) {\n          f.toIndex = t.toIndex\n          toLines.splice(i, 1)\n          break\n        }\n      }\n\n      result.push(f)\n    })\n\n    return result.concat(toLines)\n  }\n  public static merge(a: BranchPoint, b: BranchPoint): BranchPoint {\n    if (!a) {\n      return b\n    }\n    return new BranchPoint({\n      commit: a.commit || b.commit,\n      index: a.index,\n      lines: BranchPoint.mergeLines(a.lines.concat(b.lines)),\n      tag: a.tag || b.tag,\n    })\n  }\n  public index: number\n  public commit: boolean\n  public lines: BranchLine[]\n  public tag?: string\n  public constructor({\n    index,\n    commit = false,\n    lines = [],\n    tag,\n  }: {\n    index: number\n    commit?: boolean\n    lines?: BranchLine[]\n    tag?: string\n  }) {\n    this.index = index\n    this.commit = commit\n    this.lines = lines\n    this.tag = tag\n  }\n}\n","import {\n  FieldDef,\n  BranchGraphCommand,\n  MaybePromiseOrUndef,\n  ListGridAPI,\n  ColorDef,\n  BranchGraphColumnOption,\n  MaybePromise,\n  CellContext,\n  GridCanvasHelperAPI,\n} from '../../ts-types'\nimport { GridInternal, DrawCellInfo } from '../../ts-types-internal'\nimport { isPromise, obj, isDef, getOrApply } from '../../internal/utils'\nimport { BranchGraphStyle } from '../style/BranchGraphStyle'\nimport { BaseColumn } from './BaseColumn'\n\nimport { BranchLine } from './branch/BranchLine'\nimport { BranchPoint } from './branch/BranchPoint'\n\nimport { getBranchGraphColumnStateId } from '../../internal/symbolManager'\n\nconst BRANCH_GRAPH_COLUMN_STATE_ID = getBranchGraphColumnStateId()\n\ntype Timelines = { timeline: BranchPoint[][]; branches: string[] }\n\nfunction getAllColumnData<T>(\n  grid: ListGridAPI<T>,\n  field: FieldDef<T>,\n  callback: (allData: BranchGraphCommand[]) => void\n) {\n  const { dataSource } = grid\n  const allData: BranchGraphCommand[] = []\n  let promise\n  for (let index = 0; index < dataSource.length; index++) {\n    const data = dataSource.getField(index, field) as MaybePromiseOrUndef<\n      BranchGraphCommand\n    >\n    if (isPromise(data)) {\n      const dataIndex = allData.length\n      allData.push(undefined)\n      if (!promise) {\n        promise = data.then((d) => {\n          allData[dataIndex] = d\n        })\n      } else {\n        promise = promise\n          .then(() => data)\n          .then((d) => {\n            allData[dataIndex] = d\n          })\n      }\n    } else {\n      allData.push(data)\n    }\n  }\n\n  if (promise) {\n    promise.then(() => callback(allData))\n  } else {\n    callback(allData)\n  }\n}\n\nfunction joinLine(timeline: BranchPoint[][], branchIndex: number): boolean {\n  const reverse = [...timeline].reverse()\n  for (let i = 0; i < reverse.length; i++) {\n    const f = reverse[i][branchIndex]\n    if (f) {\n      f.lines = BranchPoint.mergeLines(\n        f.lines.concat([\n          new BranchLine({\n            colorIndex: branchIndex,\n            toIndex: branchIndex,\n          }),\n        ])\n      )\n\n      for (let j = 0; j < i; j++) {\n        const tl = reverse[j]\n        tl[branchIndex] = new BranchPoint({\n          index: branchIndex,\n          lines: [\n            new BranchLine({\n              colorIndex: branchIndex,\n              fromIndex: branchIndex,\n              toIndex: branchIndex,\n            }),\n          ],\n        })\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction branch(\n  { timeline, branches }: Timelines,\n  from: string | null,\n  to: string\n): BranchPoint | null {\n  const fromIndex = from != null ? branches.indexOf(from) : -1\n  let toIndex = branches.indexOf(to)\n  if (toIndex < 0) {\n    toIndex = branches.length\n    branches.push(to)\n  }\n\n  function findBranchRootIndex(): number {\n    for (let index = timeline.length - 1; index >= 0; index--) {\n      const tl = timeline[index]\n      const fromTL = tl[fromIndex]\n      if (fromTL && fromTL.commit) {\n        return index\n      }\n    }\n    return -1\n  }\n\n  if (fromIndex < 0) {\n    return new BranchPoint({\n      index: toIndex,\n    })\n  } else {\n    const fromTargetIndex = findBranchRootIndex()\n    if (fromTargetIndex === -1) {\n      return null\n    }\n    const branchTargetFromIndex = fromTargetIndex + 1\n    const branchPoint = new BranchPoint({\n      index: toIndex,\n      lines: [\n        new BranchLine({\n          colorIndex: toIndex,\n          fromIndex,\n        }),\n      ],\n    })\n    let point\n    let result = null\n    if (branchTargetFromIndex < timeline.length) {\n      const targetLine = timeline[branchTargetFromIndex]\n      point = targetLine[toIndex] = BranchPoint.merge(\n        targetLine[toIndex],\n        branchPoint\n      )\n    } else {\n      point = branchPoint\n      result = branchPoint\n    }\n    const fromTL = timeline[fromTargetIndex][fromIndex]\n    fromTL.lines = BranchPoint.mergeLines(\n      fromTL.lines.concat([\n        new BranchLine({\n          colorIndex: toIndex,\n          point,\n          toIndex,\n        }),\n      ])\n    )\n    return result\n  }\n}\n\nfunction commit(\n  { timeline, branches }: Timelines,\n  name: string\n): BranchPoint | null {\n  const index = branches.indexOf(name)\n  if (index < 0) {\n    return null\n  }\n  const result = new BranchPoint({\n    commit: true,\n    index,\n  })\n\n  if (joinLine(timeline, index)) {\n    result.lines = BranchPoint.mergeLines(\n      result.lines.concat([\n        new BranchLine({\n          colorIndex: index,\n          fromIndex: index,\n        }),\n      ])\n    )\n  }\n  return result\n}\n\nfunction commitTag(\n  { branches }: Timelines,\n  name: any,\n  tag: string\n): BranchPoint {\n  let index = branches.indexOf(name)\n  if (index < 0) {\n    index = branches.length\n    branches.push(name)\n  }\n  return new BranchPoint({\n    index,\n    tag,\n  })\n}\n\nfunction commitMerge(\n  { timeline, branches }: Timelines,\n  from: string,\n  to: string\n): BranchPoint {\n  const fromIndex = branches.indexOf(from)\n  const toIndex = branches.indexOf(to)\n  if (toIndex < 0 || fromIndex < 0) {\n    return new BranchPoint({\n      index: toIndex,\n      commit: true,\n    })\n  }\n  const result = new BranchPoint({\n    index: toIndex,\n    commit: true,\n    lines: [\n      new BranchLine({\n        colorIndex: fromIndex,\n        fromIndex,\n      }),\n      new BranchLine({\n        colorIndex: toIndex,\n        fromIndex: toIndex,\n      }),\n    ],\n  })\n  const froms = [...timeline]\n  const fromTargetLine = froms.pop()\n  if (fromTargetLine) {\n    fromTargetLine[fromIndex] = BranchPoint.merge(\n      fromTargetLine[fromIndex],\n      new BranchPoint({\n        index: toIndex,\n        lines: [\n          new BranchLine({\n            colorIndex: fromIndex,\n            toIndex,\n          }),\n        ],\n      })\n    )\n  }\n\n  if (joinLine(froms, fromIndex) && fromTargetLine) {\n    fromTargetLine[fromIndex].lines = BranchPoint.mergeLines(\n      fromTargetLine[fromIndex].lines.concat([\n        new BranchLine({\n          colorIndex: fromIndex,\n          fromIndex,\n        }),\n      ])\n    )\n  }\n  joinLine(timeline, toIndex)\n\n  return result\n}\n\nfunction calcCommand(info: Timelines, command: BranchGraphCommand): void {\n  const { timeline } = info\n  const timelineData: BranchPoint[] = []\n  // const last = timeline.length > 0 ? timeline[timeline.length - 1] : null;\n  const commands = Array.isArray(command) ? command : [command]\n  commands.forEach((cmd) => {\n    if (!cmd) {\n      return\n    }\n    let point\n    if (cmd.command === 'branch') {\n      const from = obj.isObject(cmd.branch) ? cmd.branch.from : null\n      const to = obj.isObject(cmd.branch) ? cmd.branch.to : cmd.branch\n      point = branch(info, from, to)\n    } else if (cmd.command === 'commit') {\n      point = commit(info, cmd.branch)\n    } else if (cmd.command === 'merge') {\n      const from = cmd.branch.from\n      const to = cmd.branch.to\n      point = commitMerge(info, from, to)\n    } else if (cmd.command === 'tag') {\n      point = commitTag(info, cmd.branch, cmd.tag)\n    }\n    if (point && point.index > -1) {\n      timelineData[point.index] = BranchPoint.merge(\n        timelineData[point.index],\n        point\n      )\n    }\n  })\n  timeline.push(timelineData)\n}\n\nfunction calcBranchesInfo<T>(\n  start: 'top' | 'bottom',\n  grid: ListGridAPI<T>,\n  field: FieldDef<T>\n): Timelines {\n  const result = {\n    branches: [],\n    timeline: [],\n  }\n  getAllColumnData(grid, field, (data) => {\n    if (start !== 'top') {\n      data = [...data].reverse()\n    }\n    data.forEach((command) => {\n      calcCommand(result, command)\n    })\n  })\n  return result\n}\n\nfunction calcBranchXPoints(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  width: number,\n  radius: number,\n  branches: string[],\n  timeline: BranchPoint[][]\n): number[] {\n  let w = Math.max(width / branches.length + 1, 5)\n  timeline.forEach((tl) => {\n    tl.forEach((p, index) => {\n      if (index <= 0) {\n        // 没有计算的意义\n        return\n      }\n      if (p.tag) {\n        const textWidth = ctx.measureText(p.tag).width\n        if (w * index + radius * 2 + 4 + textWidth > width) {\n          w = Math.max((width - radius * 2 - 4 - textWidth) / index, 5)\n        }\n      }\n    })\n  })\n  const result: number[] = []\n  let x = left\n  branches.forEach(() => {\n    result.push(Math.ceil(x + radius))\n    x += w\n  })\n  return result\n}\n\nfunction renderMerge<T>(\n  grid: ListGridAPI<T>,\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  upLineIndex: number | undefined,\n  downLineIndex: number | undefined,\n  colorIndex: number,\n  {\n    branchXPoints,\n    // margin,\n    branchColors,\n    branchLineWidth,\n    mergeStyle,\n  }: {\n    branchXPoints: number[]\n    margin: number\n    branchColors: ColorDef | ((name: string, index: number) => ColorDef)\n    branchLineWidth: number\n    mergeStyle: 'straight' | 'bezier'\n  },\n  {\n    // width,\n    col,\n    row,\n    branches,\n  }: {\n    width: number\n    col: number\n    row: number\n    branches: string[]\n  }\n): void {\n  if (isDef(upLineIndex) || isDef(downLineIndex)) {\n    ctx.strokeStyle = getOrApply(branchColors, branches[colorIndex], colorIndex)\n    ctx.lineWidth = branchLineWidth\n    ctx.lineCap = 'round'\n    ctx.beginPath()\n\n    if (isDef(upLineIndex)) {\n      const upX = branchXPoints[upLineIndex]\n      const upRect = grid.getCellRelativeRect(col, row - 1)\n      const upY = upRect.top + upRect.height / 2\n      ctx.moveTo(upX, upY)\n      if (mergeStyle === 'bezier') {\n        ctx.bezierCurveTo(upX, (y + upY) / 2, x, (y + upY) / 2, x, y)\n      } else {\n        ctx.lineTo(x, y)\n      }\n    } else {\n      ctx.moveTo(x, y)\n    }\n\n    if (isDef(downLineIndex)) {\n      const downX = branchXPoints[downLineIndex]\n      const downRect = grid.getCellRelativeRect(col, row + 1)\n      const downY = downRect.top + downRect.height / 2\n      if (mergeStyle === 'bezier') {\n        ctx.bezierCurveTo(\n          x,\n          (y + downY) / 2,\n          downX,\n          (y + downY) / 2,\n          downX,\n          downY\n        )\n      } else {\n        ctx.lineTo(downX, downY)\n      }\n    }\n\n    ctx.stroke()\n  }\n}\n\n/**\n * BranchGraphColumn\n */\nexport class BranchGraphColumn<T> extends BaseColumn<T, unknown> {\n  private _start: 'top' | 'bottom'\n  private _cache: boolean\n  public constructor(options: BranchGraphColumnOption<T> = {}) {\n    super(options)\n    this._start = options.start || 'bottom'\n    this._cache = isDef(options.cache) ? options.cache : false\n  }\n  public get StyleClass(): typeof BranchGraphStyle {\n    return BranchGraphStyle\n  }\n  public clearCache(grid: GridInternal<T>): void {\n    delete grid[BRANCH_GRAPH_COLUMN_STATE_ID]\n  }\n  public onDrawCell(\n    cellValue: MaybePromise<unknown>,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: GridInternal<T>\n  ): void | Promise<void> {\n    if (this._cache) {\n      const state =\n        grid[BRANCH_GRAPH_COLUMN_STATE_ID] ||\n        (grid[BRANCH_GRAPH_COLUMN_STATE_ID] = new Map())\n      const { col, row } = context\n      const field = grid.getField(col, row) as FieldDef<T>\n      if (!state.has(field)) {\n        state.set(field, calcBranchesInfo(this._start, grid, field))\n      }\n    }\n    return super.onDrawCell(cellValue, info, context, grid)\n  }\n  public clone(): BranchGraphColumn<T> {\n    return new BranchGraphColumn(this)\n  }\n  public drawInternal(\n    _value: unknown,\n    context: CellContext,\n    style: BranchGraphStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    const { col, row } = context\n    const field = grid.getField(col, row) as FieldDef<T>\n    const { timeline, branches } =\n      (this._cache ? grid[BRANCH_GRAPH_COLUMN_STATE_ID]?.get(field) : null) ??\n      calcBranchesInfo(this._start, grid, field)\n\n    const {\n      upLineIndexKey,\n      downLineIndexKey,\n    }: {\n      upLineIndexKey: 'fromIndex' | 'toIndex'\n      downLineIndexKey: 'fromIndex' | 'toIndex'\n    } =\n      this._start !== 'top'\n        ? { upLineIndexKey: 'toIndex', downLineIndexKey: 'fromIndex' }\n        : { upLineIndexKey: 'fromIndex', downLineIndexKey: 'toIndex' }\n    const data =\n      this._start !== 'top'\n        ? timeline[timeline.length - (row - grid.frozenRowCount) - 1]\n        : timeline[row - grid.frozenRowCount]\n\n    const {\n      branchColors,\n      branchLineWidth,\n      circleSize,\n      mergeStyle,\n      margin,\n    } = style\n\n    const rect = context.getRect()\n    const radius = circleSize / 2\n    const width = rect.width - margin * 2\n\n    helper.drawWithClip(context, (ctx) => {\n      ctx.textAlign = 'left'\n      ctx.textBaseline = 'middle'\n      const branchXPoints = calcBranchXPoints(\n        ctx,\n        rect.left + margin,\n        width,\n        radius,\n        branches,\n        timeline\n      )\n\n      const y = rect.top + rect.height / 2\n\n      // draw join lines\n      data\n        .map((point, index) =>\n          point\n            ? point.lines.map((line) => ({\n                colorIndex: line.colorIndex,\n                downLineIndex: line[downLineIndexKey],\n                pointIndex: index,\n                upLineIndex: line[upLineIndexKey],\n              }))\n            : []\n        )\n        .reduce((p, c) => p.concat(c), []) // flatMap\n        // order of overlap\n        .sort((a, b) => b.colorIndex - a.colorIndex)\n        .forEach((line) => {\n          const x = branchXPoints[line.pointIndex]\n          renderMerge(\n            grid,\n            ctx,\n            x,\n            y,\n            line.upLineIndex,\n            line.downLineIndex,\n            line.colorIndex,\n            {\n              branchColors,\n              branchLineWidth,\n              branchXPoints,\n              margin,\n              mergeStyle,\n            },\n            {\n              branches,\n              col,\n              row,\n              width,\n            }\n          )\n        })\n      // draw commit points\n      data.forEach((p, index) => {\n        if (p && p.commit) {\n          const x = branchXPoints[index]\n          ctx.fillStyle = getOrApply(branchColors, branches[index], index)\n          ctx.beginPath()\n          ctx.arc(x, y, radius, 0, Math.PI * 2, true)\n          ctx.fill()\n          ctx.closePath()\n        }\n      })\n      // draw tags\n      data.forEach((p, index) => {\n        if (p && p.tag) {\n          ctx.fillStyle = getOrApply(branchColors, branches[index], index)\n          ctx.fillText(p.tag, branchXPoints[index] + radius + 4, y)\n        }\n      })\n    })\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  ColumnOption,\n  DrawCallback,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  CellStyle,\n} from '../../ts-types'\nimport { BaseColumn } from './BaseColumn'\nimport { Style } from '../style/Style'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\nimport Rect from '../../internal/Rect'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nexport class Column<T> extends BaseColumn<T, string> {\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  public constructor(options: ColumnOption<T> = {}) {\n    super(options)\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n  }\n  public get StyleClass() {\n    return Style\n  }\n  public clone(): Column<T> {\n    return new Column(this)\n  }\n  public get draw() {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: Style,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getIcon, getRecord }: DrawCellInfo<T>\n  ): void {\n    const { textAlign, textBaseline, color, font, textOverflow } = style\n\n    helper.testFontLoad(font, value, context)\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const isCustomDraw = columnUtils.customDraw<T>(\n        helper,\n        this.draw,\n        value,\n        context,\n        grid,\n        getRecord()\n      )\n      if (!isCustomDraw) {\n        helper.text(value, ctx, {\n          color,\n          font,\n          icons,\n          padding: columnUtils.getActionTextPadding(context, helper, style),\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n      columnUtils.drawActionButton(\n        grid,\n        context,\n        INLINE_INPUT_EDITOR_STATE_ID,\n        helper,\n        style\n      )\n      columnUtils.drawAttachArea(\n        grid,\n        getRecord(),\n        context,\n        helper,\n        this._cellStyle\n      )\n    })\n  }\n}\n","import * as utils from './columnUtils'\nimport {\n  ButtonColumnOption,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { ButtonStyle } from '../style/ButtonStyle'\nimport { Column } from './Column'\nimport { getButtonColumnStateId } from '../../internal/symbolManager'\nimport { cellInRange } from '../../internal/utils'\n\nconst BUTTON_COLUMN_STATE_ID = getButtonColumnStateId()\n\nexport class ButtonColumn<T> extends Column<T> {\n  private _caption?: string\n  private _linkButton: boolean\n  public constructor(options: ButtonColumnOption<T> = {}) {\n    super(options)\n    this._caption = options.caption\n    this._linkButton = !!options.linkButton\n  }\n  public get StyleClass(): typeof ButtonStyle {\n    return ButtonStyle\n  }\n  public get caption(): string | undefined {\n    return this._caption\n  }\n  public withCaption(caption: string): ButtonColumn<T> {\n    const c = this.clone()\n    c._caption = caption\n    return c\n  }\n  public clone(): ButtonColumn<T> {\n    return new ButtonColumn(this)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: ButtonStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getIcon }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      buttonBgColor,\n      font,\n      padding,\n      textOverflow,\n    } = style\n\n    helper.testFontLoad(font, value, context)\n    const { col, row } = context\n    const range = grid.getCellRange(col, row)\n    let active = false\n    let selected = false\n    const state = (grid as any)[BUTTON_COLUMN_STATE_ID]\n    if (state) {\n      if (\n        state.mouseActiveCell &&\n        cellInRange(range, state.mouseActiveCell.col, state.mouseActiveCell.row)\n      ) {\n        active = true\n      }\n      const { select } = context.getSelection()\n      if (cellInRange(range, select.col, select.row)) {\n        selected = true\n      }\n    }\n\n    utils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      if (this._linkButton) {\n        if (active && state && state.mouseRelativePos) {\n          const rect = helper.getTextRect(value, ctx, {\n            font,\n            icons,\n            padding,\n            textAlign,\n            textBaseline,\n            textOverflow,\n          })\n          active =\n            rect.left <= state.mouseRelativePos.x &&\n            rect.right >= state.mouseRelativePos.x &&\n            rect.top <= state.mouseRelativePos.y &&\n            rect.bottom >= state.mouseRelativePos.y\n          state.mouseActive = active\n        }\n        helper.text(value, ctx, {\n          color: active ? buttonBgColor || helper.theme.button.bgColor : color,\n          font,\n          icons,\n          padding,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      } else {\n        if (active) {\n          state.mouseActive = active\n        }\n        helper.button(value, ctx, {\n          bgColor: buttonBgColor,\n          color,\n          font,\n          icons,\n          padding,\n          shadow:\n            active || selected\n              ? {\n                  blur: 6,\n                  color: 'rgba(0, 0, 0, 0.48)',\n                  offsetY: 3,\n                }\n              : {},\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n    })\n  }\n  protected convertInternal(value: unknown) {\n    return this._caption || super.convertInternal(value)\n  }\n}\n","import {\n  CellContext,\n  GridCanvasHelperAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { CheckColumnState, GridInternal } from '../../ts-types-internal'\nimport { CheckStyle } from '../style/CheckStyle'\nimport { BaseCheckColumn } from './BaseCheckColumn'\nimport { getCheckColumnStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst CHECK_COLUMN_STATE_ID = getCheckColumnStateId()\n\nexport class CheckColumn<T> extends BaseCheckColumn<T> {\n  public get StyleClass() {\n    return CheckStyle\n  }\n  public clone(): CheckColumn<T> {\n    return new CheckColumn(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckColumnState {\n    let state = grid[CHECK_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, CHECK_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n  protected doDrawInternal(\n    helper: GridCanvasHelperAPI,\n    value: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): void {\n    helper.checkbox(value, context, opt)\n  }\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { CheckColumnState, GridInternal } from '../../ts-types-internal'\nimport { SwitchStyle } from '../style/SwitchStyle'\nimport { BaseCheckColumn } from './BaseCheckColumn'\nimport { getSwitchColumnStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst SWITCH_COLUMN_STATE_ID = getSwitchColumnStateId()\n\nexport class SwitchColumn<T> extends BaseCheckColumn<T> {\n  public get StyleClass(): typeof SwitchStyle {\n    return SwitchStyle\n  }\n  public clone(): SwitchColumn<T> {\n    return new SwitchColumn(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckColumnState {\n    let state = grid[SWITCH_COLUMN_STATE_ID]\n    if (!state) {\n      state = { block: {}, elapsed: {} }\n      obj.setReadonly(grid, SWITCH_COLUMN_STATE_ID, state)\n    }\n    return state\n  }\n  protected doDrawInternal(\n    helper: GridCanvasHelperAPI,\n    value: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): void {\n    helper.switch(value, context, opt)\n  }\n}\n","import { DateColumnOption } from '../../ts-types'\nimport { DateStyle } from '../style/DateStyle'\nimport { Column } from './Column'\n\nlet defaultDateTimeFormat: Intl.DateTimeFormat\n\nexport class DateColumn<T> extends Column<T> {\n  public static get defaultFormat() {\n    return (\n      defaultDateTimeFormat ||\n      (defaultDateTimeFormat = new Intl.DateTimeFormat())\n    )\n  }\n  public static set defaultFormat(fmt) {\n    defaultDateTimeFormat = fmt\n  }\n  private _format?: Intl.DateTimeFormat\n  public constructor(options: DateColumnOption<T> = {}) {\n    super(options)\n    this._format = options.format\n  }\n  public get StyleClass(): typeof DateStyle {\n    return DateStyle\n  }\n  public get format(): Intl.DateTimeFormat | undefined {\n    return this._format\n  }\n  public clone(): DateColumn<T> {\n    return new DateColumn(this)\n  }\n  public withFormat(format: Intl.DateTimeFormat): DateColumn<T> {\n    const c = this.clone()\n    c._format = format\n    return c\n  }\n  protected convertInternal(value: Date): string {\n    if (value instanceof Date) {\n      const format = this._format || DateColumn.defaultFormat\n      return format.format(value)\n    } else {\n      return ''\n    }\n  }\n}\n","import * as utils from './columnUtils'\nimport {\n  DrawCallback,\n  DrawColumnOptions,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { DrawStyle } from '../style/DrawStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nexport class DrawColumn<T> extends BaseColumn<T, unknown> {\n  private _draw?: DrawCallback\n  public constructor(options: DrawColumnOptions<T> = {}) {\n    super(options)\n    this._draw = options.draw\n  }\n  public get StyleClass() {\n    return DrawStyle\n  }\n  public clone(): DrawColumn<T> {\n    return new DrawColumn(this)\n  }\n  public get draw() {\n    return this._draw\n  }\n  public drawInternal(\n    value: any,\n    context: CellContext,\n    style: DrawStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getRecord }: DrawCellInfo<T>\n  ): void {\n    utils.customDraw(helper, this.draw, value, context, grid, getRecord())\n    utils.drawActionButton(\n      grid,\n      context,\n      INLINE_INPUT_EDITOR_STATE_ID,\n      helper,\n      style as any\n    )\n  }\n}\n","import { icons } from '../../internal/icons'\nimport {\n  IconColumnOption,\n  ColumnIconOption,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { IconStyle } from '../style/IconStyle'\nimport { Column } from './Column'\n\nfunction repeatArray(\n  val: ColumnIconOption<unknown>,\n  count: number\n): ColumnIconOption<unknown>[] {\n  if (count === Infinity) {\n    count = 0\n  }\n  const a = []\n  for (let i = 0; i < count; i++) {\n    a.push(val)\n  }\n  return a\n}\n\nexport class IconColumn<T> extends Column<T> {\n  private _tagName: string\n  private _className?: string\n  private _content?: string\n  private _name?: string\n  private _iconWidth?: number\n  public constructor(options: IconColumnOption<T> = {}) {\n    super(options)\n    this._tagName = options.tagName || 'i'\n    this._className = options.className\n    this._content = options.content\n    this._name = options.name\n    this._iconWidth = options.iconWidth\n  }\n  public get StyleClass(): typeof IconStyle {\n    return IconStyle\n  }\n  public clone(): IconColumn<T> {\n    return new IconColumn(this)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: IconStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ) {\n    const num = Number(value)\n    if (!isNaN(num)) {\n      const icon: IconColumnOption<T> & { width?: number } = {}\n      icons.iconPropKeys.forEach((k) => {\n        ;(icon as any)[k] = (style as any)[k]\n      })\n      icon.className = this._className\n      icon.tagName = this._tagName\n      icon.content = this._content\n      icon.name = this._name\n      if (this._iconWidth) {\n        icon.width = this._iconWidth\n      }\n\n      info.getIcon = (): ColumnIconOption<unknown>[] =>\n        repeatArray(icon as ColumnIconOption<unknown>, num)\n    } else {\n      info.getIcon = (): null => null\n    }\n    super.drawInternal('', context, style, helper, grid, info)\n  }\n}\n","import { RectProps } from '../ts-types'\n\nexport type PaddingOption = {\n  left?: number\n  right?: number\n  top?: number\n  bottom?: number\n}\n\nconst fontSizeCache: {\n  [key: string]: {\n    width: number\n    height: number\n  }\n} = {}\n\nexport function getFontSize(\n  ctx: CanvasRenderingContext2D,\n  font: string | null | undefined\n): {\n  width: number\n  height: number\n} {\n  const fontName = font || ctx.font\n  if (fontSizeCache[fontName]) {\n    return fontSizeCache[fontName]\n  }\n  const bk = ctx.font\n  try {\n    ctx.font = fontName\n    const em = ctx.measureText('哦').width\n    return (fontSizeCache[fontName] = {\n      height: em,\n      width: em,\n    })\n  } finally {\n    ctx.font = bk\n  }\n}\n\nexport function calcBasePosition(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  {\n    offset = 0,\n    padding: {\n      left: paddingLeft = 0,\n      right: paddingRight = 0,\n      top: paddingTop = 0,\n      bottom: paddingBottom = 0,\n    } = {},\n  }: {\n    offset?: number\n    padding?: PaddingOption\n  } = {}\n): { x: number; y: number } {\n  return calcStartPosition(ctx, rect, 0, 0, {\n    offset,\n    padding: {\n      bottom: paddingBottom,\n      left: paddingLeft,\n      right: paddingRight,\n      top: paddingTop,\n    },\n  })\n}\n\nexport function calcStartPosition(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  width: number,\n  height: number,\n  {\n    offset = 0,\n    padding: {\n      left: paddingLeft = 0,\n      right: paddingRight = 0,\n      top: paddingTop = 0,\n      bottom: paddingBottom = 0,\n    } = {},\n  }: {\n    offset?: number\n    padding?: PaddingOption\n  } = {}\n): { x: number; y: number } {\n  const textAlign = ctx.textAlign || 'left'\n  const textBaseline = ctx.textBaseline || 'middle'\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n\n  let x = rect.left + offset + paddingLeft\n  if (textAlign === 'right' || textAlign === 'end') {\n    x = rect.right - width - offset - paddingRight\n  } else if (textAlign === 'center') {\n    x = rect.left + (rect.width - width + paddingLeft - paddingRight) / 2\n  }\n  let y = rect.top + offset + paddingTop\n  if (\n    textBaseline === 'bottom' ||\n    textBaseline === 'alphabetic' ||\n    textBaseline === 'ideographic'\n  ) {\n    y = rect.bottom - height - offset - paddingBottom\n  } else if (textBaseline === 'middle') {\n    y = rect.top + (rect.height - height + paddingTop - paddingBottom) / 2\n  }\n  return { x, y }\n}\n","export class LRUCache<T> {\n  private _list: string[]\n  private _map: { [key: string]: T }\n  private _cacheSize: number\n  public constructor(cacheSize: number) {\n    this._list = []\n    this._map = {}\n    this._cacheSize = cacheSize || 50\n  }\n  public get(key: string): T {\n    const val = this._map[key]\n    if (val) {\n      const list = this._list\n      const idx = list.indexOf(key)\n      list.splice(idx, 1)\n      list.push(key)\n    }\n    return val\n  }\n  public put(key: string, value: T): void {\n    const list = this._list\n    const map = this._map\n    if (map[key]) {\n      const idx = list.indexOf(key)\n      list.splice(idx, 1)\n    }\n    map[key] = value\n    list.push(key)\n    if (list.length > this._cacheSize) {\n      const remKey = list.shift() || ''\n      delete map[remKey]\n    }\n  }\n}\n","import { MaybePromise } from '../ts-types'\nimport { LRUCache } from './LRUCache'\nimport { then } from './utils'\n\nconst allCache: {\n  [key: string]: LRUCache<MaybePromise<HTMLImageElement>>\n} = {}\n\n// function isDataUrl(url: string): boolean {\n//   return url ? url.search(/^(data:)/) !== -1 : false\n// }\n\nfunction loadImage(src: string): Promise<HTMLImageElement> {\n  if (typeof Promise === 'undefined') {\n    window.console.error(\n      'Promise is not loaded. load Promise before this process.'\n    )\n    return {\n      then(): Promise<HTMLImageElement> {\n        return this as any\n      },\n    } as any\n  }\n  const img = new Image()\n  const result = new Promise<HTMLImageElement>((resolve) => {\n    img.onload = (): void => {\n      resolve(img)\n    }\n  })\n  img.onerror = (): void => {\n    const url = src.length > 200 ? `${src.substr(0, 200)}...` : src\n    console.warn(`cannot load: ${url}`)\n    throw new Error(`IMAGE LOAD ERROR: ${url}`)\n  }\n  // img.src = isDataUrl(src) ? src : `${src}?${Date.now()}`\n  img.src = src\n  return result\n}\n\nfunction getCacheOrLoad0(\n  cache: LRUCache<MaybePromise<HTMLImageElement>>,\n  src: MaybePromise<string>\n): MaybePromise<HTMLImageElement> {\n  return then(src, (src) => {\n    const c = cache.get(src)\n    if (c) {\n      return c\n    }\n    const result = loadImage(src).then((img: any) => {\n      cache.put(src, img)\n      return img\n    })\n    cache.put(src, result)\n    return result\n  })\n}\n\nexport function getCacheOrLoad(\n  cacheName: string,\n  cacheSize: number,\n  src: MaybePromise<string>\n): MaybePromise<HTMLImageElement> {\n  const cache =\n    allCache[cacheName] ||\n    (allCache[cacheName] = new LRUCache<MaybePromise<HTMLImageElement>>(\n      cacheSize\n    ))\n  return getCacheOrLoad0(cache, src)\n}\n","import * as utils from './columnUtils'\nimport {\n  ListGridAPI,\n  MaybePromise,\n  CellContext,\n  GridCanvasHelperAPI,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { calcStartPosition } from '../../internal/canvases'\nimport { getCacheOrLoad } from '../../internal/imgs'\nimport Rect from '../../internal/Rect'\nimport { ImageStyle } from '../style/ImageStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { getInlineInputEditorStateId } from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\n\nconst MAX_LRU_CACHE_SIZE = 50\nfunction getImage(url: MaybePromise<string>): MaybePromise<HTMLImageElement> {\n  return getCacheOrLoad('ImageColumn', MAX_LRU_CACHE_SIZE, url)\n}\n\nfunction calcKeepAspectRatioSize(\n  width: number,\n  height: number,\n  maxWidth: number,\n  maxHeight: number\n): {\n  width: number\n  height: number\n} {\n  let newWidth = width\n  let newHeight = height\n  if (newWidth > maxWidth) {\n    newWidth = maxWidth\n    newHeight = (newWidth * height) / width\n  }\n  if (newHeight > maxHeight) {\n    newHeight = maxHeight\n    newWidth = (newHeight * width) / height\n  }\n  return {\n    height: newHeight,\n    width: newWidth,\n  }\n}\n\nexport class ImageColumn<T> extends BaseColumn<T, HTMLImageElement> {\n  public get StyleClass(): typeof ImageStyle {\n    return ImageStyle\n  }\n  public onDrawCell(\n    cellValue: MaybePromise<string>,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: ListGridAPI<T>\n  ) {\n    const img = cellValue ? getImage(cellValue) : ''\n    return super.onDrawCell(img, info, context, grid)\n  }\n  public clone(): ImageColumn<T> {\n    return new ImageColumn(this)\n  }\n  public drawInternal(\n    value: HTMLImageElement,\n    context: CellContext,\n    style: ImageStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ) {\n    const { textAlign, textBaseline, margin } = style\n\n    if (value) {\n      helper.drawWithClip(context, (ctx) => {\n        ctx.textAlign = textAlign\n        ctx.textBaseline = textBaseline\n\n        const rect = (context.getRect() as Rect).copy()\n        const padding = utils.getActionTextPadding(\n          context,\n          helper,\n          style as any\n        )\n        rect.width -= padding[1]\n        if (rect.width < 0) {\n          rect.width = 0\n        }\n\n        if (style.imageSizing === 'keep-aspect-ratio') {\n          const size = calcKeepAspectRatioSize(\n            value.width,\n            value.height,\n            rect.width - margin * 2,\n            rect.height - margin * 2\n          )\n          const width = size.width\n          const height = size.height\n          const pos = calcStartPosition(ctx, rect, width, height, {\n            offset: margin,\n          })\n          ctx.drawImage(\n            value,\n            0,\n            0,\n            value.width,\n            value.height,\n            pos.x,\n            pos.y,\n            width,\n            height\n          )\n        } else {\n          ctx.drawImage(\n            value,\n            0,\n            0,\n            value.width,\n            value.height,\n            rect.left + margin,\n            rect.top + margin,\n            rect.width - margin * 2,\n            rect.height - margin * 2\n          )\n        }\n      })\n    }\n    utils.drawActionButton(\n      grid,\n      context,\n      INLINE_INPUT_EDITOR_STATE_ID,\n      helper,\n      style as any\n    )\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  CellAddress,\n  LookupColumnOption,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  DrawCallback,\n  CellStyle,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { LookupStyle } from '../style/LookupStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { getOrApply, isPromise, isDef } from '../../internal/utils'\nimport { getInlineLookupEditorStateId } from '../../internal/symbolManager'\nimport Rect from '../../internal/Rect'\n\nconst INLINE_LOOKUP_EDITOR_STATE_ID = getInlineLookupEditorStateId()\n\nlet lookupColumnPromiseDrawingCol = ''\n\nexport class LookupColumn<T, L> extends BaseColumn<T, string> {\n  private _records?: L[] | ((rec: T) => L[] | Promise<L[]>)\n  private _lookupMap: {\n    [key: string]: string\n  } = {}\n  private _valueField?: string\n  private _captionField?: string\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  public constructor(options: LookupColumnOption<T, L> = {}) {\n    super(options)\n    this._records = options.records\n    this._valueField = options.valueField\n    this._captionField = options.captionField\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n  }\n  public get StyleClass(): typeof LookupStyle {\n    return LookupStyle\n  }\n  public get records(): L[] | ((rec: T) => L[] | Promise<L[]>) | undefined {\n    return this._records\n  }\n  public get valueField(): string | undefined {\n    return this._valueField\n  }\n  public get captionField(): string | undefined {\n    return this._captionField\n  }\n  public get draw(): DrawCallback | undefined {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public clone(): LookupColumn<T, L> {\n    return new LookupColumn(this)\n  }\n  public drawInternal(\n    value: any,\n    context: CellContext,\n    style: LookupStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ) {\n    const getIcon = info.getIcon\n    const getCell = info.getCell\n    const getRecord = info.getRecord\n    const records = getOrApply(this.records || [], getRecord())\n    if (isPromise(records)) {\n      const cell = getCell()\n      const col = cell.col\n      const row = cell.row\n      if (!lookupColumnPromiseDrawingCol) {\n        records.then(\n          ((me, col, row) => (rs: L[]) => {\n            lookupColumnPromiseDrawingCol = String(col)\n            try {\n              me._mergeRecords(rs)\n              const range = grid.getCellRange(col, row)\n              grid.invalidateCellRange(range)\n            } finally {\n              lookupColumnPromiseDrawingCol = ''\n            }\n          })(this, col, row)\n        )\n        return\n      }\n    } else {\n      this._mergeRecords(records)\n    }\n\n    const textAlign = style.textAlign\n    const textBaseline = style.textBaseline\n    const font = style.font\n    const textOverflow = style.textOverflow\n\n    let color = style.color\n\n    const text = this._convertInternal(value, getCell(), grid)\n    helper.testFontLoad(font, text, context)\n\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const isCustomDraw = columnUtils.customDraw(\n        helper,\n        this.draw,\n        text,\n        context,\n        grid,\n        getRecord()\n      )\n      if (!isCustomDraw) {\n        if (!isDef(color) && (!isDef(value) || value === '')) {\n          color = 'rgba(0, 0, 0, .38)'\n        }\n        helper.text(text, ctx, {\n          color,\n          font,\n          icons,\n          padding: columnUtils.getActionTextPadding(ctx, helper, style),\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n      columnUtils.drawActionButton(\n        grid,\n        ctx,\n        INLINE_LOOKUP_EDITOR_STATE_ID,\n        helper,\n        style\n      )\n      columnUtils.drawAttachArea(\n        grid,\n        getRecord(),\n        context,\n        helper,\n        this._cellStyle\n      )\n    })\n  }\n  public convertCopyInternal(value: unknown) {\n    return isDef(value) ? this._convertInternalValue(value) : ''\n  }\n  protected convertInternal(value: any): string {\n    return value\n  }\n  protected doConvertInternal(\n    value: unknown,\n    _cell: CellAddress,\n    _grid: ListGridAPI<T>\n  ) {\n    return this.convertInternal(value)\n  }\n  private _convertInternalValue(value: unknown): string {\n    const key = isDef(value) ? value + '' : ''\n    let v = this._lookupMap[key]\n    if (!isDef(v)) {\n      v = key\n    }\n    return v\n  }\n  private _convertInternal(\n    value: any,\n    cell: CellAddress,\n    grid: ListGridAPI<T>\n  ) {\n    let v = this._convertInternalValue(value)\n    if (this.convert) {\n      v = this.convert(value, v, cell, grid)\n    }\n    return this.doConvertInternal(v, cell, grid)\n  }\n  private _mergeRecords(recs: L[] = []) {\n    const valueField = this.valueField || 'id'\n    const captionField = this.captionField || valueField\n    for (const record of recs) {\n      let key = (record as any)[valueField]\n      key = isDef(key) ? key + '' : ''\n      let value = (record as any)[captionField]\n      value = isDef(value) ? value + '' : ''\n      this._lookupMap[key] = value\n    }\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  MultilineTextColumnOption,\n  DrawCallback,\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  CellStyle,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { MultilineTextStyle } from '../style/MultilineTextStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { isDef } from '../../internal/utils'\nimport { getInlineTextareaEditorStateId } from '../../internal/symbolManager'\nimport Rect from '../../internal/Rect'\n\nconst INLINE_TEXTAREA_EDITOR_STATE_ID = getInlineTextareaEditorStateId()\n\nexport class MultilineTextColumn<T> extends BaseColumn<T, string> {\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  public constructor(options: MultilineTextColumnOption<T> = {}) {\n    super(options)\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n  }\n  public get StyleClass(): typeof MultilineTextStyle {\n    return MultilineTextStyle\n  }\n  public clone(): MultilineTextColumn<T> {\n    return new MultilineTextColumn(this)\n  }\n  public get draw() {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: MultilineTextStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { getIcon, getRecord }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n      textOverflow,\n    } = style\n\n    const v = isDef(value) ? value + '' : ''\n    const multiline = v.replace(/\\r?\\n/g, '\\n').replace(/\\r/g, '\\n').split('\\n')\n    helper.testFontLoad(font, v, context)\n    columnUtils.loadIcons(getIcon(), context, helper, (icons, ctx) => {\n      const isCustomDraw = columnUtils.customDraw(\n        helper,\n        this.draw,\n        multiline,\n        context,\n        grid,\n        getRecord()\n      )\n      if (!isCustomDraw) {\n        helper.multilineText(multiline, ctx, {\n          autoWrapText,\n          color,\n          font,\n          icons,\n          lineClamp,\n          lineHeight,\n          padding: columnUtils.getActionTextPadding(context, helper, style),\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n      columnUtils.drawActionButton(\n        grid,\n        context,\n        INLINE_TEXTAREA_EDITOR_STATE_ID,\n        helper,\n        style\n      )\n      columnUtils.drawAttachArea(\n        grid,\n        getRecord(),\n        context,\n        helper,\n        this._cellStyle\n      )\n    })\n  }\n}\n","import { NumberColumnOption } from '../../ts-types'\nimport { NumberStyle } from '../style/NumberStyle'\nimport { Column } from './Column'\n\nlet defaultFormat: Intl.NumberFormat\n\nexport class NumberColumn<T> extends Column<T> {\n  public static get defaultFormat(): Intl.NumberFormat {\n    return defaultFormat || (defaultFormat = new Intl.NumberFormat())\n  }\n  public static set defaultFormat(fmt) {\n    defaultFormat = fmt\n  }\n  private _format?: Intl.NumberFormat\n  public constructor(options: NumberColumnOption<T> = {}) {\n    super(options)\n    this._format = options.format\n  }\n  public get StyleClass(): typeof NumberStyle {\n    return NumberStyle\n  }\n  public get format(): Intl.NumberFormat | undefined {\n    return this._format\n  }\n  public clone(): NumberColumn<T> {\n    return new NumberColumn(this)\n  }\n  public withFormat(format: Intl.NumberFormat): NumberColumn<T> {\n    const c = this.clone()\n    c._format = format\n    return c\n  }\n  protected convertInternal(value: unknown): string {\n    let s: any = (value + '').trim()\n    if (s) {\n      s = s - 0\n      if (isNaN(s)) {\n        s = ''\n      } else {\n        s = (this._format || NumberColumn.defaultFormat).format(s)\n      }\n    }\n    return s\n  }\n}\n","import {\n  PercentCompleteBarColumnOption,\n  GridCanvasHelperAPI,\n  CellContext,\n  ListGridAPI,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { str, getOrApply } from '../../internal/utils'\nimport { PercentCompleteBarStyle } from '../style/PercentCompleteBarStyle'\nimport { Column } from './Column'\n\nconst MARGIN = 2\n\nexport class PercentCompleteBarColumn<T> extends Column<T> {\n  private _min: number\n  private _max: number\n  private _formatter: (value: string) => string\n  public constructor(options: PercentCompleteBarColumnOption<T> = {}) {\n    super(options)\n    this._min = options.min || 0\n    this._max = options.max || this._min + 100\n    this._formatter = options.formatter || ((v) => v)\n  }\n  public get StyleClass(): typeof PercentCompleteBarStyle {\n    return PercentCompleteBarStyle\n  }\n  public clone(): PercentCompleteBarColumn<T> {\n    return new PercentCompleteBarColumn(this)\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: PercentCompleteBarStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    super.drawInternal(\n      this._formatter(value),\n      context,\n      style,\n      helper,\n      grid,\n      info\n    )\n    const barColor = style.barColor\n    const barBgColor = style.barBgColor\n    const barHeight = style.barHeight\n\n    let sValue = `${value}`\n    if (str.endsWith(sValue, '%')) {\n      sValue = sValue.substr(0, sValue.length - 1)\n    }\n    const num = Number(sValue)\n    const rate =\n      num < this._min\n        ? 0\n        : num > this._max\n        ? 1\n        : (num - this._min) / (this._max - this._min)\n\n    helper.drawWithClip(context, (ctx) => {\n      const rect = context.getRect()\n\n      const barMaxWidth = rect.width - MARGIN * 2 - 1 /*边线*/\n      const barTop = rect.bottom - MARGIN - barHeight - 1 /*边线*/\n      const barLeft = rect.left + MARGIN\n      ctx.fillStyle = getOrApply(barBgColor, rate * 100) || '#f0f3f5'\n      ctx.beginPath()\n      ctx.rect(barLeft, barTop, barMaxWidth, barHeight)\n      ctx.fill()\n\n      const barSize = Math.min(barMaxWidth * rate, barMaxWidth)\n      ctx.fillStyle = getOrApply(barColor, rate * 100) || '#20a8d8'\n      ctx.beginPath()\n      ctx.rect(barLeft, barTop, barSize, barHeight)\n      ctx.fill()\n    })\n  }\n}\n","import { MaybePromise } from '../ts-types'\nimport { isPromise } from './utils'\n\nfunction createArray<T>(get: (i: number) => T, length: number): T[] {\n  const array = new Array<T>(length)\n  for (let i = 0; i < length; i++) {\n    array[i] = get(i)\n  }\n  return array\n}\nfunction createArrayPromise<R>(\n  get: (i: number) => MaybePromise<R>,\n  getField: undefined,\n  length: number\n): Promise<{ v: R; f: R }[]>\nfunction createArrayPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  getField: (r: R) => MaybePromise<F>,\n  length: number\n): Promise<{ v: R; f: F }[]>\nfunction createArrayPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  getField: ((r: R) => MaybePromise<F>) | undefined,\n  length: number\n): Promise<any[]> {\n  return new Promise((resolve) => {\n    const plist = []\n    const array = new Array<{ v: MaybePromise<R>; f: MaybePromise<R> }>(length)\n    for (let i = 0; i < length; i++) {\n      const data = get(i)\n      const record = {\n        v: data,\n        f: data,\n      }\n      array[i] = record\n      if (isPromise(data)) {\n        plist.push(\n          data.then((v) => {\n            record.v = v\n            record.f = v\n          })\n        )\n      }\n    }\n    Promise.all(plist)\n      .then(() =>\n        getField == null\n          ? (array as any)\n          : setArrayField(array as any, getField)\n      )\n      .then(resolve)\n  })\n}\nfunction setArrayField<R, F>(\n  array: { v: R; f: R | F }[],\n  getField: (r: R) => MaybePromise<F>\n): Promise<{ v: R; f: F }[]> {\n  return new Promise((resolve) => {\n    const { length } = array\n    const plist = []\n    for (let i = 0; i < length; i++) {\n      const record = array[i]\n      const f = getField(record.v)\n      if (isPromise(f)) {\n        plist.push(\n          f.then((v) => {\n            record.f = v\n          })\n        )\n      } else {\n        record.f = f\n      }\n    }\n    Promise.all(plist).then(() => resolve(array as { v: R; f: F }[]))\n  })\n}\nexport function sortArray<T>(\n  array: T[],\n  compare: (a: T, b: T) => number\n): void {\n  Array.prototype.sort.call(array, compare)\n}\n\nexport function sort<R, F>(\n  get: (i: number) => R,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: R, b: R) => number\n): void\nexport function sort<R, F>(\n  get: (i: number) => R,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: F, b: F) => number,\n  getField: (r: R) => F\n): void\nexport function sort<R, F>(\n  get: (i: number) => R,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: ((a: R, b: R) => number) | ((a: F, b: F) => number),\n  getField?: (r: R) => F\n): void {\n  const old = createArray(get, length)\n  if (getField != null) {\n    old.sort((r1, r2) =>\n      (compare as (a: F, b: F) => number)(getField(r1), getField(r2))\n    )\n  } else {\n    old.sort(compare as (a: R, b: R) => number)\n  }\n  for (let i = 0; i < length; i++) {\n    set(i, old[i])\n  }\n}\n\nexport function sortPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: R, b: R) => number\n): void\nexport function sortPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: (a: F, b: F) => number,\n  getField: (r: R) => MaybePromise<F | undefined>\n): Promise<void>\nexport function sortPromise<R, F>(\n  get: (i: number) => MaybePromise<R>,\n  set: (i: number, r: R) => void,\n  length: number,\n  compare: any,\n  getField?: any\n): Promise<void> {\n  if (typeof Promise !== 'undefined') {\n    return createArrayPromise(get, getField, length).then((array) => {\n      array.sort((r1, r2) => compare(r1.f, r2.f))\n      for (let i = 0; i < length; i++) {\n        set(i, array[i].v)\n      }\n    })\n  } else {\n    sort(\n      get as (i: number) => R,\n      set,\n      length,\n      compare as (a: F, b: F) => number,\n      getField as (r: R) => F\n    )\n    const dummyPromise: Promise<undefined> = {\n      then(fn: () => void): Promise<undefined> {\n        fn()\n        return dummyPromise\n      },\n      catch(): Promise<undefined> {\n        return dummyPromise\n      },\n    } as any\n    return dummyPromise\n  }\n}\n","import * as sort from '../internal/sort'\nimport {\n  MaybePromiseOrUndef,\n  FieldDef,\n  FieldData,\n  MaybePromise,\n  MaybePromiseOrCallOrUndef,\n  FieldAssessor,\n  MaybePromiseOrCall,\n} from '../ts-types'\nimport {\n  applyChainSafe,\n  array,\n  emptyFn,\n  getOrApply,\n  isDef,\n  isPromise,\n  obj,\n} from '../internal/utils'\nimport { EventTarget } from '../core/EventTarget'\nimport { PromiseCacheValue } from './internal/types'\n\nfunction isFieldAssessor<T>(field: FieldDef<T>): field is FieldAssessor<T> {\n  if (obj.isObject(field)) {\n    const a = field as FieldAssessor<T>\n    if (a.get && a.set) {\n      return true\n    }\n  }\n  return false\n}\n\nconst DATA_SOURCE_EVENT_TYPE = {\n  REFRESH_DATA: 'refresh_data',\n  UPDATED_LENGTH: 'updated_length',\n  UPDATED_ORDER: 'updated_order',\n  UPDATE_LENGTH: 'update_length',\n} as const\n\ntype PromiseBack<V> = (value: PromiseCacheValue<V>) => void\n\nfunction getValue<V>(\n  value: MaybePromiseOrCallOrUndef<V, []>,\n  setPromiseBack: PromiseBack<V>\n): MaybePromiseOrUndef<V> {\n  const maybePromiseValue = getOrApply(value)\n  if (isPromise(maybePromiseValue)) {\n    const promiseValue = maybePromiseValue.then((r: V | undefined) => {\n      setPromiseBack(r)\n      return r\n    })\n    // 临时缓存\n    setPromiseBack(promiseValue)\n    return promiseValue\n  } else {\n    return maybePromiseValue\n  }\n}\n\nfunction getField<T, F extends FieldDef<T>>(\n  record: MaybePromiseOrUndef<T>,\n  field: F,\n  setPromiseBack: PromiseBack<any>\n): FieldData {\n  if (!isDef(record)) {\n    return undefined\n  }\n  if (isPromise(record)) {\n    return record.then((r: T | undefined) => getField(r, field, setPromiseBack))\n  }\n  const fieldGet = isFieldAssessor<T>(field) ? field.get : field\n  if (typeof fieldGet === 'string' && fieldGet in record) {\n    const fieldResult = (record as any)[fieldGet]\n    return getValue(fieldResult, setPromiseBack)\n  }\n  if (typeof fieldGet === 'function') {\n    const fieldResult = (fieldGet as any)(record)\n    return getValue(fieldResult, setPromiseBack)\n  }\n\n  const ss = `${fieldGet}`.split('.')\n  if (ss.length <= 1) {\n    const fieldResult = (record as any)[fieldGet]\n    return getValue(fieldResult, setPromiseBack)\n  }\n  const fieldResult = applyChainSafe(\n    record,\n    (val, name) => getField(val, name, emptyFn as any),\n    ...ss\n  )\n  return getValue(fieldResult, setPromiseBack)\n}\nfunction setField<T, F extends FieldDef<T>>(\n  record: T | undefined,\n  field: F,\n  value: any\n): boolean {\n  if (record == null) {\n    return false\n  }\n\n  const fieldSet = isFieldAssessor<T>(field) ? field.set : field\n  if (typeof fieldSet === 'string' && fieldSet in record) {\n    ;(record as any)[fieldSet] = value\n  } else if (typeof fieldSet === 'function') {\n    return (fieldSet as any)(record, value)\n  } else if (typeof fieldSet === 'string') {\n    const ss = `${fieldSet}`.split('.')\n    let obj: any = record\n    const { length } = ss\n    for (let i = 0; i < length; i++) {\n      const f = ss[i]\n      if (i === length - 1) {\n        obj[f] = value\n      } else {\n        obj = obj[f] || (obj[f] = {})\n      }\n    }\n  } else {\n    ;(record as any)[fieldSet] = value\n  }\n  return true\n}\nfunction _getIndex(sortedIndexMap: null | number[], index: number): number {\n  if (!sortedIndexMap) {\n    return index\n  }\n  const mapIndex = sortedIndexMap[index]\n  return isDef(mapIndex) ? mapIndex : index\n}\n\nexport interface DataSourceParam<T> {\n  get: (index: number) => T\n  length: number\n  source?: any\n}\n\n/**\n * grid data source\n */\nexport class DataSource<T> extends EventTarget {\n  public static get EVENT_TYPE() {\n    return DATA_SOURCE_EVENT_TYPE\n  }\n  public static EMPTY = new DataSource<any>({\n    get(): void {},\n    length: 0,\n  })\n  public static ofArray<T>(array: T[]): DataSource<T> {\n    return new DataSource({\n      get: (index: number): T => array[index],\n      length: array.length,\n      source: array,\n    })\n  }\n  protected _sortedIndexMap: null | number[] = null\n  private _get: (index: number) => MaybePromiseOrCall<T, []>\n  private _length: number\n  private readonly _source: any\n  public constructor(obj?: DataSourceParam<T> | DataSource<T>) {\n    super()\n    this._get = obj?.get.bind(obj) || (undefined as any)\n    this._length = obj?.length || 0\n    this._source = obj?.source ?? obj\n  }\n  get source(): any {\n    return this._source\n  }\n  public get(index: number): MaybePromiseOrUndef<T> {\n    return this.getOriginal(_getIndex(this._sortedIndexMap, index))\n  }\n  public getField<F extends FieldDef<T>>(index: number, field: F): FieldData {\n    return this.getOriginalField(_getIndex(this._sortedIndexMap, index), field)\n  }\n  public hasField(index: number, field: FieldDef<T>): boolean {\n    return this.hasOriginalField(_getIndex(this._sortedIndexMap, index), field)\n  }\n  public setField<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: any\n  ): MaybePromise<boolean> {\n    return this.setOriginalField(\n      _getIndex(this._sortedIndexMap, index),\n      field,\n      value\n    )\n  }\n  public sort(field: FieldDef<T>, order: 'desc' | 'asc'): MaybePromise<void> {\n    const sortedIndexMap = new Array<number>(this._length)\n\n    const orderFn: (v1: T, v2: T) => -1 | 0 | 1 =\n      order !== 'desc'\n        ? (v1: T, v2: T): -1 | 0 | 1 => (v1 === v2 ? 0 : v1 > v2 ? 1 : -1)\n        : (v1: T, v2: T): -1 | 0 | 1 => (v1 === v2 ? 0 : v1 < v2 ? 1 : -1)\n\n    return sort\n      .sortPromise(\n        (index) =>\n          isDef(sortedIndexMap[index])\n            ? sortedIndexMap[index]\n            : (sortedIndexMap[index] = index),\n        (index, rel) => {\n          sortedIndexMap[index] = rel\n        },\n        this._length,\n        orderFn,\n        (index) => this.getOriginalField(index, field)\n      )\n      .then(() => {\n        this._sortedIndexMap = sortedIndexMap\n        this.fireListeners(DATA_SOURCE_EVENT_TYPE.UPDATED_ORDER)\n      })\n  }\n  public get length(): number {\n    return this._length\n  }\n  public set length(length) {\n    if (this._length !== length) {\n      this.setLength(length)\n    }\n  }\n  public refresh(): void {\n    this.refreshInternal()\n    this.fireListeners(DATA_SOURCE_EVENT_TYPE.REFRESH_DATA)\n  }\n  get dataSource(): DataSource<T> {\n    return this\n  }\n  public dispose(): void {\n    super.dispose()\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    return getValue(this._get(index), (val: PromiseCacheValue<T>) => {\n      this.recordPromiseCallBackInternal(index, val)\n    })\n  }\n  protected getOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F\n  ): FieldData {\n    if (!isDef(field)) {\n      return undefined\n    }\n    const record = this.getOriginal(index)\n    return getField(record, field, (val: any) => {\n      this.fieldPromiseCallBackInternal(index, field, val)\n    })\n  }\n  protected hasOriginalField(index: number, field: FieldDef<T>): boolean {\n    if (!isDef(field)) {\n      return false\n    }\n    if (typeof field === 'function') {\n      return true\n    }\n    const record = this.getOriginal(index)\n    return Boolean(record && typeof field === 'string' && field in record)\n  }\n  protected setOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: any\n  ): MaybePromise<boolean> {\n    if (!isDef(field)) {\n      return false\n    }\n    const record = this.getOriginal(index)\n    if (isPromise(record)) {\n      return record.then((r) => setField(r, field, value))\n    }\n    return setField(record, field, value)\n  }\n  protected fieldPromiseCallBackInternal<F extends FieldDef<T>>(\n    _index: number,\n    _field: F,\n    _value: PromiseCacheValue<any>\n  ): void {\n    // nothing\n  }\n  protected recordPromiseCallBackInternal(\n    _index: number,\n    _record: PromiseCacheValue<T>\n  ): void {\n    // nothing\n  }\n  protected refreshInternal() {\n    // nothing\n  }\n  protected setLength(length: number): void {\n    const results = this.fireListeners(\n      DATA_SOURCE_EVENT_TYPE.UPDATE_LENGTH,\n      length\n    )\n    if (array.findIndex(results, (v) => !v) >= 0) {\n      return\n    }\n    this._length = length\n    this.fireListeners(DATA_SOURCE_EVENT_TYPE.UPDATED_LENGTH, this._length)\n  }\n}\n","import { isPromise } from '../internal/utils'\nimport { DataSource } from './DataSource'\nimport { MaybePromiseOrUndef } from '../ts-types'\n\ntype TExpandedKeys = number[] | string[]\n\ninterface ITreeDataSourceOptions<T> {\n  keyField: string\n  parentKeyField: string\n  expandedKeys?: TExpandedKeys\n  hasChildren?: (rec?: T | null) => boolean\n  getChildren?: (\n    rec?: T | null,\n    all?: boolean\n  ) =>\n    | T[]\n    | Promise<\n        | T[]\n        | {\n            records: T[]\n            expandedKeys?: TExpandedKeys\n          }\n      >\n}\n\nexport interface ITreeInfo {\n  expanded: boolean\n  isLast: boolean\n  isLeaf: boolean\n  key: any\n  level: number\n  levelLast: boolean[]\n  parentKey: any\n}\n\ninterface IRecordMap<T> {\n  [key: string]: T\n  [key: number]: T\n}\n\ninterface IRecordsMap<T> {\n  [key: string]: T[]\n  [key: number]: T[]\n}\n\ninterface ILevelMap {\n  [key: string]: number\n  [key: number]: number\n}\n\ninterface ILastMap {\n  [key: string]: boolean\n  [key: number]: boolean\n}\n\ninterface IExpandMap {\n  [key: string]: boolean\n  [key: number]: boolean\n}\n\nfunction _initLevel<T>(ds: any, record: T, level: number) {\n  const key = (record as any)[ds.options.keyField]\n  ds._levelMap[key] = level\n  const children = ds._pIdMap[key] || []\n  for (const child of children) {\n    _initLevel(ds, child, level + 1)\n  }\n}\n\nfunction _initLast<T>(ds: any, records: T[]) {\n  if (records && records.length > 0) {\n    const key = (records as any)[records.length - 1][ds.options.keyField]\n    ds._lastMap[key] = true\n  }\n}\n\nfunction _expandAll<T>(ds: any, record: T) {\n  const key = (record as any)[ds.options.keyField]\n  const children = ds._pIdMap[key] || []\n  if (children.length > 0) {\n    ds._expandMap[key] = true\n    for (const r of children) {\n      _expandAll(ds, r)\n    }\n  }\n}\n\nfunction _getExpandRecords<T>(ds: any, record: T): T[] {\n  let records = []\n  const key = (record as any)[ds.options.keyField]\n  if (ds._expandMap[key]) {\n    const children = ds._pIdMap[key] || []\n    for (const r of children) {\n      records.push(r)\n      records = records.concat(_getExpandRecords(ds, r))\n    }\n  }\n  return records\n}\n\nfunction _getCollapseRecordCount(ds: any, index: number) {\n  const record = ds._records[index]\n  const key = record[ds.options.keyField]\n  const level = ds._levelMap[key]\n  let count = 0\n  for (let i = index + 1; i < ds._records.length; i++) {\n    const r = ds._records[i]\n    const k = r[ds.options.keyField]\n    if (level < ds._levelMap[k]) {\n      count++\n    } else {\n      break\n    }\n  }\n  return count\n}\n\nfunction _expand<T>(\n  ds: any,\n  record: T | null,\n  all: boolean,\n  silent: number,\n  callback?: (ds: any, record: T | null, all: boolean, silent: number) => void\n) {\n  if (record) {\n    const index = ds._records.indexOf(record)\n    const key = (record as any)[ds._options.keyField]\n    if (ds._pIdMap[key]) {\n      if (!ds._expandMap[key]) {\n        if (all) {\n          _expandAll(ds, record)\n        } else {\n          ds._expandMap[key] = true\n        }\n        ds._records.splice(index + 1, 0, ..._getExpandRecords(ds, record))\n      } else if (all) {\n        _expandAll(ds, record)\n        ds._records.splice(\n          index + 1,\n          _getCollapseRecordCount(ds, index),\n          ..._getExpandRecords(ds, record)\n        )\n      }\n      if (silent === 0) {\n        ds.length = ds._records.length\n      }\n    } else if (callback) {\n      callback(ds, record, all, silent)\n    }\n  }\n}\n\nfunction _collapseAll<T>(ds: any, record: T) {\n  const key = (record as any)[ds.options.keyField]\n  delete ds._expandMap[key]\n  const children = ds._pIdMap[key] || []\n  for (const r of children) {\n    _collapseAll(ds, r)\n  }\n}\n\nfunction _parentKey(ds: any, key: any) {\n  const record = ds._idMap[key]\n  const parentKey = record[ds.options.parentKeyField]\n  return parentKey\n}\n\nfunction _rebuildTree(ds: any, silent: number) {\n  // 构建显示记录列表\n  ds._levelMap = {} // 级别索引列表\n  ds._lastMap = {} // 是否末节点列表\n  ds._rootRecords = [] // 根记录对象列表\n  ds._records = [] // 显示记录列表\n  for (const parentKey in ds._pIdMap) {\n    if (ds._pIdMap.hasOwnProperty(parentKey)) {\n      const records = ds._pIdMap[parentKey]\n      if (ds._idMap[parentKey]) {\n        _initLast(ds, records)\n      } else {\n        for (const item of records) {\n          _initLevel(ds, item, 0)\n          ds._rootRecords.push(item)\n          ds._records.push(item)\n          ds._records.push(..._getExpandRecords(ds, item))\n        }\n      }\n    }\n  }\n  _initLast(ds, ds._rootRecords)\n\n  // 清理展开信息\n  for (const key in ds._expandMap) {\n    if (!ds._pIdMap[key]) {\n      delete ds._expandMap[key]\n    }\n  }\n\n  if (silent === 0) {\n    ds.length = ds._records.length\n  }\n}\n\nfunction _lazyLoadRecords<T>(\n  ds: any,\n  records: T[],\n  expandedKeys: TExpandedKeys | null,\n  silent: number\n) {\n  let hasNewRecords = false\n  for (const record of records) {\n    const key = (record as any)[ds._options.keyField]\n    if (!ds._idMap[key]) {\n      hasNewRecords = true\n      const pKey = (record as any)[ds._options.parentKeyField]\n      ds._idMap[key] = record\n      ds._pIdMap[pKey] = ds._pIdMap[pKey] || []\n      ds._pIdMap[pKey].push(record)\n      if (\n        expandedKeys &&\n        Array.isArray(expandedKeys) &&\n        (expandedKeys as (string | number)[]).indexOf(key) >= 0\n      ) {\n        ds._expandMap[key] = true\n      }\n    }\n  }\n  if (hasNewRecords) {\n    _rebuildTree(ds, silent)\n  }\n}\n\nfunction _lazyLoadChildren<T>(\n  ds: any,\n  record: T | null,\n  all: boolean,\n  silent: number,\n  callback?: (ds: any, record: T | null, all: boolean, silent: number) => void\n) {\n  if (\n    ds._options.hasChildren &&\n    ds._options.getChildren &&\n    ds._options.hasChildren(record)\n  ) {\n    const records = ds._options.getChildren(record, all)\n    if (isPromise(records)) {\n      records.then((recs) => {\n        const rs = Array.isArray(recs) ? recs : recs.records\n        const expandedKeys = Array.isArray(recs) ? undefined : recs.expandedKeys\n        _lazyLoadRecords(ds, rs, expandedKeys, silent)\n        if (callback) {\n          callback(ds, record, all, silent)\n        }\n      })\n    } else {\n      _lazyLoadRecords(ds, records, null, silent)\n      if (callback) {\n        callback(ds, record, all, silent)\n      }\n    }\n  }\n}\n\n/**\n * grid data source for tree\n */\nexport class TreeDataSource<T> extends DataSource<T> {\n  public static get EVENT_TYPE() {\n    return DataSource.EVENT_TYPE\n  }\n  private _dataSource: DataSource<T>\n  private _options: ITreeDataSourceOptions<T>\n  private _expandMap: IExpandMap\n  private _idMap: IRecordMap<T> = {}\n  private _pIdMap: IRecordsMap<T> = {}\n  private _levelMap: ILevelMap = {}\n  private _lastMap: ILastMap = {}\n  private _rootRecords: T[] = []\n  private _records: T[] = []\n  private _updateLengthSilentCounter: number = 0\n  public constructor(\n    dataSource: DataSource<T>,\n    options: ITreeDataSourceOptions<T>\n  ) {\n    super(dataSource)\n    this._dataSource = dataSource\n\n    this._options = options\n\n    this._expandMap = {}\n    for (const key of options.expandedKeys || []) {\n      this._expandMap[key] = true\n    }\n\n    this.refreshInternal()\n  }\n  public get options() {\n    return this._options\n  }\n  public get expandedKeys() {\n    return Object.keys(this._expandMap)\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    return this._records[index]\n  }\n  public getTreeInfo(index: number): ITreeInfo | undefined {\n    const record = this.getOriginal(index)\n    if (record) {\n      const key = (record as any)[this._options.keyField]\n      const parentKey = _parentKey(this, key)\n      const expanded = !!this._expandMap[key]\n      let isLeaf = !this._pIdMap[key]\n      const isLast = !!this._lastMap[key]\n      const level = this._levelMap[key]\n\n      const levelLast = []\n      let k = key\n      for (let i = 0; i < level; i++) {\n        levelLast.unshift(!!this._lastMap[k])\n        k = _parentKey(this, k)\n      }\n\n      if (isLeaf && this._options.hasChildren) {\n        isLeaf = !this._options.hasChildren(record as T)\n      }\n\n      return {\n        expanded,\n        isLast,\n        isLeaf,\n        key,\n        level,\n        levelLast,\n        parentKey,\n      }\n    } else {\n      return undefined\n    }\n  }\n  public getIndexByKey(key: number | string) {\n    return this._records.indexOf(this._idMap[key])\n  }\n  public expandAll() {\n    this._records.length = 0\n    for (const record of this._rootRecords) {\n      _expandAll(this, record)\n      this._records.push(record)\n      this._records.push(..._getExpandRecords(this, record))\n    }\n    this.length = this._records.length\n  }\n  public expand(index: number, all: boolean = false) {\n    const record = this.getOriginal(index)\n    _expand(this, record, all, this._updateLengthSilentCounter,\n      (ds1, record1, all1, silent1) => {\n      _lazyLoadChildren(ds1, record1, all1, silent1, (ds2, record2, all2, silent2) => {\n        _expand(ds2, record2, all2, silent2)\n      })\n    })\n  }\n  public expandToKey(key: number | string) {\n    // 根据指定的主键，展开到该记录，并返回索引值\n    const parentKeys = []\n    let value = key\n    let record = this._idMap[value]\n    while (record) {\n      value = (record as any)[this._options.parentKeyField]\n      record = this._idMap[value]\n      if (record) {\n        parentKeys.unshift(value)\n      }\n    }\n    this._updateLengthSilentCounter++\n    try {\n      for (const parentKey of parentKeys) {\n        this.expand(this._records.indexOf(this._idMap[parentKey]))\n      }\n    } finally {\n      this._updateLengthSilentCounter--\n      if (this._updateLengthSilentCounter === 0) {\n        this.length = this._records.length\n      }\n    }\n    return this.getIndexByKey(key)\n  }\n  public expandToLevel(level: number) {\n    // 展开到指定级别\n    const targets = []\n    if (level > 0) {\n      this._updateLengthSilentCounter++\n      try {\n        for (const key in this._levelMap) {\n          if (this._levelMap.hasOwnProperty(key)) {\n            if (\n              level === this._levelMap[key] ||\n              (level > this._levelMap[key] && this._lastMap[key])\n            ) {\n              targets.push(this.expandToKey(key))\n            }\n          }\n        }\n      } finally {\n        this._updateLengthSilentCounter--\n        if (this._updateLengthSilentCounter === 0) {\n          this.length = this._records.length\n        }\n      }\n    }\n    return targets\n  }\n  public collapseAll() {\n    this._records.length = 0\n    this._records.push(...this._rootRecords)\n    this._expandMap = {}\n    this.length = this._records.length\n  }\n  public collapse(index: number, all?: boolean) {\n    const record = this.getOriginal(index)\n    if (record) {\n      const key = (record as any)[this._options.keyField]\n      if (this._pIdMap[key]) {\n        if (this._expandMap[key]) {\n          if (all) {\n            _collapseAll(this, record)\n          } else {\n            delete this._expandMap[key]\n          }\n          this._records.splice(index + 1, _getCollapseRecordCount(this, index))\n          this.length = this._records.length\n        } else if (all) {\n          _collapseAll(this, record)\n        }\n      }\n    }\n  }\n  public toggle(index: number, all?: boolean) {\n    const record = this.getOriginal(index)\n    if (record) {\n      const key = (record as any)[this._options.keyField]\n      if (this._expandMap[key]) {\n        this.collapse(index, all)\n      } else {\n        this.expand(index, all)\n      }\n    }\n  }\n  get source(): any {\n    return this._dataSource.source\n  }\n  get dataSource(): DataSource<T> {\n    return this._dataSource\n  }\n  protected refreshInternal() {\n    // 构建 id 和 pId 与记录的对应关系\n    this._idMap = {}\n    this._pIdMap = {}\n    for (let i = 0; i < this._dataSource.length; i++) {\n      const key = this._dataSource.getField(i, this._options.keyField as any)\n      const parentKey = this._dataSource.getField(\n        i,\n        this._options.parentKeyField as any\n      )\n      const record = this._dataSource.get(i)\n      this._idMap[key] = record as any\n      this._pIdMap[parentKey] = this._pIdMap[parentKey] || []\n      this._pIdMap[parentKey].push(record as any)\n    }\n\n    // 构建显示记录列表\n    _rebuildTree(this, this._updateLengthSilentCounter)\n\n    if (this.length === 0) {\n      _lazyLoadChildren(this, null, false, this._updateLengthSilentCounter)\n    }\n  }\n}\n","import * as columnUtils from './columnUtils'\nimport {\n  CellAddress,\n  ListGridAPI,\n  GridCanvasHelperAPI,\n  CellContext,\n  DrawCallback,\n  TreeColumnOption,\n  TreeInfo,\n  CanToggle,\n  Toggled,\n  ToggledType,\n  LayoutObjectId,\n  CellStyle,\n  MultilineText,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport {\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n} from '../../core/draw-grid/KEY_CODE'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { TreeDataSource } from '../../data/TreeDataSource'\nimport Rect from '../../internal/Rect'\nimport { TreeStyle } from '../style/TreeStyle'\nimport { BaseColumn } from './BaseColumn'\nimport { isPromise, event, cellInRange, getOrApply } from '../../internal/utils'\nimport {\n  getInlineInputEditorStateId,\n  getButtonColumnStateId,\n  getColumnActionStateId,\n} from '../../internal/symbolManager'\n\nconst INLINE_INPUT_EDITOR_STATE_ID = getInlineInputEditorStateId()\nconst BUTTON_COLUMN_STATE_ID = getButtonColumnStateId()\nconst COLUMN_ACTION_STATE_ID = getColumnActionStateId()\n\nconst TREE_NODE_SPACE = 16\n\nfunction _getTreeInfo<T>(\n  grid: ListGridAPI<T>,\n  row: number\n): TreeInfo | undefined {\n  let treeInfo: TreeInfo | undefined = undefined\n  if (grid.dataSource instanceof TreeDataSource) {\n    const recordIndex = grid.getRecordIndexByRow(row)\n    if (recordIndex >= 0) {\n      treeInfo = grid.dataSource.getTreeInfo(recordIndex)\n    }\n  }\n  return treeInfo\n}\n\nfunction _getTreeNodeSpaceWidth(treeInfo?: TreeInfo) {\n  let width = 0\n  if (treeInfo) {\n    width += treeInfo.level * TREE_NODE_SPACE + TREE_NODE_SPACE * 2\n  }\n  return width\n}\n\nfunction _isTreeNodeSpace<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number,\n  event: MouseEvent\n) {\n  let bool = false\n  const relativePos = grid._getMouseRelativePoint(event)\n  if (relativePos) {\n    const rect = grid.getCellRelativeRect(col, row)\n    const treeInfo = _getTreeInfo(grid, row)\n    if (treeInfo && !treeInfo.isLeaf) {\n      const treeNodeSpaceWidth = _getTreeNodeSpaceWidth(treeInfo)\n      if (\n        treeNodeSpaceWidth &&\n        relativePos.x - rect.left < treeNodeSpaceWidth\n      ) {\n        bool = true\n      }\n    }\n  }\n  return bool\n}\n\nexport class TreeColumn<T> extends BaseColumn<T, string> {\n  private _canToggle?: CanToggle\n  private _toggled?: Toggled\n  private _draw?: DrawCallback\n  private _cellStyle?: CellStyle\n  private _multilineText?: MultilineText\n  public constructor(options: TreeColumnOption<T> = {}) {\n    super(options)\n    this._canToggle = options.canToggle\n    this._toggled = options.toggled\n    this._draw = options.draw\n    this._cellStyle = options.cellStyle\n    this._multilineText = options.multilineText\n  }\n  public get StyleClass(): typeof TreeStyle {\n    return TreeStyle\n  }\n  public get canToggle(): CanToggle | undefined {\n    return this._canToggle\n  }\n  public get toggled(): Toggled | undefined {\n    return this._toggled\n  }\n  public get draw(): DrawCallback | undefined {\n    return this._draw\n  }\n  public get cellStyle(): CellStyle | undefined {\n    return this._cellStyle\n  }\n  public get multilineText(): MultilineText | undefined {\n    return this._multilineText\n  }\n  public reviseAttachCellsArea(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    columnUtils.reviseAttachCellsArea(rect, row, grid, this._cellStyle)\n  }\n  public reviseAttachCellsPadding(\n    padding: [number, number, number, number],\n    row: number,\n    grid: ListGridAPI<T>\n  ) {\n    super.reviseAttachCellsPadding(padding, row, grid)\n    const treeInfo = _getTreeInfo(grid, row)\n    padding[3] += _getTreeNodeSpaceWidth(treeInfo)\n    columnUtils.reviseAttachCellsPadding(padding, row, grid, this._cellStyle)\n  }\n  public reviseFocusRect(rect: Rect, row: number, grid: ListGridAPI<T>) {\n    const treeInfo = _getTreeInfo(grid, row)\n    rect.left += _getTreeNodeSpaceWidth(treeInfo)\n  }\n  public clone(): TreeColumn<T> {\n    return new TreeColumn(this)\n  }\n  public drawInternal<T>(\n    value: any,\n    context: CellContext,\n    style: TreeStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    const getIcon = info.getIcon\n    const getRecord = info.getRecord\n\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      textOverflow,\n      lineColor,\n      buttonColor,\n      buttonBgColor,\n      buttonBorderColor,\n      linkColor,\n      autoWrapText,\n      lineHeight,\n      lineClamp,\n    } = style\n\n    helper.testFontLoad(font, value, context)\n\n    const treeInfo = _getTreeInfo(grid, context.row)\n\n    let active = false\n    const state = (grid as any)[BUTTON_COLUMN_STATE_ID]\n    if (state) {\n      const range = grid.getCellRange(context.col, context.row)\n      if (\n        state.mouseActiveCell &&\n        cellInRange(range, state.mouseActiveCell.col, state.mouseActiveCell.row)\n      ) {\n        active = true\n      }\n    }\n\n    columnUtils.loadIcons(\n      getIcon(),\n      context,\n      helper,\n      (icons: any, ctx: CellContext) => {\n        const isCustomDraw = columnUtils.customDraw(\n          helper,\n          this.draw,\n          value,\n          context,\n          grid,\n          getRecord()\n        )\n        if (!isCustomDraw) {\n          const padding = columnUtils.getActionTextPadding(\n            context,\n            helper,\n            style\n          )\n          if (active && state && state.mouseRelativePos) {\n            const rect = helper.getTextRect(value, ctx, {\n              font,\n              icons,\n              padding,\n              textAlign,\n              textBaseline,\n              textOverflow,\n            })\n            const offset = _getTreeNodeSpaceWidth(treeInfo)\n            rect.left = Math.max(\n              context.getRect().left + offset,\n              rect.left + offset\n            )\n            rect.right += offset\n            active =\n              rect.left <= state.mouseRelativePos.x &&\n              rect.right >= state.mouseRelativePos.x &&\n              rect.top <= state.mouseRelativePos.y &&\n              rect.bottom >= state.mouseRelativePos.y\n            state.mouseActive = active\n          }\n          const record = info.getRecord()\n          const isMultilineText = getOrApply(this.multilineText, record)\n          helper.tree(value, ctx, {\n            color: active ? linkColor || helper.theme.tree.linkColor : color,\n            lineColor,\n            buttonColor,\n            buttonBgColor,\n            buttonBorderColor,\n            icons,\n            padding,\n            textAlign,\n            textBaseline,\n            textOverflow,\n            treeInfo,\n            treeNodeSpace: TREE_NODE_SPACE,\n            isMultilineText,\n            autoWrapText,\n            lineHeight,\n            lineClamp,\n          })\n        }\n        columnUtils.drawActionButton(\n          grid,\n          context,\n          INLINE_INPUT_EDITOR_STATE_ID,\n          helper,\n          style\n        )\n        columnUtils.drawAttachArea(\n          grid,\n          getRecord(),\n          context,\n          helper,\n          this._cellStyle\n        )\n      }\n    )\n  }\n  public bindGridEvent<T>(grid: ListGridAPI<T>, cellId: LayoutObjectId): any[] {\n    const expand = (cell: CellAddress, all: boolean) => {\n      if (grid.dataSource instanceof TreeDataSource) {\n        const recordIndex = grid.getRecordIndexByRow(cell.row)\n        grid.dataSource.expand(recordIndex, all)\n      }\n    }\n\n    const collapse = (cell: CellAddress, all: boolean) => {\n      if (grid.dataSource instanceof TreeDataSource) {\n        const recordIndex = grid.getRecordIndexByRow(cell.row)\n        grid.dataSource.collapse(recordIndex, all)\n      }\n    }\n\n    const toggle = (cell: CellAddress, all: boolean) => {\n      if (grid.dataSource instanceof TreeDataSource) {\n        const recordIndex = grid.getRecordIndexByRow(cell.row)\n        grid.dataSource.toggle(recordIndex, all)\n      }\n    }\n\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n\n    const doMouseMove = (e: any) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (isPromise(grid.getRowRecord(e.row))) {\n        return\n      }\n      if (this._canToggle) {\n        const treeInfo = _getTreeInfo(grid, e.row)\n        if (\n          treeInfo &&\n          this._canToggle({\n            col: e.col,\n            event: e.event,\n            row: e.row,\n            treeInfo,\n            type: 'over',\n          }) === false\n        ) {\n          return\n        }\n      }\n      const state = (grid as any)[BUTTON_COLUMN_STATE_ID]\n      const actionState = (grid as any)[COLUMN_ACTION_STATE_ID]\n      grid.getElement().style.cursor =\n        _isTreeNodeSpace(grid, e.col, e.row, e.event) ||\n        (state && state.mouseActive) ||\n        (actionState && actionState.mouseActive)\n          ? 'pointer'\n          : ''\n    }\n\n    const doMouseLeave = (e: any) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      grid.getElement().style.cursor = ''\n    }\n\n    return [\n      // click\n      grid.listen(DG_EVENT_TYPE.CLICK_CELL, (e) => {\n        if (!isTarget(e.col, e.row)) {\n          return\n        }\n        if (isPromise(grid.getRowRecord(e.row))) {\n          return\n        }\n        if (!_isTreeNodeSpace(grid, e.col, e.row, e.event)) {\n          return\n        }\n        const treeInfo = _getTreeInfo(grid, e.row)\n        if (!treeInfo) {\n          return\n        }\n        const isAll = e.event.shiftKey\n        const type: ToggledType = treeInfo.expanded\n          ? isAll\n            ? 'collapseAll'\n            : 'collapse'\n          : isAll\n          ? 'expandAll'\n          : 'expand'\n        const params = {\n          col: e.col,\n          event: e.event,\n          row: e.row,\n          treeInfo,\n          type,\n        }\n\n        if (this._canToggle && this._canToggle(params) === false) {\n          return\n        }\n        grid.selectCellRange(e.col, e.row, e.col, e.row)\n        toggle(\n          {\n            col: e.col,\n            row: e.row,\n          },\n          isAll\n        )\n        if (this._toggled) {\n          this._toggled(params)\n        }\n        event.cancel(e.event)\n        return false\n      }),\n      // mouse move\n      grid.listen(DG_EVENT_TYPE.MOUSEENTER_CELL, doMouseMove),\n      grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, doMouseMove),\n      grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, doMouseMove),\n      grid.listen(DG_EVENT_TYPE.MOUSELEAVE_CELL, doMouseLeave),\n      grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, doMouseLeave),\n      // key down\n      grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n        const keys = [KEY_DOWN, KEY_ENTER, KEY_LEFT, KEY_RIGHT, KEY_UP]\n        if (\n          keys.indexOf(e.keyCode) === -1 ||\n          (!e.event.ctrlKey && !e.event.metaKey)\n        ) {\n          return\n        }\n        const sel = grid.selection.select\n        const cell = {\n          col: sel.col,\n          row: sel.row,\n        }\n        if (!isTarget(cell.col, cell.row)) {\n          return\n        }\n        if (isPromise(grid.getRowRecord(cell.row))) {\n          return\n        }\n        const treeInfo = _getTreeInfo(grid, cell.row)\n        if (!treeInfo) {\n          return\n        }\n        let type: ToggledType\n        if (e.keyCode === KEY_DOWN || e.keyCode === KEY_RIGHT) {\n          type = e.keyCode === KEY_DOWN ? 'expandAll' : 'expand'\n        } else if (e.keyCode === KEY_UP || e.keyCode === KEY_LEFT) {\n          type = e.keyCode === KEY_UP ? 'collapseAll' : 'collapse'\n        } else {\n          type = treeInfo.expanded\n            ? e.event.shiftKey\n              ? 'collapseAll'\n              : 'collapse'\n            : e.event.shiftKey\n            ? 'expandAll'\n            : 'expand'\n        }\n        const params = {\n          col: cell.col,\n          event: e.event,\n          row: cell.row,\n          treeInfo,\n          type,\n        }\n\n        if (this._canToggle && this._canToggle(params) === false) {\n          return\n        }\n        if (e.keyCode === KEY_DOWN || e.keyCode === KEY_RIGHT) {\n          expand(cell, e.keyCode === KEY_DOWN)\n        } else if (e.keyCode === KEY_UP || e.keyCode === KEY_LEFT) {\n          collapse(cell, e.keyCode === KEY_UP)\n        } else {\n          toggle(cell, e.event.shiftKey)\n        }\n        if (this._toggled) {\n          this._toggled(params)\n        }\n        event.cancel(e.event)\n        return treeInfo.isLeaf // 只有叶子节点允许不阻止后续事件执行\n      }),\n    ]\n  }\n  protected drawEditingInternal(\n    context: CellContext,\n    style: TreeStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    super.drawEditingInternal(context, style, helper, grid, info)\n    const textAlign = style.textAlign\n    const textBaseline = style.textBaseline\n    const color = style.color\n    const treeInfo = _getTreeInfo(grid, context.row)\n    const textOverflow = style.textOverflow\n    const autoWrapText = style.autoWrapText\n    const lineHeight = style.lineHeight\n    const lineClamp = style.lineClamp\n    const record = info.getRecord()\n    const isMultilineText = getOrApply(this.multilineText, record)\n    helper.tree('', context, {\n      color,\n      padding: columnUtils.getActionTextPadding(context, helper, style),\n      textAlign,\n      textBaseline,\n      textOverflow,\n      treeInfo,\n      treeNodeSpace: TREE_NODE_SPACE,\n      isMultilineText,\n      autoWrapText,\n      lineHeight,\n      lineClamp,\n    })\n  }\n}\n","import { CellContext, GridCanvasHelperAPI } from '../../ts-types'\nimport { DrawCellInfo, GridInternal } from '../../ts-types-internal'\nimport { BaseColumn } from './BaseColumn'\nimport { RadioStyle } from '../style/RadioStyle'\nimport { getRadioColumnStateId } from '../../internal/symbolManager'\nimport { isDef } from '../../internal/utils'\nimport { toBoolean } from '../utils'\n\nconst RADIO_COLUMN_STATE_ID = getRadioColumnStateId()\n\nexport class RadioColumn<T> extends BaseColumn<T, boolean> {\n  public get StyleClass(): typeof RadioStyle {\n    return RadioStyle\n  }\n  public clone(): RadioColumn<T> {\n    return new RadioColumn(this)\n  }\n  public convertInternal(value: unknown): boolean {\n    return toBoolean(value)\n  }\n  public drawInternal(\n    value: boolean,\n    context: CellContext,\n    style: RadioStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      checkColor,\n      uncheckBorderColor,\n      checkBorderColor,\n      uncheckBgColor,\n      checkBgColor,\n    } = style\n\n    const { col, row } = context\n    const range = grid.getCellRange(col, row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n    const elapsed = grid[RADIO_COLUMN_STATE_ID]?.elapsed[cellKey]\n\n    const opt: Parameters<GridCanvasHelperAPI['radioButton']>[2] = {\n      textAlign,\n      textBaseline,\n      checkColor,\n      uncheckBorderColor,\n      checkBorderColor,\n      uncheckBgColor,\n      checkBgColor,\n    }\n    if (isDef(elapsed)) {\n      opt.animElapsedTime = elapsed\n    }\n    helper.radioButton(value, context, opt)\n  }\n}\n","import { ColumnTypeOption } from '../ts-types'\nimport { BaseColumn } from './type/BaseColumn'\nimport { BaseCheckColumn } from './type/BaseCheckColumn'\nimport { BranchGraphColumn } from './type/BranchGraphColumn'\nimport { ButtonColumn } from './type/ButtonColumn'\nimport { CheckColumn } from './type/CheckColumn'\nimport { SwitchColumn } from './type/SwitchColumn'\nimport { Column } from './type/Column'\nimport { DateColumn } from './type/DateColumn'\nimport { DrawColumn } from './type/DrawColumn'\nimport { IconColumn } from './type/IconColumn'\nimport { ImageColumn } from './type/ImageColumn'\nimport { LookupColumn } from './type/LookupColumn'\nimport { MenuColumn } from './type/MenuColumn'\nimport { MultilineTextColumn } from './type/MultilineTextColumn'\nimport { NumberColumn } from './type/NumberColumn'\nimport { PercentCompleteBarColumn } from './type/PercentCompleteBarColumn'\nimport { TreeColumn } from './type/TreeColumn'\nimport { RadioColumn } from './type/RadioColumn'\n\nexport const TYPES = {\n  DEFAULT: new Column<any>(),\n  NUMBER: new NumberColumn<any>(),\n  CHECK: new CheckColumn<any>(),\n  RADIO: new RadioColumn<any>(),\n  BUTTON: new ButtonColumn<any>(),\n  IMAGE: new ImageColumn<any>(),\n  MULTILINETEXT: new MultilineTextColumn<any>(),\n  DATE: new DateColumn<any>(),\n  LOOKUP: new LookupColumn<any, any>(),\n  SWITCH: new SwitchColumn<any>(),\n  TREE: new TreeColumn<any>(),\n  DRAW: new DrawColumn<any>(),\n}\n\nexport {\n  BaseColumn,\n  BaseCheckColumn,\n  Column,\n  NumberColumn,\n  CheckColumn,\n  RadioColumn,\n  SwitchColumn,\n  ButtonColumn,\n  ImageColumn,\n  PercentCompleteBarColumn,\n  IconColumn,\n  BranchGraphColumn,\n  MenuColumn,\n  MultilineTextColumn,\n  DateColumn,\n  LookupColumn,\n  TreeColumn,\n  DrawColumn,\n}\n\nexport function of<T>(\n  columnType: ColumnTypeOption | BaseColumn<T, any> | null | undefined\n): BaseColumn<T, any> {\n  if (!columnType) {\n    return TYPES.DEFAULT\n  } else if (typeof columnType === 'string') {\n    const key = columnType.toUpperCase() as keyof typeof TYPES\n    return TYPES[key] || of(null)\n  } else {\n    return columnType\n  }\n}\n","import {\n  ACTIONS,\n  BaseAction,\n  Editor,\n  BaseCheckEditor,\n  BaseInputEditor,\n  BaseActionInput,\n  Action as ColumnAction,\n  CheckEditor,\n  RadioEditor,\n  SwitchEditor,\n  ButtonAction,\n  SmallDialogInputEditor,\n  InlineInputEditor,\n  InlineTextAreaEditor,\n  InlineLookupEditor,\n  InlineMenuEditor,\n  of as actionOf,\n  ImmutableActions,\n} from './columns/action'\nimport {\n  EVENT_TYPE,\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style as ColumnStyle,\n  NumberStyle,\n  CheckStyle,\n  RadioStyle,\n  SwitchStyle,\n  ButtonStyle,\n  ImageStyle,\n  IconStyle,\n  PercentCompleteBarStyle,\n  MultilineTextStyle,\n  MenuStyle,\n  DateStyle,\n  LookupStyle,\n  TreeStyle,\n  DrawStyle,\n  of as styleOf,\n} from './columns/style'\nimport {\n  TYPES,\n  BaseColumn,\n  BaseCheckColumn,\n  Column,\n  NumberColumn,\n  CheckColumn,\n  RadioColumn,\n  SwitchColumn,\n  ButtonColumn,\n  ImageColumn,\n  PercentCompleteBarColumn,\n  IconColumn,\n  BranchGraphColumn,\n  MenuColumn,\n  MultilineTextColumn,\n  DateColumn,\n  LookupColumn,\n  TreeColumn,\n  DrawColumn,\n  of as typeOf,\n} from './columns/type'\n\nconst action = {\n  ACTIONS: ACTIONS as ImmutableActions,\n  BaseAction,\n  Editor,\n  BaseCheckEditor,\n  BaseInputEditor,\n  BaseActionInput,\n  Action: ColumnAction,\n  CheckEditor,\n  RadioEditor,\n  SwitchEditor,\n  ButtonAction,\n  SmallDialogInputEditor,\n  InlineInputEditor,\n  InlineTextAreaEditor,\n  InlineLookupEditor,\n  InlineMenuEditor,\n  of: actionOf,\n}\n\nconst style = {\n  EVENT_TYPE,\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style: ColumnStyle,\n  NumberStyle,\n  CheckStyle,\n  RadioStyle,\n  SwitchStyle,\n  ButtonStyle,\n  ImageStyle,\n  IconStyle,\n  PercentCompleteBarStyle,\n  MultilineTextStyle,\n  MenuStyle,\n  DateStyle,\n  LookupStyle,\n  TreeStyle,\n  DrawStyle,\n  of: styleOf,\n}\n\nconst type = {\n  TYPES,\n  BaseColumn,\n  BaseCheckColumn,\n  Column,\n  NumberColumn,\n  CheckColumn,\n  RadioColumn,\n  SwitchColumn,\n  ButtonColumn,\n  ImageColumn,\n  PercentCompleteBarColumn,\n  IconColumn,\n  BranchGraphColumn,\n  MenuColumn,\n  MultilineTextColumn,\n  DateColumn,\n  LookupColumn,\n  TreeColumn,\n  DrawColumn,\n  of: typeOf,\n}\n\n/**\n * columns\n */\nexport const columns = { action, type, style }\n","import { array } from './utils'\n\nconst TYPE_PUNCTURE = 'p'\nconst TYPE_UNIT = 'u'\nconst TYPE_OPERATOR = 'o'\nconst TYPE_NUMBER = 'n'\n\nconst NODE_TYPE_UNIT = 'u'\nconst NODE_TYPE_BINARY_EXPRESSION = 'b'\nconst NODE_TYPE_NUMBER = 'n'\n\ntype Ops = '-' | '+' | '*' | '/'\ntype PuncToken = {\n  value: string\n  type: typeof TYPE_PUNCTURE\n}\ntype UnitToken = {\n  value: string\n  type: typeof TYPE_UNIT\n}\ntype OpToken = {\n  value: Ops\n  type: typeof TYPE_OPERATOR\n}\ntype NumToken = {\n  value: string\n  type: typeof TYPE_NUMBER\n}\ntype Token = PuncToken | UnitToken | OpToken | NumToken\ntype UnitNode = {\n  nodeType: typeof NODE_TYPE_UNIT\n  unit: string\n  value: number\n}\ntype BinaryNode = {\n  nodeType: typeof NODE_TYPE_BINARY_EXPRESSION\n  left: Node\n  op: OpToken\n  right: Node\n}\ntype NumNode = {\n  nodeType: typeof NODE_TYPE_NUMBER\n  value: number\n}\ntype Node = UnitNode | BinaryNode | NumNode\n\nfunction createError(calc: string): Error {\n  return new Error(`calc parse error: ${calc}`)\n}\n\n/**\n * tokenize\n * @param calc - calc expression\n * @returns tokens\n */\nfunction tokenize(calc: string): Token[] {\n  let exp = calc.replace(/calc\\(/g, '(')\n  const reUnit = /^[-+]?(\\d*\\.\\d+|\\d+)[a-z%]+/i\n  const reNum = /^[-+]?(\\d*\\.\\d+|\\d+)/i\n  const reOp = /^[-+*/]/\n\n  const tokens: Token[] = []\n  let re\n  while ((exp = exp.trim())) {\n    if (exp[0] === '(' || exp[0] === ')') {\n      tokens.push({ value: exp[0], type: TYPE_PUNCTURE })\n      exp = exp.slice(1)\n    } else if ((re = reUnit.exec(exp))) {\n      tokens.push({ value: re[0], type: TYPE_UNIT })\n      exp = exp.slice(re[0].length)\n    } else if ((re = reNum.exec(exp))) {\n      tokens.push({ value: re[0], type: TYPE_NUMBER })\n      exp = exp.slice(re[0].length)\n    } else if ((re = reOp.exec(exp))) {\n      tokens.push({\n        value: re[0] as Ops,\n        type: TYPE_OPERATOR,\n      })\n      exp = exp.slice(re[0].length)\n    } else {\n      throw createError(calc)\n    }\n  }\n  return tokens\n}\n\nconst PRECEDENCE = {\n  '*': 3,\n  '/': 3,\n  '+': 2,\n  '-': 2,\n}\n\nfunction lex(tokens: Token[], calc: string): Node {\n  function buildBinaryExpNode(stack: (Node | OpToken)[]): BinaryNode {\n    const right = stack.pop() as Node\n    const op = stack.pop() as OpToken\n    const left = stack.pop() as Node\n\n    if (\n      !left ||\n      !left.nodeType ||\n      !op ||\n      op.type !== TYPE_OPERATOR ||\n      !right ||\n      !right.nodeType\n    ) {\n      throw createError(calc)\n    }\n    return {\n      nodeType: NODE_TYPE_BINARY_EXPRESSION,\n      left,\n      op,\n      right,\n    }\n  }\n\n  const stack: (Node | OpToken)[] = []\n\n  while (tokens.length) {\n    const token = tokens.shift() as Token\n    if (token.type === TYPE_PUNCTURE && token.value === '(') {\n      let deep = 0\n      const closeIndex = array.findIndex(tokens, (t) => {\n        if (t.type === TYPE_PUNCTURE && t.value === '(') {\n          deep++\n        } else if (t.type === TYPE_PUNCTURE && t.value === ')') {\n          if (!deep) {\n            return true\n          }\n          deep--\n        }\n        return false\n      })\n      if (closeIndex === -1) {\n        throw createError(calc)\n      }\n      stack.push(lex(tokens.slice(0, closeIndex), calc))\n      tokens.splice(0, closeIndex + 1)\n    } else if (token.type === TYPE_OPERATOR) {\n      if (stack.length >= 3) {\n        const beforeOp = (stack[stack.length - 2] as OpToken).value\n        if (PRECEDENCE[token.value] <= PRECEDENCE[beforeOp]) {\n          stack.push(buildBinaryExpNode(stack))\n        }\n      }\n      stack.push(token)\n    } else if (token.type === TYPE_UNIT) {\n      const { value } = token\n      const num = parseFloat(value)\n      const unit = /[a-z%]+/i.exec(value)?.[0] || ''\n      stack.push({\n        nodeType: NODE_TYPE_UNIT,\n        value: num,\n        unit,\n      })\n    } else if (token.type === TYPE_NUMBER) {\n      stack.push({\n        nodeType: NODE_TYPE_NUMBER,\n        value: parseFloat(token.value),\n      })\n    }\n  }\n  while (stack.length > 1) {\n    stack.push(buildBinaryExpNode(stack))\n  }\n  return stack[0] as Node\n}\n\nfunction parse(calcStr: string): Node {\n  const tokens = tokenize(calcStr)\n  return lex(tokens, calcStr)\n}\n\nfunction calcNode(node: Node, context: CalcContext): number {\n  if (node.nodeType === NODE_TYPE_BINARY_EXPRESSION) {\n    const left = calcNode(node.left, context)\n    const right = calcNode(node.right, context)\n\n    switch (node.op.value) {\n      case '+':\n        return left + right\n      case '-':\n        return left - right\n      case '*':\n        return left * right\n      case '/':\n        return left / right\n      default:\n        throw new Error(`calc error. unknown operator: ${node.op.value}`)\n    }\n  } else if (node.nodeType === NODE_TYPE_UNIT) {\n    switch (node.unit) {\n      case '%':\n        return (node.value * context.full) / 100\n      case 'em':\n        return node.value * context.em\n      case 'px':\n        return node.value\n      default:\n        throw new Error(`calc error. unknown unit: ${node.unit}`)\n    }\n  } else if (node.nodeType === NODE_TYPE_NUMBER) {\n    return node.value\n  }\n  throw new Error('calc error.')\n}\n\nfunction toPxInternal(value: string, context: CalcContext): number {\n  const ast = parse(value)\n  return calcNode(ast, context)\n}\n\ntype CalcContext = {\n  full: number\n  em: number\n}\n\nexport function toPx(value: string | number, context: CalcContext): number {\n  if (typeof value === 'string') {\n    return toPxInternal(value.trim(), context)\n  }\n  return value - 0\n}\n","import { EventHandler } from './EventHandler'\nimport { isNode } from './utils'\n\nconst handler = new EventHandler()\n\nlet ratio: number\n\nfunction setRatio() {\n  if (isNode) {\n    ratio = 1\n  } else {\n    ratio = Math.ceil(window.devicePixelRatio || 1)\n    if (ratio > 1 && ratio % 2 !== 0) {\n      ratio += 1\n    }\n  }\n}\n\nsetRatio()\n\nif (!isNode) {\n  handler.on(window, 'resize', setRatio)\n}\n\nexport default {\n  transform(canvas: HTMLCanvasElement) {\n    const ctx = canvas.getContext('2d')\n\n    const getAttribute = canvas.getAttribute\n    const setAttribute = canvas.setAttribute\n    canvas.getAttribute = ((me) => (name: string) => {\n      let result = getAttribute.apply(me, [name]) as any\n      if (name === 'width' || name === 'height') {\n        result /= ratio\n      }\n      return result\n    })(canvas)\n    canvas.setAttribute = ((me) => (name: string, val: string) => {\n      const wh = name === 'width' || name === 'height'\n      if (wh) {\n        val = ratio * Number(val) + ''\n      }\n      const result = setAttribute.apply(me, [name, val])\n      if (wh && ctx) {\n        ctx.scale(ratio, ratio)\n      }\n      return result\n    })(canvas)\n\n    Object.defineProperty(canvas, 'width', {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return canvas.getAttribute('width')\n      },\n      set: (val) => {\n        canvas.setAttribute('width', Math.floor(val) + '')\n      },\n    })\n    Object.defineProperty(canvas, 'height', {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return canvas.getAttribute('height')\n      },\n      set: (val) => {\n        canvas.setAttribute('height', Math.floor(val) + '')\n      },\n    })\n    if (ctx) {\n      const drawImage = ctx.drawImage\n      ctx.drawImage = ((me) => (img: HTMLCanvasElement, ...args: any[]) => {\n        if (img !== canvas || ratio === 1) {\n          return drawImage.apply(me, [img].concat(args) as any)\n        }\n        me.save()\n        try {\n          me.scale(1 / ratio, 1 / ratio)\n          if (args.length > 4) {\n            args[4] *= ratio\n            args[5] *= ratio\n          } else {\n            args[0] *= ratio\n            args[1] *= ratio\n          }\n          return drawImage.apply(me, [img].concat(args) as any)\n        } finally {\n          me.restore()\n        }\n      })(ctx)\n    }\n    return canvas\n  },\n}\n","const indexFirst = (ary: number[], elm: number) => {\n  let low = 0\n  let high = ary.length - 1\n  while (low <= high) {\n    const i = Math.floor((low + high) / 2)\n    if (ary[i] === elm) {\n      return i\n    } else if (ary[i] > elm) {\n      high = i - 1\n    } else {\n      low = i + 1\n    }\n  }\n  return high < 0 ? 0 : high\n}\n\nexport default class NumberMap<T> {\n  private _keys: number[]\n  private _vals: { [key: number]: T }\n  private _sorted: boolean\n  public constructor() {\n    this._keys = []\n    this._vals = {}\n    this._sorted = false\n  }\n  public put(key: number, value: T) {\n    if (!(key in this._vals)) {\n      this._keys.push(key)\n      this._sorted = false\n    }\n    this._vals[key] = value\n  }\n  public get(key: number) {\n    return this._vals[key]\n  }\n  public has(key: number) {\n    return this._vals[key] !== null\n  }\n  public each(\n    keyFrom: number,\n    keyTo: number,\n    fn: (value: T, key: number) => void\n  ) {\n    const keys = this._keys\n    const length = keys.length\n    if (!this._sorted) {\n      keys.sort((a, b) => {\n        if (a < b) {\n          return -1\n        }\n        if (a > b) {\n          return 1\n        }\n        return 0\n      })\n      this._sorted = true\n    }\n\n    for (let i = indexFirst(keys, keyFrom); i < length; i++) {\n      const key = keys[i]\n      if (keyFrom <= key && key <= keyTo) {\n        fn(this.get(key), key)\n      } else if (keyTo < key) {\n        return\n      }\n    }\n  }\n}\n","import { ScrollableAPI } from '../ts-types'\nimport { EventHandler } from './EventHandler'\nimport style from './style'\nimport { browser, event } from './utils'\n\nconst MAX_SCROLL = browser.heightLimit - 1000\n\nexport default class Scrollbar implements ScrollableAPI {\n  private _handler: EventHandler\n  private _scrollable: HTMLDivElement\n  private _height: number\n  private _width: number\n  private _endPointElement: HTMLDivElement\n  private _p: number\n  private _perfectScrollbar: any\n  public constructor() {\n    this._handler = new EventHandler()\n\n    this._scrollable = document.createElement('div')\n    this._scrollable.classList.add('grid-scrollable')\n    this._height = 0\n    this._width = 0\n\n    this._perfectScrollbar = new (window as any).PerfectScrollbar(\n      this._scrollable,\n      {\n        minScrollbarLength: 24,\n      }\n    )\n    this._handler.on(this._scrollable, 'click', (e) => {\n      if (e.target !== this._scrollable) {\n        event.cancel(e)\n      }\n    })\n\n    this._p = 1\n\n    this._endPointElement = document.createElement('div')\n    this._endPointElement.classList.add('grid-scroll-end-point')\n    this._update()\n    this._scrollable.appendChild(this._endPointElement)\n  }\n  public calcTop(top: number) {\n    const relativeTop = top - this.scrollTop\n    return this._scrollable.scrollTop + relativeTop\n  }\n  public getElement() {\n    return this._scrollable\n  }\n  public setScrollSize(width: number, height: number) {\n    this._width = width\n    this._height = height\n    this._update()\n  }\n  public get scrollWidth() {\n    return this._width\n  }\n  public set scrollWidth(width: number) {\n    this._width = width\n    this._update()\n  }\n  public get scrollHeight() {\n    return this._height\n  }\n  public set scrollHeight(height: number) {\n    this._height = height\n    this._update()\n  }\n  public get scrollLeft() {\n    return Math.max(Math.ceil(this._scrollable.scrollLeft), 0)\n  }\n  public set scrollLeft(scrollLeft: number) {\n    this._scrollable.scrollLeft = scrollLeft\n  }\n  public get scrollTop() {\n    return Math.max(Math.ceil(this._scrollable.scrollTop / this._p), 0)\n  }\n  public set scrollTop(scrollTop: number) {\n    this._scrollable.scrollTop = scrollTop * this._p\n  }\n  public onScroll(fn: EventListener) {\n    this._handler.on(this._scrollable, 'scroll', fn)\n  }\n  public dispose() {\n    this._handler.dispose()\n  }\n  public update() {\n    this._update()\n  }\n  private _update() {\n    let domHeight\n    if (this._height > MAX_SCROLL) {\n      const sbSize = style.getScrollBarSize()\n      const { offsetHeight } = this._scrollable\n      const vScrollRange = MAX_SCROLL - offsetHeight + sbSize\n      const rScrollRange = this._height - offsetHeight + sbSize\n      this._p = vScrollRange / rScrollRange\n      domHeight = MAX_SCROLL\n    } else {\n      this._p = 1\n      domHeight = this._height\n    }\n    domHeight -= 1\n    const domWidth = this._width - 1\n\n    this._endPointElement.style.top = `${domHeight.toFixed()}px`\n    this._endPointElement.style.left = `${domWidth.toFixed()}px`\n\n    this._perfectScrollbar.update()\n  }\n}\n","import { ScrollableAPI } from '../ts-types'\nimport { EventHandler } from './EventHandler'\nimport style from './style'\nimport { browser } from './utils'\n\nconst MAX_SCROLL = browser.heightLimit - 1000\n\nexport default class Scrollable implements ScrollableAPI {\n  private _handler: EventHandler\n  private _scrollable: HTMLDivElement\n  private _height: number\n  private _width: number\n  private _endPointElement: HTMLDivElement\n  private _p: number\n  private _canvas: HTMLCanvasElement\n  public constructor(canvas: HTMLCanvasElement) {\n    this._canvas = canvas\n    this._handler = new EventHandler()\n\n    this._scrollable = document.createElement('div')\n    this._scrollable.classList.add('grid-scrollable')\n    this._height = 0\n    this._width = 0\n\n    this._p = 1\n\n    this._endPointElement = document.createElement('div')\n    this._endPointElement.classList.add('grid-scroll-end-point')\n    this._update()\n    this._scrollable.appendChild(this._endPointElement)\n\n    // const mousewheelevt = (/Firefox/i.test(navigator.userAgent)) ?\n    //     \"DOMMouseScroll\" : \"mousewheel\"; // FF doesn\"t recognize mousewheel as of FF3.x\n    // this._handler.on(this._scrollable, mousewheelevt, (evt) => {\n    //     const delta = evt.detail ? evt.detail * (-120) : evt.wheelDelta;\n    //     const point = Math.min(Math.abs(delta) / 12, this.scrollHeight / 5);\n    //     this.scrollTop += delta < 0 ? point : -point;\n    // });\n  }\n  public calcTop(top: number) {\n    const relativeTop = top - this.scrollTop\n    return this._scrollable.scrollTop + relativeTop\n  }\n  public getElement() {\n    return this._scrollable\n  }\n  public setScrollSize(width: number, height: number) {\n    this._width = width\n    this._height = height\n    this._update()\n  }\n  public get scrollWidth() {\n    return this._width\n  }\n  public set scrollWidth(width: number) {\n    this._width = width\n    this._update()\n  }\n  public get scrollHeight() {\n    return this._height\n  }\n  public set scrollHeight(height: number) {\n    this._height = height\n    this._update()\n  }\n  public get scrollLeft() {\n    return Math.max(Math.ceil(this._scrollable.scrollLeft), 0)\n  }\n  public set scrollLeft(scrollLeft: number) {\n    this._scrollable.scrollLeft = scrollLeft\n  }\n  public get scrollTop() {\n    return Math.max(Math.ceil(this._scrollable.scrollTop / this._p), 0)\n  }\n  public set scrollTop(scrollTop: number) {\n    this._scrollable.scrollTop = scrollTop * this._p\n  }\n  public onScroll(fn: EventListener) {\n    this._handler.on(this._scrollable, 'scroll', fn)\n  }\n  public dispose() {\n    this._handler.dispose()\n  }\n  public update() {\n    this._update()\n  }\n  private _update() {\n    let domHeight\n    const sbSize = style.getScrollBarSize()\n    if (this._height > MAX_SCROLL) {\n      const offsetHeight = this._scrollable.offsetHeight\n      const vScrollRange = MAX_SCROLL - offsetHeight + sbSize\n      const rScrollRange = this._height - offsetHeight + sbSize\n      this._p = vScrollRange / rScrollRange\n      domHeight = MAX_SCROLL\n    } else {\n      this._p = 1\n      domHeight = this._height\n    }\n    const domWidth = this._width\n\n    // TODO: windows 下横纵滚动条都存在时，显示多余空白问题\n    // const isWindows = /windows|win32/i.test(window.navigator.userAgent);\n    const top = domHeight > this._canvas.height ? domHeight : domHeight - sbSize\n    const left = domWidth > this._canvas.width ? domWidth : domWidth - sbSize\n\n    this._endPointElement.style.top = `${top.toFixed()}px`\n    this._endPointElement.style.left = `${left.toFixed()}px`\n\n    // 不让滚动条位置超出范围\n    const maxScrollTop = Math.max(0, top - this._canvas.height)\n    if (this._scrollable.scrollTop > maxScrollTop) {\n      this._scrollable.scrollTop = maxScrollTop\n    }\n    const maxScrollLeft = Math.max(0, left - this._canvas.width)\n    if (this._scrollable.scrollLeft > maxScrollLeft) {\n      this._scrollable.scrollLeft = maxScrollLeft\n    }\n  }\n}\n","import { EventHandler } from '../../internal/EventHandler'\nimport { event } from '../../internal/utils'\nimport { DrawGrid } from '../DrawGrid'\n\n/**\n * managing mouse down moving\n */\nexport abstract class BaseMouseDownMover {\n  private _handler: EventHandler\n  private _events: any\n  private _started: boolean\n  private _moved: boolean\n  private _grid: DrawGrid\n  private _mouseEndPoint: { x: number; y: number } | null\n  public constructor(grid: DrawGrid) {\n    this._grid = grid\n    this._handler = new EventHandler()\n    this._events = {}\n    this._started = false\n    this._moved = false\n    this._mouseEndPoint = null\n  }\n  public get grid() {\n    return this._grid\n  }\n  public moving(e: Event) {\n    return !!this._started\n  }\n  public lastMoving(e: Event) {\n    // 必要的控制以防止点击事件在mouseup后立即作出反应\n    if (this.moving(e)) {\n      return true\n    }\n    const last = this._mouseEndPoint\n    if (!last) {\n      return false\n    }\n    const pt = this._grid._getMouseAbstractPoint(e)\n    return !!pt && pt.x === last.x && pt.y === last.y\n  }\n  public dispose() {\n    this._handler.dispose()\n  }\n  protected _bindMoveAndUp(e: Event) {\n    const events = this._events\n    const handler = this._handler\n    if (!event.isTouchEvent(e)) {\n      events.mousemove = handler.on(document.body, 'mousemove', (event) =>\n        this._mouseMove(event)\n      )\n      events.mouseup = handler.on(document.body, 'mouseup', (event) =>\n        this._mouseUp(event)\n      )\n    } else {\n      events.touchmove = handler.on(\n        document.body,\n        'touchmove',\n        (event) => this._mouseMove(event),\n        {\n          passive: false,\n        }\n      )\n      events.touchend = handler.on(document.body, 'touchend', (event) =>\n        this._mouseUp(event)\n      )\n      events.touchcancel = handler.on(document.body, 'touchcancel', (event) =>\n        this._mouseUp(event)\n      )\n    }\n    this._started = true\n    this._moved = false\n  }\n  protected _mouseMove(e: Event) {\n    if (!event.isTouchEvent(e)) {\n      if (event.getMouseButtons(e as MouseEvent) !== 1) {\n        this._mouseUp(e)\n        return\n      }\n    }\n    this._moved =\n      this._moveInternal(e) || this._moved /* calculation on after */\n\n    event.cancel(e)\n  }\n  protected abstract _moveInternal(e: Event): boolean\n  protected _mouseUp(e: Event) {\n    const events = this._events\n    const handler = this._handler\n    handler.off(events.mousemove)\n    handler.off(events.touchmove)\n    handler.off(events.mouseup)\n    handler.off(events.touchend)\n    // handler.off(events.mouseleave);\n    handler.off(events.touchcancel)\n\n    this._upInternal(e)\n\n    // 必要的控制以防止点击事件在mouseup后立即作出反应\n    if (this._moved) {\n      // 如果发生了移动\n      this._mouseEndPoint = this._grid._getMouseAbstractPoint(e)\n      setTimeout(() => {\n        this._mouseEndPoint = null\n        this._started = false\n      }, 10)\n    } else {\n      this._started = false\n    }\n\n    event.cancel(e)\n  }\n  protected _upInternal(e: Event) {\n    // nothing\n  }\n  protected _vibrate(e: Event) {\n    if (navigator.vibrate && event.isTouchEvent(e)) {\n      navigator.vibrate(50)\n    }\n  }\n}\n","import { CellAddress } from '../../ts-types'\nimport { event } from '../../internal/utils'\nimport { BaseMouseDownMover } from './BaseMouseDownMover'\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\n\n/**\n * managing cell selection operation with mouse\n */\nexport class CellSelector extends BaseMouseDownMover {\n  private _cell: CellAddress = { col: -1, row: -1 }\n  public start(e: MouseEvent | TouchEvent) {\n    const cell = this._getTargetCell(e)\n    if (!cell) {\n      this.grid._forceFocusCell()\n      event.cancel(e)\n      return\n    }\n    this.grid.fireListeners(DG_EVENT_TYPE.MOUSE_SELECTED_START, e)\n    this.grid._moveFocusCell(cell.col, cell.row, e.shiftKey)\n\n    this._bindMoveAndUp(e)\n\n    this._cell = cell\n\n    event.cancel(e)\n    this._vibrate(e)\n  }\n  public select(e: MouseEvent | TouchEvent) {\n    const cell = this._getTargetCell(e)\n    if (!cell) {\n      return\n    }\n    this.grid._moveFocusCell(cell.col, cell.row, e.shiftKey)\n    this._cell = cell\n  }\n  protected _upInternal(e: MouseEvent | TouchEvent) {\n    this.grid.fireListeners(DG_EVENT_TYPE.MOUSE_SELECTED_END, e)\n  }\n  protected _moveInternal(e: Event) {\n    const cell = this._getTargetCell(e)\n    if (!cell) {\n      return false\n    }\n    const oldCol = this._cell.col\n    const oldRow = this._cell.row\n    const newCol = cell.col\n    const newRow = cell.row\n    if (oldCol === newCol && oldRow === newRow) {\n      return false\n    }\n    const grid = this.grid\n    grid._moveFocusCell(newCol, newRow, true, true)\n\n    // make visible\n    const makeVisibleCol = (() => {\n      if (newCol < oldCol && 0 < newCol) {\n        // move left\n        return newCol - 1\n      } else if (oldCol < newCol && newCol + 1 < grid.colCount) {\n        // move right\n        return newCol + 1\n      }\n      return newCol\n    })()\n    const makeVisibleRow = (() => {\n      if (newRow < oldRow && 0 < newRow) {\n        // move up\n        return newRow - 1\n      } else if (oldRow < newRow && newRow + 1 < grid.rowCount) {\n        // move down\n        return newRow + 1\n      }\n      return newRow\n    })()\n    if (makeVisibleCol !== newCol || makeVisibleRow !== newRow) {\n      grid.makeVisibleCell(makeVisibleCol, makeVisibleRow)\n    }\n    this._cell = cell\n    return true\n  }\n  private _getTargetCell(e: Event) {\n    const grid = this.grid\n    const abstractPos = grid._getMouseAbstractPoint(e)\n    if (!abstractPos) {\n      return null\n    }\n    const cell = grid.getCellAt(abstractPos.x, abstractPos.y)\n    if (cell.col < 0 || cell.row < 0) {\n      return null\n    }\n    return cell\n  }\n}\n","import { event } from '../../internal/utils'\nimport { DrawGrid } from '../DrawGrid'\nimport { BaseMouseDownMover } from './BaseMouseDownMover'\n\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\n\n/**\n * managing row width changing operation with mouse\n */\nexport class ColumnResizer extends BaseMouseDownMover {\n  private _targetCol: number\n  private _x: number\n  private _preX: number\n  private _invalidateAbsoluteLeft: number\n  public constructor(grid: DrawGrid) {\n    super(grid)\n    this._targetCol = -1\n    this._x = 0\n    this._preX = 0\n    this._invalidateAbsoluteLeft = 0\n  }\n  public start(col: number, e: Event) {\n    let pageX\n    if (!event.isTouchEvent(e)) {\n      ;({ pageX } = e as MouseEvent)\n    } else {\n      ;({ pageX } = (e as TouchEvent).changedTouches[0])\n    }\n\n    this._x = pageX\n    this._preX = 0\n\n    this.grid._resetColWidthOffset(col)\n    this._bindMoveAndUp(e)\n\n    this._targetCol = col\n    // 由于有合并单元格，所以起始刷新列始终从 0 开始计算\n    // this._invalidateAbsoluteLeft = this.grid._getColsWidth(0, col - 1)\n\n    event.cancel(e)\n    this._vibrate(e)\n  }\n  protected _moveInternal(e: Event) {\n    const pageX = event.isTouchEvent(e)\n      ? (e as TouchEvent).changedTouches[0].pageX\n      : (e as MouseEvent).pageX\n\n    const x = pageX - this._x\n    const moveX = x - this._preX\n    this._preX = x\n    const pre = this.grid.getColWidth(this._targetCol)\n    let afterSize = this.grid._adjustColWidth(this._targetCol, pre + moveX)\n    if (afterSize < 10 && moveX < 0) {\n      afterSize = 10\n    }\n    this.grid._storeAutoColWidthExprs()\n    this.grid.setColWidth(this._targetCol, afterSize)\n\n    const rect = this.grid._getVisibleRect()\n    rect.left = this._invalidateAbsoluteLeft\n    this.grid._invalidateRect(rect)\n\n    this.grid.fireListeners(DG_EVENT_TYPE.RESIZE_COLUMN, {\n      col: this._targetCol,\n    })\n\n    return true\n  }\n  protected _upInternal(e: Event) {\n    if (this.grid.updateScroll()) {\n      this.grid.invalidate()\n    }\n  }\n}\n","import Rect from '../../internal/Rect'\nimport { DrawLayers } from '../draw-grid/DrawLayers'\nimport { DrawGrid } from '../DrawGrid'\nimport { Selection } from './Selection'\nimport { CellRange, CellContext, CellSelection } from '../../ts-types'\n\nexport function createCellRange(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number\n): CellRange {\n  return {\n    start: { col: startCol, row: startRow },\n    end: { col: endCol, row: endRow },\n  }\n}\n\n/**\n * Context of cell drawing\n */\nexport class DrawCellContext implements CellContext {\n  private _col: number\n  private _row: number\n  private _mode: number\n  private _range: CellRange\n  private _ctx: CanvasRenderingContext2D | null\n  private _rect: Rect | null\n  private _drawRect: Rect | null\n  private _drawing: boolean\n  private _selection: Selection\n  private _drawLayers: DrawLayers\n  private _childContexts: DrawCellContext[]\n  private _cancel?: boolean\n  private _grid?: DrawGrid\n  private _onTerminate?: () => void\n  private _rectFilter: ((base: Rect) => Rect) | null = null\n  /**\n   * constructor\n   */\n  public constructor(\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D,\n    rect: Rect,\n    drawRect: Rect | null,\n    drawing: boolean,\n    selection: Selection,\n    drawLayers: DrawLayers\n  ) {\n    this._col = col\n    this._row = row\n    this._mode = 0\n    this._range = createCellRange(col, row, col, row)\n    this._ctx = ctx\n    this._rect = rect\n    this._drawRect = drawRect\n    this._drawing = drawing\n    this._selection = selection\n    this._drawLayers = drawLayers\n    this._childContexts = []\n  }\n  public get drawing() {\n    if (this._mode === 0) {\n      return this._drawing\n    } else {\n      return true\n    }\n  }\n  public get row() {\n    return this._row\n  }\n  public get col() {\n    return this._col\n  }\n  public get range() {\n    return this._range\n  }\n  public set range(range) {\n    this._range = range\n  }\n  public cancel() {\n    this._cancel = true\n    this._childContexts.forEach((ctx) => {\n      ctx.cancel()\n    })\n  }\n  /**\n   * select status.\n   */\n  public getSelection(): CellSelection {\n    return {\n      border: this._selection.border(this._col, this._row),\n      dragged: this._selection.drag.inDrag(this._col, this._row),\n      select: this._selection.drag.select,\n      range: this._selection.range,\n    }\n  }\n  /**\n   * Canvas context.\n   */\n  public getContext(): CanvasRenderingContext2D {\n    if (this._mode === 0) {\n      return this._ctx as CanvasRenderingContext2D\n    } else {\n      return (this._grid as DrawGrid)._getInitContext()\n    }\n  }\n  /**\n   * Rectangle of cell.\n   */\n  public getRect(): Rect {\n    const rectFilter = this._rectFilter\n    return rectFilter\n      ? rectFilter(this._getRectInternal())\n      : this._getRectInternal()\n  }\n  public setRectFilter(rectFilter: (base: Rect) => Rect): void {\n    this._rectFilter = rectFilter\n  }\n  /**\n   * Rectangle of Drawing range.\n   */\n  public getDrawRect(): Rect | null {\n    if (this._cancel) {\n      return null\n    }\n    if (this._mode === 0) {\n      return this._drawRect\n    } else {\n      if (this._isOutOfRange()) {\n        return null\n      }\n      const absoluteRect = (this._grid as DrawGrid).getCellRect(\n        this._col,\n        this._row\n      )\n      return this._toRelativeDrawRect(absoluteRect)\n    }\n  }\n  /**\n   * get Context of current state\n   */\n  public toCurrentContext(): DrawCellContext {\n    if (this._mode === 0) {\n      return this\n    } else {\n      const absoluteRect = (this._grid as DrawGrid).getCellRect(\n        this._col,\n        this._row\n      )\n      const rect = (this._grid as DrawGrid)._toRelativeRect(absoluteRect)\n      const drawRect = this._isOutOfRange()\n        ? null\n        : this._toRelativeDrawRect(absoluteRect)\n      const context = new DrawCellContext(\n        this._col,\n        this._row,\n        this.getContext(),\n        rect,\n        drawRect,\n        this.drawing,\n        this._selection,\n        this._drawLayers\n      )\n      // toCurrentContext 调用 this.toCurrentContext\n      context.toCurrentContext = this.toCurrentContext.bind(this)\n      this._childContexts.push(context)\n      if (this._cancel) {\n        context.cancel()\n      }\n      context._rectFilter = this._rectFilter\n      return context\n    }\n  }\n  public addLayerDraw(\n    level: number,\n    fn: (ctx: CanvasRenderingContext2D) => void\n  ) {\n    this._drawLayers.addDraw(level, fn)\n  }\n  public _delayMode(grid: DrawGrid, onTerminate: () => void) {\n    this._mode = 1\n    this._ctx = null\n    this._rect = null\n    this._drawRect = null\n    this._grid = grid\n    this._onTerminate = onTerminate\n  }\n  /**\n   * terminate\n   */\n  public terminate(): void {\n    if (this._mode !== 0) {\n      this._onTerminate?.()\n    }\n  }\n  private _getRectInternal(): Rect {\n    if (this._mode === 0) {\n      return this._rect as Rect\n    } else {\n      if (this._rect) {\n        return this._rect\n      }\n      return (this._grid as DrawGrid).getCellRelativeRect(this._col, this._row)\n    }\n  }\n  private _isOutOfRange(): boolean {\n    const { colCount, rowCount } = this._grid as DrawGrid\n    return colCount <= this._col || rowCount <= this._row\n  }\n  private _toRelativeDrawRect(absoluteRect: Rect): Rect | null {\n    const grid = this._grid as DrawGrid\n    const visibleRect = grid._getVisibleRect()\n    let rect = absoluteRect.copy()\n    if (!rect.intersection(visibleRect)) {\n      return null\n    }\n\n    const isFrozenCell = grid.isFrozenCell(this._col, this._row)\n    if (grid.frozenColCount >= 0 && (!isFrozenCell || !isFrozenCell.col)) {\n      const fRect = grid.getCellRect(grid.frozenColCount - 1, this._row)\n      rect = Rect.bounds(\n        Math.max(rect.left, fRect.right),\n        rect.top,\n        rect.right,\n        rect.bottom\n      )\n    }\n    if (grid.frozenRowCount >= 0 && (!isFrozenCell || !isFrozenCell.row)) {\n      const fRect = grid.getCellRect(this._col, grid.frozenRowCount - 1)\n      rect = Rect.bounds(\n        rect.left,\n        Math.max(rect.top, fRect.bottom),\n        rect.right,\n        rect.bottom\n      )\n    }\n\n    if (!rect.intersection(visibleRect)) {\n      return null\n    }\n    rect.offsetLeft(-visibleRect.left)\n    rect.offsetTop(-visibleRect.top)\n\n    return rect\n  }\n}\n","export class DrawLayer {\n  private _level: number\n  private _list: ((ctx: CanvasRenderingContext2D) => void)[]\n  public constructor(level: number) {\n    this._level = level\n    this._list = []\n  }\n  public get level() {\n    return this._level\n  }\n  public addDraw(fn: (ctx: CanvasRenderingContext2D) => void) {\n    this._list.push(fn)\n  }\n  public draw(ctx: CanvasRenderingContext2D) {\n    this._list.forEach((fn) => {\n      ctx.save()\n      try {\n        fn(ctx)\n      } finally {\n        ctx.restore()\n      }\n    })\n  }\n}\n","import { DrawLayer } from './DrawLayer'\n\n/**\n * This class manages the drawing process for each layer\n */\nexport class DrawLayers {\n  private _layers: {\n    [key: number]: DrawLayer\n  }\n  public constructor() {\n    this._layers = {}\n  }\n  public addDraw(level: number, fn: (ctx: CanvasRenderingContext2D) => void) {\n    const l =\n      this._layers[level] || (this._layers[level] = new DrawLayer(level))\n    l.addDraw(fn)\n  }\n  public draw(ctx: CanvasRenderingContext2D) {\n    const list = []\n    for (const k in this._layers) {\n      if (this._layers.hasOwnProperty(k)) {\n        list.push(this._layers[k])\n      }\n    }\n    list.sort((a, b) => a.level - b.level)\n    list.forEach((l) => l.draw(ctx))\n  }\n}\n","import {\n  ScrollableAPI,\n  KeyboardEventListener,\n  KeydownEvent,\n  EventListenerId,\n} from '../../ts-types'\nimport {\n  KEY_TAB,\n  KEY_ALPHA_C,\n  KEY_ALPHA_V,\n  KEY_DOWN,\n  KEY_END,\n  KEY_HOME,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n  KEY_ENTER,\n  KEY_ALPHA_A,\n  KEY_DEL,\n  KEY_BS,\n} from '../../core/draw-grid/KEY_CODE'\nimport { EventHandler } from '../../internal/EventHandler'\nimport Rect from '../../internal/Rect'\nimport style from '../../internal/style'\nimport {\n  event,\n  browser,\n  isDescendantElement,\n  isDef,\n  array,\n} from '../../internal/utils'\nimport { DrawGrid } from '../DrawGrid'\nimport { EventTarget } from '../EventTarget'\n\nfunction _setSafeInputValue(input: HTMLInputElement, value: string) {\n  const type = input.type\n  input.type = ''\n  input.value = value\n  if (type) {\n    input.type = type\n  }\n}\n\n/**\n * Manage focus\n */\nexport class FocusControl extends EventTarget {\n  private _grid: DrawGrid\n  private _scrollable: ScrollableAPI\n  private _handler: EventHandler\n  private _input: HTMLInputElement\n  private _isComposition: boolean = false\n  private _compositionEnd: NodeJS.Timeout | undefined\n  private _inputStatus?: { [key: string]: string }\n  private _keyDownMoveCallback?: KeyboardEventListener\n  public constructor(\n    grid: DrawGrid,\n    parentElement: HTMLElement,\n    scrollable: ScrollableAPI\n  ) {\n    super()\n    this._grid = grid\n    this._scrollable = scrollable\n    const handler = (this._handler = new EventHandler())\n    const input = (this._input = document.createElement('input'))\n    input.classList.add('grid-focus-control')\n    input.readOnly = true\n    parentElement.appendChild(input)\n\n    handler.on(input, 'compositionstart', (e) => {\n      input.classList.add('composition')\n      input.style.font = grid.font || '16px sans-serif'\n      this._isComposition = true\n      if (this._compositionEnd) {\n        clearTimeout(this._compositionEnd)\n        delete this._compositionEnd\n      }\n      grid.focus()\n    })\n    let lastInputValue: any\n    const inputClear = () => {\n      lastInputValue = input.value\n      if (this._isComposition) {\n        return\n      }\n      if (lastInputValue !== '') {\n        _setSafeInputValue(input, '')\n      }\n    }\n\n    const handleCompositionEnd = () => {\n      this._isComposition = false\n      input.classList.remove('composition')\n      input.style.font = ''\n      const value = input.value\n\n      inputClear()\n\n      if (!input.readOnly) {\n        this.fireListeners('input', value)\n      }\n\n      if (this._compositionEnd) {\n        clearTimeout(this._compositionEnd)\n        delete this._compositionEnd\n      }\n    }\n    handler.on(input, 'compositionend', (e) => {\n      this._compositionEnd = setTimeout(handleCompositionEnd, 0)\n    })\n    handler.on(input, 'keypress', (e) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!input.readOnly && e.key && e.key.length === 1) {\n        if (e.ctrlKey || e.metaKey) {\n          if (e.key === 'c') {\n            // copy! for Firefox & Safari\n          } else if (e.key === 'v') {\n            // paste! for Firefox & Safari\n          } else if (e.key === 'x') {\n            // cut! for Firefox & Safari\n          }\n        } else {\n          if (e.key === ' ') {\n            // Since the full-width space cannot be determined, it is processed by \"input\".\n            return\n          }\n          this.fireListeners('input', e.key)\n          event.cancel(e)\n        }\n      }\n      inputClear()\n    })\n    handler.on(input, 'keydown', (e) => {\n      if (this._isComposition) {\n        if (this._compositionEnd) {\n          handleCompositionEnd()\n          event.cancel(e)\n        }\n        return\n      }\n      const keyCode = event.getKeyCode(e)\n      let stopCellMove = false\n      const evt: KeydownEvent = {\n        keyCode,\n        event: e,\n        stopCellMoving() {\n          stopCellMove = true\n        },\n      }\n      const results = this.fireListeners('keydown', evt)\n      if (array.findIndex(results, (v) => v === false) >= 0) {\n        return\n      }\n\n      if (!input.readOnly && lastInputValue && browser.Safari) {\n        // for Safari\n        this.fireListeners('input', lastInputValue)\n      }\n      if (!stopCellMove) this.fireKeyDownMove(keyCode, e)\n      if (\n        this._grid.keyboardOptions?.deleteCellValueOnDel &&\n        (keyCode === KEY_DEL || keyCode === KEY_BS)\n      ) {\n        this.fireListeners('delete', e)\n      }\n\n      inputClear()\n    })\n    handler.on(input, 'keyup', (e) => {\n      if (this._isComposition) {\n        if (this._compositionEnd) {\n          handleCompositionEnd()\n        }\n      }\n      inputClear()\n    })\n\n    handler.on(input, 'input', (e: InputEvent) => {\n      if (e.data === ' ' || e.data === '　') {\n        // Since the full-width space cannot be determined on \"keypress\", it is processed by \"input\".\n        this.fireListeners('input', e.data)\n      }\n      inputClear()\n    })\n    if (browser.IE) {\n      handler.on(document, 'keydown', (e) => {\n        if (e.target !== input) {\n          return\n        }\n        const keyCode = event.getKeyCode(e)\n        if (keyCode === KEY_ALPHA_C && e.ctrlKey) {\n          // When text is not selected copy-event is not emit, on IE.\n          _setSafeInputValue(input, 'dummy')\n          input.select()\n          setTimeout(() => {\n            _setSafeInputValue(input, '')\n          }, 100)\n        } else if (keyCode === KEY_ALPHA_V && e.ctrlKey) {\n          // When input is read-only paste-event is not emit, on IE.\n          if (input.readOnly) {\n            input.readOnly = false\n            setTimeout(() => {\n              input.readOnly = true\n              _setSafeInputValue(input, '')\n            }, 10)\n          }\n        }\n      })\n    }\n    if (browser.Edge) {\n      handler.once(document, 'keydown', (e: Event) => {\n        if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n          return\n        }\n        // When the input has focus on the first page opening,\n        // the paste-event and copy-event is not emit, on Edge.\n        const dummyInput = document.createElement('input')\n        grid.getElement().appendChild(dummyInput)\n        dummyInput.focus()\n        input.focus()\n        if (dummyInput.parentElement) {\n          dummyInput.parentElement.removeChild(dummyInput)\n        }\n      })\n    }\n    handler.on(document, 'paste', (e: Event) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n        return\n      }\n      setTimeout(() => {\n        inputClear()\n      }, 100)\n      let pasteText\n      if (browser.IE) {\n        // IE\n        pasteText = (window as any).clipboardData.getData('Text')\n      } else {\n        const clipboardData = (e as ClipboardEvent).clipboardData\n        if (clipboardData) {\n          if (clipboardData.items) {\n            // Chrome & Firefox & Edge\n            pasteText = clipboardData.getData('text/plain')\n          } else {\n            // Safari\n            if (\n              -1 !==\n              Array.prototype.indexOf.call(clipboardData.types, 'text/plain')\n            ) {\n              pasteText = clipboardData.getData('Text')\n            }\n          }\n        }\n      }\n      if (isDef(pasteText) && pasteText.length) {\n        this.fireListeners('paste', { value: pasteText, event: e })\n      }\n    })\n    const copy = (data: any, e: ClipboardEvent) => {\n      if (isDef(data)) {\n        event.cancel(e)\n        if (browser.IE) {\n          const cData = (window as any).clipboardData\n          if (cData) {\n            cData.setData('Text', data) // IE\n          }\n        } else {\n          const cData = e.clipboardData\n          if (cData) {\n            cData.setData('text/plain', data) // Chrome, Firefox\n          }\n        }\n      }\n    }\n    handler.on(document, 'copy', (e: Event) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n        return\n      }\n      _setSafeInputValue(input, '')\n      const data = array.find(this.fireListeners('copy', e), isDef)\n      copy(data, e as ClipboardEvent)\n    })\n    handler.on(document, 'cut', (e: Event) => {\n      if (this._isComposition) {\n        return\n      }\n      if (!isDescendantElement(parentElement, e.target as HTMLElement)) {\n        return\n      }\n      _setSafeInputValue(input, '')\n      const data = array.find(this.fireListeners('cut', e), isDef)\n      copy(data, e as ClipboardEvent)\n    })\n    handler.on(input, 'focus', (e) => {\n      this.fireListeners('focus', e)\n    })\n    handler.on(input, 'blur', (e) => {\n      this.fireListeners('blur', e)\n    })\n  }\n  public fireKeyDownMove(keyCode: number, e: KeyboardEvent): void {\n    const fn = this._keyDownMoveCallback\n    if (!fn) {\n      return\n    }\n    if (this._isComposition) {\n      return\n    }\n    if (\n      keyCode === KEY_LEFT ||\n      keyCode === KEY_UP ||\n      keyCode === KEY_RIGHT ||\n      keyCode === KEY_DOWN ||\n      keyCode === KEY_HOME ||\n      keyCode === KEY_END\n    ) {\n      fn(e)\n    } else if (\n      this._grid.keyboardOptions?.moveCellOnTab &&\n      keyCode === KEY_TAB\n    ) {\n      fn(e)\n    } else if (\n      this._grid.keyboardOptions?.moveCellOnEnter &&\n      keyCode === KEY_ENTER\n    ) {\n      fn(e)\n    } else if (\n      this._grid.keyboardOptions?.selectAllOnCtrlA &&\n      keyCode === KEY_ALPHA_A &&\n      (e.ctrlKey || e.metaKey)\n    ) {\n      fn(e)\n    }\n  }\n  public onKeyDownMove(fn: KeyboardEventListener): void {\n    this._keyDownMoveCallback = fn\n  }\n  public onKeyDown(fn: (e: KeydownEvent) => void): EventListenerId {\n    return this.listen('keydown', fn)\n  }\n  public onInput(fn: (value: string) => void): EventListenerId {\n    return this.listen('input', fn)\n  }\n  public onDelete(fn: (e: KeyboardEvent) => void): EventListenerId {\n    return this.listen('delete', fn)\n  }\n  public onCopy(fn: (e: ClipboardEvent) => void): EventListenerId {\n    return this.listen('copy', fn)\n  }\n  public onPaste(\n    fn: (e: { value: string; event: ClipboardEvent }) => void\n  ): EventListenerId {\n    return this.listen('paste', fn)\n  }\n  public onCut(fn: (e: ClipboardEvent) => void): EventListenerId {\n    return this.listen('cut', fn)\n  }\n  public onFocus(fn: (e: FocusEvent) => void): EventListenerId {\n    return this.listen('focus', fn)\n  }\n  public onBlur(fn: (e: FocusEvent) => void): EventListenerId {\n    return this.listen('blur', fn)\n  }\n  public focus() {\n    // this._input.value = \"\";\n    this._input.focus()\n  }\n  public setFocusRect(rect: Rect) {\n    const input = this._input\n    const top = this._scrollable.calcTop(rect.top)\n    // 位置：相对 但是，如果IE不是position：relative，则不能使用最大值\n    input.style.top = `${(top - style.getScrollBarSize()).toFixed()}px`\n    input.style.left = `${rect.left.toFixed()}px`\n    input.style.width = `${rect.width.toFixed()}px`\n    input.style.height = `${rect.height.toFixed()}px`\n  }\n  public get editMode() {\n    return !this._input.readOnly\n  }\n  public set editMode(editMode) {\n    this._input.readOnly = !editMode\n  }\n  public resetInputStatus() {\n    const el = this._input\n    if (!el.classList.contains('grid-focus-control--stored-status')) {\n      return\n    }\n    const composition = el.classList.contains('composition')\n\n    const attrs = el.attributes\n    const removeNames = []\n    for (let i = 0, n = attrs.length; i < n; i++) {\n      const att = attrs[i]\n      if (!this._inputStatus?.hasOwnProperty(att.nodeName)) {\n        removeNames.push(att.name)\n      }\n    }\n    removeNames.forEach((removeName) => {\n      el.removeAttribute(removeName)\n    })\n    for (const name in this._inputStatus) {\n      if (this._inputStatus.hasOwnProperty(name)) {\n        el.setAttribute(name, this._inputStatus[name])\n      }\n    }\n    if (composition) {\n      el.classList.add('composition')\n      el.style.font = this._grid.font || '16px sans-serif'\n    } else {\n      el.classList.remove('composition')\n    }\n    el.classList.remove('grid-focus-control--stored-status')\n  }\n  public storeInputStatus() {\n    const el = this._input\n    if (el.classList.contains('grid-focus-control--stored-status')) {\n      return\n    }\n    const inputStatus: FocusControl['_inputStatus'] = (this._inputStatus = {})\n    const atts = el.attributes\n    for (let i = 0, n = atts.length; i < n; i++) {\n      const att = atts[i]\n      inputStatus[att.name] = att.value\n    }\n    el.classList.add('grid-focus-control--stored-status')\n  }\n  public setDefaultInputStatus() {\n    // 有一种情况，滚动逐渐逐渐变化，所以不要在这里设置。\n    // this._input.style.font = this._grid.font || \"16px sans-serif\";\n  }\n  public get input() {\n    return this._input\n  }\n  public dispose() {\n    super.dispose()\n    this._handler.dispose()\n  }\n}\n","import { array } from '../../internal/utils'\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\nimport { DrawGrid } from '../DrawGrid'\nimport { EventTarget } from '../EventTarget'\nimport {\n  BeforeSelectedCellEvent,\n  AfterSelectedCellEvent,\n  AnyFunction,\n  CellAddress,\n  CellRange,\n} from '../../ts-types'\n\n/**\n * Selected area management\n */\nexport class Selection extends EventTarget {\n  private _grid: DrawGrid\n  private _sel: CellAddress\n  private _focus: CellAddress\n  private _start: CellAddress\n  private _end: CellAddress\n  private _drag?: {\n    sel: CellAddress\n    focus: CellAddress\n    start: CellAddress\n    end: CellAddress\n  }\n  private _isWraped: boolean = false\n  private _updateRange: (range: CellRange) => CellRange\n  public constructor(\n    grid: DrawGrid,\n    updateRange: (range: CellRange) => CellRange\n  ) {\n    super()\n    this._grid = grid\n\n    this._sel = { col: 0, row: 0 }\n    this._focus = { col: 0, row: 0 }\n\n    this._start = { col: 0, row: 0 }\n    this._end = { col: 0, row: 0 }\n\n    this._updateRange = updateRange\n  }\n  public get range(): CellRange {\n    const start = this._start\n    const end = this._end\n    const startCol = Math.min(start.col, end.col)\n    const startRow = Math.min(start.row, end.row)\n    const endCol = Math.max(start.col, end.col)\n    const endRow = Math.max(start.row, end.row)\n    return {\n      end: {\n        col: endCol,\n        row: endRow,\n      },\n      start: {\n        col: startCol,\n        row: startRow,\n      },\n    }\n  }\n  public set range(range: CellRange) {\n    const startCol = Math.min(range.start.col, range.end.col)\n    const startRow = Math.min(range.start.row, range.end.row)\n    const endCol = Math.max(range.start.col, range.end.col)\n    const endRow = Math.max(range.start.row, range.end.row)\n\n    this._wrapFireSelectedEvent(() => {\n      this._setSelectCell(startCol, startRow)\n      this._setFocusCell(endCol, endRow, true)\n      this._grid._updatedSelection()\n    })\n  }\n  public get focus(): CellAddress {\n    const col = this._focus.col\n    const row = this._focus.row\n    return { col, row }\n  }\n  public get select(): CellAddress {\n    const col = this._sel.col\n    const row = this._sel.row\n    return { col, row }\n  }\n  public set select(cell: CellAddress) {\n    this._wrapFireSelectedEvent(() => {\n      const { col = 0, row = 0 } = cell || {}\n      this._setSelectCell(col, row)\n      this._setFocusCell(col, row, true)\n      this._grid._updatedSelection()\n    })\n  }\n  public get dragging() {\n    return !!this._drag\n  }\n  public get drag() {\n    const me = this\n    return {\n      get select() {\n        const sel = me._drag ? me._drag.sel : me._sel\n        return {\n          col: sel.col,\n          row: sel.row,\n        }\n      },\n      get range() {\n        const start = me._drag ? me._drag.start : me._start\n        const end = me._drag ? me._drag.end : me._end\n        const startCol = Math.min(start.col, end.col)\n        const startRow = Math.min(start.row, end.row)\n        const endCol = Math.max(start.col, end.col)\n        const endRow = Math.max(start.row, end.row)\n        return {\n          end: {\n            col: endCol,\n            row: endRow,\n          },\n          start: {\n            col: startCol,\n            row: startRow,\n          },\n        }\n      },\n      inRange(col: number, row: number) {\n        const startCol = this.range.start.col\n        const startRow = this.range.start.row\n        const endCol = this.range.end.col\n        const endRow = this.range.end.row\n        return (\n          startCol <= col && col <= endCol && startRow <= row && row <= endRow\n        )\n      },\n      inDrag(col: number, row: number) {\n        const inOldRange = this.inRange(col, row)\n        const inNewRange = me.inRange(col, row)\n        return (inOldRange && !inNewRange) || (!inOldRange && inNewRange)\n      },\n    }\n  }\n  public inRange(col: number, row: number) {\n    const startCol = Math.min(this._start.col, this._end.col)\n    const startRow = Math.min(this._start.row, this._end.row)\n    const endCol = Math.max(this._start.col, this._end.col)\n    const endRow = Math.max(this._start.row, this._end.row)\n    return startCol <= col && col <= endCol && startRow <= row && row <= endRow\n  }\n  public border(col: number, row: number) {\n    const range = this.range\n    const inRange =\n      range.start.col <= col &&\n      col <= range.end.col &&\n      range.start.row <= row &&\n      row <= range.end.row\n    return {\n      bottom: inRange ? range.end.row === row : false,\n      left: inRange ? range.start.col === col : false,\n      right: inRange ? range.end.col === col : false,\n      top: inRange ? range.start.row === row : false,\n    }\n  }\n  public fireSelectedEvent() {\n    this._wrapFireSelectedEvent(() => {\n      // nothing\n    })\n  }\n  public startDrag() {\n    this._drag = {\n      end: this._end,\n      focus: this._focus,\n      sel: this._sel,\n      start: this._start,\n    }\n  }\n  public stopDrag() {\n    if (this._drag) {\n      this.fireListeners(DG_EVENT_TYPE.SELECTED_CELL, {\n        after: {\n          col: this._sel.col,\n          row: this._sel.row,\n        },\n        col: this._drag.sel.col,\n        row: this._drag.sel.row,\n        selected: false,\n      })\n      this.fireListeners(DG_EVENT_TYPE.SELECTED_CELL, {\n        before: {\n          col: this._drag.sel.col,\n          row: this._drag.sel.row,\n        },\n        col: this._sel.col,\n        row: this._sel.row,\n        selected: true,\n      })\n      const oldStartCol = this.drag.range.start.col\n      const oldStartRow = this.drag.range.start.row\n      const oldEndCol = this.drag.range.end.col\n      const oldEndRow = this.drag.range.end.row\n      const newStartCol = this.range.start.col\n      const newStartRow = this.range.start.row\n      const newEndCol = this.range.end.col\n      const newEndRow = this.range.end.row\n      delete this._drag\n      this._grid.invalidateGridRect(\n        oldStartCol,\n        oldStartRow,\n        oldEndCol,\n        oldEndRow\n      )\n      this._grid.invalidateGridRect(\n        newStartCol,\n        newStartRow,\n        newEndCol,\n        newEndRow\n      )\n    }\n  }\n  public _updateGridRange() {\n    const { rowCount, colCount } = this._grid\n    const points = [this._sel, this._focus, this._start, this._end]\n    let needChange = false\n    for (const point of points) {\n      if (colCount <= point.col || rowCount <= point.row) {\n        needChange = true\n        break\n      }\n    }\n    if (!needChange || !rowCount || !colCount) {\n      // rowCount 或 colCount 为 0 时，暂不触发事件\n      return false\n    }\n    this._wrapFireSelectedEvent(() => {\n      points.forEach((p) => {\n        p.col = Math.min(colCount - 1, p.col)\n        p.row = Math.min(rowCount - 1, p.row)\n      })\n    })\n    return true\n  }\n  public _setFocusCell(col: number, row: number, keepSelect: boolean): void {\n    this._wrapFireSelectedEvent(() => {\n      if (!keepSelect || this._grid.singleSelection) {\n        this._setSelectCell(col, row)\n      } else {\n        this._setSelectCell(this._sel.col, this._sel.row)\n      }\n      this._focus = { col, row }\n      this._end = { col, row }\n    })\n  }\n  public _forceUpdateRange() {\n    const range = this._updateRange(this.range)\n    if (range) {\n      this._start = range.start\n      this._end = range.end\n    }\n  }\n  private _setSelectCell(col: number, row: number): void {\n    this._wrapFireSelectedEvent(() => {\n      this._sel = { col, row }\n      this._start = { col, row }\n    })\n  }\n  private _wrapFireSelectedEvent(callback: AnyFunction): void {\n    if (this._isWraped) {\n      callback()\n    } else {\n      this._isWraped = true\n      try {\n        const backup = {\n          end: {\n            col: this._end.col,\n            row: this._end.row,\n          },\n          focus: {\n            col: this._focus.col,\n            row: this._focus.row,\n          },\n          sel: {\n            col: this._sel.col,\n            row: this._sel.row,\n          },\n          start: {\n            col: this._start.col,\n            row: this._start.row,\n          },\n        }\n        const before: BeforeSelectedCellEvent = {\n          col: this._sel.col,\n          row: this._sel.row,\n          selected: false,\n        } as BeforeSelectedCellEvent\n        callback()\n        this._forceUpdateRange()\n        const after: AfterSelectedCellEvent = {\n          before: {\n            col: before.col,\n            row: before.row,\n          },\n          col: this._sel.col,\n          row: this._sel.row,\n          selected: true,\n        }\n        before.after = {\n          col: after.col,\n          row: after.row,\n        }\n        if (!this.dragging) {\n          const results = this.fireListeners(\n            DG_EVENT_TYPE.SELECTED_CELL,\n            before\n          )\n          if (array.findIndex(results, (v) => v === false) >= 0) {\n            this._end = backup.end\n            this._focus = backup.focus\n            this._sel = backup.sel\n            this._start = backup.start\n          } else {\n            this.fireListeners(DG_EVENT_TYPE.SELECTED_CELL, after)\n          }\n        }\n      } finally {\n        this._isWraped = false\n      }\n    }\n  }\n}\n","import { CellRange, CellAddress } from '../../ts-types'\nimport { event, array } from '../../internal/utils'\nimport { BaseMouseDownMover } from './BaseMouseDownMover'\nimport { DG_EVENT_TYPE } from './DG_EVENT_TYPE'\nimport { createCellRange } from './DrawCellContext'\n\n/**\n * managing selection size changing operation with mouse\n */\nexport class SelectionResizer extends BaseMouseDownMover {\n  private _oldRange: CellRange = createCellRange(-1, -1, -1, -1)\n  private _newRange: CellRange = createCellRange(-1, -1, -1, -1)\n  private _cell: CellAddress = { col: -1, row: -1 }\n  public start(e: MouseEvent | TouchEvent) {\n    const cellAndRange = this._getTargetCellAndRange(e)\n    if (!cellAndRange) {\n      return false\n    }\n    this._oldRange = this.grid.selection.range\n    this.grid.selection.startDrag()\n\n    this._bindMoveAndUp(e)\n\n    this._newRange = cellAndRange.range\n    this._cell = cellAndRange.cell\n\n    event.cancel(e)\n    this._vibrate(e)\n  }\n  public canStart() {\n    return array.find(\n      this.grid.fireListeners(\n        DG_EVENT_TYPE.CAN_DRAG_SELECTION,\n        this.grid.selection.range\n      ),\n      (v) => v === true\n    )\n  }\n  protected _moveInternal(e: Event) {\n    const cellAndRange = this._getTargetCellAndRange(e)\n    if (!cellAndRange || !this._oldRange) {\n      return false\n    }\n    const newRange = cellAndRange.range\n    const newCell = cellAndRange.cell\n\n    if (\n      newRange.start.col === this._newRange.start.col &&\n      newRange.start.row === this._newRange.start.row &&\n      newRange.end.col === this._newRange.end.col &&\n      newRange.end.row === this._newRange.end.row\n    ) {\n      return false\n    }\n\n    if (\n      array.find(\n        this.grid.fireListeners(DG_EVENT_TYPE.DRAG_SELECTION, {\n          dragDone: false,\n          newRange,\n          oldRange: this._oldRange,\n        }),\n        (v) => v === false\n      ) === false\n    ) {\n      return false\n    }\n\n    const oldCol = this._cell.col\n    const oldRow = this._cell.row\n    const newCol = newCell.col\n    const newRow = newCell.row\n    if (oldCol === newCol && oldRow === newRow) {\n      return false\n    }\n\n    const grid = this.grid\n    grid._moveFocusCell(newRange.start.col, newRange.start.row, false, true)\n    grid._moveFocusCell(newRange.end.col, newRange.end.row, true, true)\n\n    // make visible\n    const makeVisibleCol = (() => {\n      if (newCol < oldCol && 0 < newCol) {\n        // move left\n        return newCol - 1\n      } else if (oldCol < newCol && newCol + 1 < grid.colCount) {\n        // move right\n        return newCol + 1\n      }\n      return newCol\n    })()\n    const makeVisibleRow = (() => {\n      if (newRow < oldRow && 0 < newRow) {\n        // move up\n        return newRow - 1\n      } else if (oldRow < newRow && newRow + 1 < grid.rowCount) {\n        // move down\n        return newRow + 1\n      }\n      return newRow\n    })()\n    if (makeVisibleCol !== newCol || makeVisibleRow !== newRow) {\n      grid.makeVisibleCell(makeVisibleCol, makeVisibleRow)\n    }\n    this._newRange = newRange\n    this._cell = newCell\n    return true\n  }\n  protected _upInternal(e: Event) {\n    this.grid.fireListeners(DG_EVENT_TYPE.DRAG_SELECTION, {\n      dragDone: true,\n      newRange: this._newRange,\n      oldRange: this._oldRange,\n    })\n    this.grid.selection.stopDrag()\n  }\n  private _getTargetCellAndRange(e: Event) {\n    const grid = this.grid\n    const abstractPos = grid._getMouseAbstractPoint(e)\n    if (!abstractPos) {\n      return null\n    }\n    if (!this._oldRange) {\n      return null\n    }\n\n    // \\    A    /\n    //   ---t---\n    //   |\\   E|\n    // D l  X  r B\n    //   |F   \\|\n    //   ---b---\n    // /    C    \\\n\n    let startCol = this._oldRange.start.col\n    let startRow = this._oldRange.start.row\n    let endCol = this._oldRange.end.col\n    let endRow = this._oldRange.end.row\n    const x = abstractPos.x\n    const y = abstractPos.y\n    const cell = grid.getCellAt(x, y)\n    if (cell.col < 0 || cell.row < 0) {\n      return null\n    }\n    const startRect = grid.getCellRect(\n      this._oldRange.start.col,\n      this._oldRange.start.row\n    )\n    const endRect = grid.getCellRect(\n      this._oldRange.end.col,\n      this._oldRange.end.row\n    )\n    const top = startRect.top\n    const left = startRect.left\n    const right = endRect.right\n    const bottom = endRect.bottom\n    let x1 = left\n    let y1 = top\n    let x2 = right\n    let y2 = bottom\n    const ab = (y1 - y2) * x + (x2 - x1) * y + x1 * y2 - x2 * y1 <= 0 // A 或 B\n    x1 = right\n    y1 = top\n    x2 = left\n    y2 = bottom\n    const ad = (y1 - y2) * x + (x2 - x1) * y + x1 * y2 - x2 * y1 > 0 // A 或 D\n\n    if (\n      cell.row >= startRow &&\n      cell.row <= endRow &&\n      cell.col >= startCol &&\n      cell.col <= endCol\n    ) {\n      if (ab) {\n        // E\n        endRow = cell.row\n      } else {\n        // F\n        endCol = cell.col\n      }\n    } else {\n      if (ab && ad) {\n        // A\n        startRow = cell.row\n      } else if (ab && !ad) {\n        // B\n        endCol = cell.col\n      } else if (!ab && ad) {\n        // D\n        startCol = cell.col\n      } else {\n        // C\n        endRow = cell.row\n      }\n    }\n    const range: CellRange = createCellRange(startCol, startRow, endCol, endRow)\n\n    return {\n      cell,\n      range,\n    }\n  }\n}\n","import { PasteRangeBoxValues } from '../ts-types'\n\nexport function parsePasteRangeBoxValues(value: string): PasteRangeBoxValues {\n  const normalizeValue = value.replace(/\\r?\\n$/, '')\n  const lines = normalizeValue.split(/(?:\\r?\\n)|[\\u2028\\u2029]/g)\n  const values = lines.map((line) => line.split(/\\t/g))\n  const colCount = values.reduce((n, cells) => Math.max(n, cells.length), 0)\n  return {\n    colCount,\n    rowCount: values.length,\n    getCellValue(offsetCol: number, offsetRow: number): string {\n      return values[offsetRow]?.[offsetCol] || ''\n    },\n  }\n}\n","import {\n  BorderMode,\n  CellAddress,\n  CellRange,\n  DrawGridEventHandlersEventMap,\n  DrawGridEventHandlersReturnMap,\n  PasteCellEvent,\n  CellContext,\n  PasteRangeBoxValues,\n  DrawGridKeyboardOptions,\n  ScrollableAPI,\n  KeydownEvent,\n} from '../ts-types'\nimport {\n  KEY_DOWN,\n  KEY_END,\n  KEY_HOME,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n  KEY_TAB,\n  KEY_ENTER,\n  KEY_ALPHA_A,\n} from '../core/draw-grid/KEY_CODE'\nimport { toPx } from '../internal/calc'\nimport { getFontSize } from '../internal/canvases'\nimport { EventHandler } from '../internal/EventHandler'\nimport hiDPI from '../internal/hiDPI'\nimport NumberMap from '../internal/NumberMap'\nimport Rect from '../internal/Rect'\nimport Scrollbar from '../internal/Scrollbar'\nimport Scrollable from '../internal/Scrollable'\nimport style from '../internal/style'\nimport { event, array, isDef, isPromise, browser } from '../internal/utils'\nimport { EventTarget } from './EventTarget'\n\nimport { CellSelector } from './draw-grid/CellSelector'\nimport { ColumnResizer } from './draw-grid/ColumnResizer'\nimport { DrawCellContext } from './draw-grid/DrawCellContext'\nimport { DrawLayers } from './draw-grid/DrawLayers'\nimport { FocusControl } from './draw-grid/FocusControl'\nimport { Selection } from './draw-grid/Selection'\nimport { SelectionResizer } from './draw-grid/SelectionResizer'\nimport { parsePasteRangeBoxValues } from '../internal/paste-utils'\nimport { DG_EVENT_TYPE } from './draw-grid/DG_EVENT_TYPE'\nimport { getDrawGridSymbol } from '../internal/symbolManager'\n\nconst _ = getDrawGridSymbol()\n\nfunction _getTargetRowAt(\n  this: DrawGrid,\n  absoluteY: number\n): { row: number; top: number } | null {\n  const internal = this.getTargetRowAtInternal(absoluteY)\n  if (isDef(internal)) {\n    return internal\n  }\n  const findBefore = (\n    startRow: number,\n    startBottom: number\n  ): {\n    top: number\n    row: number\n  } | null => {\n    let bottom = startBottom\n    for (let row = startRow; row >= 0; row--) {\n      const height = _getRowHeight.call(this, row)\n      const top = bottom - height\n      if (top <= absoluteY && absoluteY < bottom) {\n        return {\n          row,\n          top,\n        }\n      }\n      bottom = top\n    }\n    return null\n  }\n  const findAfter = (\n    startRow: number,\n    startBottom: number\n  ): {\n    top: number\n    row: number\n  } | null => {\n    let top = startBottom - _getRowHeight.call(this, startRow)\n    const { rowCount } = this[_]\n    for (let row = startRow; row < rowCount; row++) {\n      const height = _getRowHeight.call(this, row)\n      const bottom = top + height\n      if (top <= absoluteY && absoluteY < bottom) {\n        return {\n          row,\n          top,\n        }\n      }\n      top = bottom\n    }\n    return null\n  }\n  const candRow = Math.min(\n    Math.ceil(absoluteY / this.defaultRowHeight),\n    this.rowCount - 1\n  )\n  const candBottom = _getRowsHeight.call(this, 0, candRow)\n  if (absoluteY >= candBottom) {\n    return findAfter(candRow, candBottom)\n  } else {\n    return findBefore(candRow, candBottom)\n  }\n}\nfunction _getTargetColAt(\n  this: DrawGrid,\n  absoluteX: number\n): {\n  left: number\n  col: number\n} | null {\n  let left = 0\n  const { colCount } = this[_]\n  for (let col = 0; col < colCount; col++) {\n    const width = _getColWidth.call(this, col)\n    const right = left + width\n    if (right > absoluteX) {\n      return {\n        col,\n        left,\n      }\n    }\n    left = right\n  }\n  return null\n}\nfunction _getTargetFrozenRowAt(\n  this: DrawGrid,\n  absoluteY: number\n): {\n  top: number\n  row: number\n} | null {\n  if (!this[_].frozenRowCount) {\n    return null\n  }\n  let top = this[_].scroll.top\n  const rowCount = this[_].frozenRowCount\n  for (let row = 0; row < rowCount; row++) {\n    const height = _getRowHeight.call(this, row)\n    const bottom = top + height\n    if (bottom > absoluteY) {\n      return {\n        row,\n        top,\n      }\n    }\n    top = bottom\n  }\n  return null\n}\nfunction _getTargetFrozenColAt(\n  this: DrawGrid,\n  absoluteX: number\n): {\n  left: number\n  col: number\n} | null {\n  if (!this[_].frozenColCount) {\n    return null\n  }\n  let left = this[_].scroll.left\n  const colCount = this[_].frozenColCount\n  for (let col = 0; col < colCount; col++) {\n    const width = _getColWidth.call(this, col)\n    const right = left + width\n    if (right > absoluteX) {\n      return {\n        col,\n        left,\n      }\n    }\n    left = right\n  }\n  return null\n}\nfunction _getFrozenRowsRect(this: DrawGrid): Rect | null {\n  if (!this[_].frozenRowCount) {\n    return null\n  }\n  const top = this[_].scroll.top\n  let height = 0\n  const rowCount = this[_].frozenRowCount\n  for (let row = 0; row < rowCount; row++) {\n    height += _getRowHeight.call(this, row)\n  }\n  return new Rect(this[_].scroll.left, top, this[_].canvas.width, height)\n}\nfunction _getFrozenColsRect(this: DrawGrid): Rect | null {\n  if (!this[_].frozenColCount) {\n    return null\n  }\n  const left = this[_].scroll.left\n  let width = 0\n  const colCount = this[_].frozenColCount\n  for (let col = 0; col < colCount; col++) {\n    width += _getColWidth.call(this, col)\n  }\n  return new Rect(left, this[_].scroll.top, width, this[_].canvas.height)\n}\nfunction _getCellDrawing(\n  this: DrawGrid,\n  col: number,\n  row: number\n): DrawCellContext | null {\n  if (!this[_].drawCells[row]) {\n    return null\n  }\n  return this[_].drawCells[row][col]\n}\nfunction _putCellDrawing(\n  this: DrawGrid,\n  col: number,\n  row: number,\n  context: DrawCellContext\n): void {\n  if (!this[_].drawCells[row]) {\n    this[_].drawCells[row] = {}\n  }\n  this[_].drawCells[row][col] = context\n}\nfunction _removeCellDrawing(this: DrawGrid, col: number, row: number): void {\n  if (!this[_].drawCells[row]) {\n    return\n  }\n  delete this[_].drawCells[row][col]\n  if (Object.keys(this[_].drawCells[row]).length === 0) {\n    delete this[_].drawCells[row]\n  }\n}\nfunction _drawCell(\n  this: DrawGrid,\n  ctx: CanvasRenderingContext2D,\n  col: number,\n  absoluteLeft: number,\n  width: number,\n  row: number,\n  absoluteTop: number,\n  height: number,\n  visibleRect: Rect,\n  skipAbsoluteTop: number,\n  skipAbsoluteLeft: number,\n  drawLayers: DrawLayers\n): void {\n  const rect = new Rect(\n    absoluteLeft - visibleRect.left,\n    absoluteTop - visibleRect.top,\n    width,\n    height\n  )\n\n  const drawRect = Rect.bounds(\n    Math.max(absoluteLeft, skipAbsoluteLeft) - visibleRect.left,\n    Math.max(absoluteTop, skipAbsoluteTop) - visibleRect.top,\n    rect.right,\n    rect.bottom\n  )\n\n  if (drawRect.height > 0 && drawRect.width > 0) {\n    ctx.save()\n    try {\n      const cellDrawing = _getCellDrawing.call(this, col, row)\n      if (cellDrawing) {\n        cellDrawing.cancel()\n      }\n      const dcContext = new DrawCellContext(\n        col,\n        row,\n        ctx,\n        rect,\n        drawRect,\n        !!cellDrawing,\n        this[_].selection,\n        drawLayers\n      )\n      const p = this.onDrawCell(col, row, dcContext)\n      if (isPromise(p)) {\n        // 延迟绘图\n        _putCellDrawing.call(this, col, row, dcContext)\n\n        const pCol = col\n        dcContext._delayMode(this, () => {\n          _removeCellDrawing.call(this, pCol, row)\n        })\n        ;(p as any).then(() => {\n          dcContext.terminate()\n        })\n      }\n    } finally {\n      ctx.restore()\n    }\n  }\n}\nfunction _drawRow(\n  this: DrawGrid,\n  ctx: CanvasRenderingContext2D,\n  initFrozenCol: { col: number; left: number } | null,\n  initCol: { col: number; left: number } | null,\n  drawRight: number,\n  row: number,\n  absoluteTop: number,\n  height: number,\n  visibleRect: Rect,\n  skipAbsoluteTop: number,\n  drawLayers: DrawLayers\n): void {\n  const colCount = this[_].colCount\n  const drawOuter = (col: number, absoluteLeft: number) => {\n    // 在数据范围之外绘制\n    if (\n      col >= colCount - 1 &&\n      this[_].canvas.width > absoluteLeft - visibleRect.left\n    ) {\n      const outerLeft = absoluteLeft - visibleRect.left\n      if (this.underlayBackgroundColor === 'transparent') {\n        ctx.clearRect(\n          outerLeft,\n          absoluteTop - visibleRect.top,\n          this[_].canvas.width - outerLeft,\n          height\n        )\n      } else {\n        ctx.save()\n        ctx.beginPath()\n        ctx.fillStyle = this.underlayBackgroundColor || '#F6F6F6'\n        ctx.rect(\n          outerLeft,\n          absoluteTop - visibleRect.top,\n          this[_].canvas.width - outerLeft,\n          height\n        )\n        ctx.fill()\n        ctx.restore()\n      }\n    }\n  }\n\n  let skipAbsoluteLeft = 0\n  if (initFrozenCol) {\n    let absoluteLeft = initFrozenCol.left\n    const count = this[_].frozenColCount\n    for (let col = initFrozenCol.col; col < count; col++) {\n      const width = _getColWidth.call(this, col)\n\n      _drawCell.call(\n        this,\n        ctx,\n        col,\n        absoluteLeft,\n        width,\n        row,\n        absoluteTop,\n        height,\n        visibleRect,\n        skipAbsoluteTop,\n        0,\n        drawLayers\n      )\n\n      absoluteLeft += width\n      if (drawRight <= absoluteLeft) {\n        // 在绘图范围之外（结束）\n        drawOuter(col, absoluteLeft)\n        return\n      }\n    }\n    skipAbsoluteLeft = absoluteLeft\n  }\n\n  if (initCol) {\n    let colAbsoluteLeft = initCol.left\n    for (let col = initCol.col; col < colCount; col++) {\n      const width = _getColWidth.call(this, col)\n      _drawCell.call(\n        this,\n        ctx,\n        col,\n        colAbsoluteLeft,\n        width,\n        row,\n        absoluteTop,\n        height,\n        visibleRect,\n        skipAbsoluteTop,\n        skipAbsoluteLeft,\n        drawLayers\n      )\n\n      colAbsoluteLeft += width\n      if (drawRight <= colAbsoluteLeft) {\n        // 在绘图范围之外（结束）\n        drawOuter(col, colAbsoluteLeft)\n        return\n      }\n    }\n    drawOuter(colCount - 1, colAbsoluteLeft)\n  }\n}\nlet _isPreciseColWidth = false\nfunction _toPxWidth(grid: DrawGrid, width: number | string) {\n  // 解决100%出现滚动条问题，此办法会导致右侧有空白，空白部分由_initColWidthsOffset负责填充\n  // return Math.round(toPx(width, grid[_].calcWidthContext));\n  const w = toPx(width, grid[_].calcWidthContext)\n  return _isPreciseColWidth ? w : Math.floor(w)\n}\nfunction _getColPreciseWidth(grid: DrawGrid, col: number) {\n  try {\n    _isPreciseColWidth = true\n    return grid.getColWidth(col)\n  } finally {\n    _isPreciseColWidth = false\n  }\n}\nfunction _initColWidthsOffset(grid: DrawGrid) {\n  const colWidthsOffset: {\n    [col: number]: number\n  } = {}\n  let total = 0\n  for (let col = 0; col < grid.colCount; col++) {\n    const w1 = grid.getColWidth(col)\n    const w2 = _getColPreciseWidth(grid, col)\n    if (w1 !== w2) {\n      total += w2 - w1\n      colWidthsOffset[col] = 0\n    }\n  }\n  total = Math.round(total)\n  if (total > 0) {\n    for (const col in colWidthsOffset) {\n      if (colWidthsOffset.hasOwnProperty(col)) {\n        colWidthsOffset[col] += 1\n        total--\n        if (!total) {\n          break\n        }\n      }\n    }\n  }\n\n  grid[_].colWidthsOffset = colWidthsOffset\n}\nfunction _adjustColWidth(\n  this: DrawGrid,\n  col: number,\n  orgWidth: number\n): number {\n  return this._adjustColWidth(col, orgWidth)\n}\nfunction _applyColWidthLimits(\n  limits: {\n    min?: number\n    max?: number\n  } | null,\n  orgWidth: number\n): number {\n  if (!limits) {\n    return orgWidth\n  }\n\n  if (limits.min) {\n    if (limits.min > orgWidth) {\n      return limits.min\n    }\n  }\n  if (limits.max) {\n    if (limits.max < orgWidth) {\n      return limits.max\n    }\n  }\n  return orgWidth\n}\n/**\n * Gets the definition of the column width.\n * @param col - number of column\n * @returns width definition\n */\nfunction _getColWidthDefine(this: DrawGrid, col: number): string | number {\n  const width = this[_].colWidthsMap.get(col)\n  if (width) {\n    return width\n  }\n  return this.defaultColWidth\n}\n/**\n * Gets the column width limits.\n * @param col - number of column\n * @returns the column width limits\n */\nfunction _getColWidthLimits(\n  this: DrawGrid,\n  col: number\n): {\n  min?: number\n  max?: number\n  minDef?: string | number\n  maxDef?: string | number\n} | null {\n  const limit = this[_].colWidthsLimit[col]\n  if (!limit) {\n    return null\n  }\n\n  const result: {\n    min?: number\n    max?: number\n    minDef?: string | number\n    maxDef?: string | number\n  } = {}\n\n  if (limit.min) {\n    result.min = _toPxWidth(this, limit.min)\n    result.minDef = limit.min\n  }\n  if (limit.max) {\n    result.max = _toPxWidth(this, limit.max)\n    result.maxDef = limit.max\n  }\n  return result\n}\n/**\n * Checks if the given width definition is `auto`.\n * @param width - width definition to check\n * @returns `true ` if the given width definition is `auto`\n */\nfunction isAutoDefine(width: string | number): width is 'auto' {\n  return !!(\n    width &&\n    typeof width === 'string' &&\n    width.toLowerCase() === 'auto'\n  )\n}\n/**\n * Creates a formula to calculate the auto width.\n * @returns formula\n */\nfunction _calcAutoColWidthExpr(this: DrawGrid): string {\n  const others = []\n  let autoCount = 0\n  const hasLimitsOnAuto = []\n  for (let col = 0; col < this[_].colCount; col++) {\n    const def = _getColWidthDefine.call(this, col)\n    const limits = _getColWidthLimits.call(this, col)\n    if (isAutoDefine(def)) {\n      if (limits) {\n        hasLimitsOnAuto.push(limits)\n      }\n      autoCount++\n    } else {\n      let expr = typeof def === 'number' ? `${def}px` : def\n      if (limits) {\n        const orgWidth = _toPxWidth(this, expr)\n        const newWidth = _applyColWidthLimits(limits, orgWidth)\n        if (orgWidth !== newWidth) {\n          expr = `${newWidth}px`\n        }\n      }\n      others.push(expr)\n    }\n  }\n  if (hasLimitsOnAuto.length && others.length) {\n    const autoPx =\n      _toPxWidth(this, `calc(100% - (${others.join(' + ')}))`) / autoCount\n    for (let index = 0; index < hasLimitsOnAuto.length; index++) {\n      const limits = hasLimitsOnAuto[index]\n      if (limits.min && autoPx < limits.min) {\n        others.push(\n          typeof limits.minDef === 'number'\n            ? `${limits.minDef}px`\n            : limits.minDef\n        )\n        autoCount--\n      } else if (limits.max && limits.max < autoPx) {\n        others.push(\n          typeof limits.maxDef === 'number'\n            ? `${limits.maxDef}px`\n            : limits.maxDef\n        )\n        autoCount--\n      }\n    }\n    if (autoCount <= 0) {\n      return `${autoPx}px`\n    }\n  }\n  if (others.length) {\n    return `calc((100% - (${others.join(' + ')})) / ${autoCount})`\n  } else {\n    return `${100 / autoCount}%`\n  }\n}\n/**\n * Calculate the pixels of width from the definition of width.\n * @param width - width definition\n * @returns the pixels of width\n */\nfunction _colWidthDefineToPxWidth(\n  this: DrawGrid,\n  width: string | number\n): number {\n  if (isAutoDefine(width)) {\n    return _toPxWidth(this, _calcAutoColWidthExpr.call(this))\n  }\n  return _toPxWidth(this, width)\n}\nfunction _getColWidth(this: DrawGrid, col: number): number {\n  const width = _getColWidthDefine.call(this, col)\n  return _adjustColWidth.call(\n    this,\n    col,\n    _colWidthDefineToPxWidth.call(this, width)\n  )\n}\nfunction _setColWidth(\n  this: DrawGrid,\n  col: number,\n  width: string | number\n): void {\n  this[_].colWidthsMap.put(col, width)\n}\n\nfunction _getRowHeight(this: DrawGrid, row: number): number {\n  const internal = this.getRowHeightInternal(row)\n  if (typeof internal === 'number') {\n    return Number(internal)\n  }\n  const height = this[_].rowHeightsMap.get(row)\n  if (height) {\n    return height\n  }\n  return this.defaultRowHeight\n}\nfunction _getRowsHeight(\n  this: DrawGrid,\n  startRow: number,\n  endRow: number\n): number {\n  const internal = this.getRowsHeightInternal(startRow, endRow)\n  if (typeof internal === 'number') {\n    return Number(internal)\n  }\n  const rowCount = endRow - startRow + 1\n  let h = this.defaultRowHeight * rowCount\n  this[_].rowHeightsMap.each(startRow, endRow, (height: number): void => {\n    h += height - this.defaultRowHeight\n  })\n  return h\n}\nfunction _setRowHeight(this: DrawGrid, row: number, height: number): void {\n  this[_].rowHeightsMap.put(row, height)\n}\nfunction _getUnderlayWidth(this: DrawGrid) {\n  let bodyWidth = this.getElement().clientWidth\n  for (let col = 0; col < this.frozenColCount; col++) {\n    bodyWidth -= this.getColWidth(col)\n  }\n  if (bodyWidth < 0) {\n    bodyWidth = 0\n  }\n  let w = 0\n  if (this.underlayColCount >= 0) {\n    if (this.underlayColWidth === 'auto') {\n      w = this.underlayColCount * _toPxWidth(this, this.defaultColWidth)\n    } else {\n      w = this.underlayColCount * this.underlayColWidth\n    }\n  } else {\n    w = bodyWidth\n    if (this.underlayColWidth === 'auto') {\n      const startCol = Math.max(\n        this.colCount + this.underlayColCount,\n        this.frozenColCount,\n        0\n      )\n      for (let col = startCol; col < this.colCount; col++) {\n        w -= this.getColWidth(col)\n      }\n    } else {\n      w += this.underlayColCount * this.underlayColWidth\n    }\n  }\n  if (w < 0) {\n    w = 0\n  } else if (w > bodyWidth) {\n    w = bodyWidth\n  }\n  return w\n}\nfunction _getScrollWidth(this: DrawGrid) {\n  const w = this._getColsWidth(0, this[_].colCount - 1)\n  const underlayWidth = _getUnderlayWidth.call(this)\n  return w + underlayWidth\n}\nfunction _getUnderlayHeight(this: DrawGrid) {\n  let bodyHeight = this.getElement().clientHeight\n  for (let row = 0; row < this.frozenRowCount; row++) {\n    bodyHeight -= this.getRowHeight(row)\n  }\n  if (bodyHeight < 0) {\n    bodyHeight = 0\n  }\n  let h = 0\n  if (this.underlayRowCount >= 0) {\n    if (this.underlayRowHeight === 'auto') {\n      h = this.underlayRowCount * this.defaultRowHeight\n    } else {\n      h = this.underlayRowCount * this.underlayRowHeight\n    }\n  } else {\n    h = bodyHeight\n    if (this.underlayRowHeight === 'auto') {\n      const startRow = Math.max(\n        this.rowCount + this.underlayRowCount,\n        this.frozenRowCount,\n        0\n      )\n      for (let row = startRow; row < this.rowCount; row++) {\n        h -= this.getRowHeight(row)\n      }\n    } else {\n      h += this.underlayRowCount * this.underlayRowHeight\n    }\n  }\n  if (h < 0) {\n    h = 0\n  } else if (h > bodyHeight) {\n    h = bodyHeight\n  }\n  return h\n}\nfunction _getScrollHeight(this: DrawGrid) {\n  const internal = this.getScrollHeightInternal(this[_].rowCount)\n  if (typeof internal === 'number') {\n    return Number(internal)\n  }\n  let h = this.defaultRowHeight * this[_].rowCount\n  this[_].rowHeightsMap.each(0, this[_].rowCount - 1, (height: number) => {\n    h += height - this.defaultRowHeight\n  })\n  const underlayHeight = _getUnderlayHeight.call(this)\n  return h + underlayHeight\n}\nfunction _onScroll(this: DrawGrid, _e: Event): void {\n  const lastLeft = this[_].scroll.left\n  const lastTop = this[_].scroll.top\n  const moveX = this[_].scrollable.scrollLeft - lastLeft\n  const moveY = this[_].scrollable.scrollTop - lastTop\n\n  // 保留下一个计算信息\n  this[_].scroll = {\n    left: this[_].scrollable.scrollLeft,\n    top: this[_].scrollable.scrollTop,\n  }\n  const visibleRect = this._getVisibleRect()\n  if (\n    Math.abs(moveX) >= visibleRect.width ||\n    Math.abs(moveY) >= visibleRect.height\n  ) {\n    // 完全重绘\n    this._invalidateRect(visibleRect)\n  } else {\n    // 不同的重绘\n    const context = this[_].context\n    if (context) {\n      context.drawImage(this[_].canvas, -moveX, -moveY)\n    }\n\n    if (moveX !== 0) {\n      // 计算水平移动的重绘范围\n      const redrawRect = visibleRect.copy()\n      if (moveX < 0) {\n        redrawRect.width = -moveX\n        if (this[_].frozenColCount > 0) {\n          // 当有固定列时绘制固定数量的列\n          const frozenRect = _getFrozenColsRect.call(this)\n          if (frozenRect) {\n            redrawRect.width += frozenRect.width\n          }\n        }\n      } else if (moveX > 0) {\n        redrawRect.left = redrawRect.right - moveX\n      }\n\n      // 重绘\n      this._invalidateRect(redrawRect)\n\n      if (moveX > 0) {\n        if (this[_].frozenColCount > 0) {\n          // 当有固定列固定列图时\n          const frozenRect = _getFrozenColsRect.call(this)\n          if (frozenRect) {\n            this._invalidateRect(frozenRect)\n          }\n        }\n      }\n    }\n    if (moveY !== 0) {\n      // 计算纵向移动的重绘范围\n      const redrawRect = visibleRect.copy()\n      if (moveY < 0) {\n        redrawRect.height = -moveY\n        if (this[_].frozenRowCount > 0) {\n          // 有固定线时固定线图\n          const frozenRect = _getFrozenRowsRect.call(this)\n          if (frozenRect) {\n            redrawRect.height += frozenRect.height\n          }\n        }\n      } else if (moveY > 0) {\n        redrawRect.top = redrawRect.bottom - moveY\n      }\n\n      // 重绘\n      this._invalidateRect(redrawRect)\n\n      if (moveY > 0) {\n        if (this[_].frozenRowCount > 0) {\n          // 有固定线时固定线图\n          const frozenRect = _getFrozenRowsRect.call(this)\n          if (frozenRect) {\n            this._invalidateRect(frozenRect)\n          }\n        }\n      }\n    }\n  }\n}\nfunction _onTabKeyDown(this: DrawGrid, shiftKey: boolean): void {\n  const grid = this\n  const focusCell = grid.selection.focus\n  const col = shiftKey\n    ? grid.getMoveLeftColByKeyDownInternal(focusCell)\n    : grid.getMoveRightColByKeyDownInternal(focusCell)\n  if (0 <= col && col < grid.colCount) {\n    grid._moveFocusCell(col, focusCell.row, false)\n  } else if (0 > col) {\n    grid._moveFocusCell(grid.colCount - 1, focusCell.row, false)\n  } else {\n    grid._moveFocusCell(0, focusCell.row, false)\n  }\n}\nfunction _onEnterKeyDown(this: DrawGrid, shiftKey: boolean): void {\n  const grid = this\n  const focusCell = grid.selection.focus\n  const row = shiftKey\n    ? grid.getMoveUpRowByKeyDownInternal(focusCell)\n    : grid.getMoveDownRowByKeyDownInternal(focusCell)\n  if (0 <= row && row < grid.rowCount) {\n    grid._moveFocusCell(focusCell.col, row, false)\n    // } else if (0 > row) {\n    //   grid._moveFocusCell(focusCell.col, grid.rowCount - 1, false)\n    // } else {\n    //   grid._moveFocusCell(focusCell.col, 0, false)\n  }\n}\nfunction _onKeyDownMove(this: DrawGrid, e: KeyboardEvent): void {\n  const { shiftKey, ctrlKey, metaKey, altKey } = e\n  const keyCode = event.getKeyCode(e)\n  if (altKey) {\n    return\n  }\n  const focusCell = shiftKey ? this.selection.focus : this.selection.select\n  if (keyCode === KEY_LEFT) {\n    if (ctrlKey || metaKey) {\n      move(this, null, 'W')\n    } else {\n      if (!hmove.call(this, 'W')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_UP) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'N', null)\n    } else {\n      if (!vmove.call(this, 'N')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_RIGHT) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, null, 'E')\n    } else {\n      if (!hmove.call(this, 'E')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_DOWN) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'S', null)\n    } else {\n      if (!vmove.call(this, 'S')) {\n        return\n      }\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_HOME) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'N', 'W')\n    } else {\n      move(this, null, 'W')\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_END) {\n    if (e.ctrlKey || e.metaKey) {\n      move(this, 'S', 'E')\n    } else {\n      move(this, null, 'E')\n    }\n    event.cancel(e)\n  } else if (keyCode === KEY_TAB && this.keyboardOptions?.moveCellOnTab) {\n    _onTabKeyDown.call(this, shiftKey)\n    event.cancel(e)\n  } else if (keyCode === KEY_ENTER && this.keyboardOptions?.moveCellOnEnter) {\n    _onEnterKeyDown.call(this, shiftKey)\n    event.cancel(e)\n  } else if (\n    keyCode === KEY_ALPHA_A &&\n    this.keyboardOptions?.selectAllOnCtrlA &&\n    (ctrlKey || metaKey)\n  ) {\n    let startCol = 0\n    let startRow = 0\n    if (shiftKey) {\n      if (\n        this.keyboardOptions?.selectAllOptions?.shiftCtrlA?.excludeFrozenCol\n      ) {\n        startCol = this.frozenRowCount\n      }\n      if (\n        this.keyboardOptions?.selectAllOptions?.shiftCtrlA?.excludeFrozenRow\n      ) {\n        startRow = this.frozenRowCount\n      }\n    } else {\n      if (this.keyboardOptions?.selectAllOptions?.ctrlA?.excludeFrozenCol) {\n        startCol = this.frozenRowCount\n      }\n      if (this.keyboardOptions?.selectAllOptions?.ctrlA?.excludeFrozenRow) {\n        startRow = this.frozenRowCount\n      }\n    }\n    this.selection.range = {\n      start: { col: startCol, row: startRow },\n      end: { col: this.colCount - 1, row: this.rowCount - 1 },\n    }\n    this.invalidate()\n    event.cancel(e)\n  }\n\n  function move(\n    grid: DrawGrid,\n    vDir: 'N' | 'S' | null,\n    hDir: 'W' | 'E' | null\n  ): void {\n    const row =\n      vDir === 'S' ? grid.rowCount - 1 : vDir === 'N' ? 0 : focusCell.row\n    const col =\n      hDir === 'E' ? grid.colCount - 1 : hDir === 'W' ? 0 : focusCell.col\n    grid._moveFocusCell(col, row, shiftKey)\n  }\n\n  function vmove(this: DrawGrid, vDir: 'N' | 'S'): boolean {\n    let row: number\n    if (vDir === 'S') {\n      row = this.getMoveDownRowByKeyDownInternal(focusCell)\n      if (this.rowCount <= row) {\n        return false\n      }\n    } else {\n      row = this.getMoveUpRowByKeyDownInternal(focusCell)\n      if (row < 0) {\n        return false\n      }\n    }\n    const { col } = focusCell\n    this._moveFocusCell(col, row, shiftKey)\n    return true\n  }\n\n  function hmove(\n    this: DrawGrid,\n    hDir: 'W' | 'E',\n    shiftKeyFlg: boolean = shiftKey\n  ): boolean {\n    let col: number\n    if (hDir === 'E') {\n      col = this.getMoveRightColByKeyDownInternal(focusCell)\n      if (this.colCount <= col) {\n        return false\n      }\n    } else {\n      col = this.getMoveLeftColByKeyDownInternal(focusCell)\n      if (col < 0) {\n        return false\n      }\n    }\n    const { row } = focusCell\n    this._moveFocusCell(col, row, shiftKeyFlg)\n    return true\n  }\n}\nfunction _bindEvents(this: DrawGrid): void {\n  const { handler, element, scrollable } = this[_]\n  const getCellEventArgsSet = <EVT extends TouchEvent | MouseEvent>(\n    e: EVT\n  ): {\n    abstractPos?: { x: number; y: number }\n    cell?: CellAddress\n    eventArgs?: CellAddress & { event: EVT }\n  } => {\n    const abstractPos = this._getMouseAbstractPoint(e)\n    if (!abstractPos) {\n      return {}\n    }\n    const cell = this.getCellAt(abstractPos.x, abstractPos.y)\n    if (cell.col < 0 || cell.row < 0) {\n      return {\n        abstractPos,\n        cell,\n      }\n    }\n    const eventArgs = {\n      col: cell.col,\n      event: e,\n      row: cell.row,\n    }\n    return {\n      abstractPos,\n      cell,\n      eventArgs,\n    }\n  }\n  const canResizeColumn = (col: number): boolean => {\n    const limit = this[_].colWidthsLimit[col]\n    let canResize = this.disableColumnResize !== true\n    if (limit && canResize) {\n      canResize = limit.disableResize !== true\n      if (canResize && limit.min && limit.max) {\n        canResize = limit.max !== limit.min\n      }\n    }\n    return canResize\n    // if (!limit || !limit.min || !limit.max) {\n    //     return true;\n    // }\n    // return limit.max !== limit.min;\n  }\n  handler.on(element, 'mousedown', (e: Event) => {\n    const eventArgsSet = getCellEventArgsSet(e as MouseEvent)\n    const abstractPos = eventArgsSet.abstractPos\n    const eventArgs = eventArgsSet.eventArgs\n    if (!abstractPos) {\n      return\n    }\n    if (eventArgs) {\n      const results = this.fireListeners(\n        DG_EVENT_TYPE.MOUSEDOWN_CELL,\n        eventArgs\n      )\n      if (array.findIndex(results, (v) => !v) >= 0) {\n        return\n      }\n    }\n    if (event.getMouseButtons(e as MouseEvent) !== 1) {\n      return\n    }\n    if (_getResizeSelectionAt.call(this, abstractPos.x, abstractPos.y)) {\n      this[_].selectionResizer.start(e as MouseEvent)\n    } else {\n      const resizeCol = _getResizeColAt.call(this, abstractPos.x, abstractPos.y)\n      if (resizeCol >= 0 && canResizeColumn(resizeCol)) {\n        // 改变宽度\n        this[_].columnResizer.start(resizeCol, e)\n      } else {\n        // 选择\n        this[_].cellSelector.start(e as MouseEvent)\n      }\n    }\n  })\n  handler.on(element, 'mouseup', (e: Event) => {\n    if (!this.hasListeners(DG_EVENT_TYPE.MOUSEUP_CELL)) {\n      return\n    }\n    const eventArgs = getCellEventArgsSet(e as MouseEvent).eventArgs\n    if (eventArgs) {\n      this.fireListeners(DG_EVENT_TYPE.MOUSEUP_CELL, eventArgs)\n    }\n  })\n  let doubleTapBefore: CellAddress | null | undefined = null\n  let longTouchId: NodeJS.Timer | null = null\n  handler.on(element, 'touchstart', (e: Event) => {\n    if (!doubleTapBefore) {\n      doubleTapBefore = getCellEventArgsSet(e as TouchEvent).eventArgs\n      setTimeout(() => {\n        doubleTapBefore = null\n      }, 350)\n    } else {\n      const eventArgs = getCellEventArgsSet(e as TouchEvent).eventArgs\n      if (\n        eventArgs &&\n        eventArgs.col === doubleTapBefore.col &&\n        eventArgs.row === doubleTapBefore.row\n      ) {\n        this.fireListeners(DG_EVENT_TYPE.DBLTAP_CELL, eventArgs)\n      } else if (!eventArgs) {\n        this.fireListeners(DG_EVENT_TYPE.DBLTAP_UNDERLAY)\n      }\n\n      doubleTapBefore = null\n\n      if (e.defaultPrevented) {\n        return\n      }\n    }\n\n    longTouchId = setTimeout(() => {\n      // 长按选择模式时\n      longTouchId = null\n      const abstractPos = this._getMouseAbstractPoint(e as TouchEvent)\n      if (!abstractPos) {\n        return\n      }\n\n      if (_getResizeSelectionAt.call(this, abstractPos.x, abstractPos.y)) {\n        this[_].selectionResizer.start(e as TouchEvent)\n      } else {\n        const resizeCol = _getResizeColAt.call(\n          this,\n          abstractPos.x,\n          abstractPos.y,\n          15\n        )\n        if (resizeCol >= 0 && canResizeColumn(resizeCol)) {\n          // 改变宽度\n          this[_].columnResizer.start(resizeCol, e)\n        } else {\n          // 选择\n          this[_].cellSelector.start(e as TouchEvent)\n        }\n      }\n    }, 500)\n  })\n\n  function cancel(e: Event) {\n    if (longTouchId) {\n      clearTimeout(longTouchId)\n      longTouchId = null\n    }\n  }\n  handler.on(element, 'touchcancel', cancel)\n  handler.on(element, 'touchmove', cancel)\n  handler.on(element, 'touchend', (e) => {\n    if (longTouchId) {\n      clearTimeout(longTouchId)\n      this[_].cellSelector.select(e as TouchEvent)\n      longTouchId = null\n    }\n  })\n\n  let isMouseover = false\n  let mouseEnterCell: CellAddress | null = null\n  let mouseOverCell: CellAddress | null = null\n  const onMouseenterCell = (\n    cell: CellAddress & { event: Event },\n    related?: CellAddress\n  ): void => {\n    this.fireListeners(DG_EVENT_TYPE.MOUSEENTER_CELL, {\n      col: cell.col,\n      row: cell.row,\n      event: cell.event,\n      related,\n    })\n    mouseEnterCell = cell\n  }\n  const onMouseleaveCell = (related?: CellAddress): CellAddress | undefined => {\n    const beforeMouseCell = mouseEnterCell\n    mouseEnterCell = null\n    if (beforeMouseCell) {\n      this.fireListeners(DG_EVENT_TYPE.MOUSELEAVE_CELL, {\n        col: beforeMouseCell.col,\n        row: beforeMouseCell.row,\n        related,\n      })\n    }\n    return beforeMouseCell || undefined\n  }\n  const onMouseoverCell = (\n    cell: CellAddress & { event: Event },\n    related?: CellAddress\n  ): void => {\n    this.fireListeners(DG_EVENT_TYPE.MOUSEOVER_CELL, {\n      col: cell.col,\n      row: cell.row,\n      event: cell.event,\n      related,\n    })\n    mouseOverCell = cell\n  }\n  const onMouseoutCell = (related?: CellAddress): CellAddress | undefined => {\n    const beforeMouseCell = mouseOverCell\n    mouseOverCell = null\n    if (beforeMouseCell) {\n      this.fireListeners(DG_EVENT_TYPE.MOUSEOUT_CELL, {\n        col: beforeMouseCell.col,\n        row: beforeMouseCell.row,\n        related,\n      })\n    }\n    return beforeMouseCell || undefined\n  }\n  const scrollElement = scrollable.getElement()\n  handler.on(scrollElement, 'mouseover', (e) => {\n    isMouseover = true\n  })\n  handler.on(scrollElement, 'mouseout', (e) => {\n    isMouseover = false\n    onMouseoutCell()\n  })\n\n  handler.on(element, 'mouseleave', (e) => {\n    onMouseleaveCell()\n  })\n\n  handler.on(element, 'mousemove', (e) => {\n    const eventArgsSet = getCellEventArgsSet(e as MouseEvent)\n    const abstractPos = eventArgsSet.abstractPos\n    const eventArgs = eventArgsSet.eventArgs\n    if (eventArgs) {\n      const beforeMouseCell = mouseEnterCell\n      if (beforeMouseCell) {\n        this.fireListeners(DG_EVENT_TYPE.MOUSEMOVE_CELL, eventArgs)\n        if (\n          beforeMouseCell.col !== eventArgs.col ||\n          beforeMouseCell.row !== eventArgs.row\n        ) {\n          const enterCell = {\n            col: eventArgs.col,\n            row: eventArgs.row,\n          }\n          const outCell = onMouseoutCell(enterCell)\n          const leaveCell = onMouseleaveCell(enterCell)\n          onMouseenterCell(eventArgs, leaveCell)\n          if (isMouseover) {\n            onMouseoverCell(eventArgs, outCell)\n          }\n        } else if (isMouseover && !mouseOverCell) {\n          onMouseoverCell(eventArgs)\n        }\n      } else {\n        onMouseenterCell(eventArgs)\n        if (isMouseover) {\n          onMouseoverCell(eventArgs)\n        }\n        this.fireListeners(DG_EVENT_TYPE.MOUSEMOVE_CELL, eventArgs)\n      }\n    } else {\n      onMouseoutCell()\n      onMouseleaveCell()\n    }\n    if (\n      this[_].columnResizer.moving(e) ||\n      this[_].selectionResizer.moving(e) ||\n      this[_].cellSelector.moving(e)\n    ) {\n      return\n    }\n    const elementStyle = element.style\n    if (!abstractPos) {\n      if (\n        elementStyle.cursor === 'col-resize' ||\n        elementStyle.cursor === 'crosshair'\n      ) {\n        elementStyle.cursor = ''\n      }\n      return\n    }\n    if (_getResizeSelectionAt.call(this, abstractPos.x, abstractPos.y)) {\n      elementStyle.cursor = 'crosshair'\n    } else {\n      const resizeCol = _getResizeColAt.call(this, abstractPos.x, abstractPos.y)\n      if (resizeCol >= 0 && canResizeColumn(resizeCol)) {\n        elementStyle.cursor = 'col-resize'\n      } else {\n        if (\n          elementStyle.cursor === 'col-resize' ||\n          elementStyle.cursor === 'crosshair'\n        ) {\n          elementStyle.cursor = ''\n        }\n      }\n    }\n  })\n  handler.on(element, 'click', (e) => {\n    if (\n      this[_].columnResizer.lastMoving(e) ||\n      this[_].selectionResizer.moving(e) ||\n      this[_].cellSelector.lastMoving(e)\n    ) {\n      return\n    }\n    if (\n      !this.hasListeners(DG_EVENT_TYPE.CLICK_CELL) &&\n      !this.hasListeners(DG_EVENT_TYPE.CLICK_UNDERLAY)\n    ) {\n      return\n    }\n    if (browser.Chrome && e.eventPhase === Event.AT_TARGET) {\n      // 解决 Chrome 下，单元格输入状态使用鼠标选择，当鼠标在输入框action按钮处抬起时触发动作问题\n      return\n    }\n    const eventArgs = getCellEventArgsSet(e as MouseEvent).eventArgs\n    if (!eventArgs) {\n      this.fireListeners(DG_EVENT_TYPE.CLICK_UNDERLAY)\n    } else {\n      this.fireListeners(DG_EVENT_TYPE.CLICK_CELL, eventArgs)\n    }\n  })\n  handler.on(element, 'contextmenu', (e) => {\n    if (!this.hasListeners(DG_EVENT_TYPE.CONTEXTMENU_CELL)) {\n      return\n    }\n    const { eventArgs } = getCellEventArgsSet(e)\n    if (!eventArgs) {\n      return\n    }\n    this.fireListeners(DG_EVENT_TYPE.CONTEXTMENU_CELL, eventArgs)\n  })\n  handler.on(element, 'dblclick', (e) => {\n    if (\n      !this.hasListeners(DG_EVENT_TYPE.DBLCLICK_CELL) &&\n      !this.hasListeners(DG_EVENT_TYPE.DBLCLICK_UNDERLAY)\n    ) {\n      return\n    }\n    const eventArgs = getCellEventArgsSet(e as MouseEvent).eventArgs\n    if (!eventArgs) {\n      this.fireListeners(DG_EVENT_TYPE.DBLCLICK_UNDERLAY)\n    } else {\n      this.fireListeners(DG_EVENT_TYPE.DBLCLICK_CELL, eventArgs)\n    }\n  })\n  this[_].focusControl.onKeyDown((evt: KeydownEvent) => {\n    const results = this.fireListeners(DG_EVENT_TYPE.KEYDOWN, evt)\n    if (array.findIndex(results, (v) => v === false) >= 0) {\n      return false\n    }\n  })\n  this[_].selection.listen(DG_EVENT_TYPE.SELECTED_CELL, (data) => {\n    const results = this.fireListeners(\n      DG_EVENT_TYPE.SELECTED_CELL,\n      data,\n      data.selected\n    )\n    if (array.findIndex(results, (v) => v === false) >= 0) {\n      return false\n    }\n  })\n\n  scrollable.onScroll((e) => {\n    _onScroll.call(this, e)\n    this.fireListeners(DG_EVENT_TYPE.SCROLL, { event: e })\n  })\n  this[_].focusControl.onKeyDownMove((e) => {\n    _onKeyDownMove.call(this, e as KeyboardEvent)\n  })\n  const getCopyValue = () => {\n    let copyValue = ''\n    const range = this[_].selection.range\n    const copyRange = this.getCopyRangeInternal(range)\n    for (let row = copyRange.start.row; row <= copyRange.end.row; row++) {\n      for (let col = copyRange.start.col; col <= copyRange.end.col; col++) {\n        const copyCellValue = this.getCopyCellValue(col, row, copyRange)\n        if (isPromise(copyCellValue)) {\n          // 无法获取异步数据\n        } else {\n          const strCellValue = `${copyCellValue}`\n          if (/^\\[object .*\\]$/.exec(strCellValue)) {\n            // object 忽视\n          } else {\n            copyValue += strCellValue\n          }\n        }\n\n        if (col < copyRange.end.col) {\n          copyValue += '\\t'\n        }\n      }\n      if (row < copyRange.end.row) {\n        copyValue += '\\n'\n      }\n    }\n    return copyValue\n  }\n  this[_].focusControl.onCopy((e: ClipboardEvent) => {\n    let copyValue = getCopyValue()\n    let value = array.find(this.fireListeners(DG_EVENT_TYPE.COPY, e), isDef)\n    if (isDef(value)) {\n      copyValue = value\n    }\n    return copyValue\n  })\n  this[_].focusControl.onCut((e: ClipboardEvent) => {\n    let copyValue = getCopyValue()\n    let value = array.find(this.fireListeners(DG_EVENT_TYPE.CUT, e), isDef)\n    if (isDef(value)) {\n      copyValue = value\n    }\n    return copyValue\n  })\n  this[_].focusControl.onPaste(\n    (e: { value: string; event: ClipboardEvent }) => {\n      const value = e.value\n      const event = e.event\n      const pasteValue = this.hasListeners(DG_EVENT_TYPE.PASTE)\n        ? array.find(\n            this.fireListeners(DG_EVENT_TYPE.PASTE, value, event),\n            isDef\n          )\n        : value\n      if (isDef(pasteValue)) {\n        const normalizeValue = pasteValue.replace(/\\r?\\n$/, '')\n        const { col, row } = this[_].selection.select\n        const multi = /[\\r\\n\\u2028\\u2029\\t]/.test(normalizeValue) // is multi cell values\n        let rangeBoxValues: PasteRangeBoxValues | null = null\n        const pasteCellEvent: PasteCellEvent = {\n          col,\n          row,\n          value: pasteValue,\n          normalizeValue,\n          multi,\n          get rangeBoxValues(): PasteRangeBoxValues {\n            return (\n              rangeBoxValues ??\n              (rangeBoxValues = parsePasteRangeBoxValues(normalizeValue))\n            )\n          },\n          event,\n        }\n        this.fireListeners(DG_EVENT_TYPE.PASTE_CELL, pasteCellEvent)\n      }\n    }\n  )\n  this[_].focusControl.onInput((value) => {\n    const col = this[_].selection.select.col\n    const row = this[_].selection.select.row\n    this.fireListeners(DG_EVENT_TYPE.INPUT_CELL, { col, row, value })\n  })\n  this[_].focusControl.onDelete((event) => {\n    const { col, row } = this[_].selection.select\n    this.fireListeners(DG_EVENT_TYPE.DELETE_CELL, { col, row, event })\n  })\n  this[_].focusControl.onFocus((e: FocusEvent) => {\n    this.fireListeners(DG_EVENT_TYPE.FOCUS_GRID, e)\n    this[_].focusedGrid = true\n\n    const col = this[_].selection.select.col\n    const row = this[_].selection.select.row\n    this.invalidateCell(col, row)\n  })\n  this[_].focusControl.onBlur((e: FocusEvent) => {\n    this.fireListeners(DG_EVENT_TYPE.BLUR_GRID, e)\n    this[_].focusedGrid = false\n\n    const col = this[_].selection.select.col\n    const row = this[_].selection.select.row\n    this.invalidateCell(col, row)\n  })\n}\nfunction _getResizeSelectionAt(\n  this: DrawGrid,\n  abstractX: number,\n  abstractY: number,\n  offset = 7\n): boolean {\n  const range = this.selection.range\n  const cellRect = this.getCellRect(range.end.col, range.end.row)\n  return !!(\n    cellRect.bottom - offset <= abstractY &&\n    abstractY <= cellRect.bottom &&\n    cellRect.right - offset <= abstractX &&\n    abstractX <= cellRect.right &&\n    this.canDragSelection\n  )\n}\nfunction _getResizeColAt(\n  this: DrawGrid,\n  abstractX: number,\n  abstractY: number,\n  offset = 5\n): number {\n  const grid = this\n  if (grid[_].frozenRowCount <= 0) {\n    return -1\n  }\n  const frozenRect = _getFrozenRowsRect.call(this)\n  if (frozenRect && !frozenRect.inPoint(abstractX, abstractY)) {\n    return -1\n  }\n  const cell = grid.getCellAt(abstractX, abstractY)\n  const cellRect = grid.getCellRect(cell.col, cell.row)\n  if (abstractX < cellRect.left + offset) {\n    return cell.col - 1\n  }\n  if (cellRect.right - offset < abstractX) {\n    return cell.col\n  }\n  return -1\n}\nfunction _getScrollableVisibleRect(this: DrawGrid): Rect {\n  let frozenColsWidth = 0\n  if (this[_].frozenColCount > 0) {\n    // 当有固定列时绘制固定数量的列\n    const frozenRect = _getFrozenColsRect.call(this)\n    if (frozenRect) {\n      frozenColsWidth = frozenRect.width\n    }\n  }\n  let frozenRowsHeight = 0\n  if (this[_].frozenRowCount > 0) {\n    // 当有固定列时绘制固定数量的列\n    const frozenRect = _getFrozenRowsRect.call(this)\n    if (frozenRect) {\n      frozenRowsHeight = frozenRect.height\n    }\n  }\n  return new Rect(\n    this[_].scrollable.scrollLeft + frozenColsWidth,\n    this[_].scrollable.scrollTop + frozenRowsHeight,\n    this[_].canvas.width - frozenColsWidth,\n    this[_].canvas.height - frozenRowsHeight\n  )\n}\n\nexport interface DrawGridProtected {\n  element: HTMLElement\n  scrollable: ScrollableAPI\n  handler: EventHandler\n  selection: Selection\n  focusControl: FocusControl\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  rowCount: number\n  colCount: number\n  frozenColCount: number\n  frozenRowCount: number\n  defaultRowHeight?: number\n  defaultColWidth?: string | number\n  highlightBorderWidth?: string | number\n  font?: string\n  underlayRowCount: number\n  underlayColCount: number\n  underlayRowHeight: number | 'auto'\n  underlayColWidth: number | 'auto'\n  underlayBackgroundColor?: string\n  borderColor: string\n  borderWidth: number\n  borderMode: BorderMode\n  keyboardOptions?: DrawGridKeyboardOptions\n  singleSelection: boolean\n  disableColumnResize: boolean\n  rowHeightsMap: NumberMap<number>\n  colWidthsMap: NumberMap<string | number>\n  colWidthsLimit: {\n    [col: number]: {\n      max?: string | number\n      min?: string | number\n      disableResize?: boolean\n    }\n  }\n  colWidthsOffset: {\n    [col: number]: number\n  }\n  calcWidthContext: {\n    _: DrawGridProtected\n    full: number\n    em: number\n  }\n\n  columnResizer: ColumnResizer\n  selectionResizer: SelectionResizer\n  cellSelector: CellSelector\n\n  drawCells: { [row: number]: { [col: number]: DrawCellContext } }\n  cellTextOverflows: { [at: string]: string }\n  cellTypeOverflows: {\n    [at: string]: string\n  }\n  focusedGrid: boolean\n\n  config:\n    | {\n        [name: string]: any\n      }\n    | undefined\n  scroll: {\n    left: number\n    top: number\n  }\n  disposables?: { dispose(): void }[] | null\n}\n\nexport interface DrawGridConstructorOptions {\n  rowCount?: number\n  colCount?: number\n  frozenColCount?: number\n  frozenRowCount?: number\n  /**\n   * Default grid row height. default 40\n   */\n  defaultRowHeight?: number\n  /**\n   * Default grid col width. default 80\n   */\n  defaultColWidth?: number | string\n  highlightBorderWidth?: number | string\n  font?: string\n  underlayRowCount?: number\n  underlayColCount?: number\n  underlayRowHeight?: number | 'auto'\n  underlayColWidth?: number | 'auto'\n  underlayBackgroundColor?: string\n  borderMode?: BorderMode\n  borderColor?: string\n  borderWidth?: number\n  keyboardOptions?: DrawGridKeyboardOptions\n  /**\n   * Canvas parent element\n   */\n  parentElement?: HTMLElement | null\n  /**\n   * Disable column resizing\n   */\n  disableColumnResize?: boolean\n  singleSelection?: boolean\n}\n\ninterface IDisposable {\n  dispose: () => void\n}\n\nfunction createRootElement() {\n  const element = document.createElement('div')\n  element.classList.add('kaka-grid')\n  return element\n}\n\n/**\n * DrawGrid\n */\nexport abstract class DrawGrid extends EventTarget {\n  public static get EVENT_TYPE(): typeof DG_EVENT_TYPE {\n    return DG_EVENT_TYPE\n  }\n  private [_]: DrawGridProtected\n  /**\n   * constructor\n   *\n   * <pre>\n   * Constructor options\n   * -----\n   * rowCount: grid row count.default 10\n   * colCount: grid col count.default 10\n   * frozenColCount: default 0\n   * frozenRowCount: default 0\n   * defaultRowHeight: default grid row height. default 40\n   * defaultColWidth: default grid col width. default 80\n   * highlightBorderWidth: default grid highlight border width. default 2\n   * parentElement: canvas parentElement\n   * font: default font\n   * underlayRowCount: default 0\n   * underlayColCount: default 0\n   * underlayRowHeight: default 'auto'\n   * underlayColWidth: default 'auto'\n   * underlayBackgroundColor: underlay background color\n   * singleSelection: default false\n   * disableColumnResize: default false\n   * -----\n   * </pre>\n   */\n  public constructor(options: DrawGridConstructorOptions = {}) {\n    super()\n    const {\n      rowCount = 10,\n      colCount = 10,\n      frozenColCount = 0,\n      frozenRowCount = 0,\n      defaultRowHeight,\n      defaultColWidth,\n      highlightBorderWidth,\n      font,\n      underlayRowCount = 0,\n      underlayColCount = 0,\n      underlayRowHeight = 'auto',\n      underlayColWidth = 'auto',\n      underlayBackgroundColor,\n      borderMode = 'none',\n      borderColor = '',\n      borderWidth = 0,\n      keyboardOptions,\n      parentElement,\n      singleSelection,\n      disableColumnResize,\n    } = options\n    const protectedSpace = (this[_] = {} as DrawGridProtected)\n    style.initDocument()\n    protectedSpace.element = createRootElement()\n\n    protectedSpace.canvas = hiDPI.transform(document.createElement('canvas'))\n    protectedSpace.context = protectedSpace.canvas.getContext('2d', {\n      alpha: false,\n    }) as CanvasRenderingContext2D\n\n    protectedSpace.scrollable = style.isPerfectScrollbar()\n      ? new Scrollbar()\n      : new Scrollable(protectedSpace.canvas)\n    protectedSpace.handler = new EventHandler()\n    protectedSpace.selection = new Selection(this, (range: CellRange) => {\n      return this.updateSelectionRange(range)\n    })\n    protectedSpace.focusControl = new FocusControl(\n      this,\n      protectedSpace.scrollable.getElement(),\n      protectedSpace.scrollable\n    )\n\n    protectedSpace.rowCount = rowCount\n    protectedSpace.colCount = colCount\n    protectedSpace.frozenColCount = frozenColCount\n    protectedSpace.frozenRowCount = frozenRowCount\n    protectedSpace.underlayRowCount = underlayRowCount\n    protectedSpace.underlayColCount = underlayColCount\n    protectedSpace.underlayRowHeight = underlayRowHeight\n    protectedSpace.underlayColWidth = underlayColWidth\n    protectedSpace.borderMode = borderMode\n    protectedSpace.borderColor = borderColor\n    protectedSpace.borderWidth = borderWidth\n\n    protectedSpace.defaultRowHeight = defaultRowHeight\n    protectedSpace.defaultColWidth = defaultColWidth\n    protectedSpace.highlightBorderWidth = highlightBorderWidth\n\n    protectedSpace.font = font\n    protectedSpace.underlayBackgroundColor = underlayBackgroundColor\n    protectedSpace.keyboardOptions = keyboardOptions || {}\n    protectedSpace.keyboardOptions.moveCellOnEnter =\n      protectedSpace.keyboardOptions.moveCellOnEnter ?? true\n    protectedSpace.keyboardOptions.moveCellOnTab =\n      protectedSpace.keyboardOptions.moveCellOnTab ?? true\n    protectedSpace.singleSelection = !!singleSelection\n    protectedSpace.disableColumnResize =\n      !!disableColumnResize || !!(options as any).disableColResize\n\n    /////\n    protectedSpace.rowHeightsMap = new NumberMap<number>()\n    protectedSpace.colWidthsMap = new NumberMap<number | string>()\n    protectedSpace.colWidthsLimit = {}\n    protectedSpace.colWidthsOffset = {}\n    protectedSpace.calcWidthContext = {\n      _: protectedSpace,\n      get full(): number {\n        return this._.canvas.width\n      },\n      get em(): number {\n        return getFontSize(this._.context, this._.font).width\n      },\n    }\n\n    protectedSpace.columnResizer = new ColumnResizer(this)\n    protectedSpace.selectionResizer = new SelectionResizer(this)\n    protectedSpace.cellSelector = new CellSelector(this)\n\n    protectedSpace.drawCells = {}\n    protectedSpace.cellTextOverflows = {}\n    protectedSpace.cellTypeOverflows = {}\n    protectedSpace.focusedGrid = false\n\n    protectedSpace.element.appendChild(protectedSpace.canvas)\n    protectedSpace.element.appendChild(protectedSpace.scrollable.getElement())\n    protectedSpace.scroll = {\n      left: 0,\n      top: 0,\n    }\n    this.updateScroll()\n    if (parentElement) {\n      parentElement.appendChild(protectedSpace.element)\n      this.updateSize()\n    } else {\n      this.updateSize()\n    }\n    _bindEvents.call(this)\n    this.bindEventsInternal()\n  }\n  /**\n   * Get root element.\n   * @returns root element\n   */\n  public getElement(): HTMLElement {\n    return this[_].element\n  }\n  /**\n   * Get canvas element.\n   */\n  public get canvas(): HTMLCanvasElement {\n    return this[_].canvas\n  }\n  /**\n   * Focus the grid.\n   * @returns\n   */\n  public focus(): void {\n    const { col, row } = this[_].selection.select\n    this.focusCell(col, row)\n  }\n  public hasFocusGrid(): boolean {\n    return this[_].focusedGrid\n  }\n  /**\n   * Selection instance.\n   */\n  public get selection(): Selection {\n    return this[_].selection\n  }\n  /**\n   * Number of rows.\n   */\n  public get rowCount(): number {\n    return this[_].rowCount\n  }\n  public set rowCount(rowCount: number) {\n    this[_].rowCount = rowCount\n    this.updateScroll()\n    if (this[_].selection._updateGridRange()) {\n      const { col, row } = this[_].selection.focus\n      this.makeVisibleCell(col, row)\n      this.setFocusCursor(col, row)\n    }\n  }\n  /**\n   * Number of columns.\n   */\n  public get colCount(): number {\n    return this[_].colCount\n  }\n  public set colCount(colCount: number) {\n    this[_].colCount = colCount\n    this.updateScroll()\n    if (this[_].selection._updateGridRange()) {\n      const { col, row } = this[_].selection.focus\n      this.makeVisibleCell(col, row)\n      this.setFocusCursor(col, row)\n    }\n  }\n  /**\n   * Number of frozen columns.\n   */\n  public get frozenColCount(): number {\n    return this[_].frozenColCount\n  }\n  public set frozenColCount(frozenColCount: number) {\n    this[_].frozenColCount = frozenColCount\n  }\n  /**\n   * Number of frozen rows.\n   */\n  public get frozenRowCount(): number {\n    return this[_].frozenRowCount\n  }\n  public set frozenRowCount(frozenRowCount: number) {\n    this[_].frozenRowCount = frozenRowCount\n  }\n  /**\n   * Default row height.\n   *\n   */\n  public get defaultRowHeight(): number {\n    return this[_].defaultRowHeight || this.getDefaultRowHeight()\n  }\n  public set defaultRowHeight(defaultRowHeight: number) {\n    this[_].defaultRowHeight = defaultRowHeight\n  }\n  /**\n   * Default column width.\n   */\n  public get defaultColWidth(): string | number {\n    return this[_].defaultColWidth || this.getDefaultColWidth()\n  }\n  public set defaultColWidth(defaultColWidth: string | number) {\n    this[_].defaultColWidth = defaultColWidth\n  }\n  /**\n   * Highlight Border Width.\n   */\n  public get highlightBorderWidth(): string | number {\n    return this[_].highlightBorderWidth || this.getHighlightBorderWidth()\n  }\n  public set highlightBorderWidth(highlightBorderWidth: string | number) {\n    this[_].highlightBorderWidth = highlightBorderWidth\n  }\n  /**\n   * Font definition as a string.\n   */\n  public get font(): string {\n    return this[_].font || this.getDefaultFont()\n  }\n  public set font(font) {\n    this[_].font = font\n  }\n  /**\n   * Number of underlay rows.\n   */\n  public get underlayRowCount(): number {\n    return this[_].underlayRowCount\n  }\n  public set underlayRowCount(underlayRowCount: number) {\n    this[_].underlayRowCount = underlayRowCount\n  }\n  /**\n   * Number of underlay cols.\n   */\n  public get underlayColCount(): number {\n    return this[_].underlayColCount\n  }\n  public set underlayColCount(underlayColCount: number) {\n    this[_].underlayColCount = underlayColCount\n  }\n  /**\n   * Height of underlay row.\n   */\n  public get underlayRowHeight(): number | 'auto' {\n    return this[_].underlayRowHeight\n  }\n  public set underlayRowHeight(underlayRowHeight: number | 'auto') {\n    this[_].underlayRowHeight = underlayRowHeight\n  }\n  /**\n   * Width of underlay col.\n   */\n  public get underlayColWidth(): number | 'auto' {\n    return this[_].underlayColWidth\n  }\n  public set underlayColWidth(underlayColWidth: number | 'auto') {\n    this[_].underlayColWidth = underlayColWidth\n  }\n  /**\n   * Background color of the underlay.\n   */\n  public get underlayBackgroundColor(): string {\n    return (\n      this[_].underlayBackgroundColor ||\n      this.getDefaultUnderlayBackgroundColor()\n    )\n  }\n  public set underlayBackgroundColor(underlayBackgroundColor) {\n    this[_].underlayBackgroundColor = underlayBackgroundColor\n  }\n  /**\n   * Border color of the grid.\n   */\n  public get borderColor(): string {\n    return this[_].borderColor || this.getDefaultBorderColor()\n  }\n  public set borderColor(borderColor) {\n    this[_].borderColor = borderColor\n  }\n  /**\n   * Border width of the grid.\n   */\n  public get borderWidth(): number {\n    return this[_].borderWidth || this.getDefaultBorderWidth()\n  }\n  public set borderWidth(borderWidth) {\n    this[_].borderWidth = borderWidth\n  }\n  /**\n   * Border mode of the grid.\n   */\n  public get borderMode(): BorderMode {\n    return this[_].borderMode || this.getDefaultBorderMode()\n  }\n  public set borderMode(borderMode) {\n    this[_].borderMode = borderMode\n  }\n  public get keyboardOptions(): DrawGridKeyboardOptions | null {\n    return this[_].keyboardOptions ?? null\n  }\n  public set keyboardOptions(keyboardOptions) {\n    this[_].keyboardOptions = keyboardOptions ?? undefined\n  }\n  /**\n   * Single selection.\n   */\n  public get singleSelection(): boolean {\n    return this[_].singleSelection\n  }\n  public set singleSelection(singleSelection: boolean) {\n    this[_].singleSelection = singleSelection\n  }\n  /**\n   * Disable column resize.\n   */\n  public get disableColumnResize(): boolean {\n    return this[_].disableColumnResize\n  }\n  public set disableColumnResize(disableColumnResize: boolean) {\n    this[_].disableColumnResize = disableColumnResize\n  }\n  public get disableColResize(): boolean {\n    window.console.warn(\n      \"'disableColResize' is deprecated, please use 'disableColumnResize' instead\"\n    )\n    return this.disableColumnResize\n  }\n  public set disableColResize(disableColumnResize: boolean) {\n    window.console.warn(\n      \"'disableColResize' is deprecated, please use 'disableColumnResize' instead\"\n    )\n    this.disableColumnResize = disableColumnResize\n  }\n  public get canDragSelection() {\n    return this[_].selectionResizer.canStart()\n  }\n  public configure(\n    name: 'fadeinWhenCallbackInPromise',\n    value?: boolean\n  ): boolean\n  public configure(name: string, value?: any): any {\n    const cfg = this[_].config || (this[_].config = {})\n    if (isDef(value)) {\n      cfg[name] = value\n    }\n    return cfg[name]\n  }\n  /**\n   * Apply the changed size.\n   * @returns\n   */\n  public updateSize(): void {\n    // Update size of canvas\n    const { canvas } = this[_]\n    canvas.style.width = ''\n    canvas.style.height = ''\n\n    let width = canvas.offsetWidth\n    if (!width) {\n      // for legacy\n      const parent = canvas.parentElement\n      if (parent !== null) {\n        width = parent.offsetWidth - style.getScrollBarSize()\n      }\n    }\n    width = Math.floor(width)\n\n    let height = canvas.offsetHeight\n    if (!height) {\n      // for legacy\n      const parent = canvas.parentElement\n      if (parent !== null) {\n        height = parent.offsetHeight - style.getScrollBarSize()\n      }\n    }\n    height = Math.floor(height)\n\n    canvas.width = width\n    canvas.height = height\n\n    canvas.style.width = `${width}px`\n    canvas.style.height = `${height}px`\n\n    const sel = this[_].selection.select\n    this[_].focusControl.setFocusRect(\n      this.getFocusRectInternal(sel.col, sel.row)\n    )\n  }\n  /**\n   * Apply the changed scroll size.\n   * @returns `true` if there was a change in the scroll size\n   */\n  public updateScroll(): boolean {\n    _initColWidthsOffset(this)\n    const { scrollable } = this[_]\n    const newHeight = _getScrollHeight.call(this)\n    const newWidth = _getScrollWidth.call(this)\n    if (\n      newHeight === scrollable.scrollHeight &&\n      newWidth === scrollable.scrollWidth\n    ) {\n      scrollable.update()\n      return false\n    } else {\n      scrollable.setScrollSize(newWidth, newHeight)\n      this[_].scroll = {\n        left: scrollable.scrollLeft,\n        top: scrollable.scrollTop,\n      }\n      return true\n    }\n  }\n  /**\n   * Get the row height of the given the row index.\n   * @param row - The row index\n   * @returns The row height\n   */\n  public getRowHeight(row: number): number {\n    return _getRowHeight.call(this, row)\n  }\n  /**\n   * Set the row height of the given the row index.\n   * @param row - The row index\n   * @param height - The row height\n   * @returns\n   */\n  public setRowHeight(row: number, height: number): void {\n    _setRowHeight.call(this, row, height)\n  }\n  /**\n   * Get the column width of the given the column index.\n   * @param col - The column index\n   * @returns The column width\n   */\n  public getColWidth(col: number): number {\n    return _getColWidth.call(this, col)\n  }\n  /**\n   * Set the column widtht of the given the column index.\n   * @param col - The column index\n   * @param width - The column width\n   * @returns\n   */\n  public setColWidth(col: number, width: number | string): void {\n    _setColWidth.call(this, col, width)\n  }\n  /**\n   * Get the column max width of the given the column index.\n   * @param col - The column index\n   * @returns The column max width\n   */\n  public getMaxColWidth(col: number): string | number | undefined {\n    const obj = this[_].colWidthsLimit[col]\n    return (obj && obj.max) || undefined\n  }\n  /**\n   * Set the column max width of the given the column index.\n   * @param col - The column index\n   * @param maxWidth - The column max width\n   * @returns\n   */\n  public setMaxColWidth(col: number, maxWidth: number | string): void {\n    const obj =\n      this[_].colWidthsLimit[col] || (this[_].colWidthsLimit[col] = {})\n    obj.max = maxWidth\n  }\n  /**\n   * Get the column min width of the given the column index.\n   * @param col - The column index\n   * @returns The column min width\n   */\n  public getMinColWidth(col: number): string | number | undefined {\n    const obj = this[_].colWidthsLimit[col]\n    return (obj && obj.min) || undefined\n  }\n  /**\n   * Set the column min width of the given the column index.\n   * @param col - The column index\n   * @param minWidth - The column min width\n   * @returns\n   */\n  public setMinColWidth(col: number, minWidth: number | string): void {\n    const obj =\n      this[_].colWidthsLimit[col] || (this[_].colWidthsLimit[col] = {})\n    obj.min = minWidth\n  }\n  /**\n   * Get the column disable resize of the given the column index.\n   * @param col - The column index\n   * @returns The column disable resize\n   */\n  public getColDisableResize(col: number) {\n    const obj = this[_].colWidthsLimit[col]\n    return (obj && obj.disableResize) || undefined\n  }\n  /**\n   * Set the column disable resize of the given the column index.\n   * @param col - The column index\n   * @param disableResize - The column disable resize\n   * @returns\n   */\n  public setColDisableResize(col: number, disableResize: boolean) {\n    const obj =\n      this[_].colWidthsLimit[col] || (this[_].colWidthsLimit[col] = {})\n    obj.disableResize = disableResize\n  }\n  /**\n   * Get the rect of the cell.\n   * @param col - index of column, of the cell\n   * @param row - index of row, of the cell\n   * @returns the rect of the cell.\n   */\n  public getCellRect(col: number, row: number): Rect {\n    const isFrozenCell = this.isFrozenCell(col, row)\n\n    let absoluteLeft = this._getColsWidth(0, col - 1)\n    const width = _getColWidth.call(this, col)\n    if (isFrozenCell && isFrozenCell.col) {\n      absoluteLeft += this[_].scroll.left\n    }\n\n    let absoluteTop = _getRowsHeight.call(this, 0, row - 1)\n    const height = _getRowHeight.call(this, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      absoluteTop += this[_].scroll.top\n    }\n    return new Rect(absoluteLeft, absoluteTop, width, height)\n  }\n  /**\n   * Get the relative rectangle of the cell.\n   * @param col - index of column, of the cell\n   * @param row - index of row, of the cell\n   * @returns the rect of the cell.\n   */\n  public getCellRelativeRect(col: number, row: number): Rect {\n    return this._toRelativeRect(this.getCellRect(col, row))\n  }\n  /**\n   * Get the rectangle of the cells area.\n   * @param startCol - index of the starting column, of the cell\n   * @param startRow - index of the starting row, of the cell\n   * @param endCol - index of the ending column, of the cell\n   * @param endRow - index of the ending row, of the cell\n   * @returns the rect of the cells.\n   */\n  public getCellsRect(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number\n  ) {\n    const isFrozenStartCell = this.isFrozenCell(startCol, startRow)\n    const isFrozenEndCell = this.isFrozenCell(endCol, endRow)\n\n    let absoluteLeft = this._getColsWidth(0, startCol - 1)\n    let width = this._getColsWidth(startCol, endCol)\n    if (isFrozenStartCell && isFrozenStartCell.col) {\n      const scrollLeft = this[_].scroll.left\n      absoluteLeft += scrollLeft\n      if (!isFrozenEndCell || !isFrozenEndCell.col) {\n        width -= scrollLeft\n        width = Math.max(\n          width,\n          this._getColsWidth(startCol, this.frozenColCount - 1)\n        )\n      }\n    }\n    let absoluteTop = _getRowsHeight.call(this, 0, startRow - 1)\n    let height = _getRowsHeight.call(this, startRow, endRow)\n    if (isFrozenStartCell && isFrozenStartCell.row) {\n      const scrollTop = this[_].scroll.top\n      absoluteTop += scrollTop\n      if (!isFrozenEndCell || !isFrozenEndCell.row) {\n        height -= scrollTop\n        height = Math.max(\n          height,\n          this._getColsWidth(startRow, this.frozenRowCount - 1)\n        )\n      }\n    }\n    return new Rect(absoluteLeft, absoluteTop, width, height)\n  }\n  public getCellRangeRect(range: CellRange): Rect {\n    return this.getCellsRect(\n      range.start.col,\n      range.start.row,\n      range.end.col,\n      range.end.row\n    )\n  }\n  public isFrozenCell(\n    col: number,\n    row: number\n  ): {\n    row: boolean\n    col: boolean\n  } | null {\n    const { frozenRowCount, frozenColCount } = this[_]\n    const isFrozenRow = frozenRowCount > 0 && row < frozenRowCount\n    const isFrozenCol = frozenColCount > 0 && col < frozenColCount\n    if (isFrozenRow || isFrozenCol) {\n      return {\n        col: isFrozenCol,\n        row: isFrozenRow,\n      }\n    } else {\n      return null\n    }\n  }\n  public getRowAt(absoluteY: number): number {\n    const frozen = _getTargetFrozenRowAt.call(this, absoluteY)\n    if (frozen) {\n      return frozen.row\n    }\n    const row = _getTargetRowAt.call(this, absoluteY)\n    return row ? row.row : -1\n  }\n  public getColAt(absoluteX: number): number {\n    const frozen = _getTargetFrozenColAt.call(this, absoluteX)\n    if (frozen) {\n      return frozen.col\n    }\n    const col = _getTargetColAt.call(this, absoluteX)\n    return col ? col.col : -1\n  }\n  public getCellAt(absoluteX: number, absoluteY: number): CellAddress {\n    return {\n      col: this.getColAt(absoluteX),\n      row: this.getRowAt(absoluteY),\n    }\n  }\n  /**\n   * Scroll to where cell is visible.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns\n   */\n  public makeVisibleCell(col: number, row: number): void {\n    const isFrozenCell = this.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.col && isFrozenCell.row) {\n      return\n    }\n    const rect = this.getCellRect(col, row)\n    const visibleRect = _getScrollableVisibleRect.call(this)\n    if (visibleRect.contains(rect)) {\n      return\n    }\n    const { scrollable } = this[_]\n    if (!isFrozenCell || !isFrozenCell.col) {\n      if (rect.left < visibleRect.left) {\n        scrollable.scrollLeft -= visibleRect.left - rect.left\n      } else if (visibleRect.right < rect.right) {\n        scrollable.scrollLeft -= visibleRect.right - rect.right\n      }\n    }\n    if (!isFrozenCell || !isFrozenCell.row) {\n      if (rect.top < visibleRect.top) {\n        scrollable.scrollTop -= visibleRect.top - rect.top\n      } else if (visibleRect.bottom < rect.bottom) {\n        scrollable.scrollTop -= visibleRect.bottom - rect.bottom\n      }\n    }\n  }\n  /**\n   * Moves the focus cursor to the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns\n   */\n  public setFocusCursor(col: number, row: number): void {\n    const focusControl = this[_].focusControl\n    const oldEditMode = focusControl.editMode\n\n    focusControl.setFocusRect(this.getFocusRectInternal(col, row))\n\n    this._updatedSelection()\n\n    if (oldEditMode && !focusControl.editMode) {\n      focusControl.resetInputStatus()\n    }\n  }\n  public _updatedSelection(): void {\n    const { focusControl } = this[_]\n    const { col: selCol, row: selRow } = this[_].selection.select\n    const results = this.fireListeners(DG_EVENT_TYPE.EDITABLEINPUT_CELL, {\n      col: selCol,\n      row: selRow,\n    })\n\n    const editMode = array.findIndex(results, (v) => !!v) >= 0\n    focusControl.editMode = editMode\n\n    if (editMode) {\n      focusControl.storeInputStatus()\n      focusControl.setDefaultInputStatus()\n      this.fireListeners(DG_EVENT_TYPE.MODIFY_STATUS_EDITABLEINPUT_CELL, {\n        col: selCol,\n        row: selRow,\n        input: focusControl.input,\n      })\n    }\n  }\n  /**\n   * Focus the cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns\n   */\n  public focusCell(col: number, row: number): void {\n    const startCol = this.selection.range.start.col\n    const startRow = this.selection.range.start.row\n    const endCol = this.selection.range.end.col\n    const endRow = this.selection.range.end.row\n\n    this.setFocusCursor(col, row)\n\n    // Failure occurs in IE if focus is not last\n    this._forceFocusCell()\n\n    // Invalidate Grid\n    this.selection.select = {\n      col,\n      row,\n    }\n    this.invalidateGridRect(startCol, startRow, endCol, endRow)\n    this.invalidateCell(col, row)\n  }\n  /**\n   * Redraws the range of the given cell.\n   * @param col - The column index of cell.\n   * @param row - The row index of cell.\n   * @returns\n   */\n  public invalidateCell(col: number, row: number): void {\n    this.invalidateGridRect(col, row)\n  }\n  /**\n   * Redraws the range of the given cells.\n   * @param startCol - index of the starting column, of the cell\n   * @param startRow - index of the starting row, of the cell\n   * @param endCol - index of the ending column, of the cell\n   * @param endRow - index of the ending row, of the cell\n   * @returns\n   */\n  public invalidateGridRect(\n    startCol: number,\n    startRow: number,\n    endCol = startCol,\n    endRow = startRow\n  ): void {\n    const offset = this.getOffsetInvalidateCells()\n    if (offset > 0) {\n      startCol -= offset\n      startRow -= offset\n      endCol += offset\n      endRow += offset\n    }\n\n    const visibleRect = this._getVisibleRect()\n    const cellsRect = this.getCellsRect(startCol, startRow, endCol, endRow)\n    const invalidateTarget = visibleRect.intersection(cellsRect)\n    if (invalidateTarget) {\n      const { frozenColCount, frozenRowCount } = this[_]\n      if (frozenColCount > 0 && endCol >= frozenColCount) {\n        const frozenRect = _getFrozenColsRect.call(this)\n        if (frozenRect && frozenRect.intersection(invalidateTarget)) {\n          invalidateTarget.left = Math.min(\n            frozenRect.right - 1,\n            frozenRect.left\n          )\n        }\n      }\n\n      if (frozenRowCount > 0 && endRow >= frozenRowCount) {\n        const frozenRect = _getFrozenRowsRect.call(this)\n        if (frozenRect && frozenRect.intersection(invalidateTarget)) {\n          invalidateTarget.top = Math.min(\n            frozenRect.bottom - 1,\n            invalidateTarget.top\n          )\n        }\n      }\n\n      this._invalidateRect(invalidateTarget)\n    }\n  }\n  invalidateCellRange(range: CellRange): void {\n    this.invalidateGridRect(\n      range.start.col,\n      range.start.row,\n      range.end.col,\n      range.end.row\n    )\n  }\n  /**\n   * Redraws the whole grid.\n   * @returns\n   */\n  public invalidate(): void {\n    const visibleRect = this._getVisibleRect()\n    this._invalidateRect(visibleRect)\n  }\n  /**\n   * Get the number of scrollable rows fully visible in the grid. visibleRowCount does not include the frozen rows counted by the frozenRowCount property. It does not include any partially visible rows on the bottom of the grid.\n   * @returns\n   */\n  public get visibleRowCount(): number {\n    const { frozenRowCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleTop =\n      frozenRowCount > 0\n        ? visibleRect.top + _getRowsHeight.call(this, 0, frozenRowCount - 1)\n        : visibleRect.top\n\n    const initRow = _getTargetRowAt.call(this, visibleTop)\n    if (!initRow) {\n      return 0\n    }\n    const startRow = Math.max(\n      initRow.top >= visibleTop ? initRow.row : initRow.row + 1,\n      frozenRowCount\n    )\n    let absoluteTop = _getRowsHeight.call(this, 0, startRow - 1)\n    let count = 0\n    const { rowCount } = this\n    for (let row = startRow; row < rowCount; row++) {\n      const height = _getRowHeight.call(this, row)\n      const bottom = absoluteTop + height\n      if (visibleRect.bottom < bottom) {\n        break\n      }\n      count++\n      absoluteTop = bottom\n    }\n    return count\n  }\n  /**\n   * Get the number of scrollable columns fully visible in the grid. visibleColCount does not include the frozen columns counted by the frozenColCount property. It does not include any partially visible columns on the right of the grid.\n   * @returns\n   */\n  public get visibleColCount(): number {\n    const { frozenColCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleLeft =\n      frozenColCount > 0\n        ? visibleRect.left + this._getColsWidth(0, frozenColCount - 1)\n        : visibleRect.left\n\n    const initCol = _getTargetColAt.call(this, visibleLeft)\n    if (!initCol) {\n      return 0\n    }\n    const startCol = Math.max(\n      initCol.left >= visibleLeft ? initCol.col : initCol.col + 1,\n      frozenColCount\n    )\n    let absoluteLeft = this._getColsWidth(0, startCol - 1)\n    let count = 0\n    const { colCount } = this\n    for (let col = startCol; col < colCount; col++) {\n      const width = _getColWidth.call(this, col)\n      const right = absoluteLeft + width\n      if (visibleRect.right < right) {\n        break\n      }\n      count++\n      absoluteLeft = right\n    }\n    return count\n  }\n  /**\n   * Get the index of the first row in the scrollable region that is visible.\n   * @returns\n   */\n  public get topRow(): number {\n    const { frozenRowCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleTop =\n      frozenRowCount > 0\n        ? visibleRect.top + _getRowsHeight.call(this, 0, frozenRowCount - 1)\n        : visibleRect.top\n\n    const initRow = _getTargetRowAt.call(this, visibleTop)\n    if (!initRow) {\n      return 0\n    }\n    return Math.max(\n      initRow.top >= visibleTop ? initRow.row : initRow.row + 1,\n      frozenRowCount\n    )\n  }\n  /**\n   * Get the index of the first column in the scrollable region that is visible.\n   * @returns\n   */\n  public get leftCol(): number {\n    const { frozenColCount } = this\n    const visibleRect = this._getVisibleRect()\n    const visibleLeft =\n      frozenColCount > 0\n        ? visibleRect.left + this._getColsWidth(0, frozenColCount - 1)\n        : visibleRect.left\n\n    const initCol = _getTargetColAt.call(this, visibleLeft)\n    if (!initCol) {\n      return 0\n    }\n    return Math.max(\n      initCol.left >= visibleLeft ? initCol.col : initCol.col + 1,\n      frozenColCount\n    )\n  }\n  /**\n   * gets or sets the number of pixels that an element's content is scrolled vertically\n   */\n  public get scrollTop(): number {\n    return this[_].scrollable.scrollTop\n  }\n  public set scrollTop(scrollTop) {\n    this[_].scrollable.scrollTop = scrollTop\n  }\n  /**\n   * gets or sets the number of pixels that an element's content is scrolled from its left edge\n   */\n  public get scrollLeft(): number {\n    return this[_].scrollable.scrollLeft\n  }\n  public set scrollLeft(scrollLeft) {\n    this[_].scrollable.scrollLeft = scrollLeft\n  }\n  /**\n   * Get the overflowed text in the cell rectangle, from the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns The text overflowing the cell rect.\n   */\n  public getCellOverflowText(col: number, row: number): string | null {\n    let overflowText = this.getCellOverflowTextInternal({ col, row }) || null\n    if (!overflowText) {\n      const key = `${col}:${row}`\n      overflowText = this[_].cellTextOverflows[key] || null\n    }\n    return overflowText\n  }\n  /**\n   * Set the overflowed text in the cell rectangle, to the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @param overflowText - The overflowed text in the cell rectangle.\n   * @returns\n   */\n  public setCellOverflowText(\n    col: number,\n    row: number,\n    overflowText: string | false\n  ) {\n    const key = `${col}:${row}`\n    if (overflowText) {\n      this[_].cellTextOverflows[key] =\n        typeof overflowText === 'string' ? overflowText.trim() : ''\n    } else {\n      delete this[_].cellTextOverflows[key]\n    }\n  }\n  /**\n   * Get the overflowed type in the cell rectangle, from the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @returns The type overflowing the cell rect.\n   */\n  public getCellOverflowType(col: number, row: number): string | null {\n    let overflowType = this.getCellOverflowTypeInternal({ col, row }) || null\n    if (!overflowType) {\n      const key = `${col}:${row}`\n      overflowType = this[_].cellTypeOverflows[key] || null\n    }\n    return overflowType\n  }\n  /**\n   * Set the overflowed type in the cell rectangle, to the given cell.\n   * @param col - The column index.\n   * @param row - The row index\n   * @param overflowType - The overflowed type in the cell rectangle.\n   * @returns\n   */\n  public setCellOverflowType(\n    col: number,\n    row: number,\n    overflowType: string | false\n  ) {\n    const key = `${col}:${row}`\n    if (overflowType) {\n      this[_].cellTypeOverflows[key] =\n        typeof overflowType === 'string' ? overflowType.trim() : ''\n    } else {\n      delete this[_].cellTypeOverflows[key]\n    }\n  }\n  public addDisposable(disposable: IDisposable) {\n    if (\n      !disposable ||\n      !disposable.dispose ||\n      typeof disposable.dispose !== 'function'\n    ) {\n      throw new Error('not disposable!')\n    }\n    const disposables = (this[_].disposables = this[_].disposables || [])\n    disposables.push(disposable)\n  }\n  /**\n   * Dispose the grid instance.\n   * @returns\n   */\n  public dispose() {\n    super.dispose()\n    const protectedSpace = this[_]\n    protectedSpace.handler.dispose()\n    protectedSpace.scrollable.dispose()\n    protectedSpace.focusControl.dispose()\n    protectedSpace.columnResizer.dispose()\n    protectedSpace.selectionResizer.dispose()\n    protectedSpace.cellSelector.dispose()\n    if (protectedSpace.disposables) {\n      protectedSpace.disposables.forEach((disposable: IDisposable) =>\n        disposable.dispose()\n      )\n      protectedSpace.disposables = null\n    }\n\n    const parentElement = protectedSpace.element.parentElement\n    if (parentElement) {\n      parentElement.removeChild(protectedSpace.element)\n    }\n  }\n  public getAttachCellsArea(range: CellRange) {\n    return {\n      element: this.getElement(),\n      rect: this.getAttachCellsAreaInternal(range),\n      padding: this.getAttachCellsPaddingInternal(range),\n    }\n  }\n  public onKeyDownMove(evt: KeyboardEvent): void {\n    _onKeyDownMove.call(this, evt)\n  }\n  public _getMouseAbstractPoint(evt: Event) {\n    let e: Touch | MouseEvent\n    if (event.isTouchEvent(evt)) {\n      e = evt.changedTouches[0]\n    } else {\n      e = evt as MouseEvent\n    }\n    const clientX = e.clientX || e.pageX + window.scrollX\n    const clientY = e.clientY || e.pageY + window.scrollY\n    const rect = this[_].canvas.getBoundingClientRect()\n    if (rect.right <= clientX) {\n      return null\n    }\n    if (rect.bottom <= clientY) {\n      return null\n    }\n    const x = clientX - rect.left + this[_].scroll.left\n    const y = clientY - rect.top + this[_].scroll.top\n    return { x, y }\n  }\n  public _getMouseRelativePoint(e: Event) {\n    const abstractPos = this._getMouseAbstractPoint(e)\n    if (abstractPos) {\n      return {\n        x: abstractPos.x - this[_].scroll.left,\n        y: abstractPos.y - this[_].scroll.top,\n      }\n    } else {\n      return null\n    }\n  }\n  public _getColsWidth(startCol: number, endCol: number) {\n    const defaultColPxWidth = _colWidthDefineToPxWidth.call(\n      this,\n      this.defaultColWidth\n    )\n    const colCount = endCol - startCol + 1\n    let w = defaultColPxWidth * colCount\n    this[_].colWidthsMap.each(\n      startCol,\n      endCol,\n      (width: number | string, col: number) => {\n        w +=\n          _adjustColWidth.call(\n            this,\n            col,\n            _colWidthDefineToPxWidth.call(this, width)\n          ) - defaultColPxWidth\n      }\n    )\n    for (let col = startCol; col <= endCol; col++) {\n      if (this[_].colWidthsMap.has(col)) {\n        continue\n      }\n      const adj = _adjustColWidth.call(this, col, defaultColPxWidth)\n      if (adj !== defaultColPxWidth) {\n        w += adj - defaultColPxWidth\n      }\n    }\n    return w\n  }\n  public _moveFocusCell(\n    col: number,\n    row: number,\n    shiftKey: boolean,\n    silence?: boolean\n  ) {\n    const offset = this.getOffsetInvalidateCells()\n\n    function extendRange(range: any) {\n      if (offset > 0) {\n        range.start.col -= offset\n        range.start.row -= offset\n        range.end.col += offset\n        range.end.row += offset\n      }\n      return range\n    }\n\n    const beforeRange = extendRange(this.selection.range)\n    const beforeRect = this.getCellRangeRect(beforeRange)\n\n    this.selection._setFocusCell(col, row, shiftKey)\n    if (!silence) {\n      this.makeVisibleCell(col, row)\n    }\n    this.setFocusCursor(col, row)\n    this._forceFocusCell()\n\n    const afterRange = extendRange(this.selection.range)\n    const afterRect = this.getCellRangeRect(afterRange)\n\n    if (afterRect.intersection(beforeRect)) {\n      const invalidateRect = Rect.max(afterRect, beforeRect)\n      this._invalidateRect(invalidateRect)\n    } else {\n      this._invalidateRect(beforeRect)\n      this._invalidateRect(afterRect)\n    }\n  }\n  public _forceFocusCell() {\n    this[_].focusControl.focus()\n  }\n  public _resetColWidthOffset(col: number) {\n    delete this[_].colWidthsOffset[col]\n  }\n  public _adjustColWidth(col: number, orgWidth: number) {\n    const offset = this[_].colWidthsOffset[col] || 0\n    const limits = _getColWidthLimits.call(this, col)\n    return Math.max(_applyColWidthLimits(limits, orgWidth), 0) + offset\n  }\n  public _getVisibleRect() {\n    const left = this[_].scroll.left\n    const top = this[_].scroll.top\n    const width = this[_].canvas.width\n    const height = this[_].canvas.height\n    return new Rect(left, top, width, height)\n  }\n  public _invalidateRect(drawRect: Rect) {\n    const ctx = this._getInitContext()\n    if (ctx) {\n      const visibleRect = this._getVisibleRect()\n      const rowCount = this[_].rowCount\n\n      const initRow = _getTargetRowAt.call(\n        this,\n        Math.max(visibleRect.top, drawRect.top)\n      ) || {\n        row: rowCount,\n        top: _getRowsHeight.call(this, 0, rowCount - 1),\n      }\n      const initCol = _getTargetColAt.call(\n        this,\n        Math.max(visibleRect.left, drawRect.left)\n      ) || {\n        col: this[_].colCount,\n        left: this._getColsWidth(0, this[_].colCount - 1),\n      }\n      const drawBottom = Math.min(visibleRect.bottom, drawRect.bottom)\n      const drawRight = Math.min(visibleRect.right, drawRect.right)\n\n      const initFrozenRow = _getTargetFrozenRowAt.call(\n        this,\n        Math.max(visibleRect.top, drawRect.top)\n      )\n      const initFrozenCol = _getTargetFrozenColAt.call(\n        this,\n        Math.max(visibleRect.left, drawRect.left)\n      )\n\n      const drawLayers = new DrawLayers()\n\n      const drawGridBorder = () => {\n        const isContent = this.borderMode === 'content-border'\n        const isGrid = this.borderMode === 'grid-border'\n        if (isGrid || isContent) {\n          let width = this[_].canvas.width\n          let height = this[_].canvas.height\n          if (isContent) {\n            let w =\n              this._getColsWidth(0, this[_].colCount - 1) - visibleRect.left\n            let h = _getRowsHeight.call(this, 0, rowCount - 1) - visibleRect.top\n            width = Math.min(this[_].canvas.width, w)\n            height = Math.min(this[_].canvas.height, h)\n          }\n          ctx.save()\n          try {\n            ctx.beginPath()\n            ctx.lineWidth = this.borderWidth || 0\n            ctx.strokeStyle = this.borderColor || 'transparent'\n            ctx.rect(\n              0 + ctx.lineWidth / 2,\n              0 + ctx.lineWidth / 2,\n              width - ctx.lineWidth,\n              height - ctx.lineWidth\n            )\n            ctx.stroke()\n          } finally {\n            ctx.restore()\n          }\n        }\n      }\n\n      const drawOuter = (row: number, absoluteTop: number) => {\n        // 在数据范围之外绘制\n        if (\n          row >= rowCount - 1 &&\n          this[_].canvas.height > absoluteTop - visibleRect.top\n        ) {\n          const outerTop = absoluteTop - visibleRect.top\n          if (this.underlayBackgroundColor === 'transparent') {\n            ctx.clearRect(\n              0,\n              outerTop,\n              this[_].canvas.width,\n              this[_].canvas.height - outerTop\n            )\n          } else {\n            ctx.save()\n            ctx.beginPath()\n            ctx.fillStyle = this.underlayBackgroundColor || '#F6F6F6'\n            ctx.rect(\n              0,\n              outerTop,\n              this[_].canvas.width,\n              this[_].canvas.height - outerTop\n            )\n            ctx.fill()\n            ctx.restore()\n          }\n        }\n      }\n\n      let skipAbsoluteTop = 0\n      if (initFrozenRow) {\n        let absoluteTop = initFrozenRow.top\n        const count = this[_].frozenRowCount\n        for (let row = initFrozenRow.row; row < count; row++) {\n          const height = _getRowHeight.call(this, row)\n          _drawRow.call(\n            this,\n            ctx,\n            initFrozenCol,\n            initCol,\n            drawRight,\n            row,\n            absoluteTop,\n            height,\n            visibleRect,\n            0,\n            drawLayers\n          )\n          absoluteTop += height\n          if (drawBottom <= absoluteTop) {\n            // 在绘制范围之外（结束）\n            drawOuter(row, absoluteTop)\n            drawGridBorder()\n            drawLayers.draw(ctx)\n            return\n          }\n        }\n        skipAbsoluteTop = absoluteTop\n      }\n\n      let rowAbsoluteTop = initRow.top\n      for (let row = initRow.row; row < rowCount; row++) {\n        const height = _getRowHeight.call(this, row)\n\n        // 绘制行\n        _drawRow.call(\n          this,\n          ctx,\n          initFrozenCol,\n          initCol,\n          drawRight,\n          row,\n          rowAbsoluteTop,\n          height,\n          visibleRect,\n          skipAbsoluteTop,\n          drawLayers\n        )\n\n        rowAbsoluteTop += height\n        if (drawBottom <= rowAbsoluteTop) {\n          // 在绘制范围之外（结束）\n          drawOuter(row, rowAbsoluteTop)\n          drawGridBorder()\n          drawLayers.draw(ctx)\n          return\n        }\n      }\n      drawOuter(rowCount - 1, rowAbsoluteTop)\n      drawGridBorder()\n\n      drawLayers.draw(ctx)\n    }\n  }\n  public _getInitContext() {\n    const ctx = this[_].context\n    if (ctx) {\n      // 初始化\n      ctx.fillStyle = 'white'\n      ctx.strokeStyle = 'black'\n      ctx.textAlign = 'left'\n      ctx.textBaseline = 'top'\n      ctx.lineWidth = 1\n      ctx.font = this.font || '16px sans-serif'\n    }\n    return ctx\n  }\n  public _toRelativeRect(absoluteRect: Rect) {\n    const rect = absoluteRect.copy()\n    const visibleRect = this._getVisibleRect()\n    rect.offsetLeft(-visibleRect.left)\n    rect.offsetTop(-visibleRect.top)\n\n    return rect\n  }\n  /**\n   * Overwrites the definition of a column whose width is set to `auto` with the current auto width formula.\n   * @param grid - grid instance\n   * @returns\n   */\n  public _storeAutoColWidthExprs() {\n    let expr = null\n    for (let col = 0; col < this[_].colCount; col++) {\n      const def = _getColWidthDefine.call(this, col)\n      if (isAutoDefine(def)) {\n        _setColWidth.call(\n          this,\n          col,\n          expr || (expr = _calcAutoColWidthExpr.call(this))\n        )\n      }\n    }\n  }\n  public resize() {\n    if (this.getElement().offsetParent) {\n      // 只在元素可见时刷新\n      this.updateSize()\n      this.updateScroll()\n      this.invalidate()\n    }\n  }\n  /**\n   * Get the value of cell with the copy action.\n   * <p>\n   * Please implement\n   * </p>\n   *\n   * @param col - Column index of cell.\n   * @param row - Row index of cell.\n   * @returns the value of cell\n   */\n  protected getCopyCellValue(\n    _col: number,\n    _row: number,\n    _range: CellRange\n  ): string | Promise<string> | void {\n    // Please implement get cell value!!\n  }\n  /**\n   * Draw a cell\n   * <p>\n   * Please implement cell drawing.\n   * </p>\n   *\n   * @param col - Column index of cell.\n   * @param row - Row index of cell.\n   * @param context - context of cell drawing.\n   * @returns\n   */\n  protected abstract onDrawCell(\n    col: number,\n    row: number,\n    context: CellContext\n  ): Promise<void> | void\n  protected bindEventsInternal() {\n    // nothing\n  }\n  protected getTargetRowAtInternal(\n    _absoluteY: number\n  ): { row: number; top: number } | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getRowsHeightInternal(\n    _startRow: number,\n    _endRow: number\n  ): number | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getRowHeightInternal(_row: number): number | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getScrollHeightInternal(_row?: number): number | void {\n    // 忽略继承的设置继承和实现的计算\n  }\n  protected getMoveLeftColByKeyDownInternal({ col }: CellAddress): number {\n    return col - 1\n  }\n  protected getMoveRightColByKeyDownInternal({ col }: CellAddress): number {\n    return col + 1\n  }\n  protected getMoveUpRowByKeyDownInternal({ row }: CellAddress): number {\n    return row - 1\n  }\n  protected getMoveDownRowByKeyDownInternal({ row }: CellAddress): number {\n    return row + 1\n  }\n  protected getOffsetInvalidateCells(): number {\n    return 0\n  }\n  protected getCopyRangeInternal(range: CellRange): CellRange {\n    return range\n  }\n  protected getAttachCellsAreaInternal(range: CellRange) {\n    return this._toRelativeRect(this.getCellRangeRect(range))\n  }\n  protected getAttachCellsPaddingInternal(\n    _range: CellRange\n  ): [number, number, number, number] {\n    return [0, 3, 0, 3]\n  }\n  protected getFocusRectInternal(col: number, row: number) {\n    return this.getCellRect(col, row)\n  }\n  protected getDefaultRowHeight() {\n    return 40\n  }\n  protected getDefaultColWidth() {\n    return 80\n  }\n  protected getHighlightBorderWidth() {\n    return 2\n  }\n  protected updateSelectionRange(range: CellRange) {\n    return range\n  }\n  protected getCellOverflowTextInternal(_cell: CellAddress) {\n    return ''\n  }\n  protected getCellOverflowTypeInternal(_cell: CellAddress) {\n    return ''\n  }\n  protected getDefaultBorderMode() {\n    return 'none'\n  }\n  fireListeners<TYPE extends keyof DrawGridEventHandlersEventMap>(\n    type: TYPE,\n    ...event: DrawGridEventHandlersEventMap[TYPE]\n  ): DrawGridEventHandlersReturnMap[TYPE][] {\n    return super.fireListeners(type, ...event)\n  }\n  protected abstract getDefaultFont(): string\n  protected abstract getDefaultUnderlayBackgroundColor(): string\n  protected abstract getDefaultBorderColor(): string\n  protected abstract getDefaultBorderWidth(): number\n}\n","import { DrawGrid } from './core/DrawGrid'\nimport { DG_EVENT_TYPE, DrawGridEvents } from './core/draw-grid/DG_EVENT_TYPE'\n\n/**\n * core modules\n */\nexport const core = { DrawGrid, EVENT_TYPE: DG_EVENT_TYPE as DrawGridEvents }\n","import { DataSource, DataSourceParam } from './DataSource'\nimport {\n  FieldData,\n  FieldDef,\n  MaybePromise,\n  MaybePromiseOrUndef,\n} from '../ts-types'\nimport { PromiseCacheValue } from './internal/types'\n\nfunction _setFieldCache<T, F extends FieldDef<T>>(\n  fCache: { [index: number]: Map<FieldDef<T>, any> },\n  index: number,\n  field: F,\n  value: PromiseCacheValue<any>\n): void {\n  const recCache = fCache[index] || (fCache[index] = new Map())\n  recCache.set(field, value)\n}\n/**\n * grid data source for caching Promise data\n */\nexport class CachedDataSource<T> extends DataSource<T> {\n  private _rCache: { [index: number]: any }\n  private _fCache: { [index: number]: Map<FieldDef<T>, any> }\n  static get EVENT_TYPE(): typeof DataSource.EVENT_TYPE {\n    return DataSource.EVENT_TYPE\n  }\n  static ofArray<T>(array: T[]): CachedDataSource<T> {\n    return new CachedDataSource({\n      get: (index: number): T => array[index],\n      length: array.length,\n      source: array,\n    })\n  }\n  constructor(opt?: DataSourceParam<T>) {\n    super(opt)\n    this._rCache = {}\n    this._fCache = {}\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    if (this._rCache && this._rCache[index]) {\n      return this._rCache[index]\n    }\n    return super.getOriginal(index)\n  }\n  protected getOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F\n  ): FieldData {\n    const rowCache = this._fCache && this._fCache[index]\n    if (rowCache) {\n      const cache = rowCache.get(field)\n      if (cache) {\n        return cache\n      }\n    }\n    return super.getOriginalField(index, field)\n  }\n  protected setOriginalField<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: any\n  ): MaybePromise<boolean> {\n    const fCache = this._fCache\n    if (fCache && fCache[index]) {\n      delete fCache[index] // clear row cache\n    }\n    return super.setOriginalField(index, field, value)\n  }\n  public clearCache(): void {\n    if (this._rCache) {\n      this._rCache = {}\n    }\n    if (this._fCache) {\n      this._fCache = {}\n    }\n  }\n  protected fieldPromiseCallBackInternal<F extends FieldDef<T>>(\n    index: number,\n    field: F,\n    value: PromiseCacheValue<any>\n  ): void {\n    _setFieldCache(this._fCache, index, field, value)\n  }\n  protected recordPromiseCallBackInternal(\n    index: number,\n    record: PromiseCacheValue<T>\n  ): void {\n    this._rCache[index] = record\n  }\n  public dispose(): void {\n    super.dispose()\n  }\n}\n","import { MaybePromiseOrUndef } from '../../ts-types'\nimport { isPromise } from '../../internal/utils'\nimport { DataSource } from '../DataSource'\n\nexport class DataSourceIterator<T> {\n  private _dataSource: DataSource<T>\n  private _curIndex: number\n  private _data: MaybePromiseOrUndef<T>[]\n  public constructor(dataSource: DataSource<T>) {\n    this._dataSource = dataSource\n    this._curIndex = -1\n    this._data = []\n  }\n  public hasNext(): boolean {\n    const next = this._curIndex + 1\n    return this._dataSource.length > next\n  }\n  public next(): MaybePromiseOrUndef<T> {\n    const next = this._curIndex + 1\n    const data = this._getIndexData(next)\n    this._curIndex = next\n    return data\n  }\n  public movePrev(): void {\n    this._curIndex--\n  }\n  private _getIndexData(index: number, nest?: boolean): MaybePromiseOrUndef<T> {\n    const dataSource = this._dataSource\n    const data = this._data\n    if (index < data.length) {\n      return data[index]\n    }\n\n    if (dataSource.length <= index) {\n      return undefined\n    }\n    const record = this._dataSource.get(index)\n    data[index] = record\n    if (isPromise(record)) {\n      record.then((val) => {\n        data[index] = val\n      })\n      if (!nest) {\n        for (let i = 1; i <= 100; i++) {\n          this._getIndexData(index + i, true)\n        }\n      }\n    }\n    return record\n  }\n}\n","import { isPromise } from '../../internal/utils'\nimport { DataSource } from '../DataSource'\nimport { FilterDataSource } from '../FilterDataSource'\nimport { DataSourceIterator } from './DataSourceIterator'\nimport { MaybePromiseOrUndef } from '../../ts-types'\n\nexport type Filter<T> = (record: T | undefined) => boolean\n\nexport class FilterData<T> {\n  private _owner: FilterDataSource<T>\n  private _dataSourceItr: DataSourceIterator<T>\n  private _filter: Filter<T>\n  private _filteredList: (T | undefined)[]\n  private _queues: (Promise<T | undefined> | null)[]\n  private _cancel: boolean = false\n  public constructor(\n    dc: FilterDataSource<T>,\n    original: DataSource<T>,\n    filter: Filter<T>\n  ) {\n    this._owner = dc\n    this._dataSourceItr = new DataSourceIterator(original)\n    this._filter = filter\n    this._filteredList = []\n    this._queues = []\n  }\n  public get filter() {\n    return this._filter\n  }\n  public get(index: number): MaybePromiseOrUndef<T> {\n    if (this._cancel) {\n      return undefined\n    }\n    const filteredList = this._filteredList\n    if (index < filteredList.length) {\n      return filteredList[index]\n    }\n    const queues = this._queues\n    const indexQueue = queues[index]\n    if (indexQueue) {\n      return indexQueue\n    }\n    return queues[index] || this._findIndex(index)\n  }\n  public cancel(): void {\n    this._cancel = true\n  }\n  private _findIndex(index: number): MaybePromiseOrUndef<T> {\n    if (window.Promise) {\n      const timeout = Date.now() + 100\n      let count = 0\n      return this._findIndexWithTimeout(index, () => {\n        count++\n        if (count >= 100) {\n          count = 0\n          return timeout < Date.now()\n        }\n        return false\n      })\n    }\n    return this._findIndexWithTimeout(index, () => false)\n  }\n  private _findIndexWithTimeout(\n    index: number,\n    testTimeout: () => boolean\n  ): MaybePromiseOrUndef<T> {\n    const filteredList = this._filteredList\n    const filter = this._filter\n    const dataSourceItr = this._dataSourceItr\n\n    const queues = this._queues\n\n    while (dataSourceItr.hasNext()) {\n      if (this._cancel) {\n        return undefined\n      }\n      const record = dataSourceItr.next()\n      if (isPromise(record)) {\n        dataSourceItr.movePrev()\n        return (queues[index] = record.then((value: any) => {\n          queues[index] = null\n          return this.get(index)\n        }))\n      }\n      if (filter(record)) {\n        filteredList.push(record)\n        if (index < filteredList.length) {\n          return filteredList[index]\n        }\n      }\n      if (testTimeout()) {\n        const promise = new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(undefined)\n          }, 300)\n        })\n        const queue = promise.then(() => {\n          queues[index] = null\n          return this.get(index)\n        })\n        queues[index] = queue\n        return queue\n      }\n    }\n    const dc = this._owner\n    dc.length = filteredList.length\n    return undefined\n  }\n}\n","import { EventHandler } from '../internal/EventHandler'\nimport { DataSource } from './DataSource'\nimport { FilterData, Filter } from './filter/FilterData'\nimport { MaybePromiseOrUndef, FieldDef, MaybePromise } from '../ts-types'\n\n/**\n * grid data source for filter\n */\nexport class FilterDataSource<T> extends DataSource<T> {\n  private _dataSource: DataSource<T>\n  private _handler: EventHandler\n  private _filterData: FilterData<T> | null = null\n  public static get EVENT_TYPE(): typeof DataSource.EVENT_TYPE {\n    return DataSource.EVENT_TYPE\n  }\n  public constructor(dataSource: DataSource<T>, filter: Filter<T>) {\n    super(dataSource)\n    this._dataSource = dataSource\n    this.filter = filter\n    const handler = (this._handler = new EventHandler())\n    handler.on(dataSource, FilterDataSource.EVENT_TYPE.UPDATED_ORDER, () => {\n      // reset\n      this.filter = this.filter\n    })\n    for (const k in FilterDataSource.EVENT_TYPE) {\n      if (FilterDataSource.EVENT_TYPE.hasOwnProperty(k)) {\n        const type = (FilterDataSource.EVENT_TYPE as any)[k]\n        handler.on(dataSource as any, type, (...args) =>\n          this.fireListeners(type, ...args)\n        )\n      }\n    }\n  }\n  public get filter(): Filter<T> | null {\n    return this._filterData?.filter || null\n  }\n  public set filter(filter) {\n    if (this._filterData) {\n      this._filterData.cancel()\n    }\n    this._filterData = filter\n      ? new FilterData(this, this._dataSource, filter)\n      : null\n    this.setLength(this._dataSource.length)\n  }\n  protected getOriginal(index: number): MaybePromiseOrUndef<T> {\n    if (!this._filterData) {\n      return super.getOriginal(index)\n    }\n    return this._filterData.get(index)\n  }\n  public sort(field: FieldDef<T>, order: 'desc' | 'asc'): MaybePromise<void> {\n    return this._dataSource.sort(field, order)\n  }\n  get source(): any {\n    return this._dataSource.source\n  }\n  get dataSource(): DataSource<T> {\n    return this._dataSource\n  }\n  public dispose(): void {\n    this._handler.dispose()\n    super.dispose()\n  }\n  protected refreshInternal() {\n    this.filter = this.filter\n  }\n}\n","import { DataSource } from './DataSource'\n\nenum aggregateType {\n  count,\n  sum,\n  avg,\n  max,\n  min,\n}\n\ninterface IPivotBase {\n  field: string\n}\n\ninterface IPivotColumn extends IPivotBase {\n  aggregate: aggregateType\n}\n\ninterface IPivotRow extends IPivotBase {}\n\ninterface IPivotCol extends IPivotBase {}\n\ninterface IPivotDataSourceOptions {\n  rowPivots: IPivotRow[]\n  colPivots: IPivotCol[]\n  columns: IPivotColumn[]\n}\n\ninterface IPivotKeysMap<T> {\n  [rowKey: string]: {\n    [colKey: string]: T[]\n  }\n}\n\ninterface IPivotDistinctMap {\n  [field: string]: string[]\n}\n\ninterface IPivotDistinctKeysMap {\n  [field: string]: {\n    [value: string]: boolean\n  }\n}\n\nfunction _getPivotRecordKey<T>(\n  record: T,\n  pivots: IPivotBase[],\n  distinctKeys: IPivotDistinctKeysMap\n) {\n  const keys = []\n  for (const i of pivots) {\n    const field = i.field\n    const value = JSON.stringify((record as any)[i.field]) || ''\n    distinctKeys[field] = distinctKeys[field] || {}\n    distinctKeys[field][value] = true\n    keys.push(value)\n  }\n  return keys.join('_')\n}\n\n/**\n * grid data source for pivot\n */\nexport class PivotDataSource<T> extends DataSource<T> {\n  public static get EVENT_TYPE() {\n    return DataSource.EVENT_TYPE\n  }\n  private _dataSource: DataSource<T>\n  private _options: IPivotDataSourceOptions\n  private _records: T[] = []\n  private _keysMap: IPivotKeysMap<T> = {}\n  private _distinctMap: IPivotDistinctMap = {}\n  public constructor(\n    dataSource: DataSource<T>,\n    options: IPivotDataSourceOptions\n  ) {\n    super(dataSource)\n    this._dataSource = dataSource\n\n    this._options = options\n\n    this.refresh()\n  }\n  public get options() {\n    return this._options\n  }\n  protected getOriginal(index: number) {\n    return this._records[index]\n  }\n  public refresh() {\n    this._keysMap = {}\n    const distinctKeys: IPivotDistinctKeysMap = {}\n    const rowPivots = this._options.rowPivots || []\n    const colPivots = this._options.colPivots || []\n    const begin = new Date()\n    for (let i = 0; i < this._dataSource.length; i++) {\n      const record = this._dataSource.get(i)\n      const rowKey = _getPivotRecordKey(record, rowPivots, distinctKeys)\n      const colKey = _getPivotRecordKey(record, colPivots, distinctKeys)\n      this._keysMap[rowKey] = this._keysMap[rowKey] || {}\n      this._keysMap[rowKey][colKey] = this._keysMap[rowKey][colKey] || []\n      this._keysMap[rowKey][colKey].push(record as any)\n    }\n    this._distinctMap = {}\n    for (const field in distinctKeys) {\n      if (distinctKeys.hasOwnProperty(field)) {\n        this._distinctMap[field] = []\n        const keys = distinctKeys[field]\n        for (const key in keys) {\n          if (keys.hasOwnProperty(key)) {\n            this._distinctMap[field].push(key)\n          }\n        }\n      }\n    }\n    const end = new Date()\n    const s = Number(end) - Number(begin)\n    // TODO: data.ts PivotDataSource.ts\n    window.console.log(s)\n    this._records = [] // 显示记录列表\n    this.length = this._records.length\n  }\n}\n","import { CachedDataSource } from './data/CachedDataSource'\nimport { DataSource } from './data/DataSource'\nimport { FilterDataSource } from './data/FilterDataSource'\nimport { PivotDataSource } from './data/PivotDataSource'\nimport { TreeDataSource } from './data/TreeDataSource'\n\n/**\n * data modules\n */\nexport const data = {\n  CachedDataSource,\n  DataSource,\n  FilterDataSource,\n  PivotDataSource,\n  TreeDataSource,\n}\n","import {\n  ListGridAPI,\n  EventListenerId,\n  BaseHeaderActionOption,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\n\nexport interface IBaseHeaderActionOptions<T> {\n  disabled?: boolean | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean)\n}\n\nexport class BaseAction<T> {\n  protected _disabled:\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean)\n  public constructor(option: BaseHeaderActionOption<T> = {}) {\n    this._disabled = option.disabled || false\n  }\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n  public set disabled(disabled) {\n    if (this._disabled !== disabled) {\n      this._disabled = disabled\n      this.onChangeDisabledInternal()\n    }\n  }\n  public clone(): BaseAction<T> {\n    return new BaseAction(this)\n  }\n  public bindGridEvent(\n    _grid: ListGridAPI<T>,\n    _cellId: LayoutObjectId\n  ): EventListenerId[] {\n    return []\n  }\n  public onChangeDisabledInternal(): void {\n    // nothing\n  }\n}\n","import {\n  ListGridAPI,\n  CellAddress,\n  LayoutObjectId,\n  EventListenerId,\n} from '../../ts-types'\nimport { DG_EVENT_TYPE } from '../../core/draw-grid/DG_EVENT_TYPE'\nimport { event } from '../../internal/utils'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\n\nexport function bindCellClickAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    mouseOver,\n    mouseOut,\n  }: {\n    action: (cell: CellAddress) => void\n    mouseOver?: (cell: CellAddress) => boolean\n    mouseOut?: (cell: CellAddress) => void\n  }\n): EventListenerId[] {\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n  let inMouse: boolean\n  return [\n    // click\n    grid.listen(DG_EVENT_TYPE.CLICK_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      action({\n        col: e.col,\n        row: e.row,\n      })\n    }),\n    // mouse move\n    grid.listen(DG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (mouseOver) {\n        if (\n          !mouseOver({\n            col: e.col,\n            row: e.row,\n          })\n        ) {\n          return\n        }\n      }\n      grid.getElement().style.cursor = 'pointer'\n      inMouse = true\n    }),\n    // 当MOUSEENTER从侧面看，因为它与'col-resize'的处理冲突，移动被监视和处理\n    grid.listen(DG_EVENT_TYPE.MOUSEMOVE_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (inMouse && !grid.getElement().style.cursor) {\n        grid.getElement().style.cursor = 'pointer'\n      }\n    }),\n    grid.listen(DG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n      if (!isTarget(e.col, e.row)) {\n        return\n      }\n      if (mouseOut) {\n        mouseOut({\n          col: e.col,\n          row: e.row,\n        })\n      }\n      grid.getElement().style.cursor = ''\n      inMouse = false\n    }),\n  ]\n}\nexport function bindCellKeyAction<T>(\n  grid: ListGridAPI<T>,\n  cellId: LayoutObjectId,\n  {\n    action,\n    acceptKeys = [],\n  }: {\n    action: (option: CellAddress) => void\n    acceptKeys?: number[]\n  }\n) {\n  acceptKeys = [...acceptKeys, KEY_ENTER, KEY_SPACE]\n  function isTarget(col: number, row: number): boolean {\n    return grid.getLayoutCellId(col, row) === cellId\n  }\n  return [\n    // enter key down\n    grid.listen(DG_EVENT_TYPE.KEYDOWN, (e) => {\n      if (acceptKeys.indexOf(e.keyCode) === -1) {\n        return\n      }\n      if (grid.keyboardOptions?.moveCellOnEnter && e.keyCode === KEY_ENTER) {\n        // When moving with the enter key, no action is taken with the enter key.\n        return\n      }\n      const sel = grid.selection.select\n      if (!isTarget(sel.col, sel.row)) {\n        return\n      }\n      action({\n        col: sel.col,\n        row: sel.row,\n      })\n      event.cancel(e.event)\n    }),\n  ]\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\n\nexport const isHeaderDisabledCell = <T>(\n  option: boolean | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean),\n  grid: ListGridAPI<T>,\n  cell: CellAddress\n) => {\n  if (typeof option === 'function') {\n    return !!option(grid, cell)\n  }\n  return !!option\n}\n","import { CellAddress, EventListenerId, LayoutObjectId } from '../../ts-types'\nimport { GridInternal, CheckHeaderState } from '../../ts-types-internal'\nimport { bindCellClickAction, bindCellKeyAction } from './actionBind'\nimport { BaseAction } from './BaseAction'\nimport { animate } from '../../internal/animate'\nimport { isHeaderDisabledCell } from './action-utils'\nimport { KEY_ENTER, KEY_SPACE } from '../../core/draw-grid/KEY_CODE'\n\nexport abstract class BaseCheckAction<T> extends BaseAction<T> {\n  public bindGridEvent(\n    grid: GridInternal<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    const state = this.getState(grid)\n\n    const action = ({ col, row }: CellAddress) => {\n      const range = grid.getCellRange(col, row)\n      const cellKey = `${range.start.col}:${range.start.row}`\n      if (\n        isHeaderDisabledCell(this.disabled, grid, {\n          col: range.start.col,\n          row: range.start.row,\n        }) ||\n        state.block[cellKey]\n      ) {\n        return\n      }\n      const checked = grid.getHeaderValue(range.start.col, range.start.row)\n      grid.setHeaderValue(range.start.col, range.start.row, !checked)\n\n      const onChange = () => {\n        // checkbox animation\n        animate(200, (point) => {\n          if (point === 1) {\n            delete state.elapsed[cellKey]\n          } else {\n            state.elapsed[cellKey] = point\n          }\n          grid.invalidateCellRange(range)\n        })\n      }\n      onChange()\n    }\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          const range = grid.getCellRange(e.col, e.row)\n          if (\n            isHeaderDisabledCell(this.disabled, grid, {\n              col: range.start.col,\n              row: range.start.row,\n            })\n          ) {\n            return false\n          }\n          state.mouseActiveCell = {\n            col: e.col,\n            row: e.row,\n          }\n          grid.invalidateCellRange(range)\n          return true\n        },\n        mouseOut: (e) => {\n          delete state.mouseActiveCell\n          const range = grid.getCellRange(e.col, e.row)\n          grid.invalidateCellRange(range)\n        },\n      }),\n      ...bindCellKeyAction(grid, cellId, {\n        action,\n        acceptKeys: [KEY_ENTER, KEY_SPACE],\n      }),\n    ]\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckHeaderState\n}\n","import { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckAction } from './BaseCheckAction'\nimport { getCheckHeaderStateId } from '../../internal/symbolManager'\n\nconst CHECK_HEADER_STATE_ID = getCheckHeaderStateId()\n\nexport class CheckHeaderAction<T> extends BaseCheckAction<T> {\n  public clone(): CheckHeaderAction<T> {\n    return new CheckHeaderAction(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[CHECK_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, CHECK_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import { GridInternal, CheckHeaderState } from '../../ts-types-internal'\nimport { obj } from '../../internal/utils'\nimport { BaseCheckAction } from './BaseCheckAction'\nimport { getSwitchHeaderStateId } from '../../internal/symbolManager'\n\nconst SWITCH_HEADER_STATE_ID = getSwitchHeaderStateId()\n\nexport class SwitchHeaderAction<T> extends BaseCheckAction<T> {\n  public clone(): SwitchHeaderAction<T> {\n    return new SwitchHeaderAction(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[SWITCH_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, SWITCH_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n}\n","import {\n  SortState,\n  SortOption,\n  SortHeaderActionOption,\n  ListGridAPI,\n  EventListenerId,\n  CellAddress,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { isHeaderDisabledCell } from './action-utils'\nimport { bindCellClickAction } from './actionBind'\nimport { BaseAction } from './BaseAction'\n\nexport class SortHeaderAction<T> extends BaseAction<T> {\n  private _sort: SortOption<T>\n  public constructor(option: SortHeaderActionOption<T> = {}) {\n    super(option)\n    this._sort = option.sort ?? true\n  }\n  public get sort(): SortOption<T> {\n    return this._sort\n  }\n  public set sort(sort) {\n    this._sort = sort\n    this.onChangeDisabledInternal()\n  }\n  public clone(): SortHeaderAction<T> {\n    return new SortHeaderAction(this)\n  }\n  private _executeSort(newState: SortState, grid: ListGridAPI<T>): void {\n    if (typeof this._sort === 'function') {\n      this._sort({\n        order: newState.order || 'asc',\n        col: newState.col,\n        row: newState.row,\n        grid,\n      })\n    } else {\n      const fieldRow =\n        Math.min(grid.recordRowCount - 1, newState.row) + grid.frozenRowCount\n      const field = grid.getField(newState.col, fieldRow)\n      if (field == null) {\n        return\n      }\n      grid.dataSource.sort(field, newState.order || 'asc')\n    }\n  }\n  public bindGridEvent(\n    grid: ListGridAPI<T>,\n    cellId: LayoutObjectId\n  ): EventListenerId[] {\n    function isTarget(col: number, row: number): boolean {\n      return grid.getLayoutCellId(col, row) === cellId\n    }\n    const action = (cell: CellAddress): void => {\n      if (isHeaderDisabledCell(this.disabled, grid, cell)) {\n        return\n      }\n      const state = grid.sortState as SortState\n      let newState: SortState\n      const range = grid.getCellRange(cell.col, cell.row)\n      if (isTarget(state.col, cell.row)) {\n        newState = {\n          col: range.start.col,\n          order: state.order === 'asc' ? 'desc' : 'asc',\n          row: range.start.row,\n        }\n      } else {\n        newState = {\n          col: range.start.col,\n          order: 'asc',\n          row: range.start.row,\n        }\n      }\n      grid.sortState = newState\n      this._executeSort(newState, grid)\n      grid.invalidateGridRect(0, 0, grid.colCount - 1, grid.rowCount - 1)\n    }\n\n    return [\n      ...bindCellClickAction(grid, cellId, {\n        action,\n        mouseOver: (e) => {\n          if (isHeaderDisabledCell(this.disabled, grid, e)) {\n            return false\n          }\n          return true\n        },\n      }),\n    ]\n  }\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\nimport { CheckHeaderAction } from '../action/CheckHeaderAction'\n\nexport class ImmutableCheckHeaderAction<T> extends CheckHeaderAction<T> {\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\nimport { SortHeaderAction } from '../action/SortHeaderAction'\n\nexport class ImmutableSortHeaderAction<T> extends SortHeaderAction<T> {\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n}\n","import { ListGridAPI, CellAddress } from '../../ts-types'\nimport { SwitchHeaderAction } from '../action/SwitchHeaderAction'\n\nexport class ImmutableSwitchHeaderAction<T> extends SwitchHeaderAction<T> {\n  public get disabled():\n    | boolean\n    | ((grid: ListGridAPI<T>, cell: CellAddress) => boolean) {\n    return this._disabled\n  }\n}\n","import { HeaderActionOption, SortOption } from '../ts-types'\nimport { BaseAction } from './action/BaseAction'\nimport { BaseCheckAction } from './action/BaseCheckAction'\nimport { CheckHeaderAction } from './action/CheckHeaderAction'\nimport { SwitchHeaderAction } from './action/SwitchHeaderAction'\nimport { SortHeaderAction } from './action/SortHeaderAction'\nimport { ImmutableCheckHeaderAction } from './immutable/ImmutableCheckHeaderAction'\nimport { ImmutableSortHeaderAction } from './immutable/ImmutableSortHeaderAction'\nimport { ImmutableSwitchHeaderAction } from './immutable/ImmutableSwitchHeaderAction'\nimport { BaseHeaderDefine } from '../list-grid/layout-map/api'\n\nexport interface ImmutableHeaderActions {\n  SORT: ImmutableSortHeaderAction<any>\n  CHECK: ImmutableCheckHeaderAction<any>\n  SWITCH: ImmutableSwitchHeaderAction<any>\n}\n\nexport const ACTIONS: ImmutableHeaderActions = {\n  SORT: new ImmutableSortHeaderAction<any>(),\n  CHECK: new ImmutableCheckHeaderAction<any>(),\n  SWITCH: new ImmutableSwitchHeaderAction<any>(),\n}\n\nexport {\n  BaseAction,\n  BaseCheckAction,\n  SortHeaderAction,\n  CheckHeaderAction,\n  SwitchHeaderAction,\n}\n\nexport function of<T>(\n  headerAction: HeaderActionOption | BaseAction<T> | null | undefined\n): BaseAction<T> | undefined {\n  if (!headerAction) {\n    return undefined\n  } else if (typeof headerAction === 'string') {\n    const key = headerAction.toUpperCase() as keyof typeof ACTIONS\n    return ACTIONS[key] || of(null)\n  } else {\n    return headerAction\n  }\n}\n\nexport function ofCell<T>(\n  headerCell: BaseHeaderDefine<T>\n): BaseAction<T> | undefined {\n  if (headerCell.sort) {\n    if (typeof headerCell.sort === 'function') {\n      const sortMethod = headerCell.sort\n      // 0.9.0 Backward compatibility\n      const sort: SortOption<T> = ({ order, col, grid }): void =>\n        sortMethod.call(headerCell, order, col, grid)\n      return new ImmutableSortHeaderAction({ sort } as any)\n    }\n    return ACTIONS.SORT\n  }\n  return of(headerCell.headerAction)\n}\n","import { BaseStyleOption, ColorDef, ColumnStyle } from '../../ts-types'\nimport { EventTarget } from '../../core/EventTarget'\n\nconst HEADER_BASE_STYLE_EVENT_TYPE = {\n  CHANGE_STYLE: 'change_style',\n}\n\nlet defaultHeaderBaseStyle: BaseStyle\n\nexport class BaseStyle extends EventTarget implements ColumnStyle {\n  public static get EVENT_TYPE(): { CHANGE_STYLE: string } {\n    return HEADER_BASE_STYLE_EVENT_TYPE\n  }\n  public static get DEFAULT(): BaseStyle {\n    return defaultHeaderBaseStyle\n      ? defaultHeaderBaseStyle\n      : (defaultHeaderBaseStyle = new BaseStyle())\n  }\n  private _bgColor?: ColorDef\n  public constructor({ bgColor }: BaseStyleOption = {}) {\n    super()\n    this._bgColor = bgColor\n  }\n  public get bgColor(): ColorDef | undefined {\n    return this._bgColor\n  }\n  public set bgColor(bgColor) {\n    this._bgColor = bgColor\n    this.doChangeStyle()\n  }\n  public doChangeStyle(): void {\n    this.fireListeners(HEADER_BASE_STYLE_EVENT_TYPE.CHANGE_STYLE)\n  }\n  public clone(): BaseStyle {\n    return new BaseStyle(this)\n  }\n}\n","import { BaseStyle } from './BaseStyle'\nimport { BaseStdStyleOption } from '../../ts-types'\n\nlet defaultHeaderBaseStdStyle: BaseStdStyle\n\nexport class BaseStdStyle extends BaseStyle {\n  public static get DEFAULT(): BaseStdStyle {\n    return defaultHeaderBaseStdStyle\n      ? defaultHeaderBaseStdStyle\n      : (defaultHeaderBaseStdStyle = new BaseStdStyle())\n  }\n  private _textAlign: CanvasTextAlign\n  private _textBaseline: CanvasTextBaseline\n  public constructor(style: BaseStdStyleOption = {}) {\n    super(style)\n    this._textAlign = style.textAlign || 'left'\n    this._textBaseline = style.textBaseline || 'middle'\n  }\n  public get textAlign(): CanvasTextAlign {\n    return this._textAlign\n  }\n  public set textAlign(textAlign) {\n    this._textAlign = textAlign\n    this.doChangeStyle()\n  }\n  public get textBaseline(): CanvasTextBaseline {\n    return this._textBaseline\n  }\n  public set textBaseline(textBaseline) {\n    this._textBaseline = textBaseline\n    this.doChangeStyle()\n  }\n  public clone(): BaseStdStyle {\n    return new BaseStdStyle(this)\n  }\n}\n","import { BaseStdStyle } from './BaseStdStyle'\nimport {\n  ColorDef,\n  HeaderStdStyleOption,\n  TextOverflow,\n  LineClamp,\n} from '../../ts-types'\n\nlet defaultHeaderStyle: Style\n\nexport class Style extends BaseStdStyle {\n  public static get DEFAULT(): Style {\n    return defaultHeaderStyle\n      ? defaultHeaderStyle\n      : (defaultHeaderStyle = new Style())\n  }\n  private _color?: ColorDef\n  private _font?: string\n  private _padding?: number | string | (number | string)[]\n  private _textOverflow: TextOverflow\n  private _lineHeight: string | number\n  private _autoWrapText: boolean\n  private _lineClamp: LineClamp\n  public constructor(style: HeaderStdStyleOption = {}) {\n    super(style)\n    this._color = style.color\n    this._font = style.font\n    this._padding = style.padding\n    this._textOverflow = style.textOverflow || 'ellipsis'\n    this._lineHeight = style.lineHeight || '1em'\n    this._autoWrapText = style.autoWrapText || false\n    this._lineClamp = style.lineClamp || 'auto'\n  }\n  public get color(): ColorDef | undefined {\n    return this._color\n  }\n  public set color(color) {\n    this._color = color\n    this.doChangeStyle()\n  }\n  public get font(): string | undefined {\n    return this._font\n  }\n  public set font(font) {\n    this._font = font\n    this.doChangeStyle()\n  }\n  public get padding(): number | string | (number | string)[] | undefined {\n    return this._padding\n  }\n  public set padding(padding) {\n    this._padding = padding\n    this.doChangeStyle()\n  }\n  public get textOverflow(): TextOverflow {\n    return this._textOverflow\n  }\n  public set textOverflow(textOverflow) {\n    this._textOverflow = textOverflow\n    this.doChangeStyle()\n  }\n  public get lineHeight(): string | number {\n    return this._lineHeight\n  }\n  public set lineHeight(lineHeight) {\n    this._lineHeight = lineHeight\n    this.doChangeStyle()\n  }\n  public get lineClamp(): LineClamp {\n    return this._lineClamp\n  }\n  public set lineClamp(lineClamp) {\n    this._lineClamp = lineClamp\n    this.doChangeStyle()\n  }\n  public get autoWrapText(): boolean {\n    return this._autoWrapText\n  }\n  public set autoWrapText(autoWrapText) {\n    this._autoWrapText = autoWrapText\n    this.doChangeStyle()\n  }\n  public clone(): Style {\n    return new Style(this)\n  }\n}\n","import { Style } from './Style'\nimport { ColorDef, HeaderCheckStyleOption } from '../../ts-types'\nimport { defaults } from '../../internal/utils'\n\nlet defaultHeaderBaseCheckStyle: BaseCheckStyle\nexport class BaseCheckStyle extends Style {\n  public static get DEFAULT(): BaseCheckStyle {\n    return defaultHeaderBaseCheckStyle\n      ? defaultHeaderBaseCheckStyle\n      : (defaultHeaderBaseCheckStyle = new BaseCheckStyle())\n  }\n  private _uncheckBgColor?: ColorDef\n  private _checkBgColor?: ColorDef\n  private _borderColor?: ColorDef\n  public constructor(style: HeaderCheckStyleOption = {}) {\n    super(defaults(style, { textAlign: 'center' }))\n    this._uncheckBgColor = style.uncheckBgColor\n    this._checkBgColor = style.checkBgColor\n    this._borderColor = style.borderColor\n  }\n  public get uncheckBgColor(): ColorDef | undefined {\n    return this._uncheckBgColor\n  }\n  public set uncheckBgColor(uncheckBgColor) {\n    this._uncheckBgColor = uncheckBgColor\n    this.doChangeStyle()\n  }\n  public get checkBgColor(): ColorDef | undefined {\n    return this._checkBgColor\n  }\n  public set checkBgColor(checkBgColor) {\n    this._checkBgColor = checkBgColor\n    this.doChangeStyle()\n  }\n  public get borderColor(): ColorDef | undefined {\n    return this._borderColor\n  }\n  public set borderColor(borderColor) {\n    this._borderColor = borderColor\n    this.doChangeStyle()\n  }\n  public clone(): BaseCheckStyle {\n    return new BaseCheckStyle(this)\n  }\n}\n","import { BaseCheckStyle } from './BaseCheckStyle'\nimport { CheckHeaderStyleOption } from '../../ts-types'\n\nlet defaultCheckHeaderStyle: CheckHeaderStyle\nexport class CheckHeaderStyle extends BaseCheckStyle {\n  public static get DEFAULT(): CheckHeaderStyle {\n    return defaultCheckHeaderStyle\n      ? defaultCheckHeaderStyle\n      : (defaultCheckHeaderStyle = new CheckHeaderStyle())\n  }\n  public constructor(style: CheckHeaderStyleOption = {}) {\n    super(style)\n  }\n  public clone(): CheckHeaderStyle {\n    return new CheckHeaderStyle(this)\n  }\n}\n","import { Style } from './Style'\nimport { SortHeaderStyleOption, ColorDef } from '../../ts-types'\n\nlet defaultSortHeaderStyle: SortHeaderStyle\nexport class SortHeaderStyle extends Style {\n  public static get DEFAULT(): SortHeaderStyle {\n    return defaultSortHeaderStyle\n      ? defaultSortHeaderStyle\n      : (defaultSortHeaderStyle = new SortHeaderStyle())\n  }\n  private _sortArrowColor?: ColorDef\n  public constructor(style: SortHeaderStyleOption = {}) {\n    super(style)\n    this._sortArrowColor = style.sortArrowColor\n  }\n  public get sortArrowColor(): ColorDef | undefined {\n    return this._sortArrowColor\n  }\n  public set sortArrowColor(sortArrowColor) {\n    this._sortArrowColor = sortArrowColor\n    this.doChangeStyle()\n  }\n  public clone(): SortHeaderStyle {\n    return new SortHeaderStyle(this)\n  }\n}\n","import { BaseCheckStyle } from './BaseCheckStyle'\nimport { SwitchHeaderStyleOption } from '../../ts-types'\n\nlet defaultSwitchHeaderStyle: SwitchHeaderStyle\nexport class SwitchHeaderStyle extends BaseCheckStyle {\n  public static get DEFAULT(): SwitchHeaderStyle {\n    return defaultSwitchHeaderStyle\n      ? defaultSwitchHeaderStyle\n      : (defaultSwitchHeaderStyle = new SwitchHeaderStyle())\n  }\n  public constructor(style: SwitchHeaderStyleOption = {}) {\n    super(style)\n  }\n  public clone(): SwitchHeaderStyle {\n    return new SwitchHeaderStyle(this)\n  }\n}\n","import { MultilineTextHeaderStyleOption } from '../../ts-types'\nimport { Style } from './Style'\n\nlet defaultMultilineTextStyle: MultilineTextHeaderStyle\nexport class MultilineTextHeaderStyle extends Style {\n  static get DEFAULT(): MultilineTextHeaderStyle {\n    return defaultMultilineTextStyle\n      ? defaultMultilineTextStyle\n      : (defaultMultilineTextStyle = new MultilineTextHeaderStyle())\n  }\n  constructor(style: MultilineTextHeaderStyleOption = {}) {\n    super(style)\n  }\n  public clone(): MultilineTextHeaderStyle {\n    return new MultilineTextHeaderStyle(this)\n  }\n}\n","import { HeaderStyleOption } from '../ts-types'\nimport { BaseStyle } from './style/BaseStyle'\nimport { BaseStdStyle } from './style/BaseStdStyle'\nimport { BaseCheckStyle } from './style/BaseCheckStyle'\nimport { CheckHeaderStyle } from './style/CheckHeaderStyle'\nimport { SortHeaderStyle } from './style/SortHeaderStyle'\nimport { SwitchHeaderStyle } from './style/SwitchHeaderStyle'\nimport { MultilineTextHeaderStyle } from './style/MultilineTextHeaderStyle'\nimport { Style } from './style/Style'\n\nexport {\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  SortHeaderStyle,\n  CheckHeaderStyle,\n  SwitchHeaderStyle,\n  MultilineTextHeaderStyle,\n}\n\nexport function of<T>(\n  headerStyle: HeaderStyleOption | null | undefined,\n  headerValues: T,\n  StyleClass: typeof BaseStyle\n): BaseStyle {\n  if (headerStyle) {\n    if (headerStyle instanceof BaseStyle) {\n      return headerStyle\n    } else if (typeof headerStyle === 'function') {\n      return of((headerStyle as any)(headerValues), headerValues, StyleClass)\n    } else if (typeof headerStyle === 'string') {\n      if (headerValues && headerStyle in headerValues) {\n        return of((headerValues as any)[headerStyle], headerValues, StyleClass)\n      } else {\n        return new StyleClass({})\n      }\n    } else {\n      return new StyleClass(headerStyle)\n    }\n  } else {\n    return StyleClass.DEFAULT\n  }\n}\n","import * as styleContents from '../style'\nimport {\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  CellContext,\n  HeaderStyleOption,\n  EventListenerId,\n  LayoutObjectId,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { BaseStyle } from '../style/BaseStyle'\nimport { isDef } from '../../internal/utils'\n\nexport abstract class BaseHeader<T> {\n  public constructor(_options = {}) {\n    this.onDrawCell = this.onDrawCell.bind(this) // 修复范围\n  }\n  public get StyleClass(): typeof BaseStyle {\n    return BaseStyle\n  }\n  public onDrawCell(\n    cellValue: unknown,\n    info: DrawCellInfo<T>,\n    context: CellContext,\n    grid: ListGridAPI<T>\n  ) {\n    const { style, drawCellBase } = info\n    const helper = grid.getGridCanvasHelper()\n    drawCellBase()\n    // 文字\n    this.drawInternal(\n      this.convertInternal(cellValue),\n      context,\n      styleContents.of(\n        style as HeaderStyleOption,\n        grid.headerValues,\n        this.StyleClass\n      ),\n      helper,\n      grid,\n      info\n    )\n  }\n  public convertInternal(value: unknown): string {\n    if (typeof value === 'function') {\n      value = value()\n    }\n    return isDef(value) ? `${value}` : ''\n  }\n  public abstract drawInternal(\n    value: string,\n    context: CellContext,\n    style: BaseStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void\n  public bindGridEvent(\n    _grid: ListGridAPI<T>,\n    _cellId: LayoutObjectId\n  ): EventListenerId[] {\n    return []\n  }\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport {\n  GridInternal,\n  DrawCellInfo,\n  CheckHeaderState,\n} from '../../ts-types-internal'\nimport { isDef } from '../../internal/utils'\nimport { BaseHeader } from './BaseHeader'\nimport { BaseCheckStyle } from '../style/BaseCheckStyle'\n\nexport abstract class BaseCheckHeader<T> extends BaseHeader<T> {\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: BaseCheckStyle,\n    helper: GridCanvasHelperAPI,\n    grid: GridInternal<T>,\n    { drawCellBase }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n      bgColor,\n      color,\n      font,\n      textOverflow,\n    } = style\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n\n    const { col, row } = context\n    const range = grid.getCellRange(col, row)\n    const cellKey = `${range.start.col}:${range.start.row}`\n    const state = this.getState(grid)\n    const elapsed = state?.elapsed[cellKey]\n\n    const checked = grid.getHeaderValue(range.start.col, range.start.row)\n\n    const opt: InlineCheckOption = {\n      textAlign,\n      textBaseline,\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n    }\n    if (isDef(elapsed)) {\n      opt.animElapsedTime = elapsed\n    }\n    const inlineCheck = this.getInlineCheck(helper, !!checked, context, opt)\n\n    helper.text([inlineCheck, value], context, {\n      color,\n      font,\n      textAlign,\n      textBaseline,\n      textOverflow,\n    })\n  }\n  protected abstract getState(grid: GridInternal<T>): CheckHeaderState\n  protected abstract getInlineCheck(\n    helper: GridCanvasHelperAPI,\n    checked: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): InlineAPI\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { CheckHeaderState, GridInternal } from '../../ts-types-internal'\nimport { CheckHeaderStyle } from '../style/CheckHeaderStyle'\nimport { BaseCheckHeader } from './BaseCheckHeader'\nimport { getCheckHeaderStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst CHECK_HEADER_STATE_ID = getCheckHeaderStateId()\n\nexport class CheckHeader<T> extends BaseCheckHeader<T> {\n  public get StyleClass(): typeof CheckHeaderStyle {\n    return CheckHeaderStyle\n  }\n  public clone(): CheckHeader<T> {\n    return new CheckHeader(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[CHECK_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, CHECK_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n  protected getInlineCheck(\n    helper: GridCanvasHelperAPI,\n    checked: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): InlineAPI {\n    return helper.buildCheckBoxInline(checked, context, opt)\n  }\n}\n","import { icons } from '../../internal/icons'\nimport { CellContext, GridCanvasHelperAPI } from '../../ts-types'\n\nexport default {\n  loadIcons<T>(\n    icon: any,\n    context: CellContext,\n    helper: GridCanvasHelperAPI,\n    callback: (icon: any, context: CellContext) => void\n  ) {\n    if (icon) {\n      const iconList = icons.toNormarizeArray(icon)\n      iconList.forEach((i: any) => {\n        helper.testFontLoad(i.font, i.content, context)\n      })\n      icon = iconList\n    }\n    callback(icon, context)\n  },\n}\n","import { CellContext, GridCanvasHelperAPI, ListGridAPI } from '../../ts-types'\nimport { isDef } from '../../internal/utils'\nimport { BaseHeader } from './BaseHeader'\nimport headerUtils from './headerUtils'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { Style } from '../style/Style'\n\nexport class Header<T> extends BaseHeader<T> {\n  public get StyleClass(): typeof Style {\n    return Style\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: Style,\n    helper: GridCanvasHelperAPI,\n    _grid: ListGridAPI<T>,\n    { drawCellBase, getHeaderIcon }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      bgColor,\n      textOverflow,\n      padding,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n    } = style\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n    const v = isDef(value) ? value + '' : ''\n    const multiLines = v\n      .replace(/\\r?\\n/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .split('\\n')\n    helper.testFontLoad(font, value, context)\n    headerUtils.loadIcons(\n      getHeaderIcon(),\n      context,\n      helper,\n      (icons: any, ctx: CellContext) => {\n        if (multiLines.length > 1) {\n          helper.multilineText(multiLines, ctx, {\n            color,\n            font,\n            icons,\n            textAlign,\n            textBaseline,\n            textOverflow,\n            padding,\n            lineHeight,\n            autoWrapText,\n            lineClamp,\n          })\n        } else {\n          helper.text(value, ctx, {\n            color,\n            font,\n            icons,\n            padding,\n            textAlign,\n            textBaseline,\n            textOverflow,\n          })\n        }\n      }\n    )\n  }\n}\n","import {\n  CellContext,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  SortState,\n} from '../../ts-types'\nimport { DrawCellInfo, SimpleColumnIconOption } from '../../ts-types-internal'\nimport { BaseHeader } from './BaseHeader'\nimport { SortHeaderStyle } from '../style/SortHeaderStyle'\nimport { getFontSize } from '../../internal/canvases'\nimport { isDef, cellInRange } from '../../internal/utils'\n\nexport class SortHeader<T> extends BaseHeader<T> {\n  public get StyleClass(): typeof SortHeaderStyle {\n    return SortHeaderStyle\n  }\n  public drawInternal(\n    value: string,\n    context: CellContext,\n    style: SortHeaderStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    { drawCellBase }: DrawCellInfo<T>\n  ): void {\n    const textAlign = style.textAlign\n    const textBaseline = style.textBaseline || 'middle'\n    const color = style.color\n    const bgColor = style.bgColor\n    const padding = style.padding\n    const lineHeight = style.lineHeight\n    const autoWrapText = style.autoWrapText\n    const lineClamp = style.lineClamp\n    const font = style.font\n    const textOverflow = style.textOverflow\n    const sortArrowColor = style.sortArrowColor\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n\n    const state = grid.sortState as SortState\n    let order = undefined\n    const col = context.col\n    const row = context.row\n    const range = grid.getCellRange(col, row)\n    if (cellInRange(range, state.col, state.row)) {\n      ;({ order } = state)\n    }\n\n    const ctx = context.getContext()\n    const arrowSize = getFontSize(ctx, font).width * 1.2\n\n    const v = isDef(value) ? value + '' : ''\n    const multilines = v\n      .replace(/\\r?\\n/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .split('\\n')\n    const icons: SimpleColumnIconOption[] = [\n      {\n        color:\n          helper.getColor(\n            sortArrowColor || helper.theme.header.sortArrowColor,\n            col,\n            row,\n            ctx\n          ) || 'rgba(0, 0, 0, 0.38)',\n        name: isDef(order)\n          ? order === 'asc'\n            ? 'arrowDownward'\n            : 'arrowUpward'\n          : undefined,\n        width: arrowSize,\n      },\n    ]\n    if (multilines.length > 1) {\n      helper.multilineText(multilines, context, {\n        autoWrapText,\n        color,\n        font,\n        icons,\n        lineClamp,\n        lineHeight,\n        padding,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    } else {\n      helper.text(multilines, context, {\n        color,\n        font,\n        icons,\n        padding,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    }\n  }\n}\n","import {\n  GridCanvasHelperAPI,\n  CellContext,\n  InlineAPI,\n  InlineCheckOption,\n} from '../../ts-types'\nimport { GridInternal, CheckHeaderState } from '../../ts-types-internal'\nimport { SwitchHeaderStyle } from '../style/SwitchHeaderStyle'\nimport { BaseCheckHeader } from './BaseCheckHeader'\nimport { getSwitchHeaderStateId } from '../../internal/symbolManager'\nimport { obj } from '../../internal/utils'\n\nconst SWITCH_HEADER_STATE_ID = getSwitchHeaderStateId()\n\nexport class SwitchHeader<T> extends BaseCheckHeader<T> {\n  public get StyleClass(): typeof SwitchHeaderStyle {\n    return SwitchHeaderStyle\n  }\n  public clone(): SwitchHeader<T> {\n    return new SwitchHeader(this)\n  }\n  protected getState(grid: GridInternal<T>): CheckHeaderState {\n    let state = grid[SWITCH_HEADER_STATE_ID]\n    if (!state) {\n      state = { elapsed: {}, block: {} }\n      obj.setReadonly(grid, SWITCH_HEADER_STATE_ID, state)\n    }\n    return state\n  }\n  protected getInlineCheck(\n    helper: GridCanvasHelperAPI,\n    checked: boolean,\n    context: CellContext,\n    opt: InlineCheckOption\n  ): InlineAPI {\n    return helper.buildSwitchBtnInline(checked, context, opt)\n  }\n}\n","import { CellContext, GridCanvasHelperAPI } from '../../ts-types'\nimport { DrawCellInfo, GridInternal } from '../../ts-types-internal'\nimport { BaseHeader } from './BaseHeader'\nimport { MultilineTextHeaderStyle } from '../style/MultilineTextHeaderStyle'\n\nexport class MultilineTextHeader<T> extends BaseHeader<T> {\n  get StyleClass(): typeof MultilineTextHeaderStyle {\n    return MultilineTextHeaderStyle\n  }\n  clone(): MultilineTextHeader<T> {\n    return new MultilineTextHeader(this)\n  }\n  drawInternal(\n    value: string,\n    context: CellContext,\n    style: MultilineTextHeaderStyle,\n    helper: GridCanvasHelperAPI,\n    _grid: GridInternal<T>,\n    { drawCellBase }: DrawCellInfo<T>\n  ): void {\n    const {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      bgColor,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n      textOverflow,\n    } = style\n\n    if (bgColor) {\n      drawCellBase({\n        bgColor,\n      })\n    }\n    const multilines = value\n      .replace(/\\r?\\n/g, '\\n')\n      .replace(/\\r/g, '\\n')\n      .split('\\n')\n    helper.testFontLoad(font, value, context)\n    helper.multilineText(multilines, context, {\n      textAlign,\n      textBaseline,\n      color,\n      font,\n      lineHeight,\n      autoWrapText,\n      lineClamp,\n      textOverflow,\n    })\n  }\n}\n","import { HeaderTypeOption } from '../ts-types'\nimport { BaseHeader } from './type/BaseHeader'\nimport { BaseCheckHeader } from './type/BaseCheckHeader'\nimport { CheckHeader } from './type/CheckHeader'\nimport { Header } from './type/Header'\nimport { SortHeader } from './type/SortHeader'\nimport { SwitchHeader } from './type/SwitchHeader'\nimport { MultilineTextHeader } from './type/MultilineTextHeader'\nimport { BaseHeaderDefine } from '../list-grid/layout-map/api'\n\nexport const TYPES = {\n  DEFAULT: new Header<any>(),\n  SORT: new SortHeader<any>(),\n  CHECK: new CheckHeader<any>(),\n  SWITCH: new SwitchHeader<any>(),\n  MULTILINETEXT: new MultilineTextHeader<any>(),\n}\n\nexport {\n  BaseHeader,\n  BaseCheckHeader,\n  Header,\n  SortHeader,\n  CheckHeader,\n  SwitchHeader,\n  MultilineTextHeader,\n}\n\nexport function of<T>(\n  headerType: HeaderTypeOption | BaseHeader<T> | null | undefined\n): BaseHeader<T> {\n  if (!headerType) {\n    return TYPES.DEFAULT\n  } else if (typeof headerType === 'string') {\n    const key = headerType.toUpperCase() as keyof typeof TYPES\n    return TYPES[key] || of(null)\n  } else {\n    return headerType\n  }\n}\n\nexport function ofCell<T>(headerCell: BaseHeaderDefine<T>): BaseHeader<T> {\n  if (headerCell.sort) {\n    return TYPES.SORT\n  }\n\n  return of(headerCell.headerType)\n}\n","import {\n  ACTIONS,\n  BaseAction,\n  BaseCheckAction,\n  SortHeaderAction,\n  CheckHeaderAction,\n  SwitchHeaderAction,\n  of as headerActionOf,\n  ofCell as headerActionOfCell,\n  ImmutableHeaderActions,\n} from './header/action'\nimport {\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  SortHeaderStyle,\n  CheckHeaderStyle,\n  SwitchHeaderStyle,\n  MultilineTextHeaderStyle,\n  of as headerStyleOf,\n} from './header/style'\nimport {\n  TYPES,\n  BaseHeader,\n  BaseCheckHeader,\n  Header,\n  SortHeader,\n  CheckHeader,\n  SwitchHeader,\n  MultilineTextHeader,\n  of as headerTypeOf,\n  ofCell as headerTypeOfCell,\n} from './header/type'\n\nconst action = {\n  ACTIONS: ACTIONS as ImmutableHeaderActions,\n  BaseAction,\n  BaseCheckAction,\n  SortHeaderAction,\n  CheckHeaderAction,\n  SwitchHeaderAction,\n  of: headerActionOf,\n  ofCell: headerActionOfCell,\n}\n\nconst style = {\n  BaseStyle,\n  BaseStdStyle,\n  BaseCheckStyle,\n  Style,\n  SortHeaderStyle,\n  CheckHeaderStyle,\n  SwitchHeaderStyle,\n  MultilineTextHeaderStyle,\n  of: headerStyleOf,\n}\n\nconst type = {\n  TYPES,\n  BaseHeader,\n  BaseCheckHeader,\n  Header,\n  SortHeader,\n  CheckHeader,\n  SwitchHeader,\n  MultilineTextHeader,\n  of: headerTypeOf,\n  ofCell: headerTypeOfCell,\n}\n\n/**\n * headers\n */\nexport const headers = { action, style, type }\n","import { Theme } from '../themes/theme'\n\nexport const themes: { [key: string]: Theme } = {}\n","import { ThemeDefine, StylePropertyFunctionArg } from '../ts-types'\n\nfunction DEFAULT_BG_COLOR(args: StylePropertyFunctionArg): string {\n  const { row, grid } = args\n  if (row < grid.frozenRowCount) {\n    return '#FFF'\n  }\n  const index = grid.getRecordIndexByRow(row)\n  if (!(index & 1)) {\n    return '#FFF'\n  } else {\n    return '#F6F6F6'\n  }\n}\nconst cacheLinearGradient: { [key: string]: CanvasGradient } = {}\nfunction getLinearGradient(\n  context: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  right: number,\n  bottom: number,\n  colorStops: { [key: number]: string }\n): CanvasGradient {\n  const stopsKey = []\n  for (const stop in colorStops) {\n    if (colorStops.hasOwnProperty(stop)) {\n      stopsKey.push(`${stop}@${colorStops[stop]}`)\n    }\n  }\n  const key = `${left}/${top}/${right}/${bottom}/${stopsKey.join(',')}`\n  const ret = cacheLinearGradient[key]\n  if (ret) {\n    return ret\n  }\n  const grad = context.createLinearGradient(left, top, left, bottom)\n  for (const stop in colorStops) {\n    if (colorStops.hasOwnProperty(stop)) {\n      grad.addColorStop(Number(stop), colorStops[stop])\n    }\n  }\n  return (cacheLinearGradient[key] = grad)\n}\nfunction FROZEN_ROWS_BG_COLOR(args: StylePropertyFunctionArg): CanvasGradient {\n  const col = args.col\n  const grid = args.grid\n  const frozenRowCount = args.grid.frozenRowCount\n  const context = args.context\n\n  const rect = grid.getCellRelativeRect(col, 0)\n  const left = rect.left\n  const top = rect.top\n  const bottom = grid.getCellRelativeRect(col, frozenRowCount - 1).bottom\n\n  return getLinearGradient(context, left, top, left, bottom, {\n    0: '#FFF',\n    1: '#D3D3D3',\n  })\n}\n/**\n * basic theme\n * @name BASIC\n * @type {Object}\n * @memberof kakaGrid.themes.choices\n */\nexport default {\n  borderColor: '#000',\n  button: {\n    bgColor: '#2196F3',\n    color: '#FFF',\n  },\n  checkbox: {\n    borderColor: '#000',\n    checkBgColor: 'rgb(76, 73, 72)',\n    uncheckBgColor: '#FFF',\n  },\n  radioButton: {\n    checkColor: 'rgb(76, 73, 72)',\n    checkBorderColor: '#000',\n    uncheckBorderColor: '#000',\n    uncheckBgColor: '#FFF',\n    checkBgColor: '#FFF',\n  },\n  color: '#000',\n  defaultBgColor: DEFAULT_BG_COLOR,\n  frozenRowsBgColor: FROZEN_ROWS_BG_COLOR,\n  // frozenRowsBorderColor: \"#000\",\n  // frozenRowsColor: \"#000\",\n  header: {\n    sortArrowColor: 'rgba(0, 0, 0, 0.38)',\n  },\n  highlightBorderColor: '#5E9ED6',\n  selectionBgColor: '#CCE0FF',\n  selectionDragBgColor: '#EAF2FF',\n  switch: {\n    borderColor: '#000',\n    checkBgColor: '#008CD6', // '3BCD4F'\n    uncheckBgColor: '#FFF',\n  },\n  tree: {\n    lineColor: 'rgb(76, 73, 72)',\n    buttonColor: 'rgb(76, 73, 72)',\n    buttonBgColor: 'transparent',\n    buttonBorderColor: 'rgb(76, 73, 72)',\n    linkColor: 'rgb(76, 73, 72)',\n  },\n  underlayBackgroundColor: '#F6F6F6',\n} as ThemeDefine\n","import { ThemeDefine, StylePropertyFunctionArg } from '../ts-types'\n\nfunction FROZEN_ROWS_BORDER_COLOR(args: StylePropertyFunctionArg) {\n  const row = args.row\n  const frozenRowCount = args.grid.frozenRowCount\n  if (frozenRowCount - 1 === row) {\n    return ['#f2f2f2', '#f2f2f2', '#ccc7c7', '#f2f2f2']\n  } else {\n    return ['#f2f2f2']\n  }\n}\nfunction BORDER_COLOR(args: StylePropertyFunctionArg) {\n  const { col, row, grid } = args\n  const { colCount, frozenColCount, recordRowCount } = grid\n  let top: string | null = '#ccc7c7'\n  let bottom: string | null = '#ccc7c7'\n  if (recordRowCount > 1) {\n    const startRow = grid.getRecordStartRowByRecordIndex(\n      grid.getRecordIndexByRow(row)\n    )\n    const endRow = startRow + recordRowCount - 1\n    if (startRow !== row) {\n      top = null\n    }\n    if (endRow !== row) {\n      bottom = null\n    }\n  }\n  if (frozenColCount - 1 === col) {\n    return [top, '#f2f2f2', bottom, null]\n  }\n  if (colCount - 1 === col) {\n    return [top, '#f2f2f2', bottom, null]\n  }\n\n  return [top, null, bottom, null]\n}\n/**\n * material design theme\n * @name MATERIAL_DESIGN\n * @type {Object}\n * @memberof kakaGrid.themes.choices\n */\nexport default {\n  borderColor: BORDER_COLOR,\n  button: {\n    bgColor: '#2196F3',\n    color: '#FFF',\n  },\n  checkbox: {\n    borderColor: 'rgba(0, 0, 0, 0.26)',\n    checkBgColor: 'rgb(76, 73, 72)',\n    // uncheckBgColor: \"#FFF\",\n  },\n  radioButton: {\n    checkColor: 'rgb(76, 73, 72)',\n    checkBorderColor: 'rgb(76, 73, 72)',\n    uncheckBorderColor: 'rgb(189, 189, 189)',\n    // uncheckBgColor: \"#FFF\",\n    // checkBgColor: \"#FFF\",\n  },\n  color: 'rgba(0, 0, 0, 0.87)',\n  defaultBgColor: '#FFF',\n  // frozenRowsBgColor: \"#FFF\",\n  frozenRowsBorderColor: FROZEN_ROWS_BORDER_COLOR,\n  frozenRowsColor: 'rgba(0, 0, 0, 0.54)',\n  header: {\n    sortArrowColor: 'rgba(0, 0, 0, 0.38)',\n  },\n  highlightBorderColor: '#5E9ED6',\n  selectionBgColor: '#CCE0FF',\n  selectionDragBgColor: '#EAF2FF',\n  switch: {\n    borderColor: '#BFBFBF', // 'D9D9D9'\n    checkBgColor: '#008CD6', // '3BCD4F'\n    // uncheckBgColor: \"#FFF\",\n  },\n  tree: {\n    lineColor: 'rgba(0, 0, 0, 0.3)',\n    buttonColor: 'rgba(0, 0, 0, 0.45)',\n    buttonBgColor: 'transparent',\n    buttonBorderColor: 'rgba(0, 0, 0, 0.3)',\n    linkColor: 'rgba(0, 0, 0, 0.3)',\n  },\n  underlayBackgroundColor: '#FFF',\n  // gridBorderColor: 'transparent',\n  // gridBorderWidth: 0,\n} as ThemeDefine\n","import { getChainSafe } from '../internal/utils'\nimport { getThemeSymbol } from '../internal/symbolManager'\nimport {\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  PartialThemeDefine,\n  ThemeDefine,\n  RequiredThemeDefine,\n  StylePropertyFunctionArg,\n} from '../ts-types'\n//private symbol\nconst _ = getThemeSymbol()\n\nfunction getProp<T extends ColorPropertyDefine | ColorsPropertyDefine | number>(\n  obj: PartialThemeDefine,\n  superObj: ThemeDefine,\n  names: string[],\n  defNames?: string[]\n): T {\n  return (\n    getChainSafe(obj, ...names) ||\n    getChainSafe(superObj, ...names) ||\n    (defNames && getChainSafe(obj, ...defNames)) ||\n    (defNames && getChainSafe(superObj, ...defNames))\n  )\n}\n\nexport class Theme implements RequiredThemeDefine {\n  private [_]: {\n    obj: PartialThemeDefine\n    superTheme: ThemeDefine\n  }\n  private _checkbox: RequiredThemeDefine['checkbox'] | null = null\n  private _radioButton: RequiredThemeDefine['radioButton'] | null = null\n  private _button: RequiredThemeDefine['button'] | null = null\n  private _header: RequiredThemeDefine['header'] | null = null\n  private _switch: RequiredThemeDefine['switch'] | null = null\n  private _tree: RequiredThemeDefine['tree'] | null = null\n  public constructor(obj: ThemeDefine)\n  public constructor(obj: PartialThemeDefine, superTheme: ThemeDefine)\n  public constructor(\n    obj: PartialThemeDefine | ThemeDefine,\n    superTheme?: ThemeDefine\n  ) {\n    this[_] = {\n      obj,\n      superTheme: superTheme as ThemeDefine,\n    }\n  }\n  public get underlayBackgroundColor(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['underlayBackgroundColor'])\n  }\n  // font\n  public get font(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['font'])\n  }\n  public get frozenRowsFont(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsFont'])\n  }\n  // color\n  public get color(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['color'])\n  }\n  public get frozenRowsColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsColor'], ['color'])\n  }\n  // background\n  public get defaultBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['defaultBgColor'])\n  }\n  public get frozenRowsBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsBgColor'], ['defaultBgColor'])\n  }\n  public get focusBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['focusBgColor'])\n  }\n  public get selectionBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['selectionBgColor'], ['defaultBgColor'])\n  }\n  public get selectionDragBgColor(): ColorPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(\n      obj,\n      superTheme,\n      ['selectionDragBgColor'],\n      ['selectionBgColor']\n    )\n  }\n  public get highlightBgColor(): ColorPropertyDefine {\n    if (this.hasProperty(['highlightBgColor'])) {\n      const { obj, superTheme } = this[_]\n      return getProp(obj, superTheme, ['highlightBgColor'])\n    }\n    return (args: StylePropertyFunctionArg): any => {\n      const color =\n        args.row < args.grid.frozenRowCount\n          ? this.frozenRowsBgColor\n          : this.defaultBgColor\n      if (typeof color === 'function') {\n        return color(args)\n      }\n      return color\n    }\n  }\n  // border\n  public get borderColor(): ColorsPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['borderColor'])\n  }\n  public get frozenRowsBorderColor(): ColorsPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['frozenRowsBorderColor'], ['borderColor'])\n  }\n  public get highlightBorderColor(): ColorsPropertyDefine {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['highlightBorderColor'], ['borderColor'])\n  }\n  // grid border\n  public get gridBorderColor(): string {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['gridBorderColor'])\n  }\n  public get gridBorderWidth(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['gridBorderWidth'])\n  }\n  // size\n  public get defaultRowHeight(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['defaultRowHeight'])\n  }\n  public get defaultColWidth(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['defaultColWidth'])\n  }\n  public get highlightBorderWidth(): number {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return getProp(obj, superTheme, ['highlightBorderWidth'])\n  }\n  // other\n  public get checkbox(): RequiredThemeDefine['checkbox'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._checkbox ||\n      (this._checkbox = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['checkbox', 'uncheckBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['checkbox', 'checkBgColor'],\n            ['color']\n          )\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['checkbox', 'borderColor'])\n        },\n      })\n    )\n  }\n  public get radioButton(): RequiredThemeDefine['radioButton'] {\n    const { obj, superTheme } = this[_]\n    return (\n      this._radioButton ||\n      (this._radioButton = {\n        get checkColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'checkColor'],\n            ['color']\n          )\n        },\n        get uncheckBorderColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'uncheckBorderColor'],\n            ['borderColor']\n          )\n        },\n        get checkBorderColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'checkBorderColor'],\n            ['borderColor']\n          )\n        },\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'uncheckBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['radioButton', 'checkBgColor'],\n            ['defaultBgColor']\n          )\n        },\n      })\n    )\n  }\n  public get button(): RequiredThemeDefine['button'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._button ||\n      (this._button = {\n        get color(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['button', 'color'], ['color'])\n        },\n        get bgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['button', 'bgColor'],\n            ['defaultBgColor']\n          )\n        },\n      })\n    )\n  }\n  public get header(): RequiredThemeDefine['header'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._header ||\n      (this._header = {\n        get sortArrowColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['header', 'sortArrowColor'])\n        },\n      })\n    )\n  }\n  public get switch(): RequiredThemeDefine['switch'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._switch ||\n      (this._switch = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['switch', 'uncheckBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['switch', 'checkBgColor'], ['color'])\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['switch', 'borderColor'])\n        },\n      })\n    )\n  }\n  public get tree(): RequiredThemeDefine['tree'] {\n    const obj = this[_].obj\n    const superTheme = this[_].superTheme\n    return (\n      this._tree ||\n      (this._tree = {\n        get lineColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'lineColor'])\n        },\n        get buttonColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'buttonColor'], ['color'])\n        },\n        get buttonBgColor(): ColorPropertyDefine {\n          return getProp(\n            obj,\n            superTheme,\n            ['tree', 'buttonBgColor'],\n            ['defaultBgColor']\n          )\n        },\n        get buttonBorderColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'buttonBorderColor'])\n        },\n        get linkColor(): ColorPropertyDefine {\n          return getProp(obj, superTheme, ['tree', 'linkColor'])\n        },\n      })\n    )\n  }\n  public hasProperty(names: string[]): boolean {\n    const { obj, superTheme } = this[_]\n    return hasThemeProperty(obj, names) || hasThemeProperty(superTheme, names)\n  }\n  public extends(obj: PartialThemeDefine): Theme {\n    return new Theme(obj, this)\n  }\n}\n\nfunction hasThemeProperty(obj: PartialThemeDefine, names: string[]): boolean {\n  if (obj instanceof Theme) {\n    return obj.hasProperty(names)\n  } else {\n    let o: any = obj\n    if (!o) {\n      return false\n    }\n    for (let index = 0; index < names.length; index++) {\n      const name = names[index]\n      o = o[name]\n      if (!o) {\n        return false\n      }\n    }\n    return !!o\n  }\n}\n","import { getIgnoreCase, extend } from './internal/utils'\nimport { themes as plugins } from './plugins/themes'\nimport basicTheme from './themes/BASIC'\nimport materialDesignTheme from './themes/MATERIAL_DESIGN'\nimport { Theme } from './themes/theme'\nimport { ThemeDefine } from './ts-types'\n\nconst BASIC = new Theme(basicTheme)\nconst MATERIAL_DESIGN = new Theme(materialDesignTheme)\n\nconst builtin: { [key: string]: Theme } = {\n  BASIC,\n  MATERIAL_DESIGN,\n}\nlet defTheme = MATERIAL_DESIGN\n\nconst theme = { Theme }\nfunction of(value: ThemeDefine | string | undefined | null): Theme | null {\n  if (!value) {\n    return null\n  }\n  if (typeof value === 'string') {\n    const t = getIgnoreCase(getChoices(), value)\n    if (t) {\n      return t\n    }\n    return null\n  }\n  if (value instanceof Theme) {\n    return value\n  }\n  return new Theme(value)\n}\n\nfunction getDefault(): Theme {\n  return defTheme\n}\nfunction setDefault(defaultTheme: Theme): void {\n  defTheme = of(defaultTheme) || defTheme\n}\nfunction getChoices(): { [key: string]: Theme } {\n  return extend(builtin, plugins)\n}\n\nexport const themes = {\n  BASIC,\n  MATERIAL_DESIGN,\n  theme,\n  of,\n  getDefault,\n  setDefault,\n  getChoices,\n}\n","type RGBA = { r: number; g: number; b: number; a: number }\nconst rgbMap: { [key: string]: RGBA } = {}\nfunction styleColorToRGB(color: string): RGBA | null {\n  const dummy = document.createElement('div')\n  const { style } = dummy\n  style.color = color\n  style.position = 'fixed'\n  style.height = '1px'\n  style.width = '1px'\n  style.opacity = '0'\n  document.body.appendChild(dummy)\n  const { color: styleColor } = (\n    document.defaultView || window\n  ).getComputedStyle(dummy, '')\n  document.body.removeChild(dummy)\n  return colorToRGB0(styleColor || '')\n}\n\nfunction hexToNum(hex: string): number {\n  return parseInt(hex, 16)\n}\n\nfunction createRGB(r: number, g: number, b: number, a = 1): RGBA {\n  return { r, g, b, a }\n}\nfunction tripleHexToRGB({ 1: r, 2: g, 3: b }: string): RGBA {\n  return createRGB(hexToNum(r + r), hexToNum(g + g), hexToNum(b + b))\n}\nfunction sextupleHexToRGB({\n  1: r1,\n  2: r2,\n  3: g1,\n  4: g2,\n  5: b1,\n  6: b2,\n}: string): RGBA {\n  return createRGB(hexToNum(r1 + r2), hexToNum(g1 + g2), hexToNum(b1 + b2))\n}\n\nfunction testRGB({ r, g, b, a }: RGBA): boolean {\n  return (\n    0 <= r &&\n    r <= 255 &&\n    0 <= g &&\n    g <= 255 &&\n    0 <= b &&\n    b <= 255 &&\n    0 <= a &&\n    a <= 1\n  )\n}\nfunction rateToByte(r: number): number {\n  return Math.ceil((r * 255) / 100)\n}\nfunction colorToRGB0(color: string): RGBA | null {\n  if (/^#[0-9a-f]{3}$/i.exec(color)) {\n    return tripleHexToRGB(color)\n  }\n  if (/^#[0-9a-f]{6}$/i.exec(color)) {\n    return sextupleHexToRGB(color)\n  }\n  let ret = /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(Number(ret[1]), Number(ret[2]), Number(ret[3]))\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  ret = /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d(\\.\\d)?)\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(\n      Number(ret[1]),\n      Number(ret[2]),\n      Number(ret[3]),\n      Number(ret[4])\n    )\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  ret = /^rgb\\(\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(\n      rateToByte(Number(ret[1])),\n      rateToByte(Number(ret[3])),\n      rateToByte(Number(ret[5]))\n    )\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  ret = /^rgba\\(\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d{1,3}(\\.\\d)?)%\\s*,\\s*(\\d(\\.\\d)?)\\s*\\)$/i.exec(\n    color\n  )\n  if (ret) {\n    const rgb = createRGB(\n      rateToByte(Number(ret[1])),\n      rateToByte(Number(ret[3])),\n      rateToByte(Number(ret[5])),\n      Number(ret[7])\n    )\n    if (testRGB(rgb)) {\n      return rgb\n    }\n  }\n  return null\n}\nfunction colorToRGB(color: string): RGBA {\n  if (typeof color !== 'string') {\n    return createRGB(0, 0, 0, 0)\n  }\n  color = color.toLowerCase().trim()\n  if (rgbMap[color]) {\n    return rgbMap[color]\n  }\n  return colorToRGB0(color) || (rgbMap[color] = styleColorToRGB(color) as RGBA)\n}\nexport function calcElapsedColor(\n  startColor: string,\n  endColor: string,\n  elapsedTime: number\n): string {\n  const startColorRGB = colorToRGB(startColor)\n  const endColorRGB = colorToRGB(endColor)\n  const getRGB = (colorName: keyof RGBA): number => {\n    const start = startColorRGB[colorName]\n    const end = endColorRGB[colorName]\n    if (elapsedTime >= 1) {\n      return end\n    }\n    if (elapsedTime <= 0) {\n      return start\n    }\n    const diff = start - end\n    return Math.ceil(start - diff * elapsedTime)\n  }\n  return `rgb(${getRGB('r')}, ${getRGB('g')}, ${getRGB('b')})`\n}","import {\n  PaddingOption,\n  calcBasePosition,\n  calcStartPosition,\n  getFontSize,\n} from '../internal/canvases'\nimport { calcElapsedColor } from '../internal/color'\nimport { ColorDef } from '../ts-types'\n\nconst { ceil, PI } = Math\n\nfunction strokeColorsRect(\n  ctx: CanvasRenderingContext2D,\n  borderColors: [\n    ColorDef | null,\n    ColorDef | null,\n    ColorDef | null,\n    ColorDef | null\n  ],\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  type Position = { x: number; y: number }\n  function strokeRectLines(\n    positions: [Position, Position, Position, Position, Position]\n  ): void {\n    for (let i = 0; i < borderColors.length; i++) {\n      const color = borderColors[i]\n      const preColor = borderColors[i - 1]\n      if (color) {\n        if (preColor !== color) {\n          if (preColor) {\n            ctx.strokeStyle = preColor\n            ctx.stroke()\n          }\n          const pos1 = positions[i]\n          ctx.beginPath()\n          ctx.moveTo(pos1.x, pos1.y)\n        }\n        const pos2 = positions[i + 1]\n        ctx.lineTo(pos2.x, pos2.y)\n      } else {\n        if (preColor) {\n          ctx.strokeStyle = preColor\n          ctx.stroke()\n        }\n      }\n    }\n    const pColor = borderColors[borderColors.length - 1]\n    if (pColor) {\n      ctx.strokeStyle = pColor\n      ctx.stroke()\n    }\n  }\n  if (\n    borderColors[0] === borderColors[1] &&\n    borderColors[0] === borderColors[2] &&\n    borderColors[0] === borderColors[3]\n  ) {\n    if (borderColors[0]) {\n      ctx.strokeStyle = borderColors[0]\n      ctx.strokeRect(left, top, width, height)\n    }\n  } else {\n    strokeRectLines([\n      { x: left, y: top },\n      { x: left + width, y: top },\n      { x: left + width, y: top + height },\n      { x: left, y: top + height },\n      { x: left, y: top },\n    ])\n  }\n}\nfunction roundRect(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  radius: number\n): void {\n  ctx.beginPath()\n  ctx.arc(left + radius, top + radius, radius, -PI, -0.5 * PI, false)\n  ctx.arc(left + width - radius, top + radius, radius, -0.5 * PI, 0, false)\n  ctx.arc(\n    left + width - radius,\n    top + height - radius,\n    radius,\n    0,\n    0.5 * PI,\n    false\n  )\n  ctx.arc(left + radius, top + height - radius, radius, 0.5 * PI, PI, false)\n  ctx.closePath()\n}\nfunction fillRoundRect(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  radius: number\n) {\n  roundRect(ctx, left, top, width, height, radius)\n  ctx.fill()\n}\nfunction strokeRoundRect(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  radius: number\n) {\n  roundRect(ctx, left, top, width, height, radius)\n  ctx.stroke()\n}\nfunction fillCircle(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  const min = Math.min(width, height) / 2\n  ctx.beginPath()\n  ctx.arc(left + min, top + min, min, 0, 2 * Math.PI)\n  ctx.closePath()\n  ctx.fill()\n}\nfunction strokeCircle(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  const min = Math.min(width, height) / 2\n  ctx.beginPath()\n  ctx.arc(left + min, top + min, min, 0, 2 * Math.PI)\n  ctx.closePath()\n  ctx.stroke()\n}\n\nexport type FillTextRectOption = {\n  offset?: number\n  padding?: PaddingOption\n}\nfunction fillTextRect(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  { offset = 2, padding }: FillTextRectOption = {}\n): void {\n  const rect = {\n    bottom: top + height,\n    height,\n    left,\n    right: left + width,\n    top,\n    width,\n  }\n  ctx.save()\n  try {\n    ctx.beginPath()\n    ctx.rect(rect.left, rect.top, rect.width, rect.height)\n    // clip\n    ctx.clip()\n\n    // 文字\n    const pos = calcBasePosition(ctx, rect, {\n      offset,\n      padding,\n    })\n\n    ctx.fillText(text, pos.x, pos.y)\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawInlineImageRectOption = {\n  offset?: number\n  padding?: PaddingOption\n}\nfunction drawInlineImageRect(\n  ctx: CanvasRenderingContext2D,\n  image: HTMLImageElement,\n  srcLeft: number,\n  srcTop: number,\n  srcWidth: number,\n  srcHeight: number,\n  destWidth: number,\n  destHeight: number,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  { offset = 2, padding }: DrawInlineImageRectOption = {}\n): void {\n  const rect = {\n    bottom: top + height,\n    height,\n    left,\n    right: left + width,\n    top,\n    width,\n  }\n  ctx.save()\n  try {\n    ctx.beginPath()\n    ctx.rect(rect.left, rect.top, rect.width, rect.height)\n    // clip\n    ctx.clip()\n\n    // 文字\n    const pos = calcStartPosition(ctx, rect, destWidth, destHeight, {\n      offset,\n      padding,\n    })\n\n    ctx.drawImage(\n      image,\n      srcLeft,\n      srcTop,\n      srcWidth || destWidth,\n      srcHeight || destHeight,\n      pos.x,\n      pos.y,\n      destWidth,\n      destHeight\n    )\n  } finally {\n    ctx.restore()\n  }\n}\n\n/**\n * Returns an object containing the width of the checkbox.\n * @param ctx - canvas context\n * @returns Object containing the width of the checkbox\n */\nfunction measureCheckbox(ctx: CanvasRenderingContext2D): { width: number } {\n  return {\n    width: getFontSize(ctx, null).width,\n  }\n}\n\n/**\n * Returns an object containing the width of the radio button.\n * @param ctx - canvas context\n * @returns Object containing the width of the radio button\n */\nfunction measureRadioButton(ctx: CanvasRenderingContext2D): { width: number } {\n  return {\n    width: getFontSize(ctx, null).width,\n  }\n}\n\nexport type DrawCheckboxOption = {\n  uncheckBgColor?: ColorDef\n  checkBgColor?: ColorDef\n  borderColor?: ColorDef\n  boxSize?: number\n}\n/**\n * draw Checkbox\n * @param ctx - canvas context\n * @param x - The x coordinate where to start drawing the checkbox (relative to the canvas)\n * @param y - The y coordinate where to start drawing the checkbox (relative to the canvas)\n * @param check - checkbox check status\n * @param option - option\n * @returns\n */\nfunction drawCheckbox(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: number | boolean,\n  {\n    uncheckBgColor = '#FFF',\n    checkBgColor = 'rgb(76, 73, 72)',\n    borderColor = '#000',\n    boxSize = measureCheckbox(ctx).width,\n  }: DrawCheckboxOption = {}\n): void {\n  const checkPoint = typeof check === 'number' ? (check > 1 ? 1 : check) : 1\n\n  ctx.save()\n  try {\n    ctx.fillStyle = check ? checkBgColor : uncheckBgColor\n    const leftX = ceil(x)\n    const topY = ceil(y)\n    const size = ceil(boxSize)\n\n    fillRoundRect(ctx, leftX - 1, topY - 1, size + 1, size + 1, boxSize / 5)\n    ctx.lineWidth = 1\n    ctx.strokeStyle = borderColor\n    strokeRoundRect(ctx, leftX - 0.5, topY - 0.5, size, size, boxSize / 5)\n\n    if (check) {\n      ctx.lineWidth = ceil(boxSize / 10)\n      ctx.strokeStyle = uncheckBgColor\n      let leftWidth = boxSize / 4\n      let rightWidth = (boxSize / 2) * 0.9\n      const leftLeftPos = x + boxSize * 0.2\n      const leftTopPos = y + boxSize / 2\n\n      if (checkPoint < 0.5) {\n        leftWidth *= checkPoint * 2\n      }\n\n      ctx.beginPath()\n      ctx.moveTo(leftLeftPos, leftTopPos)\n      ctx.lineTo(leftLeftPos + leftWidth, leftTopPos + leftWidth)\n      if (checkPoint > 0.5) {\n        if (checkPoint < 1) {\n          rightWidth *= (checkPoint - 0.5) * 2\n        }\n        ctx.lineTo(\n          leftLeftPos + leftWidth + rightWidth,\n          leftTopPos + leftWidth - rightWidth\n        )\n      }\n      ctx.stroke()\n    }\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawRadioButtonOption = {\n  checkColor?: ColorDef\n  borderColor?: ColorDef\n  bgColor?: ColorDef\n  boxSize?: number\n}\n/**\n * draw Radio button\n * @param ctx - canvas context\n * @param x - The x coordinate where to start drawing the radio button (relative to the canvas)\n * @param y - The y coordinate where to start drawing the radio button (relative to the canvas)\n * @param check - radio button check status\n * @param option - option\n * @returns\n */\nfunction drawRadioButton(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: number | boolean,\n  {\n    checkColor = 'rgb(76, 73, 72)',\n    borderColor = '#000',\n    bgColor = '#FFF',\n    boxSize = measureRadioButton(ctx).width,\n  }: DrawRadioButtonOption = {}\n): void {\n  const ratio = typeof check === 'number' ? (check > 1 ? 1 : check) : 1\n\n  ctx.save()\n  try {\n    ctx.fillStyle = bgColor\n    const leftX = ceil(x)\n    const topY = ceil(y)\n    const size = ceil(boxSize)\n    fillCircle(ctx, leftX - 1, topY - 1, size + 1, size + 1)\n\n    ctx.lineWidth = 1\n    ctx.strokeStyle = borderColor\n    strokeCircle(ctx, leftX - 0.5, topY - 0.5, size, size)\n    if (check) {\n      const checkSize = (size * ratio) / 2\n      const padding = (size - checkSize) / 2\n      ctx.fillStyle = checkColor\n      fillCircle(\n        ctx,\n        ceil((leftX - 0.5 + padding) * 100) / 100,\n        ceil((topY - 0.5 + padding) * 100) / 100,\n        ceil(checkSize * 100) / 100,\n        ceil(checkSize * 100) / 100\n      )\n    }\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawSwitchOption = {\n  uncheckBgColor?: ColorDef\n  checkBgColor?: ColorDef\n  borderColor?: ColorDef\n  btnSize?: { width: number; height: number }\n}\n/**\n * draw Switch Button\n * @param ctx - canvas context\n * @param x - The x coordinate where to start drawing the switch (relative to the canvas)\n * @param y - The y coordinate where to start drawing the switch (relative to the canvas)\n * @param check - switch check status\n * @param option - option\n * @returns\n */\nfunction drawSwitchBtn(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: boolean,\n  animElapsedTime: number,\n  {\n    uncheckBgColor = '#FFF',\n    checkBgColor = '#3BCD4F',\n    borderColor = '#D9D9D9',\n    btnSize = { width: 52, height: 32 },\n  }: DrawSwitchOption = {}\n) {\n  animElapsedTime =\n    animElapsedTime > 1 ? 1 : animElapsedTime < 0 ? 0 : animElapsedTime\n  const borderWidth = btnSize.height * 0.078125\n\n  ctx.save()\n  try {\n    ctx.fillStyle = check ? checkBgColor : borderColor\n    const bX = ceil(x) - 1\n    const bY = ceil(y) - 1\n    const bW = ceil(btnSize.width + 1)\n    const bH = ceil(btnSize.height + 1)\n    fillRoundRect(ctx, bX, bY, bW, bH, bH / 2)\n\n    const scale = check ? 1 - animElapsedTime : animElapsedTime\n    ctx.fillStyle = uncheckBgColor\n    const cW = (bW - borderWidth * 2) * scale\n    const cH = (bH - borderWidth * 2) * scale\n    const cX = bX + bW / 2 - cW / 2\n    const cY = bY + bH / 2 - cH / 2\n    fillRoundRect(ctx, cX, cY, cW, cH, cH / 2)\n\n    const offsetScale = check ? animElapsedTime : 1 - animElapsedTime\n    ctx.shadowColor = borderColor as string\n    ctx.shadowOffsetX = 0\n    ctx.shadowOffsetY = 2\n    ctx.shadowBlur = 3\n    const sW = bH - borderWidth * 2\n    const sH = sW\n    const sX = bX + borderWidth + (bW - borderWidth * 2 - sW) * offsetScale\n    const sY = bY + borderWidth\n    fillRoundRect(ctx, sX, sY, sW, sH, sH / 2)\n  } finally {\n    ctx.restore()\n  }\n}\n\nfunction drawSwitchButton(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  check: boolean,\n  animElapsedTime: number,\n  {\n    uncheckBgColor = '#FFF',\n    checkBgColor = '#008CD6',\n    borderColor = '#BFBFBF',\n    btnSize = { width: 44, height: 22 },\n  }: DrawSwitchOption = {}\n) {\n  animElapsedTime =\n    animElapsedTime > 1 ? 1 : animElapsedTime < 0 ? 0 : animElapsedTime\n  const borderWidth = (btnSize.height * 2) / 22\n  const fontSize = (btnSize.height * 12) / 22\n  const textMargin = (btnSize.height * 14) / 22\n\n  ctx.save()\n  try {\n    let backgroundFillStyle\n    let trueFillStyle\n    let falseFillStyle\n    if (0 < animElapsedTime && animElapsedTime < 1) {\n      backgroundFillStyle = check\n        ? calcElapsedColor(\n            borderColor as string,\n            checkBgColor as string,\n            animElapsedTime\n          )\n        : calcElapsedColor(\n            checkBgColor as string,\n            borderColor as string,\n            animElapsedTime\n          )\n      trueFillStyle = check\n        ? calcElapsedColor(\n            borderColor as string,\n            uncheckBgColor as string,\n            animElapsedTime\n          )\n        : calcElapsedColor(\n            uncheckBgColor as string,\n            borderColor as string,\n            animElapsedTime\n          )\n      falseFillStyle = check\n        ? calcElapsedColor(\n            uncheckBgColor as string,\n            checkBgColor as string,\n            animElapsedTime\n          )\n        : calcElapsedColor(\n            checkBgColor as string,\n            uncheckBgColor as string,\n            animElapsedTime\n          )\n    } else {\n      backgroundFillStyle = check ? checkBgColor : borderColor\n      trueFillStyle = check ? uncheckBgColor : borderColor\n      falseFillStyle = check ? checkBgColor : uncheckBgColor\n    }\n    const bX = x\n    const bY = y\n    const bW = btnSize.width\n    const bH = btnSize.height\n    ctx.fillStyle = backgroundFillStyle\n    fillRoundRect(ctx, bX, bY, bW, bH, bH / 2)\n\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${fontSize}px sans-serif`\n    ctx.fillStyle = trueFillStyle\n    ctx.fillText('是', bX + textMargin, bY + bH / 2)\n    ctx.fillStyle = falseFillStyle\n    ctx.fillText('否', bX + bW - textMargin, bY + bH / 2)\n\n    const offsetScale = check ? animElapsedTime : 1 - animElapsedTime\n    const sW = bH - borderWidth * 2\n    const sH = sW\n    const sX = bX + borderWidth + (bW - borderWidth * 2 - sW) * offsetScale\n    const sY = bY + borderWidth\n    ctx.fillStyle = uncheckBgColor\n    fillRoundRect(ctx, sX, sY, sW, sH, sH / 2)\n  } finally {\n    ctx.restore()\n  }\n}\n\nexport type DrawButtonOption = {\n  backgroundColor?: ColorDef\n  bgColor?: ColorDef\n  radius?: number\n  shadow?: {\n    color?: string\n    blur?: number\n    offsetX?: number\n    offsetY?: number\n    offset?: { x?: number; y?: number }\n  }\n}\nfunction drawButton(\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  option: DrawButtonOption = {}\n): void {\n  const {\n    backgroundColor = '#FFF',\n    bgColor = backgroundColor,\n    radius = 4,\n    shadow = {},\n  } = option\n\n  ctx.save()\n  try {\n    ctx.fillStyle = bgColor\n\n    if (shadow) {\n      const {\n        color = 'rgba(0, 0, 0, 0.24)',\n        blur = 1,\n        offsetX = 0,\n        offsetY = 2,\n        offset: { x: ox = offsetX, y: oy = offsetY } = {},\n      } = shadow\n\n      ctx.shadowColor = color\n      ctx.shadowBlur = blur // 模糊\n      ctx.shadowOffsetX = ox\n      ctx.shadowOffsetY = oy\n    }\n\n    fillRoundRect(ctx, ceil(left), ceil(top), ceil(width), ceil(height), radius)\n  } finally {\n    ctx.restore()\n  }\n}\n\n/**\n * canvasHelper\n */\nexport const canvasHelper = {\n  drawButton,\n  drawCheckbox,\n  drawInlineImageRect,\n  drawRadioButton,\n  drawSwitchButton,\n  drawSwitchBtn,\n  fillRoundRect,\n  fillTextRect,\n  measureCheckbox,\n  measureRadioButton,\n  roundRect,\n  strokeColorsRect,\n  strokeRoundRect,\n  fillCircle,\n  strokeCircle,\n}\n\nexport type CanvasHelper = {\n  drawButton: typeof drawButton\n  drawCheckbox: typeof drawCheckbox\n  drawInlineImageRect: typeof drawInlineImageRect\n  drawRadioButton: typeof drawRadioButton\n  drawSwitchButton: typeof drawSwitchButton\n  drawSwitchBtn: typeof drawSwitchBtn\n  fillRoundRect: typeof fillRoundRect\n  fillTextRect: typeof fillTextRect\n  measureCheckbox: typeof measureCheckbox\n  measureRadioButton: typeof measureRadioButton\n  roundRect: typeof roundRect\n  strokeColorsRect: typeof strokeColorsRect\n  strokeRoundRect: typeof strokeRoundRect\n  fillCircle: typeof fillCircle\n  strokeCircle: typeof strokeCircle\n}\n","import { canvasHelper, CanvasHelper } from './tools/canvasHelper'\n\n/**\n * tools\n */\nexport const tools: {\n  canvasHelper: CanvasHelper\n} = { canvasHelper }\n","import { columns } from '../../../columns'\nimport { headers } from '../../../headers'\nimport { ColumnData, HeaderData } from '../api'\n\nlet seqId = -1\n\nexport function newEmptyHeaderData(): HeaderData<any> {\n  return {\n    id: seqId--,\n    define: {},\n    headerType: headers.type.of(null), // default\n  }\n}\n\nexport function newEmptyColumnData(): ColumnData<any> {\n  return {\n    id: seqId--,\n    define: {},\n    columnType: columns.type.of(null), // default\n    style: null,\n  }\n}\n\nexport class EmptyDataCache<T> {\n  private headers: HeaderData<T>[][] = []\n  private columns: ColumnData<T>[][] = []\n  getHeader(col: number, row: number): HeaderData<T> {\n    const rows = this.headers[row] || (this.headers[row] = [])\n    return rows[col] || (rows[col] = newEmptyHeaderData())\n  }\n  getBody(col: number, row: number): ColumnData<T> {\n    const rows = this.columns[row] || (this.columns[row] = [])\n    return rows[col] || (rows[col] = newEmptyColumnData())\n  }\n}\n","import { CellRange, LayoutObjectId } from '../../../ts-types'\nimport { columns } from '../../../columns'\nimport { headers } from '../../../headers'\nimport {\n  ColumnData,\n  ColumnDefine,\n  GroupHeaderDefine,\n  HeaderData,\n  HeadersDefine,\n  LayoutMapAPI,\n} from '../api'\nimport { EmptyDataCache } from './utils'\n\nlet seqId = 0\nexport class SimpleHeaderLayoutMap<T> implements LayoutMapAPI<T> {\n  private _headerObjects: HeaderData<T>[]\n  private _headerObjectMap: { [key in LayoutObjectId]: HeaderData<T> }\n  private _headerCellIds: number[][]\n  private _columns: ColumnData<T>[]\n  readonly bodyRowCount: number = 1\n  private _emptyDataCache = new EmptyDataCache()\n  constructor(header: HeadersDefine<T>) {\n    this._columns = []\n    this._headerCellIds = []\n\n    this._headerObjects = this._addHeaders(0, header, [])\n    this._headerObjectMap = this._headerObjects.reduce((o, e) => {\n      o[e.id as number] = e\n      return o\n    }, {} as { [key in LayoutObjectId]: HeaderData<T> })\n\n    this._setupHeaderSpan()\n  }\n  get columnWidths(): ColumnData<T>[] {\n    return this._columns\n  }\n  get headerRowCount(): number {\n    return this._headerCellIds.length\n  }\n  get colCount(): number {\n    return this._columns.length\n  }\n  get headerObjects(): HeaderData<T>[] {\n    return this._headerObjects\n  }\n  get columnObjects(): ColumnData<T>[] {\n    return this._columns\n  }\n  getCellId(col: number, row: number): LayoutObjectId {\n    if (this.headerRowCount <= row) {\n      return this._columns[col].id\n    }\n    //in header\n    return this._headerCellIds[row][col]\n  }\n  getHeader(col: number, row: number): HeaderData<T> {\n    const id = this.getCellId(col, row)\n    return (\n      this._headerObjectMap[id as number] ||\n      this._emptyDataCache.getHeader(col, row)\n    )\n  }\n  getBody(col: number, _row: number): ColumnData<T> {\n    return this._columns[col] || this._emptyDataCache.getBody(col, 0)\n  }\n  getBodyLayoutRangeById(id: LayoutObjectId): CellRange {\n    for (let col = 0; col < this.colCount; col++) {\n      if (id === this._columns[col].id) {\n        return {\n          start: { col, row: 0 },\n          end: { col, row: 0 },\n        }\n      }\n    }\n    throw new Error(`can not found body layout @id=${id as number}`)\n  }\n  getCellRange(col: number, row: number): CellRange {\n    const result: CellRange = { start: { col, row }, end: { col, row } }\n    if (this.headerRowCount <= row) {\n      return result\n    }\n    //in header\n    const id = this.getCellId(col, row)\n    for (let c = col - 1; c >= 0; c--) {\n      if (id !== this.getCellId(c, row)) {\n        break\n      }\n      result.start.col = c\n    }\n    for (let c = col + 1; c < this.colCount; c++) {\n      if (id !== this.getCellId(c, row)) {\n        break\n      }\n      result.end.col = c\n    }\n    for (let r = row - 1; r >= 0; r--) {\n      if (id !== this.getCellId(col, r)) {\n        break\n      }\n      result.start.row = r\n    }\n    for (let r = row + 1; r < this.headerRowCount; r++) {\n      if (id !== this.getCellId(col, r)) {\n        break\n      }\n      result.end.row = r\n    }\n    return result\n  }\n  getRecordIndexByRow(row: number): number {\n    if (row < this.headerRowCount) {\n      return -1\n    } else {\n      return row - this.headerRowCount\n    }\n  }\n  getRecordStartRowByRecordIndex(index: number): number {\n    return this.headerRowCount + index\n  }\n  private _addHeaders(\n    row: number,\n    header: HeadersDefine<T>,\n    roots: number[]\n  ): HeaderData<T>[] {\n    const results: HeaderData<T>[] = []\n    const rowCells = this._headerCellIds[row] || this._newRow(row)\n    header.forEach((hd) => {\n      const col = this._columns.length\n      const id = seqId++\n      const cell: HeaderData<T> = {\n        id,\n        caption: hd.caption,\n        field: hd.headerField || (hd as ColumnDefine<T>).field,\n        style: hd.headerStyle,\n        headerType: headers.type.ofCell(hd),\n        action: headers.action.ofCell(hd),\n        define: hd,\n        icon: hd.headerIcon,\n        tooltip: hd.headerTooltip,\n        tooltipType: hd.headerTooltipType,\n      }\n      results[id] = cell\n      rowCells[col] = id\n      for (let r = row - 1; r >= 0; r--) {\n        this._headerCellIds[r][col] = roots[r]\n      }\n      if ((hd as GroupHeaderDefine<T>).columns) {\n        this._addHeaders(row + 1, (hd as GroupHeaderDefine<T>).columns, [\n          ...roots,\n          id,\n        ]).forEach((c) => results.push(c))\n      } else {\n        const colDef = hd as ColumnDefine<T>\n        this._columns.push({\n          id: seqId++,\n          field: colDef.field,\n          width: colDef.width,\n          minWidth: colDef.minWidth,\n          maxWidth: colDef.maxWidth,\n          icon: colDef.icon,\n          message: colDef.message,\n          columnType: columns.type.of(colDef.columnType),\n          action: columns.action.of(colDef.action),\n          style: colDef.style,\n          define: colDef,\n          contentHidden: colDef.contentHidden,\n          disableResize: colDef.disableResize,\n          tooltip: colDef.tooltip,\n          tooltipType: colDef.tooltipType,\n        })\n        for (let r = row + 1; r < this._headerCellIds.length; r++) {\n          this._headerCellIds[r][col] = id\n        }\n      }\n    })\n    return results\n  }\n  private _newRow(row: number): number[] {\n    const newRow: number[] = (this._headerCellIds[row] = [])\n    if (!this._columns.length) {\n      return newRow\n    }\n    const prev = this._headerCellIds[row - 1]\n    for (let col = 0; col < prev.length; col++) {\n      newRow[col] = prev[col]\n    }\n    return newRow\n  }\n  private _setupHeaderSpan() {\n    const processed: {\n      [id: number]: boolean\n    } = {}\n    for (let row = 0; row < this._headerCellIds.length; row++) {\n      const cols = this._headerCellIds[row]\n      for (let col = 0; col < cols.length; col++) {\n        const cellId = cols[col]\n        if (!processed[cellId]) {\n          processed[cellId] = true\n          const cell = this._headerObjectMap[cellId]\n\n          let headerRowSpan\n          if ('headerRowSpan' in cell.define) {\n            window.console.warn(\n              \"'headerRowSpan' is deprecated, please use 'rowSpan' instead\"\n            )\n            headerRowSpan = cell.define['headerRowSpan']\n          }\n          let headerColSpan\n          if ('headerColSpan' in cell.define) {\n            window.console.warn(\n              \"'headerColSpan' is deprecated, please use 'colSpan' instead\"\n            )\n            headerColSpan = cell.define['headerColSpan']\n          }\n\n          const rowSpan = Number(cell.define.rowSpan || headerRowSpan || 1)\n          const colSpan = Number(cell.define.colSpan || headerColSpan || 1)\n          if (rowSpan > 1 || colSpan > 1) {\n            for (let i = row; i < row + rowSpan; i++) {\n              for (let j = col; j < col + colSpan; j++) {\n                this._headerCellIds[i][j] = cellId\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import { columns } from '../../../columns'\nimport { headers } from '../../../headers'\nimport {\n  CellDefine,\n  ColumnData,\n  HeaderBodyLayoutDefine,\n  HeaderCellDefine,\n  HeaderData,\n  LayoutDefine,\n  LayoutMapAPI,\n  WidthData,\n} from '../api'\nimport { CellRange, LayoutObjectId } from '../../../ts-types'\nimport { EmptyDataCache } from './utils'\n\ninterface HasSpans {\n  colSpan?: number\n  rowSpan?: number\n  width?: number | string\n  minWidth?: number | string\n  maxWidth?: number | string\n}\n\nfunction normalizeLayout<T>(\n  layout: LayoutDefine<T>\n): HeaderBodyLayoutDefine<T> {\n  if (Array.isArray(layout)) {\n    return {\n      header: layout,\n      body: layout,\n    }\n  }\n  return layout\n}\n\nlet seqId = 0\n\nclass LayoutObjectGrid<T, D extends HasSpans> {\n  objects: T[] = []\n  objectGrid: T[][] = []\n  objectMap: { [key in LayoutObjectId]: T } = {}\n  columnCount = 0\n  columnWidths: WidthData[] = []\n  constructor(layout: D[][], transform: (d: D, id: LayoutObjectId) => T) {\n    layout.forEach((rowLayout, row) => {\n      let col = 0\n      rowLayout.forEach((cell) => {\n        const id = seqId++\n        const obj = transform(cell, id)\n        this.objects.push(obj)\n        this.objectMap[id] = obj\n        col = this._findStartCell(col, row)\n        const rowSpan = Number(cell.rowSpan ?? 1)\n        const colSpan = Number(cell.colSpan ?? 1)\n        const endRow = row + rowSpan\n        const endCol = col + colSpan\n        for (let rowIndex = row; rowIndex < endRow; rowIndex++) {\n          const objectGridRow = this._getObjectGridRow(rowIndex)\n          for (let colIndex = col; colIndex < endCol; colIndex++) {\n            objectGridRow[colIndex] = obj\n          }\n        }\n        if (colSpan === 1) {\n          this._setWidthDataIfAbsent(col, cell)\n        }\n        this._useColumnIndex(endCol - 1)\n        col = endCol\n      })\n    })\n  }\n  get rowCount(): number {\n    return this.objectGrid.length\n  }\n  private _findStartCell(col: number, row: number): number {\n    const objectGridRow = this._getObjectGridRow(row)\n    for (let index = col; index < objectGridRow.length; index++) {\n      if (!objectGridRow[index]) {\n        return index\n      }\n    }\n    return objectGridRow.length\n  }\n  private _getObjectGridRow(row: number): T[] {\n    return this.objectGrid[row] || (this.objectGrid[row] = [])\n  }\n  private _useColumnIndex(col: number): void {\n    if (this.columnCount > col) {\n      return\n    }\n    this.columnCount = col + 1\n  }\n  private _setWidthDataIfAbsent(col: number, cell: HasSpans): void {\n    if (!this.columnWidths[col]) {\n      if (\n        cell.width != null ||\n        cell.maxWidth != null ||\n        cell.minWidth != null\n      ) {\n        this.columnWidths[col] = {\n          width: cell.width,\n          maxWidth: cell.maxWidth,\n          minWidth: cell.minWidth,\n        }\n      }\n    }\n  }\n}\n\nexport class MultiLayoutMap<T> implements LayoutMapAPI<T> {\n  private _header: LayoutObjectGrid<HeaderData<T>, HeaderCellDefine<T>>\n  private _body: LayoutObjectGrid<ColumnData<T>, CellDefine<T>>\n  private _columnWidths: WidthData[] = []\n  private _columnCount: number\n  private _emptyDataCache = new EmptyDataCache()\n  constructor(layout: LayoutDefine<T>) {\n    const hbLayout = normalizeLayout(layout)\n    const header = (this._header = new LayoutObjectGrid(\n      hbLayout.header,\n      (hd: HeaderCellDefine<T>, id: LayoutObjectId): HeaderData<T> => {\n        return {\n          id,\n          caption: hd.caption,\n          field: hd.headerField || (hd as CellDefine<T>).field,\n          style: hd.headerStyle,\n          headerType: headers.type.ofCell(hd),\n          action: headers.action.ofCell(hd),\n          define: hd,\n          icon: hd.headerIcon,\n          tooltip: hd.headerTooltip,\n          tooltipType: hd.headerTooltipType,\n        }\n      }\n    ))\n    const body = (this._body = new LayoutObjectGrid(\n      hbLayout.body,\n      (colDef: CellDefine<T>, id: LayoutObjectId): ColumnData<T> => {\n        return {\n          id,\n          field: colDef.field,\n          width: colDef.width,\n          minWidth: colDef.minWidth,\n          maxWidth: colDef.maxWidth,\n          icon: colDef.icon,\n          message: colDef.message,\n          columnType: columns.type.of(colDef.columnType),\n          action: columns.action.of(colDef.action),\n          style: colDef.style,\n          define: colDef,\n          contentHidden: colDef.contentHidden,\n          disableResize: colDef.disableResize,\n          tooltip: colDef.tooltip,\n          tooltipType: colDef.tooltipType,\n        }\n      }\n    ))\n    const columnCount = (this._columnCount = Math.max(\n      header.columnCount,\n      body.columnCount\n    ))\n    for (let col = 0; col < columnCount; col++) {\n      const widthDef = header.columnWidths[col] || body.columnWidths[col] || {}\n      this._columnWidths[col] = widthDef\n    }\n  }\n  get columnWidths(): WidthData[] {\n    return this._columnWidths\n  }\n  get headerRowCount(): number {\n    return this._header.rowCount\n  }\n  get bodyRowCount(): number {\n    return this._body.rowCount\n  }\n  get colCount(): number {\n    return this._columnCount\n  }\n  get headerObjects(): HeaderData<T>[] {\n    return this._header.objects\n  }\n  get columnObjects(): ColumnData<T>[] {\n    return this._body.objects\n  }\n  getCellId(col: number, row: number): LayoutObjectId {\n    if (this.headerRowCount <= row) {\n      const bodyRow = row - this.headerRowCount\n      const bodyLayoutRow = bodyRow % this.bodyRowCount\n      return this._body.objectGrid[bodyLayoutRow]?.[col]?.id\n    }\n    //in header\n    return this._header.objectGrid[row]?.[col]?.id\n  }\n  getHeader(col: number, row: number): HeaderData<T> {\n    const id = this.getCellId(col, row)\n    return (\n      this._header.objectMap[id as number] ||\n      this._emptyDataCache.getHeader(col, row)\n    )\n  }\n  getBody(col: number, row: number): ColumnData<T> {\n    const id = this.getCellId(col, row)\n    return (\n      this._body.objectMap[id as number] ||\n      this._emptyDataCache.getBody(col, row)\n    )\n  }\n  getBodyLayoutRangeById(id: LayoutObjectId): CellRange {\n    for (let row = 0; row < this.bodyRowCount; row++) {\n      const objectGridRow = this._body.objectGrid[row]\n      if (!objectGridRow) {\n        continue\n      }\n      for (let col = 0; col < this.colCount; col++) {\n        if (id === objectGridRow[col]?.id) {\n          return this._getCellRange(this._body, col, row, 0)\n        }\n      }\n    }\n    throw new Error(`can not found body layout @id=${id as number}`)\n  }\n  getCellRange(col: number, row: number): CellRange {\n    if (this.headerRowCount <= row) {\n      const recordIndex = this.getRecordIndexByRow(row)\n      const startRow = this.getRecordStartRowByRecordIndex(recordIndex)\n      const bodyRow = row - this.headerRowCount\n      const bodyLayoutRow = bodyRow % this.bodyRowCount\n      return this._getCellRange(this._body, col, bodyLayoutRow, startRow)\n    }\n    //in header\n    return this._getCellRange(this._header, col, row, 0)\n  }\n  getRecordIndexByRow(row: number): number {\n    if (row < this.headerRowCount) {\n      return -1\n    } else {\n      const bodyRow = row - this.headerRowCount\n      return Math.floor(bodyRow / this.bodyRowCount)\n    }\n  }\n  getRecordStartRowByRecordIndex(index: number): number {\n    return this.headerRowCount + index * this.bodyRowCount\n  }\n  private _getCellRange(\n    layout: LayoutObjectGrid<HeaderData<T> | ColumnData<T>, any>,\n    col: number,\n    layoutRow: number,\n    offsetRow: number\n  ): CellRange {\n    const result: CellRange = {\n      start: { col, row: layoutRow + offsetRow },\n      end: { col, row: layoutRow + offsetRow },\n    }\n    const { objectGrid } = layout\n    const id = objectGrid[layoutRow]?.[col]?.id\n    if (id == null) {\n      return result\n    }\n    for (let c = col - 1; c >= 0; c--) {\n      if (id !== objectGrid[layoutRow]?.[c]?.id) {\n        break\n      }\n      result.start.col = c\n    }\n    for (let c = col + 1; c < layout.columnCount; c++) {\n      if (id !== objectGrid[layoutRow]?.[c]?.id) {\n        break\n      }\n      result.end.col = c\n    }\n    for (let r = layoutRow - 1; r >= 0; r--) {\n      if (id !== objectGrid[r]?.[col]?.id) {\n        break\n      }\n      result.start.row = r + offsetRow\n    }\n    for (let r = layoutRow + 1; r < layout.rowCount; r++) {\n      if (id !== objectGrid[r]?.[col]?.id) {\n        break\n      }\n      result.end.row = r + offsetRow\n    }\n    return result\n  }\n}\n","import { LayoutObjectId } from '../ts-types'\nimport { LayoutMapAPI } from './layout-map'\n\nexport class LayoutMap<T> implements LayoutMapAPI<T> {\n  private _layoutMap: LayoutMapAPI<T>\n  public hiddenHeader: boolean\n  constructor(layoutMap: LayoutMapAPI<T>) {\n    this._layoutMap = layoutMap\n  }\n  public get headerRowCount() {\n    return this.hiddenHeader ? 0 : this._layoutMap.headerRowCount\n  }\n  public get bodyRowCount() {\n    return this._layoutMap.bodyRowCount\n  }\n  public get colCount() {\n    return this._layoutMap.colCount\n  }\n\n  public get columnWidths() {\n    return this._layoutMap.columnWidths\n  }\n  public get headerObjects() {\n    return this._layoutMap.headerObjects\n  }\n  public get columnObjects() {\n    return this._layoutMap.columnObjects\n  }\n\n  public getHeader(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getHeader(col, row)\n  }\n  public getBody(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getBody(col, row)\n  }\n  public getCellId(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getCellId(col, row)\n  }\n  public getCellRange(col: number, row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    const range = this._layoutMap.getCellRange(col, row)\n    if (this.hiddenHeader) {\n      range.start.row -= this._layoutMap.headerRowCount\n      range.end.row -= this._layoutMap.headerRowCount\n    }\n    return range\n  }\n  public getBodyLayoutRangeById(id: LayoutObjectId) {\n    const range = this._layoutMap.getBodyLayoutRangeById(id)\n    return range\n  }\n  public getRecordIndexByRow(row: number) {\n    if (this.hiddenHeader) {\n      row += this._layoutMap.headerRowCount\n    }\n    return this._layoutMap.getRecordIndexByRow(row)\n  }\n  public getRecordStartRowByRecordIndex(index: number) {\n    let row = this._layoutMap.getRecordStartRowByRecordIndex(index)\n    if (this.hiddenHeader) {\n      row -= this._layoutMap.headerRowCount\n    }\n    return row\n  }\n}\n","import { DG_EVENT_TYPE, DrawGridEvents } from '../core/draw-grid/DG_EVENT_TYPE'\n\nexport interface ListGridEvents extends DrawGridEvents {\n  /**\n   * Indicates when the cell value was changed.\n   */\n  CHANGED_VALUE: 'changed_value'\n  /**\n   * Indicates when the header cell value was changed.\n   */\n  CHANGED_HEADER_VALUE: 'changed_header_value'\n  /**\n   * Indicates when get the cell range.\n   */\n  CELL_RANGE: 'cell_range'\n  /**\n   * Indicates when get the cell value.\n   */\n  CELL_VALUE: 'cell_value'\n}\n\nexport const LG_EVENT_TYPE: ListGridEvents = {\n  ...DG_EVENT_TYPE,\n  CHANGED_HEADER_VALUE: 'changed_header_value' as const,\n  CHANGED_VALUE: 'changed_value' as const,\n  CELL_RANGE: 'cell_range' as const,\n  CELL_VALUE: 'cell_value' as const,\n}\n","import {\n  ListGridAPI,\n  CellContext,\n  GridCanvasHelperAPI,\n  MessageObject,\n  ColumnStyle,\n} from '../../ts-types'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { MessageElement } from './internal/MessageElement'\n\nexport abstract class BaseMessage<T> {\n  private _grid: ListGridAPI<T>\n  private _messageElement: MessageElement | undefined\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n  }\n  public dispose() {\n    this.detachMessageElement()\n    if (this._messageElement) {\n      this._messageElement.dispose()\n    }\n    delete this._messageElement\n  }\n  abstract createMessageElementInternal(): MessageElement\n  public drawCellMessageInternal(\n    message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    // nothing\n  }\n  public attachMessageElement(col: number, row: number, message: any) {\n    const messageElement = this._getMessageElement()\n    messageElement.attach(this._grid, col, row, message)\n  }\n  public moveMessageElement(col: number, row: number) {\n    const messageElement = this._getMessageElement()\n    messageElement.move(this._grid, col, row)\n  }\n  public detachMessageElement() {\n    const messageElement = this._getMessageElement()\n    messageElement.detach()\n  }\n  public drawCellMessage(\n    message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ) {\n    this.drawCellMessageInternal(message, context, style, helper, grid, info)\n  }\n  private _getMessageElement() {\n    return (\n      this._messageElement ||\n      (this._messageElement = this.createMessageElementInternal())\n    )\n  }\n}\n","import { ListGridAPI, MessageObject } from '../../../ts-types'\nimport { createElement } from '../../../internal/dom'\nimport { EventHandler } from '../../../internal/EventHandler'\nimport style from '../../../internal/style'\n\nimport messageElementCss from './MessageElement.css'\n\nconst CLASSNAME_ME = 'kaka-grid__message-element'\nconst MESSAGE_CLASSNAME_ME = `${CLASSNAME_ME}__message`\nconst HIDDEN_CLASSNAME_ME = `${CLASSNAME_ME}--hidden`\nconst SHOWN_CLASSNAME_ME = `${CLASSNAME_ME}--shown`\n\nfunction createMessageDomElement() {\n  style.inject('messageElement', messageElementCss)\n  const rootElement = createElement('div', {\n    classList: [CLASSNAME_ME, HIDDEN_CLASSNAME_ME],\n  })\n  const messageElement = createElement('span', {\n    classList: [MESSAGE_CLASSNAME_ME],\n  })\n  rootElement.appendChild(messageElement)\n  return rootElement\n}\n\nexport class MessageElement {\n  protected _rootElement: HTMLDivElement\n  protected _messageElement: Element\n  private _handler: EventHandler\n  public constructor() {\n    this._handler = new EventHandler()\n    const rootElement = (this._rootElement = createMessageDomElement())\n    this._messageElement = rootElement.querySelector(\n      `.${MESSAGE_CLASSNAME_ME}`\n    ) as Element\n  }\n  public dispose(): void {\n    this.detach()\n    this._handler.dispose()\n  }\n  public attach<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    message: MessageObject\n  ): void {\n    const rootElement = this._rootElement\n    const messageElement = this._messageElement\n\n    rootElement.classList.remove(SHOWN_CLASSNAME_ME)\n    rootElement.classList.add(HIDDEN_CLASSNAME_ME)\n\n    if (this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASSNAME_ME)\n      rootElement.classList.remove(HIDDEN_CLASSNAME_ME)\n\n      messageElement.textContent = message.message\n    } else {\n      this._detach()\n    }\n  }\n  public move<T>(grid: ListGridAPI<T>, col: number, row: number): void {\n    const rootElement = this._rootElement\n    if (rootElement && this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASSNAME_ME)\n      rootElement.classList.remove(HIDDEN_CLASSNAME_ME)\n    } else {\n      this._detach()\n    }\n  }\n  public detach(): void {\n    this._detach()\n  }\n  private _detach(): void {\n    const rootElement = this._rootElement\n    if (rootElement && rootElement.parentElement) {\n      rootElement.parentElement.removeChild(rootElement)\n      rootElement.classList.remove(SHOWN_CLASSNAME_ME)\n      rootElement.classList.add(HIDDEN_CLASSNAME_ME)\n    }\n  }\n  private _attachCell<T>(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number\n  ): boolean {\n    const rootElement = this._rootElement\n    const { element, rect } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n    const top = rect.bottom\n    const left = rect.left\n    const width = rect.width\n    const frozenRowCount = grid.frozenRowCount\n    const frozenColCount = grid.frozenColCount\n    if (row >= frozenRowCount && frozenRowCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(col, frozenRowCount - 1)\n      )\n      if (top < frozenRect.bottom) {\n        return false // 超出范围\n      }\n    } else {\n      if (top < 0) {\n        return false // 超出范围\n      }\n    }\n    if (col >= frozenColCount && frozenColCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(frozenColCount - 1, row)\n      )\n      if (left < frozenRect.right) {\n        return false // 超出范围\n      }\n    } else {\n      if (left < 0) {\n        return false // 超出范围\n      }\n    }\n    const offsetHeight = element.offsetHeight\n    const offsetWidth = element.offsetWidth\n    if (offsetHeight < top) {\n      return false // 超出范围\n    }\n    if (offsetWidth < left) {\n      return false // 超出范围\n    }\n\n    rootElement.style.top = `${top.toFixed()}px`\n    rootElement.style.left = `${left.toFixed()}px`\n    rootElement.style.width = `${width.toFixed()}px`\n    if (rootElement.parentElement !== element) {\n      element.appendChild(rootElement)\n    }\n    return true\n  }\n}\n","import style from '../../../internal/style'\nimport { MessageElement } from './MessageElement'\n\nimport errorMessageElementCss from './ErrorMessageElement.css'\n\nconst CLASSNAME_EME = 'kaka-grid__error-message-element'\nconst MESSAGE_CLASSNAME_EME = `${CLASSNAME_EME}__message`\n\nexport class ErrorMessageElement extends MessageElement {\n  public constructor() {\n    super()\n    style.inject('errorMessageElement', errorMessageElementCss)\n    this._rootElement.classList.add(CLASSNAME_EME)\n    this._messageElement.classList.add(MESSAGE_CLASSNAME_EME)\n  }\n}\n","import { CellContext, ColorDef, GridCanvasHelperAPI } from '../../ts-types'\nimport Rect from '../../internal/Rect'\n\nexport function drawExclamationMarkBox(\n  context: CellContext,\n  style: {\n    bgColor: ColorDef\n    color?: ColorDef\n  },\n  helper: GridCanvasHelperAPI\n): void {\n  const bgColor = style.bgColor\n  const color = style.color\n  const ctx = context.getContext()\n  const rect = context.getRect()\n  // draw box\n  ctx.fillStyle = bgColor\n  const boxRect = (rect as Rect).copy()\n  boxRect.left = boxRect.right - 24\n  ctx.fillRect(boxRect.left, boxRect.top, boxRect.width, boxRect.height - 1)\n\n  // draw exclamation mark\n  const fillColor = color\n  const height = 20\n  const width = height / 5\n  const left = boxRect.left + (boxRect.width - width) / 2\n  const top = boxRect.top + (boxRect.height - height) / 2\n  helper.fillRectWithState(\n    new Rect(left, top, width, (height / 5) * 3),\n    context,\n    { fillColor }\n  )\n  helper.fillRectWithState(\n    new Rect(left, top + (height / 5) * 4, width, height / 5),\n    context,\n    { fillColor }\n  )\n}\n\nexport function drawInformationMarkBox(\n  context: CellContext,\n  style: {\n    bgColor: ColorDef\n    color?: ColorDef\n  },\n  helper: GridCanvasHelperAPI\n) {\n  const bgColor = style.bgColor\n  const color = style.color\n  const ctx = context.getContext()\n  const rect = context.getRect()\n  // draw box\n  ctx.fillStyle = bgColor\n  const boxRect = (rect as Rect).copy()\n  boxRect.left = boxRect.right - 24\n  ctx.fillRect(boxRect.left, boxRect.top, boxRect.width, boxRect.height - 1)\n\n  // draw i mark\n  const fillColor = color\n  const height = 20\n  const width = height / 5\n  const left = boxRect.left + (boxRect.width - width) / 2\n  const top = boxRect.top + (boxRect.height - height) / 2\n  helper.fillRectWithState(new Rect(left, top, width, height / 5), context, {\n    fillColor,\n  })\n  helper.fillRectWithState(\n    new Rect(left, top + (height / 5) * 2, width, (height / 5) * 3),\n    context,\n    { fillColor }\n  )\n}\n","import { BaseMessage } from './BaseMessage'\nimport { ErrorMessageElement } from './internal/ErrorMessageElement'\nimport { drawExclamationMarkBox } from './messageUtils'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport {\n  MessageObject,\n  CellContext,\n  ColumnStyle,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n} from '../../ts-types'\nimport { cellInRange } from '../../internal/utils'\n\nconst RED_A100 = '#ff8a80'\n\nexport class ErrorMessage<T> extends BaseMessage<T> {\n  public createMessageElementInternal() {\n    return new ErrorMessageElement()\n  }\n  public drawCellMessageInternal(\n    message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    const bgColor = style.bgColor\n    const { select } = context.getSelection()\n\n    if (\n      !cellInRange(\n        grid.getCellRange(context.col, context.row),\n        select.col,\n        select.row\n      ) ||\n      !grid.hasFocusGrid()\n    ) {\n      helper.drawBorderWithClip(context, (ctx) => {\n        drawExclamationMarkBox(\n          context,\n          {\n            bgColor: RED_A100,\n            color: bgColor,\n          },\n          helper\n        )\n      })\n    }\n  }\n}\n","import { drawInformationMarkBox } from './messageUtils'\nimport {\n  MessageObject,\n  CellContext,\n  GridCanvasHelperAPI,\n  ColumnStyle,\n  ListGridAPI,\n} from '../../ts-types'\nimport { BaseMessage } from './BaseMessage'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { MessageElement } from './internal/MessageElement'\nimport { cellInRange } from '../../internal/utils'\n\nconst GREY_L2 = '#e0e0e0'\n\nexport class InfoMessage<T> extends BaseMessage<T> {\n  public createMessageElementInternal(): MessageElement {\n    return new MessageElement()\n  }\n  public drawCellMessageInternal(\n    _message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ) {\n    const { bgColor } = style\n    const { select } = context.getSelection()\n    if (\n      !cellInRange(\n        grid.getCellRange(context.col, context.row),\n        select.col,\n        select.row\n      ) ||\n      !grid.hasFocusGrid()\n    ) {\n      helper.drawBorderWithClip(context, (_ctx) => {\n        drawInformationMarkBox(\n          context,\n          {\n            bgColor: GREY_L2,\n            color: bgColor,\n          },\n          helper\n        )\n      })\n    }\n  }\n}\n","import style from '../../../internal/style'\nimport { MessageElement } from './MessageElement'\n\nimport warningMessageElementCss from './WarningMessageElement.css'\n\nconst CLASSNAME_WME = 'kaka-grid__warning-message-element'\nconst MESSAGE_CLASSNAME_WME = `${CLASSNAME_WME}__message`\n\nexport class WarningMessageElement extends MessageElement {\n  public constructor() {\n    super()\n    style.inject('warningMessageElement', warningMessageElementCss)\n    this._rootElement.classList.add(CLASSNAME_WME)\n    this._messageElement.classList.add(MESSAGE_CLASSNAME_WME)\n  }\n}\n","import { drawExclamationMarkBox } from './messageUtils'\nimport {\n  MessageObject,\n  CellContext,\n  ColumnStyle,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n} from '../../ts-types'\nimport { BaseMessage } from './BaseMessage'\nimport { DrawCellInfo } from '../../ts-types-internal'\nimport { WarningMessageElement } from './internal/WarningMessageElement'\nimport { cellInRange } from '../../internal/utils'\n\nconst DEEP_ORANGE_A100 = '#ff9e80'\n\nexport class WarningMessage<T> extends BaseMessage<T> {\n  public createMessageElementInternal(): WarningMessageElement {\n    return new WarningMessageElement()\n  }\n  public drawCellMessageInternal(\n    _message: MessageObject,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    _info: DrawCellInfo<T>\n  ): void {\n    const { bgColor } = style\n    const { select } = context.getSelection()\n    if (\n      !cellInRange(\n        grid.getCellRange(context.col, context.row),\n        select.col,\n        select.row\n      ) ||\n      !grid.hasFocusGrid()\n    ) {\n      helper.drawBorderWithClip(context, (ctx) => {\n        drawExclamationMarkBox(\n          context,\n          {\n            bgColor: DEEP_ORANGE_A100,\n            color: bgColor,\n          },\n          helper\n        )\n      })\n    }\n  }\n}\n","import { MessageHandler as Base, DrawCellInfo } from '../../ts-types-internal'\nimport {\n  CellContext,\n  ColumnStyle,\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  Message,\n  MessageObject,\n  CellAddress,\n} from '../../ts-types'\nimport { BaseMessage } from './BaseMessage'\nimport { LG_EVENT_TYPE } from '../../list-grid/LG_EVENT_TYPE'\nimport { ErrorMessage } from './ErrorMessage'\nimport { InfoMessage } from './InfoMessage'\nimport { WarningMessage } from './WarningMessage'\nimport { isPromise } from '../../internal/utils'\n\nconst EMPTY_MESSAGE: MessageObject = {\n  type: 'error',\n  message: null,\n}\n\nconst MESSAGE_INSTANCE_FACTORY = {\n  error<T>(grid: ListGridAPI<T>): BaseMessage<T> {\n    return new ErrorMessage(grid)\n  },\n  info<T>(grid: ListGridAPI<T>): BaseMessage<T> {\n    return new InfoMessage(grid)\n  },\n  warning<T>(grid: ListGridAPI<T>): BaseMessage<T> {\n    return new WarningMessage(grid)\n  },\n}\n\nfunction normalizeMessage(message: Message): MessageObject {\n  if (!message || isPromise(message)) {\n    return EMPTY_MESSAGE\n  }\n  if (typeof message === 'string') {\n    return {\n      message,\n      original: message,\n      type: 'error',\n    }\n  }\n  const type = message.type || 'error'\n  if (type && type in MESSAGE_INSTANCE_FACTORY) {\n    return {\n      type: type.toLowerCase() as MessageObject['type'],\n      message: `${message.message}`,\n      original: message,\n    }\n  }\n  return {\n    type: 'error',\n    message: `${message}`,\n    original: message,\n  }\n}\n\nfunction hasMessage(message: Message): boolean {\n  return !!normalizeMessage(message).message\n}\n\nexport class MessageHandler<T> implements Base<T> {\n  private _grid: ListGridAPI<T>\n  private _messageInstances: {\n    [k in MessageObject['type']]?: BaseMessage<T>\n  }\n  private _attachInfo: {\n    col: number\n    row: number\n    instance: BaseMessage<T>\n  } | null = null\n  public constructor(\n    grid: ListGridAPI<T>,\n    getMessage: (col: number, row: number) => Message\n  ) {\n    this._grid = grid\n    this._messageInstances = {}\n    this._bindGridEvent(grid, getMessage)\n  }\n  public dispose(): void {\n    const messageInstances = this._messageInstances\n    for (const k in messageInstances) {\n      messageInstances[k as MessageObject['type']]?.dispose()\n    }\n  }\n  public drawCellMessage(\n    message: Message,\n    context: CellContext,\n    style: ColumnStyle,\n    helper: GridCanvasHelperAPI,\n    grid: ListGridAPI<T>,\n    info: DrawCellInfo<T>\n  ): void {\n    if (!hasMessage(message)) {\n      return\n    }\n    const instance = this._getMessageInstanceOfMessage(message)\n    instance.drawCellMessage(\n      normalizeMessage(message),\n      context,\n      style,\n      helper,\n      grid,\n      info\n    )\n  }\n  private _attach(col: number, row: number, message: Message): void {\n    const info = this._attachInfo\n    const instance = this._getMessageInstanceOfMessage(message)\n    if (info && info.instance !== instance) {\n      info.instance.detachMessageElement()\n    }\n    instance.attachMessageElement(col, row, normalizeMessage(message))\n    this._attachInfo = { col, row, instance }\n  }\n  private _move(col: number, row: number): void {\n    const info = this._attachInfo\n    if (!info || info.col !== col || info.row !== row) {\n      return\n    }\n    const { instance } = info\n    instance.moveMessageElement(col, row)\n  }\n  private _detach(): void {\n    const info = this._attachInfo\n    if (!info) {\n      return\n    }\n    const { instance } = info\n    instance.detachMessageElement()\n    this._attachInfo = null\n  }\n  private _bindGridEvent(\n    grid: ListGridAPI<T>,\n    getMessage: (col: number, row: number) => Message\n  ): void {\n    const onSelectMessage = (sel: CellAddress): void => {\n      const message = getMessage(sel.col, sel.row)\n      if (!hasMessage(message)) {\n        this._detach()\n      } else {\n        this._attach(sel.col, sel.row, message)\n      }\n    }\n    grid.listen(LG_EVENT_TYPE.SELECTED_CELL, (e) => {\n      if (!e.selected) {\n        return\n      }\n      if (e.before.col === e.col && e.before.row === e.row) {\n        return\n      }\n      onSelectMessage(e)\n    })\n    grid.listen(LG_EVENT_TYPE.SCROLL, () => {\n      const sel = grid.selection.select\n      this._move(sel.col, sel.row)\n    })\n    grid.listen(LG_EVENT_TYPE.CHANGED_VALUE, (e) => {\n      const sel = grid.selection.select\n      if (sel.col !== e.col || sel.row !== e.row) {\n        return\n      }\n      onSelectMessage(e)\n    })\n    grid.listen(LG_EVENT_TYPE.FOCUS_GRID, (_e) => {\n      const sel = grid.selection.select\n      onSelectMessage(sel)\n    })\n    grid.listen(LG_EVENT_TYPE.BLUR_GRID, (_e) => {\n      this._detach()\n    })\n  }\n  private _getMessageInstanceOfMessage(message: Message): BaseMessage<T> {\n    const messageInstances = this._messageInstances\n    const type = normalizeMessage(message).type\n    return (\n      messageInstances[type] ||\n      (messageInstances[type] = MESSAGE_INSTANCE_FACTORY[type](this._grid))\n    )\n  }\n}\n","import { IconDefine } from '../ts-types'\n\nexport const icons: { [key: string]: IconDefine } = {}\n","const parser = new DOMParser()\nconst ELEMENT_NODE = 1\n\nfunction findElement(\n  el: Element,\n  test: (child: Element) => boolean\n): Element | null {\n  for (let i = 0; i < el.childNodes.length; i++) {\n    const child = el.childNodes[i]\n    if (child.nodeType !== ELEMENT_NODE) {\n      continue\n    }\n    if (test(child as Element)) {\n      return child as Element\n    }\n    const r = findElement(child as Element, test)\n    if (r) {\n      return r\n    }\n  }\n  return null\n}\n\nclass Svg {\n  private _svg: HTMLElement\n  private _glyphs: { [key: string]: Element }\n  private _glyphUnis: { [key: string]: Element }\n  private _fontFace: Element | null | undefined\n  private _font: Element | null | undefined\n  public constructor(svgCode: string) {\n    const document = parser.parseFromString(svgCode, 'image/svg+xml')\n    this._svg = document.documentElement as HTMLElement\n    this._glyphs = {}\n    this._glyphUnis = {}\n  }\n  public get svg() {\n    return this._svg\n  }\n  public get fontFaceElement() {\n    if (!this._fontFace) {\n      this._fontFace = this.findElement(\n        (child) => child.tagName.toLowerCase() === 'font-face'\n      )\n    }\n    return this._fontFace\n  }\n  public get fontElement() {\n    if (!this._font) {\n      this._font = this.findElement(\n        (child) => child.tagName.toLowerCase() === 'font'\n      )\n    }\n    return this._font\n  }\n  public findElement(test: (child: Element) => boolean): Element {\n    return findElement(this.svg, test) as Element\n  }\n  public findGlyph(glyphName: string) {\n    return (\n      this._glyphs[glyphName] ||\n      (this._glyphs[glyphName] = this.findElement(\n        (child) => child.getAttribute('glyph-name') === glyphName\n      ))\n    )\n  }\n  public findGlyphByUnicode(unicode: string) {\n    return (\n      this._glyphUnis[unicode] ||\n      (this._glyphUnis[unicode] = this.findElement(\n        (child) => child.getAttribute('unicode') === unicode\n      ))\n    )\n  }\n  public walkAllGlyph(callback: (child: Element) => void) {\n    const walkGlyph = (el: Element, fn: (child: Element) => void) => {\n      for (let i = 0; i < el.childNodes.length; i++) {\n        const child = el.childNodes[i] as Element\n        if (child.nodeType !== ELEMENT_NODE) {\n          continue\n        }\n        const unicode = child.getAttribute('unicode')\n        if (unicode && child.getAttribute('d')) {\n          if (!this._glyphUnis[unicode]) {\n            this._glyphUnis[unicode] = child\n          }\n          const glyphName = child.getAttribute('glyph-name')\n          if (glyphName && !this._glyphs[glyphName]) {\n            this._glyphs[glyphName] = child\n          }\n          fn(child)\n        } else {\n          walkGlyph(child, fn)\n        }\n      }\n    }\n    walkGlyph(this.svg, callback)\n  }\n}\n\nexport default Svg\n","import Svg from './Svg'\nconst ELEMENT_NODE = 1\n\nfunction polygonToPath(polygon: Element) {\n  const points = polygon.getAttribute('points')\n  return `M${points}z`\n}\n\nfunction polylineToPath(polyline: Element) {\n  const points = polyline.getAttribute('points')\n  return `M${points}`\n}\n\nfunction circleToPath(circle: Element) {\n  const cx = Number(circle.getAttribute('cx'))\n  const cy = Number(circle.getAttribute('cy'))\n  const r = Number(circle.getAttribute('r'))\n\n  // https://tyru.github.io/svg-circle-misc-algorithm/\n  const SEGMENTS = 8\n  const ANGLE = (2 * Math.PI) / SEGMENTS\n  const anchorX = (theta: number) => r * Math.cos(theta)\n  const anchorY = (theta: number) => r * Math.sin(theta)\n  const controlX = (theta: number) =>\n    anchorX(theta) + r * Math.tan(ANGLE / 2) * Math.cos(theta - Math.PI / 2)\n  const controlY = (theta: number) =>\n    anchorY(theta) + r * Math.tan(ANGLE / 2) * Math.sin(theta - Math.PI / 2)\n\n  let paths = `M${cx + r} ${cy}`\n  for (let index = 1; index <= SEGMENTS; index++) {\n    const theta = index * ANGLE\n    paths += `Q${controlX(theta) + cx} ${controlY(theta) + cy} ${\n      anchorX(theta) + cx\n    } ${anchorY(theta) + cy}`\n  }\n  return paths\n}\n\nfunction getD(path: Element) {\n  const fill = path.getAttribute('fill')\n  if (fill === 'none') {\n    return ''\n  }\n  return (path.getAttribute('d') as string).replace(/[\\n\\r]/g, '')\n}\n\nfunction elementToPaths(el: Element) {\n  let path = ''\n  switch (el.tagName.toLowerCase()) {\n    case 'path':\n    case 'glyph':\n      path = getD(el)\n      break\n    case 'circle':\n      path = circleToPath(el)\n      break\n    case 'polygon':\n      path = polygonToPath(el)\n      break\n    case 'polyline':\n      path = polylineToPath(el)\n      break\n    case 'g':\n      for (let i = 0; i < el.childNodes.length; i++) {\n        const child = el.childNodes[i]\n        if (child.nodeType !== ELEMENT_NODE) {\n          continue\n        }\n        if (!(child as Element).getAttribute('fill')) {\n          ;(child as Element).setAttribute(\n            'fill',\n            el.getAttribute('fill') as string\n          )\n        }\n        path += elementToPaths(child as Element)\n      }\n      break\n    default:\n      window.console.warn(`unsupported:${el.tagName}`, `@ ${el.innerHTML}`)\n  }\n  return path\n}\n\nfunction buildObject(\n  obj: {\n    offsetX?: number\n    offsetY?: number\n    width?: number\n    height?: number\n    d?: string\n    isGlyph?: boolean\n    html?: string\n  } = {}\n) {\n  const icon: {\n    d: string\n    height: number\n    width: number\n    html: string\n    ud?: boolean // upside Down\n    offsetX?: number\n    offsetY?: number\n  } = {\n    d: obj.d || '',\n    html: obj.html || '',\n    height: obj.height || 0,\n    width: obj.width || 0,\n  }\n  if (obj.isGlyph) {\n    icon.ud = true\n  }\n  if (obj.offsetX !== undefined) {\n    icon.offsetX = obj.offsetX\n  }\n  if (obj.offsetY !== undefined) {\n    icon.offsetY = obj.offsetY\n  }\n  return icon\n}\n\nfunction glyphToJSON(\n  svgCode: string,\n  opt: {\n    glyphName?: string\n    unicode?: string\n  }\n) {\n  const svg = new Svg(svgCode)\n  function findGlyph() {\n    if (opt.glyphName) {\n      return svg.findGlyph(opt.glyphName)\n    } else if (opt.unicode) {\n      return svg.findGlyphByUnicode(opt.unicode)\n    }\n  }\n  const fontFace = svg.fontFaceElement || {\n    getAttribute(qualifiedName: string) {\n      return null\n    },\n  }\n  const font = svg.fontElement || {\n    getAttribute(qualifiedName: string) {\n      return null\n    },\n  }\n  const glyph = findGlyph() as Element\n  // 左下角的x坐标值，同y坐标值，右上角的x坐标值，同y坐标值\n  // const bbox = (fontFace.getAttribute(\"bbox\") || \"\").split(\" \");\n  // bbox.st = {\n  // \tx: bbox[0] - 0,\n  // \ty: bbox[1] - 0,\n  // };\n  // bbox.ed = {\n  // \tx: bbox[2] - 0,\n  // \ty: bbox[3] - 0,\n  // };\n\n  const fontHorizAdvX = Number(font.getAttribute('horiz-adv-x')) || 0\n  const fontVertAdvX = Number(font.getAttribute('vert-adv-x')) || 0\n  const horizAdvX =\n    Number(glyph.getAttribute('horiz-adv-x')) || fontHorizAdvX || 0\n  const vertAdvX = Number(glyph.getAttribute('vert-adv-x')) || fontVertAdvX || 0\n\n  const unitsPerEm = Number(fontFace.getAttribute('units-per-em')) || 1000\n  // const ascent = Number(fontFace.getAttribute(\"ascent\")) || (unitsPerEm - vertAdvX);\n  const descent = Number(fontFace.getAttribute('descent')) || vertAdvX\n\n  let size = unitsPerEm\n  const contentSize = {\n    height: vertAdvX || unitsPerEm,\n    width: horizAdvX || unitsPerEm,\n  }\n  if (horizAdvX > size) {\n    size = horizAdvX\n  }\n  if (vertAdvX > size) {\n    size = vertAdvX\n  }\n\n  let offsetX = 0 // -bbox.st.x || 0;\n  let offsetY = -descent\n  offsetX += Math.round((size - contentSize.width) / 2)\n  offsetY += Math.round((size - contentSize.height) / 2)\n\n  const d = elementToPaths(glyph)\n\n  return buildObject({\n    d,\n    height: size,\n    html: glyph.outerHTML,\n    isGlyph: true,\n    offsetX,\n    offsetY,\n    width: size,\n  })\n}\n\nfunction svgToJSON(svgCode: string) {\n  const svg = new Svg(svgCode).svg\n  const viewBox = (svg.getAttribute('viewBox') || '').split(' ')\n  const width = Number(svg.getAttribute('width') || viewBox[2]) || 0\n  const height = Number(svg.getAttribute('height') || viewBox[3]) || 0\n  const offsetX = 0 - Number(viewBox[0]) || 0\n  const offsetY = 0 - Number(viewBox[1]) || 0\n\n  let d = ''\n  for (let i = 0; i < svg.childNodes.length; i++) {\n    const el = svg.childNodes[i]\n    if (el.nodeType !== ELEMENT_NODE) {\n      continue\n    }\n    d += elementToPaths(el as Element)\n  }\n  return buildObject({\n    d,\n    height,\n    html: svgCode,\n    offsetX,\n    offsetY,\n    width,\n  })\n}\n\nconst svgToIcon = (\n  svgCode: string,\n  opt: {\n    glyphName?: string\n    unicode?: string\n  } = {}\n) => {\n  if (opt.glyphName || opt.unicode) {\n    return glyphToJSON(svgCode, opt)\n  } else {\n    return svgToJSON(svgCode)\n  }\n}\n\nexport default svgToIcon\n","import { IconDefine } from './ts-types'\n\nimport { extend } from './internal/utils'\nimport { icons as plugins } from './plugins/icons'\nimport svgToIcon from './tools/svgToIcon'\n\nimport add from './icons/ic_add_48px.svg'\nimport edit from './icons/ic_edit_48px.svg'\nimport arrowDownward from './icons/ic_arrow_downward_48px.svg'\nimport arrowUpward from './icons/ic_arrow_upward_48px.svg'\nimport star from './icons/ic_star_24px.svg'\nimport starBorder from './icons/ic_star_border_24px.svg'\nimport starHalf from './icons/ic_star_half_24px.svg'\n\nconst builtins = {\n  add: svgToIcon(add),\n  arrowDownward: svgToIcon(arrowDownward),\n  arrowUpward: svgToIcon(arrowUpward),\n  edit: svgToIcon(edit),\n  star: svgToIcon(star),\n  starBorder: svgToIcon(starBorder),\n  starHalf: svgToIcon(starHalf),\n}\n\nexport const svgIcons = {\n  get(): { [key: string]: IconDefine } {\n    return extend(builtins, plugins)\n  },\n}\n","import { CanvasOperations } from './internal'\n\nfunction mag(v: [number, number]): number {\n  return Math.sqrt(v[0] ** 2 + v[1] ** 2)\n}\n\nfunction dot(u: [number, number], v: [number, number]): number {\n  return u[0] * v[0] + u[1] * v[1]\n}\n\nfunction ratio(u: [number, number], v: [number, number]): number {\n  return dot(u, v) / (mag(u) * mag(v))\n}\n\nfunction clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max)\n}\n\nfunction angle(u: [number, number], v: [number, number]): number {\n  let sign = 1.0\n  if (u[0] * v[1] - u[1] * v[0] < 0) {\n    sign = -1.0\n  }\n  return sign * Math.acos(clamp(ratio(u, v), -1, 1))\n}\n\nfunction rotClockwise(v: [number, number], angle: number): [number, number] {\n  const cost = Math.cos(angle)\n  const sint = Math.sin(angle)\n  return [cost * v[0] + sint * v[1], -1 * sint * v[0] + cost * v[1]]\n}\n\nfunction rotCounterClockwise(\n  v: [number, number],\n  angle: number\n): [number, number] {\n  const cost = Math.cos(angle)\n  const sint = Math.sin(angle)\n  return [cost * v[0] - sint * v[1], sint * v[0] + cost * v[1]]\n}\n\nfunction midPoint(u: [number, number], v: [number, number]): [number, number] {\n  return [(u[0] - v[0]) / 2.0, (u[1] - v[1]) / 2.0]\n}\n\nfunction meanVec(u: [number, number], v: [number, number]): [number, number] {\n  return [(u[0] + v[0]) / 2.0, (u[1] + v[1]) / 2.0]\n}\n\nfunction pointMul(u: [number, number], v: [number, number]): [number, number] {\n  return [u[0] * v[0], u[1] * v[1]]\n}\n\nfunction scale(c: number, v: [number, number]): [number, number] {\n  return [c * v[0], c * v[1]]\n}\n\nfunction sum(u: [number, number], v: [number, number]): [number, number] {\n  return [u[0] + v[0], u[1] + v[1]]\n}\n// Convert an SVG elliptical arc to a series of canvas commands.\n//\n// x1, y1, x2, y2: start and stop coordinates of the ellipse.\n// rx, ry: radii of the ellipse.\n// phi: rotation of the ellipse.\n// fA: large arc flag.\n// fS: sweep flag.\nfunction ellipseFromEllipticalArc(\n  ctx: CanvasOperations,\n  x1: number,\n  y1: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  fA: number,\n  fS: number,\n  x2: number,\n  y2: number\n): void {\n  // Convert from endpoint to center parametrization, as detailed in:\n  //   http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n  if (rx === 0 || ry === 0) {\n    ctx.lineTo(x2, y2)\n    return\n  }\n  phi *= Math.PI / 180.0\n  rx = Math.abs(rx)\n  ry = Math.abs(ry)\n  const xPrime = rotClockwise(midPoint([x1, y1], [x2, y2]), phi) // F.6.5.1\n  const xPrime2 = pointMul(xPrime, xPrime)\n  let rx2 = rx ** 2\n  let ry2 = ry ** 2\n\n  const lambda = Math.sqrt(xPrime2[0] / rx2 + xPrime2[1] / ry2)\n  if (lambda > 1) {\n    rx *= lambda\n    ry *= lambda\n    rx2 = rx ** 2\n    ry2 = ry ** 2\n  }\n  let factor = Math.sqrt(\n    Math.abs(rx2 * ry2 - rx2 * xPrime2[1] - ry2 * xPrime2[0]) /\n      (rx2 * xPrime2[1] + ry2 * xPrime2[0])\n  )\n  if (fA === fS) {\n    factor *= -1.0\n  }\n  const cPrime = scale(factor, [(rx * xPrime[1]) / ry, (-ry * xPrime[0]) / rx]) // F.6.5.2\n  const c = sum(rotCounterClockwise(cPrime, phi), meanVec([x1, y1], [x2, y2])) // F.6.5.3\n  const x1UnitVector: [number, number] = [\n    (xPrime[0] - cPrime[0]) / rx,\n    (xPrime[1] - cPrime[1]) / ry,\n  ]\n  const x2UnitVector: [number, number] = [\n    (-1.0 * xPrime[0] - cPrime[0]) / rx,\n    (-1.0 * xPrime[1] - cPrime[1]) / ry,\n  ]\n  const theta = angle([1, 0], x1UnitVector) // F.6.5.5\n  const deltaTheta = angle(x1UnitVector, x2UnitVector) // F.6.5.6\n  const start = theta\n  const end = theta + deltaTheta\n  ctx.save()\n  ctx.translate(c[0], c[1])\n  ctx.rotate(phi)\n  ctx.scale(rx, ry)\n  ctx.arc(0, 0, 1, start, end, !fS)\n  ctx.restore()\n}\n\nexport default class PathCommands {\n  public readonly M: (px: number, py: number) => this\n  public readonly m: (px: number, py: number) => this\n  public readonly L: (px: number, py: number) => this\n  public readonly l: (px: number, py: number) => this\n  public readonly H: (px: number) => this\n  public readonly h: (px: number) => this\n  public readonly V: (py: number) => this\n  public readonly v: (py: number) => this\n  public readonly Z: () => this\n  public readonly z: () => this\n  public readonly C: (\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    px: number,\n    py: number\n  ) => this\n  public readonly c: (\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    px: number,\n    py: number\n  ) => this\n  public readonly S: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly s: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly Q: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly q: (cpx: number, cpy: number, px: number, py: number) => this\n  public readonly T: (px: number, py: number) => this\n  public readonly t: (px: number, py: number) => this\n  public readonly A: (\n    rx: number,\n    ry: number,\n    xAxisRotation: number,\n    largeArcFlag: number,\n    sweepFlag: number,\n    px: number,\n    py: number\n  ) => this\n  public readonly a: (\n    rx: number,\n    ry: number,\n    xAxisRotation: number,\n    largeArcFlag: number,\n    sweepFlag: number,\n    px: number,\n    py: number\n  ) => this\n  constructor(ctx: CanvasOperations) {\n    let lMx: number\n    let lMy: number\n    let lx = 0\n    let ly = 0\n    let reflected: {\n      x: number\n      y: number\n    }\n    let lastCommand = ''\n    function makeReflected(): {\n      x: number\n      y: number\n    } {\n      if ('CcSsQqTt'.indexOf(lastCommand) < 0) {\n        return { x: lx, y: ly }\n      }\n      return reflected\n    }\n\n    this.M = (px, py): this => {\n      ctx.moveTo(px, py)\n      lMx = px\n      lMy = py\n      lx = px\n      ly = py\n      lastCommand = 'M'\n      return this\n    }\n    this.m = (px, py): this => this.M(px + lx, py + ly)\n    this.L = (px, py): this => {\n      ctx.lineTo(px, py)\n      lx = px\n      ly = py\n      lastCommand = 'L'\n      return this\n    }\n    this.l = (px, py): this => this.L(px + lx, py + ly)\n    this.H = (px): this => this.L(px, ly)\n    this.h = (px): this => this.H(px + lx)\n    this.V = (py): this => this.L(lx, py)\n    this.v = (py): this => this.V(py + ly)\n    this.Z = (): this => {\n      ctx.closePath()\n      lx = lMx\n      ly = lMy\n      lastCommand = 'Z'\n      return this\n    }\n    this.z = (): this => this.Z()\n    //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\n    this.C = (cp1x, cp1y, cp2x, cp2y, px, py): this => {\n      ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, px, py)\n      lx = px\n      ly = py\n      reflected = {\n        x: 2 * px - cp2x,\n        y: 2 * py - cp2y,\n      }\n      lastCommand = 'C'\n      return this\n    }\n    this.c = (cp1x, cp1y, cp2x, cp2y, px, py): this =>\n      this.C(cp1x + lx, cp1y + ly, cp2x + lx, cp2y + ly, px + lx, py + ly)\n    //S x2 y2, x y (or s dx2 dy2, dx dy)\n    this.S = (cpx, cpy, px, py): this => {\n      const { x: cp1x, y: cp1y } = makeReflected(/*lastCommand*/)\n      return this.C(cp1x, cp1y, cpx, cpy, px, py)\n    }\n    this.s = (cpx, cpy, px, py): this =>\n      this.S(cpx + lx, cpy + ly, px + lx, py + ly)\n    //Q x1 y1, x y (or q dx1 dy1, dx dy)\n    this.Q = (cpx, cpy, px, py): this => {\n      ctx.quadraticCurveTo(cpx, cpy, px, py)\n      lx = px\n      ly = py\n      reflected = {\n        x: 2 * px - cpx,\n        y: 2 * py - cpy,\n      }\n      lastCommand = 'Q'\n      return this\n    }\n    this.q = (cpx, cpy, px, py): this =>\n      this.Q(cpx + lx, cpy + ly, px + lx, py + ly)\n    //T x y (or t dx dy)\n    this.T = (px, py): this => {\n      const { x: cpx, y: cpy } = makeReflected()\n      return this.Q(cpx, cpy, px, py)\n    }\n    this.t = (px, py): this => this.T(px + lx, py + ly)\n    //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n    this.A = (rx, ry, xAxisRotation, largeArcFlag, sweepFlag, px, py): this => {\n      const x1 = lx\n      const y1 = ly\n\n      ellipseFromEllipticalArc(\n        ctx,\n        x1,\n        y1,\n        rx,\n        ry,\n        xAxisRotation,\n        largeArcFlag,\n        sweepFlag,\n        px,\n        py\n      )\n\n      lx = px\n      ly = py\n      lastCommand = 'A'\n      return this\n    }\n    //a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy\n    this.a = (rx, ry, xAxisRotation, largeArcFlag, sweepFlag, px, py): this =>\n      this.A(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, px + lx, py + ly)\n  }\n}\n","import { AnyFunction } from '../../../ts-types'\nimport { CanvasOperations } from './internal'\nimport PathCommands from './PathCommands'\n\ntype PathCommandName = keyof PathCommands\ntype CanvasOperation = keyof CanvasOperations\n\ntype Tokens = { next(): string | null }\n\nfunction pathTokens(d: string): Tokens {\n  let idx = 0\n  return {\n    next(): string | null {\n      let s = ''\n      while (d.length > idx) {\n        const c = d[idx]\n        idx++\n        if (' ,\\n\\r\\t'.indexOf(c) > -1) {\n          if (s) {\n            return s\n          }\n        } else {\n          const type = '.+-1234567890'.indexOf(c) > -1 ? 'num' : 'str'\n          if (type === 'str') {\n            if (s) {\n              idx--\n              return s\n            }\n            return c\n          }\n          if ('-+'.indexOf(c) > -1) {\n            if (s) {\n              idx--\n              return s\n            }\n          }\n          if (c === '.') {\n            if (s.indexOf('.') > -1) {\n              idx--\n              return s\n            }\n          }\n          s += c\n        }\n      }\n      return s || null\n    },\n  }\n}\n\nfunction command(\n  builder: PathCommandsParser,\n  cmd: PathCommandName,\n  argsProvider: Tokens\n): PathCommandName | null {\n  if (\n    cmd.toUpperCase() === 'M' ||\n    cmd.toUpperCase() === 'L' ||\n    cmd.toUpperCase() === 'T'\n  ) {\n    builder.command(cmd, argsProvider.next(), argsProvider.next())\n    return cmd === 'M' ? 'L' : cmd === 'm' ? 'l' : cmd\n  } else if (cmd.toUpperCase() === 'H' || cmd.toUpperCase() === 'V') {\n    builder.command(cmd, argsProvider.next())\n    return cmd\n  } else if (cmd.toUpperCase() === 'Z') {\n    builder.command(cmd)\n    return cmd\n  } else if (cmd.toUpperCase() === 'C') {\n    builder.command(\n      cmd,\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next()\n    )\n    return cmd\n  } else if (cmd.toUpperCase() === 'S' || cmd.toUpperCase() === 'Q') {\n    builder.command(\n      cmd,\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next()\n    )\n    return cmd\n  } else if (cmd.toUpperCase() === 'A') {\n    builder.command(\n      cmd,\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next(),\n      argsProvider.next()\n    )\n    return cmd\n  } else {\n    // https://developer.mozilla.org/ja/docs/Web/SVG/Tutorial/Paths\n    console.warn(`unsupported:${cmd}`)\n  }\n  return null\n}\n\nexport default class PathCommandsParser implements CanvasOperations {\n  public readonly moveTo: typeof CanvasRenderingContext2D.prototype.moveTo\n  public readonly lineTo: typeof CanvasRenderingContext2D.prototype.lineTo\n  public readonly closePath: typeof CanvasRenderingContext2D.prototype.closePath\n  public readonly bezierCurveTo: typeof CanvasRenderingContext2D.prototype.bezierCurveTo\n  public readonly quadraticCurveTo: typeof CanvasRenderingContext2D.prototype.quadraticCurveTo\n  public readonly save: typeof CanvasRenderingContext2D.prototype.save\n  public readonly translate: typeof CanvasRenderingContext2D.prototype.translate\n  public readonly rotate: typeof CanvasRenderingContext2D.prototype.rotate\n  public readonly scale: typeof CanvasRenderingContext2D.prototype.scale\n  public readonly arc: typeof CanvasRenderingContext2D.prototype.arc\n  public readonly restore: typeof CanvasRenderingContext2D.prototype.restore\n  public readonly arcTo: typeof CanvasRenderingContext2D.prototype.arcTo\n  public readonly ellipse: typeof CanvasRenderingContext2D.prototype.ellipse\n  public readonly rect: typeof CanvasRenderingContext2D.prototype.rect\n  private readonly _commands: PathCommands\n\n  private _ops: { op: CanvasOperation; args: any[] }[] = []\n  constructor() {\n    this._commands = new PathCommands(this as CanvasOperations)\n\n    const buildPush = (op: CanvasOperation) => (...args: any[]): void => {\n      this._ops.push({\n        op,\n        args,\n      })\n    }\n    this.moveTo = buildPush('moveTo')\n    this.lineTo = buildPush('lineTo')\n    this.closePath = buildPush('closePath')\n    this.bezierCurveTo = buildPush('bezierCurveTo')\n    this.quadraticCurveTo = buildPush('quadraticCurveTo')\n    this.save = buildPush('save')\n    this.translate = buildPush('translate')\n    this.rotate = buildPush('rotate')\n    this.scale = buildPush('scale')\n    this.arc = buildPush('arc')\n    this.restore = buildPush('restore')\n    this.arcTo = buildPush('arcTo')\n    this.ellipse = buildPush('ellipse')\n    this.rect = buildPush('rect')\n  }\n\n  command(name: PathCommandName, ...args: any[]): void {\n    const numArgs: any[] = args || []\n    for (let i = 0; i < args.length; i++) {\n      numArgs[i] -= 0\n    }\n    const command: AnyFunction = this._commands[name]\n    command.apply(this, numArgs)\n  }\n  parse(d: string): { op: CanvasOperation; args: any[] }[] {\n    const ops = (this._ops = [])\n    const tokens = pathTokens(d)\n    try {\n      let cmd: string | null\n      let subsequentCommand: PathCommandName = 'Z'\n      while ((cmd = tokens.next())) {\n        if (!isNaN(Number(cmd))) {\n          let fst = true\n          const argsProvider: Tokens = {\n            next() {\n              if (fst) {\n                fst = false\n                return cmd\n              }\n              return tokens.next()\n            },\n          }\n          subsequentCommand =\n            command(this, subsequentCommand, argsProvider) || 'Z'\n        } else {\n          subsequentCommand =\n            command(this, cmd as PathCommandName, tokens) || 'Z'\n        }\n      }\n    } catch (e) {\n      console.log(`Error: ${d}`)\n      throw e\n    }\n    return ops\n  }\n}\n","import { AnyFunction } from '../../../ts-types'\nimport { CanvasOperations } from './internal'\nimport PathCommandsParser from './PathCommandsParser'\n\nconst parser = new PathCommandsParser()\ntype CanvasOperation = keyof CanvasOperations\n\nexport class Path2DShim implements CanvasPath {\n  _ops: { op: CanvasOperation; args: any[] }[]\n  arc(...args: Parameters<typeof Path2D.prototype.arc>): void {\n    this._ops.push({ op: 'arc', args })\n  }\n  arcTo(...args: Parameters<typeof Path2D.prototype.arcTo>): void {\n    this._ops.push({ op: 'arcTo', args })\n  }\n  bezierCurveTo(\n    ...args: Parameters<typeof Path2D.prototype.bezierCurveTo>\n  ): void {\n    this._ops.push({ op: 'bezierCurveTo', args })\n  }\n  closePath(...args: Parameters<typeof Path2D.prototype.closePath>): void {\n    this._ops.push({ op: 'closePath', args })\n  }\n  ellipse(...args: Parameters<typeof Path2D.prototype.ellipse>): void {\n    this._ops.push({ op: 'ellipse', args })\n  }\n  lineTo(...args: Parameters<typeof Path2D.prototype.lineTo>): void {\n    this._ops.push({ op: 'lineTo', args })\n  }\n  moveTo(...args: Parameters<typeof Path2D.prototype.moveTo>): void {\n    this._ops.push({ op: 'moveTo', args })\n  }\n  quadraticCurveTo(\n    ...args: Parameters<typeof Path2D.prototype.quadraticCurveTo>\n  ): void {\n    this._ops.push({ op: 'quadraticCurveTo', args })\n  }\n  rect(...args: Parameters<typeof Path2D.prototype.rect>): void {\n    this._ops.push({ op: 'rect', args })\n  }\n  constructor(arg: string | Path2DShim) {\n    this._ops = []\n    if (arg === undefined) {\n      return\n    }\n    if (typeof arg === 'string') {\n      // try {\n      this._ops = parser.parse(arg)\n      // } catch (e) {\n      // \tthrow e;\n      // }\n    } else if (arg.hasOwnProperty('_ops')) {\n      this._ops = [...arg._ops]\n    } else {\n      throw new Error(`Error: ${typeof arg} is not a valid argument to Path`)\n    }\n  }\n}\n\nconst { CanvasRenderingContext2D } = window\n\nconst originalFill: AnyFunction = CanvasRenderingContext2D.prototype.fill\n;(CanvasRenderingContext2D.prototype as any).fill = function (\n  ...args: Parameters<typeof CanvasRenderingContext2D.prototype.fill>\n): void {\n  if (args[0] instanceof Path2DShim) {\n    const path = args[0]\n    this.beginPath()\n    path._ops.forEach((op) => {\n      const fn: AnyFunction = this[op.op]\n      fn.apply(this, op.args)\n    })\n    originalFill.apply(this, Array.prototype.slice.call(args, 1))\n  } else {\n    originalFill.apply(this, args)\n  }\n}\n","import { Path2DShim } from './legacy/canvas/Path2DShim'\nimport { browser } from './utils'\n\nfunction getPath2D(): typeof Path2D {\n  if (typeof Path2D !== 'undefined' && !browser.Edge) {\n    return Path2D\n  } else {\n    return Path2DShim as any\n  }\n}\n\nexport const path2DManager = {\n  fill(\n    module: any,\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    w: number,\n    h: number\n  ) {\n    ctx.save()\n    try {\n      const width = module.width\n      const height = module.height\n      const upsideDown = module.ud\n      const offsetX = module.x || 0\n      const offsetY = module.y || 0\n      w = w || width\n      h = h || height\n      const xRate = w / width\n      const yRate = h / (upsideDown ? -height : height)\n      x = x || 0\n      y = upsideDown ? (y || 0) + -height * yRate : y || 0\n\n      ctx.translate(x, y)\n      ctx.scale(xRate, yRate)\n      if (offsetX !== 0 || offsetY !== 0) {\n        ctx.translate(offsetX, offsetY)\n      }\n      const _Path2D = getPath2D()\n      module.path2d = module.path2d || new _Path2D(module.d)\n      ctx.fill(module.path2d)\n    } finally {\n      ctx.restore()\n    }\n  },\n  getPath2D,\n}\n","import { RectProps, ColorDef, AnyFunction, InlineAPI } from '../ts-types'\nimport { GenWordsResult, str, isDef } from '../internal/utils'\nimport { CanvasHelper } from '../tools/canvasHelper'\n\nfunction getWidth(ctx: CanvasRenderingContext2D, content: string): number {\n  return ctx.measureText(content).width\n}\n\nfunction breakWidth(\n  ctx: CanvasRenderingContext2D,\n  content: string,\n  itr: GenWordsResult,\n  candidateIndex: number,\n  width: number\n): {\n  before: Inline | null\n  after: Inline | null\n} {\n  const chars = []\n  let ret = itr.next()\n  for (let i = 0; i < candidateIndex && ret !== null; i++, ret = itr.next()) {\n    chars.push(ret)\n  }\n  let beforeWidth = getWidth(ctx, chars.join(''))\n  if (beforeWidth > width) {\n    while (chars.length) {\n      const c = chars.pop()\n      beforeWidth -= getWidth(ctx, c as string)\n      if (beforeWidth <= width) {\n        break\n      }\n    }\n  } else if (beforeWidth < width) {\n    while (ret !== null) {\n      const charWidth = getWidth(ctx, ret)\n      if (beforeWidth + charWidth > width) {\n        break\n      }\n      chars.push(ret)\n      beforeWidth += charWidth\n      ret = itr.next()\n    }\n  }\n  const beforeContent = chars.join('').replace(/\\s+$/, '')\n  const afterContent = content.slice(beforeContent.length).replace(/^\\s+/, '')\n  return {\n    after: afterContent ? new Inline(afterContent) : null,\n    before: beforeContent ? new Inline(beforeContent) : null,\n  }\n}\n\nexport type InlineDrawOption = {\n  ctx: CanvasRenderingContext2D\n  canvasHelper: CanvasHelper\n  rect: RectProps\n  offset: number\n  offsetLeft: number\n  offsetRight: number\n  offsetTop: number\n  offsetBottom: number\n}\n\nexport class Inline implements InlineAPI {\n  private _content: string\n  public constructor(content?: string) {\n    this._content = isDef(content) ? String(content) : ''\n  }\n  public width(obj: { ctx: CanvasRenderingContext2D }): number {\n    return getWidth(obj.ctx, this._content)\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): ColorDef | null {\n    return null\n  }\n  public canDraw(): boolean {\n    return true\n  }\n  public onReady(_callback: AnyFunction): void {}\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    canvasHelper.fillTextRect(\n      ctx,\n      this._content,\n      rect.left,\n      rect.top,\n      rect.width,\n      rect.height,\n      {\n        offset: offset + 1,\n        padding: {\n          bottom: offsetBottom,\n          left: offsetLeft,\n          right: offsetRight,\n          top: offsetTop,\n        },\n      }\n    )\n  }\n  public canBreak(): boolean {\n    return !!this._content\n  }\n  public splitIndex(\n    index: number\n  ): {\n    before: Inline | null\n    after: Inline | null\n  } {\n    const content = this._content\n    const itr = str.genChars(content)\n    const chars = []\n    let ret = itr.next()\n    for (let i = 0; i < index && ret !== null; i++, ret = itr.next()) {\n      chars.push(ret)\n    }\n    const beforeContent = chars.join('')\n    const afterContent = content.slice(beforeContent.length)\n    return {\n      after: afterContent ? new Inline(afterContent) : null,\n      before: beforeContent ? new Inline(beforeContent) : null,\n    }\n  }\n  public breakWord(\n    ctx: CanvasRenderingContext2D,\n    width: number\n  ): {\n    before: Inline | null\n    after: Inline | null\n  } {\n    const content = this._content\n    const allWidth = this.width({ ctx })\n    const candidate = Math.floor((this._content.length * width) / allWidth)\n    const itr = str.genWords(content)\n    return breakWidth(ctx, content, itr, candidate, width)\n  }\n  public breakAll(\n    ctx: CanvasRenderingContext2D,\n    width: number\n  ): {\n    before: Inline | null\n    after: Inline | null\n  } {\n    const content = this._content\n    const allWidth = this.width({ ctx })\n    const candidate = Math.floor((this._content.length * width) / allWidth)\n    const itr = str.genChars(content)\n    return breakWidth(ctx, content, itr, candidate, width)\n  }\n  public toString(): string {\n    return this._content\n  }\n}\n","import { AnyFunction, ColorDef } from '../ts-types'\nimport { InlineDrawOption, Inline } from './Inline'\n\nexport type InlineDrawerFunction = (options: InlineDrawOption) => void\nexport class InlineDrawer extends Inline {\n  private _draw: InlineDrawerFunction\n  private _width: number\n  // private _height: number\n  private _color?: ColorDef\n  public constructor({\n    draw,\n    width,\n    // height,\n    color,\n  }: {\n    draw: InlineDrawerFunction\n    width: number\n    height: number\n    color?: ColorDef\n  }) {\n    super()\n\n    this._draw = draw\n    this._width = width\n    // this._height = height\n    this._color = color\n  }\n  public width(_arg: { ctx: CanvasRenderingContext2D }): number {\n    return this._width\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): ColorDef | null {\n    return this._color ?? null\n  }\n  public canDraw(): boolean {\n    return true\n  }\n  public onReady(_callback: AnyFunction): void {}\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    this._draw({\n      ctx,\n      canvasHelper,\n      rect,\n      offset,\n      offsetLeft,\n      offsetRight,\n      offsetTop,\n      offsetBottom,\n    })\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","//see https://github.com/typekit/webfontloader\n\ntype Styles1 = {\n  display: 'block'\n  position: 'absolute'\n  top: '-9999px'\n  left: '-9999px'\n  width: 'auto'\n  height: 'auto'\n  margin: '0'\n  padding: '0'\n  'white-space': 'nowrap'\n  font: string\n}\ntype Styles2 = {\n  'font-variant': 'normal'\n  'font-size': '300px'\n  'font-style': 'normal'\n  'font-weight': '400'\n  'line-height': 'normal'\n}\n\ntype StyleKeys = keyof Styles1 | keyof Styles2\n\nfunction computeStyle(font: string): [Styles1, Styles2] {\n  return [\n    {\n      display: 'block',\n      position: 'absolute',\n      top: '-9999px',\n      left: '-9999px',\n      width: 'auto',\n      height: 'auto',\n      margin: '0',\n      padding: '0',\n      'white-space': 'nowrap',\n      font,\n    },\n    {\n      'font-variant': 'normal',\n      'font-size': '300px',\n      'font-style': 'normal',\n      'font-weight': '400',\n      'line-height': 'normal',\n    },\n  ]\n}\n\nclass FontRuler {\n  private _el: HTMLSpanElement\n  constructor(font: string, testStr: string) {\n    const e = document.createElement('span')\n    e.setAttribute('aria-hidden', 'true')\n    e.textContent = testStr || 'BESbswy'\n\n    computeStyle(font).forEach((style: Styles1 | Styles2) => {\n      for (const k in style) {\n        const key = k as StyleKeys\n        e.style[key as any] = (style as any)[key]\n      }\n    })\n    document.body.appendChild(e)\n    this._el = e\n  }\n  getWidth(): number {\n    return this._el.offsetWidth\n  }\n  remove(): void {\n    document.body.removeChild(this._el)\n  }\n}\n\nexport default FontRuler\n","import { AnyFunction } from '../../../ts-types'\n//see https://github.com/typekit/webfontloader\n\n//http://defghi1977.html.xdomain.jp/tech/canvasMemo/canvasMemo.htm\nimport FontRuler from './FontRuler'\n\nconst LastResortFonts: { [key: string]: string } = {\n  SERIF: 'serif',\n  SANS_SERIF: 'sans-serif',\n}\n\nconst watchRunners: {\n  [font: string]: { [testStr: string]: FontWatchRunner }\n} = {}\n\nclass FontWatchRunner {\n  activeCallbacks: AnyFunction[]\n  inactiveCallbacks: AnyFunction[]\n  status: 'ok' | 'ng' | null\n  lastResortWidths_: { [font: string]: number }\n  fontRulerA_: FontRuler\n  fontRulerB_: FontRuler\n  started_: number\n  static load(\n    font: string,\n    testStr: string,\n    activeCallback: AnyFunction,\n    inactiveCallback: AnyFunction\n  ): void {\n    const c = watchRunners[font] || (watchRunners[font] = {})\n    testStr += ''\n    let runner\n    if (c[testStr]) {\n      runner = c[testStr]\n    } else {\n      runner = c[testStr] = new FontWatchRunner(font, testStr)\n    }\n    runner.then(activeCallback, inactiveCallback)\n  }\n  constructor(font: string, testStr: string) {\n    this.activeCallbacks = []\n    this.inactiveCallbacks = []\n    this.status = null\n    this.lastResortWidths_ = {}\n\n    this.fontRulerA_ = new FontRuler(\n      `${font},${LastResortFonts.SERIF}`,\n      testStr\n    )\n    this.fontRulerB_ = new FontRuler(\n      `${font},${LastResortFonts.SANS_SERIF}`,\n      testStr\n    )\n    const lastResortRulerA = new FontRuler(\n      `4px ${LastResortFonts.SERIF}`,\n      testStr\n    )\n    const lastResortRulerB = new FontRuler(\n      `4px ${LastResortFonts.SANS_SERIF}`,\n      testStr\n    )\n\n    //start\n    this.lastResortWidths_[LastResortFonts.SERIF] = lastResortRulerA.getWidth()\n    this.lastResortWidths_[\n      LastResortFonts.SANS_SERIF\n    ] = lastResortRulerB.getWidth()\n\n    lastResortRulerA.remove()\n    lastResortRulerB.remove()\n\n    this.started_ = Date.now()\n\n    this.check_()\n  }\n  then(activeCallback: AnyFunction, inactiveCallback: AnyFunction): void {\n    if (this.status) {\n      if (this.status !== 'ng') {\n        activeCallback()\n      } else {\n        inactiveCallback()\n      }\n    } else {\n      this.activeCallbacks.push(activeCallback)\n      this.inactiveCallbacks.push(inactiveCallback)\n    }\n  }\n  private check_(): void {\n    const widthA = this.fontRulerA_.getWidth()\n    const widthB = this.fontRulerB_.getWidth()\n\n    if (\n      this.isFallbackFont_(widthA, widthB) ||\n      this.isLastResortFont_(widthA, widthB)\n    ) {\n      if (Date.now() - this.started_ >= 3000) {\n        // timeout\n        if (this.isLastResortFont_(widthA, widthB)) {\n          this.finish_(this.activeCallbacks)\n          this.status = 'ok'\n        } else {\n          this.finish_(this.inactiveCallbacks)\n          this.status = 'ng'\n        }\n      } else {\n        setTimeout(() => {\n          this.check_()\n        }, 50)\n      }\n    } else {\n      this.finish_(this.activeCallbacks)\n      this.status = 'ok'\n    }\n  }\n  isFallbackFont_(a: number, b: number): boolean {\n    return (\n      this.widthMatches_(a, LastResortFonts.SERIF) &&\n      this.widthMatches_(b, LastResortFonts.SANS_SERIF)\n    )\n  }\n  widthsMatchLastResortWidths_(a: number, b: number): boolean {\n    for (const font in LastResortFonts) {\n      if (LastResortFonts.hasOwnProperty(font)) {\n        if (\n          this.widthMatches_(a, LastResortFonts[font]) &&\n          this.widthMatches_(b, LastResortFonts[font])\n        ) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n  widthMatches_(width: number, lastResortFont: string): boolean {\n    return width === this.lastResortWidths_[lastResortFont]\n  }\n  isLastResortFont_(a: number, b: number): boolean {\n    return hasWebKitFallbackBug() && this.widthsMatchLastResortWidths_(a, b)\n  }\n  finish_(callbacks: AnyFunction[]): void {\n    setTimeout(() => {\n      this.fontRulerA_.remove()\n      this.fontRulerB_.remove()\n      callbacks.forEach((cb) => cb())\n    }, 0)\n  }\n}\n\nlet HAS_WEBKIT_FALLBACK_BUG: boolean | null = null\nfunction hasWebKitFallbackBug(): boolean {\n  if (HAS_WEBKIT_FALLBACK_BUG === null) {\n    const match = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(\n      window.navigator.userAgent\n    )\n\n    HAS_WEBKIT_FALLBACK_BUG =\n      !!match &&\n      (parseInt(match[1], 10) < 536 ||\n        (parseInt(match[1], 10) === 536 && parseInt(match[2], 10) <= 11))\n  }\n  return HAS_WEBKIT_FALLBACK_BUG\n}\n\nexport default FontWatchRunner\n","import FontWatchRunner from './legacy/fontwatch/FontWatchRunner'\nimport { isNode } from './utils'\n\nconst loads: {\n  [font: string]: boolean\n  all: boolean\n} = {\n  all: false,\n}\nlet load: (font: string, testStr: string, callback: () => void) => void\nlet check: (font: string, testStr: string) => boolean\nif (isNode) {\n  load = (font, testStr, callback) => {\n    callback()\n  }\n  check = () => {\n    return false\n  }\n} else {\n  const legacy = !(document as any).fonts\n  load = legacy\n    ? (font: string, testStr: string, callback: () => void) => {\n        // for legacy(IE)\n        if (loads[`${font} @ ${testStr}`]) {\n          callback()\n          return\n        }\n        FontWatchRunner.load(\n          font,\n          testStr,\n          () => {\n            loads[`${font} @ ${testStr}`] = true\n            callback()\n          },\n          () => {\n            loads[`${font} @ ${testStr}`] = true\n            callback()\n          }\n        )\n      }\n    : (font: string, testStr: string, callback: () => void) => {\n        if (loads.all || loads[font]) {\n          callback()\n          return\n        }\n        ;(document as any).fonts.ready.then(() => {\n          loads.all = true\n        })\n        ;(document as any).fonts.load(font).then(() => {\n          loads[font] = true\n          callback()\n        })\n      }\n  check = legacy\n    ? (font: string, testStr: string) => {\n        // for legacy(IE)\n        if (loads[`${font} @ ${testStr}`]) {\n          return true\n        }\n        load(font, testStr, () => {\n          // nothing\n        })\n        return false\n      }\n    : (font: string, testStr: string) => {\n        if (loads.all || loads[font]) {\n          return true\n        }\n        if (!(document as any).fonts.check(font)) {\n          load(font, testStr, () => {\n            // nothing\n          })\n          return false\n        }\n        return true\n      }\n}\n\nexport default {\n  check,\n  load,\n}\n","import fonts from '../internal/fonts'\nimport { InlineDrawOption, Inline } from './Inline'\nimport { ColorDef, AnyFunction } from '../ts-types'\n\nexport type InlineIconConstructorOption = {\n  width?: number\n  font?: string\n  content?: string\n  color?: ColorDef\n}\n\nexport class InlineIcon extends Inline {\n  private _icon: InlineIconConstructorOption\n  public constructor(icon: InlineIconConstructorOption) {\n    super()\n    this._icon = icon || {}\n  }\n  public width({ ctx }: { ctx: CanvasRenderingContext2D }): number {\n    const icon = this._icon\n    if (icon.width) {\n      return icon.width\n    }\n    if (icon.font && fonts.check(icon.font, icon.content || '')) {\n      ctx.save()\n      ctx.canvas.style.letterSpacing = 'normal'\n      try {\n        ctx.font = icon.font || ctx.font\n        return ctx.measureText(icon.content || '').width\n      } finally {\n        ctx.canvas.style.letterSpacing = ''\n        ctx.restore()\n      }\n    }\n    return 0 // unknown\n  }\n  public font(): string | null {\n    return this._icon.font ?? null\n  }\n  public color(): ColorDef | null {\n    return this._icon.color ?? null\n  }\n  public canDraw(): boolean {\n    const icon = this._icon\n    return icon.font ? fonts.check(icon.font, icon.content || '') : true\n  }\n  public onReady(callback: AnyFunction): void {\n    const icon = this._icon\n    if (icon.font && !fonts.check(icon.font, icon.content || '')) {\n      fonts.load(icon.font, icon.content || '', callback)\n    }\n  }\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    const icon = this._icon\n    if (icon.content) {\n      ctx.canvas.style.letterSpacing = 'normal'\n      try {\n        ctx.font = ctx.font // To apply letterSpacing, we need to reset it.\n        canvasHelper.fillTextRect(\n          ctx,\n          icon.content,\n          rect.left,\n          rect.top,\n          rect.width,\n          rect.height,\n          {\n            offset: offset + 1,\n            padding: {\n              bottom: offsetBottom,\n              left: offsetLeft,\n              right: offsetRight,\n              top: offsetTop,\n            },\n          }\n        )\n      } finally {\n        ctx.canvas.style.letterSpacing = ''\n      }\n    }\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","import { MaybePromise, AnyFunction } from '../ts-types'\nimport { getCacheOrLoad } from '../internal/imgs'\nimport { isPromise } from '../internal/utils'\nimport { InlineDrawOption, Inline } from './Inline'\n\nexport type InlineImageConstructorOption = {\n  src: MaybePromise<string>\n  width?: number\n  height?: number\n  imageLeft?: number\n  imageTop?: number\n  imageWidth?: number\n  imageHeight?: number\n}\n\nexport class InlineImage extends Inline {\n  private _src: MaybePromise<string>\n  private _width?: number\n  private _height?: number\n  private _imageLeft?: number\n  private _imageTop?: number\n  private _imageWidth?: number\n  private _imageHeight?: number\n  private _onloaded: AnyFunction[]\n  private _inlineImgPromise: MaybePromise<HTMLImageElement> | null = null\n  private _inlineImg: HTMLImageElement | null = null\n  public constructor({\n    src,\n    width,\n    height,\n    imageLeft,\n    imageTop,\n    imageWidth,\n    imageHeight,\n  }: InlineImageConstructorOption) {\n    super()\n    this._src = src\n    this._width = width\n    this._height = height\n    this._imageLeft = imageLeft\n    this._imageTop = imageTop\n    this._imageWidth = imageWidth\n    this._imageHeight = imageHeight\n\n    this._onloaded = []\n\n    if (isPromise(src)) {\n      src.then((s) => {\n        this._src = s\n        this._loadImage(s)\n      })\n    } else {\n      this._loadImage(src)\n    }\n  }\n  public width(_arg: { ctx: CanvasRenderingContext2D }): number {\n    return this._width || (this._inlineImg?.width ?? 0)\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): string | null {\n    return null\n  }\n  public canDraw(): boolean {\n    return !!this._inlineImg\n  }\n  public onReady(callback: AnyFunction): void {\n    if (isPromise(this._src) || isPromise(this._inlineImgPromise)) {\n      this._onloaded.push(() => callback())\n    }\n  }\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    const img = this._inlineImg as HTMLImageElement\n    canvasHelper.drawInlineImageRect(\n      ctx,\n      img,\n      this._imageLeft || 0,\n      this._imageTop || 0,\n      this._imageWidth || img.width,\n      this._imageHeight || img.height,\n      this._width || img.width,\n      this._height || img.height,\n      rect.left,\n      rect.top,\n      rect.width,\n      rect.height,\n      {\n        offset: offset + 1,\n        padding: {\n          bottom: offsetBottom,\n          left: offsetLeft,\n          right: offsetRight,\n          top: offsetTop,\n        },\n      }\n    )\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n  private _loadImage(src: string) {\n    const img = (this._inlineImgPromise = getCacheOrLoad(\n      'InlineImage',\n      50,\n      src\n    ))\n    if (isPromise(img)) {\n      img.then((i) => {\n        this._inlineImg = i\n\n        this._onloaded.forEach((fn) => fn())\n      })\n    } else {\n      this._inlineImg = img\n    }\n  }\n}\n","import { AnyFunction, ColorDef } from '../ts-types'\nimport { calcStartPosition } from '../internal/canvases'\nimport { path2DManager } from '../internal/path2DManager'\nimport { InlineDrawOption, Inline } from './Inline'\n\nexport type InlinePath2DConstructorOption = {\n  path: Path2D | string\n  width: number\n  height: number\n  color?: ColorDef\n}\n\nexport class InlinePath2D extends Inline {\n  private _path: Path2D\n  private _width: number\n  private _height: number\n  private _color?: ColorDef\n  public constructor({\n    path,\n    width,\n    height,\n    color,\n  }: InlinePath2DConstructorOption) {\n    super()\n    // Path2D的Polyfill不会反映在IE中，除非是这个时间\n    const Path2D = path2DManager.getPath2D()\n    this._path = new Path2D(path)\n    this._width = width\n    this._height = height\n    this._color = color\n  }\n  public width(_arg: { ctx: CanvasRenderingContext2D }): number {\n    return this._width\n  }\n  public font(): string | null {\n    return null\n  }\n  public color(): ColorDef | null {\n    return this._color ?? null\n  }\n  public canDraw(): boolean {\n    return true\n  }\n  public onReady(_callback: AnyFunction): void {}\n  public draw({\n    ctx,\n    canvasHelper,\n    rect,\n    offset,\n    offsetLeft,\n    offsetRight,\n    offsetTop,\n    offsetBottom,\n  }: InlineDrawOption): void {\n    offset++\n    const padding = {\n      bottom: offsetBottom,\n      left: offsetLeft,\n      right: offsetRight,\n      top: offsetTop,\n    }\n    ctx.save()\n    try {\n      ctx.beginPath()\n      ctx.rect(rect.left, rect.top, rect.width, rect.height)\n      // clip\n      ctx.clip()\n\n      const pos = calcStartPosition(ctx, rect, this._width, this._height, {\n        offset,\n        padding,\n      })\n      ctx.translate(pos.x, pos.y)\n      ctx.fill(this._path)\n    } finally {\n      ctx.restore()\n    }\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","import { then, isPromise } from '../internal/utils'\nimport { InlineImage } from './InlineImage'\nimport { MaybePromise } from '../ts-types'\nimport { toPx } from '../internal/calc'\n\nfunction buildSvgDataUrl(svg: string | Node): string {\n  const data =\n    typeof svg === 'string' ? svg : new XMLSerializer().serializeToString(svg)\n  const url = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(data)}` // svg -> base64\n  return url\n}\nfunction getSvgElement(svg: string | SVGElement): SVGElement {\n  let el\n  if (typeof svg === 'string') {\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(svg, 'image/svg+xml')\n    const nodes = doc.children || doc.childNodes\n    el = nodes[0] as SVGElement\n    for (let i = 0; i < nodes.length; i++) {\n      if (nodes[i] instanceof SVGElement) {\n        el = nodes[i] as SVGElement\n        break\n      }\n    }\n  } else {\n    el = svg\n  }\n  return el\n}\n\nexport type InlineSvgConstructorOption = {\n  svg: MaybePromise<string | SVGElement>\n  width?: number\n  height?: number\n}\n\nexport class InlineSvg extends InlineImage {\n  public constructor({ svg, width, height }: InlineSvgConstructorOption) {\n    const svgElem = then(svg, getSvgElement)\n    const elmWidth = !isPromise(svgElem)\n      ? svgElem.getAttribute('width') ?? undefined\n      : undefined\n    const elmHeight = !isPromise(svgElem)\n      ? svgElem.getAttribute('height') ?? undefined\n      : undefined\n    const context = {\n      full: 0,\n      em: 0\n    }\n    const numElmWidth = elmWidth != null ? toPx(elmWidth, context) : undefined\n    const numElmHeight = elmHeight != null ? toPx(elmHeight, context) : undefined\n    super({\n      src: then(svg, buildSvgDataUrl),\n      width: width || numElmWidth,\n      height: height || numElmHeight,\n      imageWidth: numElmWidth,\n      imageHeight: numElmHeight,\n    })\n  }\n  public canBreak(): boolean {\n    return false\n  }\n  public toString(): string {\n    return ''\n  }\n}\n","import { IconDefine } from '../ts-types'\nimport { SimpleColumnIconOption } from '../ts-types-internal'\nimport { svgIcons } from '../icons'\nimport { PaddingOption, calcStartPosition } from '../internal/canvases'\nimport { path2DManager } from '../internal/path2DManager'\nimport { isDef } from '../internal/utils'\nimport { InlineDrawOption, Inline } from './Inline'\nimport { InlineDrawer } from './InlineDrawer'\nimport { InlineIcon } from './InlineIcon'\nimport { InlineImage } from './InlineImage'\nimport { InlinePath2D } from './InlinePath2D'\nimport { InlineSvg } from './InlineSvg'\n\nfunction drawRegisteredIcon(\n  ctx: CanvasRenderingContext2D,\n  icon: IconDefine,\n  drawWidth: number,\n  drawHeight: number,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n  { offset = 2, padding }: { offset?: number; padding?: PaddingOption } = {}\n) {\n  const rect = {\n    bottom: top + height,\n    height,\n    left,\n    right: left + width,\n    top,\n    width,\n  }\n  ctx.save()\n  try {\n    ctx.beginPath()\n    ctx.rect(rect.left, rect.top, rect.width, rect.height)\n    // clip\n    ctx.clip()\n\n    const pos = calcStartPosition(ctx, rect, drawWidth, drawHeight, {\n      offset,\n      padding,\n    })\n    path2DManager.fill(icon, ctx, pos.x, pos.y, drawWidth, drawHeight)\n  } finally {\n    ctx.restore()\n  }\n}\n\nfunction isIconConstructorOption(\n  icon: SimpleColumnIconOption\n): icon is SimpleColumnIconOption & { font: string; content: string } {\n  if (icon.font && icon.content) {\n    return true\n  }\n  return false\n}\n\nfunction isInlineImageConstructorOption(\n  icon: SimpleColumnIconOption\n): icon is SimpleColumnIconOption & { src: string } {\n  if (icon.src) {\n    return true\n  }\n  return false\n}\n\nfunction isInlineSvgConstructorOption(\n  icon: SimpleColumnIconOption\n): icon is SimpleColumnIconOption & {\n  path: string\n  width: number\n  height: number\n} {\n  if (icon.path) {\n    return true\n  }\n  return false\n}\n\nexport function iconOf(icon: SimpleColumnIconOption | null): Inline | null {\n  if (icon instanceof Inline) {\n    return icon\n  }\n  if (!icon) {\n    return null\n  }\n  if (isIconConstructorOption(icon)) {\n    return new InlineIcon(icon)\n  }\n  if (isInlineImageConstructorOption(icon)) {\n    return new InlineImage({\n      height: icon.width,\n      src: icon.src,\n      width: icon.width,\n    })\n  }\n  if (icon.svg) {\n    return new InlineSvg({\n      height: icon.width,\n      svg: icon.svg,\n      width: icon.width,\n    })\n  }\n  if (isInlineSvgConstructorOption(icon)) {\n    return new InlinePath2D({\n      color: icon.color,\n      height: icon.width,\n      path: icon.path,\n      width: icon.width,\n    })\n  }\n  const regedIcons = svgIcons.get()\n  if (icon.name && regedIcons[icon.name]) {\n    const regedIcon = regedIcons[icon.name]\n    const width = icon.width || Math.max(regedIcon.width, regedIcon.height)\n    return new InlineDrawer({\n      draw({\n        ctx,\n        rect,\n        offset,\n        offsetLeft,\n        offsetRight,\n        offsetTop,\n        offsetBottom,\n      }: InlineDrawOption): void {\n        drawRegisteredIcon(\n          ctx,\n          regedIcon,\n          width,\n          width,\n          rect.left,\n          rect.top,\n          rect.width,\n          rect.height,\n          {\n            offset: offset + 1,\n            padding: {\n              bottom: offsetBottom,\n              left: offsetLeft,\n              right: offsetRight,\n              top: offsetTop,\n            },\n          }\n        )\n      },\n      color: icon.color,\n      height: width,\n      width,\n    })\n  }\n  return new InlineIcon(icon)\n}\n\nexport function of(content: string | Inline): Inline\nexport function of(content?: string | Inline | null): null\nexport function of(content?: string | Inline | null): Inline | null {\n  if (!isDef(content)) {\n    return null\n  }\n  if (content instanceof Inline) {\n    return content\n  }\n  return new Inline(content)\n}\nexport function buildInlines(\n  icons: SimpleColumnIconOption[] | null | undefined,\n  inline: Inline | string | (string | Inline)[]\n): Inline[] {\n  const result = []\n  if (icons) {\n    result.push(...icons.map((icon) => iconOf(icon)).filter(isDef))\n  }\n  if (\n    Array.isArray(inline)\n    // && inline.filter(il => il instanceof Inline).length <- ?\n  ) {\n    result.push(...inline.map((il) => of(il)).filter(isDef))\n  } else {\n    const il = of(inline)\n    if (il) {\n      result.push(il)\n    }\n  }\n  return result\n}\nexport function string(inline: any) {\n  return buildInlines(undefined, inline).join('')\n}\n","import { themes } from './themes'\nimport {\n  RequiredThemeDefine,\n  ListGridAPI,\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  ColorDef,\n  StylePropertyFunctionArg,\n  FontPropertyDefine,\n} from './ts-types'\nimport { getChainSafe, isDef, getOrApply } from './internal/utils'\n\nfunction getThemeColor<\n  R,\n  T extends\n    | ColorPropertyDefine\n    | ColorsPropertyDefine\n    | FontPropertyDefine\n    | number\n>(grid: ListGridAPI<R>, ...names: string[]): T {\n  const gridThemeColor = getChainSafe(grid.theme, ...names)\n  if (!isDef(gridThemeColor)) {\n    // use default theme\n    return getChainSafe(themes.getDefault(), ...names)\n  }\n  if (typeof gridThemeColor !== 'function') {\n    return gridThemeColor\n  }\n  let defaultThemeColor: ColorDef\n  return ((args: StylePropertyFunctionArg): any => {\n    const color = gridThemeColor(args)\n    if (isDef(color)) {\n      // use grid theme\n      return color\n    }\n    // use default theme\n    defaultThemeColor =\n      defaultThemeColor || getChainSafe(themes.getDefault(), ...names)\n    return getOrApply(defaultThemeColor, args)\n  }) as any\n}\n\nexport class ThemeResolver<T> implements RequiredThemeDefine {\n  private _grid: ListGridAPI<T>\n  private _checkbox: RequiredThemeDefine['checkbox'] | null = null\n  private _radioButton: RequiredThemeDefine['radioButton'] | null = null\n  private _button: RequiredThemeDefine['button'] | null = null\n  private _header: RequiredThemeDefine['header'] | null = null\n  private _switch: RequiredThemeDefine['switch'] | null = null\n  private _tree: RequiredThemeDefine['tree'] | null = null\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n  }\n  public getThemeColor<\n    T extends\n      | ColorPropertyDefine\n      | ColorsPropertyDefine\n      | FontPropertyDefine\n      | number\n  >(...name: string[]): T {\n    return getThemeColor(this._grid, ...name)\n  }\n  public get underlayBackgroundColor(): string {\n    return getThemeColor(this._grid, 'underlayBackgroundColor')\n  }\n  // font\n  public get font(): string {\n    return getThemeColor(this._grid, 'font')\n  }\n  public get frozenRowsFont(): string {\n    return getThemeColor(this._grid, 'frozenRowsFont')\n  }\n  // color\n  public get color(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'color')\n  }\n  public get frozenRowsColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'frozenRowsColor')\n  }\n  // background\n  public get defaultBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'defaultBgColor')\n  }\n  public get frozenRowsBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'frozenRowsBgColor')\n  }\n  public get focusBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'focusBgColor')\n  }\n  public get selectionBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'selectionBgColor')\n  }\n  public get highlightBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'highlightBgColor')\n  }\n  public get selectionDragBgColor(): ColorPropertyDefine {\n    return getThemeColor(this._grid, 'selectionDragBgColor')\n  }\n  // border\n  public get borderColor(): ColorsPropertyDefine {\n    return getThemeColor(this._grid, 'borderColor')\n  }\n  public get frozenRowsBorderColor(): ColorsPropertyDefine {\n    return getThemeColor(this._grid, 'frozenRowsBorderColor')\n  }\n  public get highlightBorderColor(): ColorsPropertyDefine {\n    return getThemeColor(this._grid, 'highlightBorderColor')\n  }\n  // grid border\n  public get gridBorderColor(): string {\n    return getThemeColor(this._grid, 'gridBorderColor')\n  }\n  public get gridBorderWidth(): number {\n    return getThemeColor(this._grid, 'gridBorderWidth')\n  }\n  // size\n  public get defaultRowHeight(): number {\n    return getThemeColor(this._grid, 'defaultRowHeight')\n  }\n  public get defaultColWidth(): number {\n    return getThemeColor(this._grid, 'defaultColWidth')\n  }\n  public get highlightBorderWidth(): number {\n    return getThemeColor(this._grid, 'highlightBorderWidth')\n  }\n  // other\n  public get checkbox(): RequiredThemeDefine['checkbox'] {\n    const grid = this._grid\n    return (\n      this._checkbox ||\n      (this._checkbox = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'checkbox', 'uncheckBgColor')\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'checkbox', 'checkBgColor')\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'checkbox', 'borderColor')\n        },\n      })\n    )\n  }\n  public get radioButton(): RequiredThemeDefine['radioButton'] {\n    const grid = this._grid\n    return (\n      this._radioButton ||\n      (this._radioButton = {\n        get checkColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'checkColor')\n        },\n        get uncheckBorderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'uncheckBorderColor')\n        },\n        get checkBorderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'checkBorderColor')\n        },\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'uncheckBgColor')\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'radioButton', 'checkBgColor')\n        },\n      })\n    )\n  }\n  public get button(): RequiredThemeDefine['button'] {\n    const grid = this._grid\n    return (\n      this._button ||\n      (this._button = {\n        get color(): ColorPropertyDefine {\n          return getThemeColor(grid, 'button', 'color')\n        },\n        get bgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'button', 'bgColor')\n        },\n      })\n    )\n  }\n  public get header(): RequiredThemeDefine['header'] {\n    const grid = this._grid\n    return (\n      this._header ||\n      (this._header = {\n        get sortArrowColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'header', 'sortArrowColor')\n        },\n      })\n    )\n  }\n  public get switch(): RequiredThemeDefine['switch'] {\n    const grid = this._grid\n    return (\n      this._switch ||\n      (this._switch = {\n        get uncheckBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'switch', 'uncheckBgColor')\n        },\n        get checkBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'switch', 'checkBgColor')\n        },\n        get borderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'switch', 'borderColor')\n        },\n      })\n    )\n  }\n  public get tree(): RequiredThemeDefine['tree'] {\n    const grid = this._grid\n    return (\n      this._tree ||\n      (this._tree = {\n        get lineColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'lineColor')\n        },\n        get buttonColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'buttonColor')\n        },\n        get buttonBgColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'buttonBgColor')\n        },\n        get buttonBorderColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'buttonBorderColor')\n        },\n        get linkColor(): ColorPropertyDefine {\n          return getThemeColor(grid, 'tree', 'linkColor')\n        },\n      })\n    )\n  }\n}\n","import * as inlineUtils from './element/inlines'\nimport {\n  GridCanvasHelperAPI,\n  ListGridAPI,\n  RequiredThemeDefine,\n  CellContext,\n  RectProps,\n  ColorPropertyDefine,\n  ColorsPropertyDefine,\n  ColorDef,\n  TextOverflow,\n  TreeInfo,\n  FontPropertyDefine,\n  LineClamp,\n} from './ts-types'\nimport { Inline, InlineDrawOption } from './element/Inline'\nimport { InlineDrawer } from './element/InlineDrawer'\nimport { toPx } from './internal/calc'\nimport { getFontSize, calcStartPosition } from './internal/canvases'\nimport { calcElapsedColor } from './internal/color'\nimport fonts from './internal/fonts'\nimport Rect from './internal/Rect'\nimport { getOrApply, style, isDef, cellInRange } from './internal/utils'\nimport { canvasHelper, DrawButtonOption } from './tools/canvasHelper'\n\nimport { ThemeResolver } from './GridThemeHelper'\nimport { SimpleColumnIconOption } from './ts-types-internal'\n\nexport const TREE_NODE_SPACE = 16\n\nenum SwitchStyle {\n  default,\n  iPhone,\n}\n\nconst SWITCH_STYLE: SwitchStyle = SwitchStyle.default\n\nconst INLINE_ELLIPSIS = inlineUtils.of('\\u2026')\n\ntype ColorsDef = ColorDef | (ColorDef | null)[]\n\nfunction invalidateCell<T>(context: CellContext, grid: ListGridAPI<T>) {\n  grid.invalidateCell(context.col, context.row)\n}\nfunction getColor<T>(\n  color: ColorPropertyDefine,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): ColorDef\nfunction getColor<T>(\n  color: ColorsPropertyDefine,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): ColorsDef\nfunction getColor<T>(\n  color: undefined,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): undefined\nfunction getColor<T>(\n  color: ColorPropertyDefine | ColorsPropertyDefine | undefined,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): ColorDef | ColorsDef | undefined {\n  return getOrApply(color, {\n    col,\n    context,\n    grid,\n    row,\n  })\n}\nfunction getFont<T>(\n  font: FontPropertyDefine | undefined,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>,\n  context: CanvasRenderingContext2D\n): string | undefined {\n  if (font == null) {\n    return undefined\n  }\n  return getOrApply(font, {\n    col,\n    row,\n    grid,\n    context,\n  })\n}\nfunction testFontLoad<T>(\n  font: string | undefined,\n  value: string,\n  context: CellContext,\n  grid: ListGridAPI<T>\n): boolean {\n  if (font) {\n    if (!fonts.check(font, value)) {\n      fonts.load(font, value, () => invalidateCell(context, grid))\n      return false\n    }\n  }\n  return true\n}\nfunction getGridThemeColor<T>(\n  grid: ListGridAPI<T>,\n  theme: RequiredThemeDefine,\n  col: number,\n  row: number,\n  color?: ColorPropertyDefine\n): ColorPropertyDefine {\n  if (!color) {\n    ;({ color } = theme)\n    // header color\n    const isFrozenCell = grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      color = theme.frozenRowsColor\n    }\n  }\n  return color\n}\nfunction getGridThemeFont<T>(\n  grid: ListGridAPI<T>,\n  theme: RequiredThemeDefine,\n  col: number,\n  row: number,\n  font?: FontPropertyDefine\n): FontPropertyDefine {\n  if (!font) {\n    ;({ font } = theme)\n    // header color\n    const isFrozenCell = grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      font = theme.frozenRowsFont\n    }\n  }\n  return font\n}\n\nfunction drawInlines<T>(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  rect: RectProps,\n  offset: number,\n  offsetTop: number,\n  offsetBottom: number,\n  col: number,\n  row: number,\n  grid: ListGridAPI<T>\n): void {\n  function drawInline(\n    inline: Inline,\n    offsetLeft: number,\n    offsetRight: number\n  ): void {\n    if (inline.canDraw()) {\n      ctx.save()\n      try {\n        ctx.fillStyle = getColor(\n          inline.color() || ctx.fillStyle,\n          col,\n          row,\n          grid,\n          ctx\n        )\n        ctx.font = inline.font() || ctx.font\n        inline.draw({\n          canvasHelper,\n          ctx,\n          offset,\n          offsetBottom,\n          offsetLeft,\n          offsetRight,\n          offsetTop,\n          rect,\n        })\n      } finally {\n        ctx.restore()\n      }\n    } else {\n      inline.onReady(() => grid.invalidateCell(col, row))\n      // noop\n    }\n  }\n  if (inlines.length === 1) {\n    // 长度为1时，不需要计算宽度\n    const inline = inlines[0]\n    drawInline(inline, 0, 0)\n  } else if (inlines.length > 1) {\n    const inlineWidths = inlines.map(\n      (inline) => (inline.width({ ctx }) || 0) - 0\n    )\n    let offsetRight = inlineWidths.reduce((a, b) => a + b)\n\n    let offsetLeft = 0\n    inlines.forEach((inline, index) => {\n      const inlineWidth = inlineWidths[index]\n      offsetRight -= inlineWidth\n      drawInline(inline, offsetLeft, offsetRight)\n      offsetLeft += inlineWidth\n    })\n  }\n}\n\nfunction buildInlines(\n  icons: SimpleColumnIconOption[] | undefined,\n  inline: string\n): Inline[] {\n  return inlineUtils.buildInlines(icons, isDef(inline) ? inline : '')\n}\n\nfunction inlineToString(inline: Inline | string): string {\n  return inlineUtils.string(inline)\n}\n\nfunction getOverflowInline(textOverflow?: TextOverflow): Inline {\n  if (!isAllowOverflow(textOverflow) || textOverflow === 'ellipsis') {\n    return INLINE_ELLIPSIS\n  }\n  textOverflow = textOverflow.trim()\n  if (textOverflow.length === 1) {\n    return inlineUtils.of(textOverflow[0])\n  }\n  return INLINE_ELLIPSIS\n}\n\nfunction isAllowOverflow(textOverflow?: TextOverflow): textOverflow is string {\n  return !!(\n    textOverflow &&\n    textOverflow !== 'clip' &&\n    typeof textOverflow === 'string'\n  )\n}\n\nfunction getOverflowInlinesIndex(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number\n): {\n  index: number\n  lineWidth: number\n  remWidth: number\n} | null {\n  const maxWidth = width - 3 /*buffer*/\n  let lineWidth = 0\n  for (let i = 0; i < inlines.length; i++) {\n    const inline = inlines[i]\n    const inlineWidth = (inline.width({ ctx }) || 0) - 0\n    if (lineWidth + inlineWidth > maxWidth) {\n      return {\n        index: i,\n        lineWidth,\n        remWidth: maxWidth - lineWidth,\n      }\n    }\n    lineWidth += inlineWidth\n  }\n  return null\n}\n\nfunction isOverflowInlines(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number\n): boolean {\n  return !!getOverflowInlinesIndex(ctx, inlines, width)\n}\n\nfunction breakWidthInlines(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number\n): {\n  beforeInlines: Inline[]\n  overflow: boolean\n  afterInlines: Inline[]\n} {\n  const indexData = getOverflowInlinesIndex(ctx, inlines, width)\n  if (!indexData) {\n    return {\n      afterInlines: [],\n      beforeInlines: inlines,\n      overflow: false,\n    }\n  }\n  const index = indexData.index\n  const remWidth = indexData.remWidth\n  const inline = inlines[index]\n  const beforeInlines = inlines.slice(0, index)\n  const afterInlines = []\n  if (inline.canBreak()) {\n    const breakWord = inline.breakWord(ctx, remWidth)\n    let before = breakWord.before\n    let after = breakWord.after\n    if (!before && !beforeInlines.length) {\n      ;({ before, after } = inline.breakAll(ctx, remWidth))\n    }\n    if (!before && !beforeInlines.length) {\n      // Always return one char\n      ;({ before, after } = inline.splitIndex(1))\n    }\n    if (before) {\n      beforeInlines.push(before)\n    }\n    if (after) {\n      afterInlines.push(after)\n    }\n    afterInlines.push(...inlines.slice(index + 1))\n  } else {\n    if (!beforeInlines.length) {\n      // Always return one char\n      beforeInlines.push(inline)\n    }\n    afterInlines.push(...inlines.slice(beforeInlines.length))\n  }\n  return {\n    afterInlines,\n    beforeInlines,\n    overflow: true,\n  }\n}\n\nfunction truncateInlines(\n  ctx: CanvasRenderingContext2D,\n  inlines: Inline[],\n  width: number,\n  offset: number,\n  option?: TextOverflow\n): {\n  inlines: Inline[]\n  overflow: boolean\n} {\n  const indexData = getOverflowInlinesIndex(ctx, inlines, width)\n  if (!indexData) {\n    return {\n      inlines,\n      overflow: false,\n    }\n  }\n  const { index, lineWidth } = indexData\n  const inline = inlines[index]\n  const overflowInline = getOverflowInline(option)\n  const ellipsisWidth = overflowInline.width({ ctx })\n  const remWidth = width - lineWidth - ellipsisWidth - offset - 1\n  const result = inlines.slice(0, index)\n  if (inline.canBreak()) {\n    const before = inline.breakAll(ctx, remWidth).before\n    if (before) {\n      result.push(before)\n    }\n  }\n  result.push(overflowInline)\n  return {\n    inlines: result,\n    overflow: true,\n  }\n}\n\nfunction _inlineRect<T>(\n  grid: ListGridAPI<T>,\n  ctx: CanvasRenderingContext2D,\n  inline: string,\n  rect: RectProps,\n  col: number,\n  row: number,\n  {\n    offset,\n    color,\n    textAlign,\n    textBaseline,\n    font,\n    textOverflow,\n    icons,\n  }: {\n    offset: number\n    color?: ColorPropertyDefine\n    textAlign: CanvasTextAlign\n    textBaseline: CanvasTextBaseline\n    font?: string\n    textOverflow?: TextOverflow\n    icons?: SimpleColumnIconOption[]\n  }\n): void {\n  // 文字style\n  ctx.fillStyle = getColor(color || ctx.fillStyle, col, row, grid, ctx)\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  ctx.font = font || ctx.font\n\n  let inlines = buildInlines(icons, inline)\n  if (\n    isAllowOverflow(textOverflow) &&\n    isOverflowInlines(ctx, inlines, rect.width)\n  ) {\n    const { inlines: truncInlines, overflow } = truncateInlines(\n      ctx,\n      inlines,\n      rect.width,\n      offset,\n      textOverflow\n    )\n    inlines = truncInlines\n    grid.setCellOverflowText(col, row, overflow && inlineToString(inline))\n  } else {\n    grid.setCellOverflowText(col, row, false)\n  }\n\n  drawInlines(ctx, inlines, rect, offset, 0, 0, col, row, grid)\n}\n\nfunction _multiInlineRect<T>(\n  grid: ListGridAPI<T>,\n  ctx: CanvasRenderingContext2D,\n  multiInlines: string[],\n  rect: RectProps,\n  col: number,\n  row: number,\n  {\n    offset,\n    color,\n    textAlign,\n    textBaseline,\n    font,\n    lineHeight,\n    autoWrapText,\n    lineClamp,\n    textOverflow,\n    icons,\n  }: {\n    offset: number\n    color?: ColorPropertyDefine\n    textAlign: CanvasTextAlign\n    textBaseline: CanvasTextBaseline\n    font?: string\n    lineHeight: number\n    autoWrapText?: boolean\n    lineClamp: LineClamp\n    textOverflow?: TextOverflow\n    icons?: SimpleColumnIconOption[]\n  }\n): void {\n  // 文字style\n  ctx.fillStyle = getColor(color || ctx.fillStyle, col, row, grid, ctx)\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  ctx.font = font || ctx.font\n\n  if (lineClamp === 'auto') {\n    const rectHeight =\n      rect.height - offset * 2 - 2 /*offset added by Inline#draw*/\n    lineClamp = Math.max(Math.floor(rectHeight / lineHeight), 1)\n  }\n\n  let buildedMultiInlines: Inline[][]\n  if (autoWrapText || lineClamp > 0 || isAllowOverflow(textOverflow)) {\n    const width = rect.width\n    buildedMultiInlines = []\n    const procLineClamp =\n      lineClamp > 0\n        ? (inlines: Inline[], hasNext: boolean): boolean => {\n            if (buildedMultiInlines.length + 1 >= lineClamp) {\n              if (inlines.length === 0 && hasNext) {\n                buildedMultiInlines.push([getOverflowInline(textOverflow)])\n                grid.setCellOverflowText(\n                  col,\n                  row,\n                  multiInlines.map(inlineToString).join('\\n')\n                )\n              } else {\n                const tis = truncateInlines(\n                  ctx,\n                  inlines,\n                  width,\n                  offset,\n                  textOverflow\n                )\n                const truncInlines = tis.inlines\n                const overflow = tis.overflow\n                buildedMultiInlines.push(\n                  hasNext && !overflow\n                    ? truncInlines.concat([getOverflowInline(textOverflow)])\n                    : truncInlines\n                )\n                if (overflow || hasNext) {\n                  grid.setCellOverflowText(\n                    col,\n                    row,\n                    multiInlines.map(inlineToString).join('\\n')\n                  )\n                }\n              }\n              return false\n            }\n            return true\n          }\n        : (): boolean => true\n    const procLine = autoWrapText\n      ? (inlines: Inline[], hasNext: boolean): boolean => {\n          if (!procLineClamp(inlines, hasNext)) {\n            return false\n          }\n          while (inlines.length) {\n            if (!procLineClamp(inlines, hasNext)) {\n              return false\n            }\n            const { beforeInlines, afterInlines } = breakWidthInlines(\n              ctx,\n              inlines,\n              width\n            )\n            buildedMultiInlines.push(beforeInlines)\n            inlines = afterInlines\n          }\n          return true\n        }\n      : isAllowOverflow(textOverflow)\n      ? (inlines: Inline[], hasNext: boolean): boolean => {\n          if (!procLineClamp(inlines, hasNext)) {\n            return false\n          }\n          const { inlines: truncInlines, overflow } = truncateInlines(\n            ctx,\n            inlines,\n            width,\n            offset,\n            textOverflow\n          )\n          buildedMultiInlines.push(truncInlines)\n          if (overflow) {\n            grid.setCellOverflowText(\n              col,\n              row,\n              multiInlines.map(inlineToString).join('\\n')\n            )\n          }\n          return true\n        }\n      : (inlines: Inline[], hasNext: boolean): boolean => {\n          if (!procLineClamp(inlines, hasNext)) {\n            return false\n          }\n          buildedMultiInlines.push(inlines)\n          return true\n        }\n    grid.setCellOverflowText(col, row, false)\n    for (let lineRow = 0; lineRow < multiInlines.length; lineRow++) {\n      const inline = multiInlines[lineRow]\n      const buildedInline = buildInlines(\n        lineRow === 0 ? icons : undefined,\n        inline\n      )\n      if (!procLine(buildedInline, lineRow + 1 < multiInlines.length)) {\n        break\n      }\n    }\n  } else {\n    grid.setCellOverflowText(col, row, false)\n    buildedMultiInlines = multiInlines.map((inline, lineRow) =>\n      buildInlines(lineRow === 0 ? icons : undefined, inline)\n    )\n  }\n\n  let paddingTop = 0\n  let paddingBottom = lineHeight * (buildedMultiInlines.length - 1)\n\n  if (ctx.textBaseline === 'top' || ctx.textBaseline === 'hanging') {\n    const em = getFontSize(ctx, ctx.font).height\n    const pad = (lineHeight - em) / 2\n    paddingTop += pad\n    paddingBottom -= pad\n  } else if (\n    ctx.textBaseline === 'bottom' ||\n    ctx.textBaseline === 'alphabetic' ||\n    ctx.textBaseline === 'ideographic'\n  ) {\n    const em = getFontSize(ctx, ctx.font).height\n    const pad = (lineHeight - em) / 2\n    paddingTop -= pad\n    paddingBottom += pad\n  }\n  buildedMultiInlines.forEach((buildedInline) => {\n    drawInlines(\n      ctx,\n      buildedInline,\n      rect,\n      offset,\n      paddingTop,\n      paddingBottom,\n      col,\n      row,\n      grid\n    )\n    paddingTop += lineHeight\n    paddingBottom -= lineHeight\n  })\n}\n\nfunction gridDrawCheckbox<T>(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  col: number,\n  row: number,\n  check: boolean,\n  helper: GridCanvasHelper<T>,\n  {\n    animElapsedTime = 1,\n    uncheckBgColor = helper.theme.checkbox.uncheckBgColor,\n    checkBgColor = helper.theme.checkbox.checkBgColor,\n    borderColor = helper.theme.checkbox.borderColor,\n    textAlign = 'center',\n    textBaseline = 'middle',\n  }: {\n    animElapsedTime?: number\n    uncheckBgColor?: ColorPropertyDefine\n    checkBgColor?: ColorPropertyDefine\n    borderColor?: ColorPropertyDefine\n    textAlign?: CanvasTextAlign\n    textBaseline?: CanvasTextBaseline\n  } = {},\n  positionOpt = {}\n) {\n  const boxWidth = canvasHelper.measureCheckbox(ctx).width\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  const pos = calcStartPosition(\n    ctx,\n    rect,\n    boxWidth + 1 /*分割线+1*/,\n    boxWidth + 1 /*分割线+1*/,\n    positionOpt\n  )\n  uncheckBgColor = helper.getColor(uncheckBgColor, col, row, ctx)\n  checkBgColor = helper.getColor(checkBgColor, col, row, ctx)\n  borderColor = helper.getColor(borderColor, col, row, ctx)\n  if (0 < animElapsedTime && animElapsedTime < 1) {\n    uncheckBgColor = check\n      ? uncheckBgColor\n      : calcElapsedColor(\n          checkBgColor as string,\n          uncheckBgColor as string,\n          animElapsedTime\n        )\n    checkBgColor = check\n      ? calcElapsedColor(\n          uncheckBgColor as string,\n          checkBgColor as string,\n          animElapsedTime\n        )\n      : checkBgColor\n  }\n\n  canvasHelper.drawCheckbox(\n    ctx,\n    pos.x,\n    pos.y,\n    check ? animElapsedTime : false,\n    {\n      borderColor,\n      checkBgColor,\n      uncheckBgColor,\n    }\n  )\n}\n\nfunction gridDrawRadioButton<T>(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  col: number,\n  row: number,\n  check: boolean,\n  helper: GridCanvasHelper<T>,\n  {\n    animElapsedTime = 1,\n    checkColor = helper.theme.radioButton.checkColor,\n    uncheckBorderColor = helper.theme.radioButton.uncheckBorderColor,\n    checkBorderColor = helper.theme.radioButton.checkBorderColor,\n    uncheckBgColor = helper.theme.radioButton.uncheckBgColor,\n    checkBgColor = helper.theme.radioButton.checkBgColor,\n    textAlign = 'center',\n    textBaseline = 'middle',\n  }: {\n    animElapsedTime?: number\n    checkColor?: ColorPropertyDefine\n    uncheckBorderColor?: ColorPropertyDefine\n    checkBorderColor?: ColorPropertyDefine\n    uncheckBgColor?: ColorPropertyDefine\n    checkBgColor?: ColorPropertyDefine\n    textAlign?: CanvasTextAlign\n    textBaseline?: CanvasTextBaseline\n  },\n  positionOpt = {}\n): void {\n  const boxWidth = canvasHelper.measureRadioButton(ctx).width\n  ctx.textAlign = textAlign\n  ctx.textBaseline = textBaseline\n  const pos = calcStartPosition(\n    ctx,\n    rect,\n    boxWidth + 1 /*罫線分+1*/,\n    boxWidth + 1 /*罫線分+1*/,\n    positionOpt\n  )\n  checkColor = helper.getColor(checkColor, col, row, ctx)\n  uncheckBorderColor = helper.getColor(uncheckBorderColor, col, row, ctx)\n  checkBorderColor = helper.getColor(checkBorderColor, col, row, ctx)\n  uncheckBgColor = helper.getColor(uncheckBgColor, col, row, ctx)\n  checkBgColor = helper.getColor(checkBgColor, col, row, ctx)\n  let borderColor = check ? checkBorderColor : uncheckBorderColor\n  let bgColor = check ? checkBgColor : uncheckBgColor\n  if (0 < animElapsedTime && animElapsedTime < 1) {\n    borderColor = check\n      ? calcElapsedColor(\n          uncheckBorderColor as string,\n          checkBorderColor as string,\n          animElapsedTime\n        )\n      : calcElapsedColor(\n          checkBorderColor as string,\n          uncheckBorderColor as string,\n          animElapsedTime\n        )\n    bgColor = check\n      ? calcElapsedColor(\n          uncheckBgColor as string,\n          checkBgColor as string,\n          animElapsedTime\n        )\n      : calcElapsedColor(\n          checkBgColor as string,\n          uncheckBgColor as string,\n          animElapsedTime\n        )\n  }\n\n  canvasHelper.drawRadioButton(\n    ctx,\n    pos.x,\n    pos.y,\n    check ? animElapsedTime : 1 - animElapsedTime,\n    {\n      checkColor,\n      borderColor,\n      bgColor,\n    }\n  )\n}\n\nfunction getSwitchBtnSize(rect: RectProps) {\n  if (SWITCH_STYLE === SwitchStyle.default) {\n    return {\n      height: 22,\n      width: 44,\n    }\n  } else {\n    const height = rect.height - rect.height / 4\n    const width = height * 1.625\n    return {\n      height,\n      width,\n    }\n  }\n}\n\nfunction gridDrawSwitchBtn<T>(\n  ctx: CanvasRenderingContext2D,\n  rect: RectProps,\n  col: number,\n  row: number,\n  check: boolean,\n  helper: GridCanvasHelper<T>,\n  info: {\n    animElapsedTime?: number\n    uncheckBgColor?: any\n    checkBgColor?: any\n    borderColor?: any\n    textAlign?: string\n    textBaseline?: string\n  } = {},\n  positionOpt = {}\n) {\n  const animElapsedTime =\n    info.animElapsedTime === undefined ? 1 : info.animElapsedTime\n  let uncheckBgColor = info.uncheckBgColor || helper.theme.switch.uncheckBgColor\n  let checkBgColor = info.checkBgColor || helper.theme.switch.checkBgColor\n  let borderColor = info.borderColor || helper.theme.switch.borderColor\n  const textAlign = info.textAlign || 'center'\n  const textBaseline = info.textBaseline || 'middle'\n\n  const btnSize = getSwitchBtnSize(rect)\n  ctx.textAlign = textAlign as CanvasTextAlign\n  ctx.textBaseline = textBaseline as CanvasTextBaseline\n  const pos = calcStartPosition(\n    ctx,\n    rect,\n    btnSize.width + 1 /*分割线+1*/,\n    btnSize.height + 1 /*分割线+1*/,\n    positionOpt\n  )\n  uncheckBgColor = helper.getColor(uncheckBgColor, col, row, ctx)\n  checkBgColor = helper.getColor(checkBgColor, col, row, ctx)\n  borderColor = helper.getColor(borderColor, col, row, ctx)\n  borderColor = style.toBoxArray(borderColor).find((v) => v)\n  const draw =\n    SWITCH_STYLE === SwitchStyle.default\n      ? canvasHelper.drawSwitchButton\n      : canvasHelper.drawSwitchBtn\n  draw(ctx, pos.x, pos.y, check, animElapsedTime, {\n    borderColor,\n    checkBgColor,\n    uncheckBgColor,\n    btnSize,\n  })\n}\n\nfunction strokeRect(\n  ctx: CanvasRenderingContext2D,\n  color: ColorsDef,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): void {\n  if (!Array.isArray(color)) {\n    if (color) {\n      ctx.strokeStyle = color\n      ctx.strokeRect(left, top, width, height)\n    }\n  } else {\n    const borderColors = style.toBoxArray(color)\n    canvasHelper.strokeColorsRect(ctx, borderColors, left, top, width, height)\n  }\n}\n\nexport class GridCanvasHelper<T> implements GridCanvasHelperAPI {\n  private _grid: ListGridAPI<T>\n  private _theme: RequiredThemeDefine\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n    this._theme = new ThemeResolver(grid)\n  }\n  public createCalculator(\n    context: CellContext,\n    font: string | undefined\n  ): {\n    calcWidth(width: number | string): number\n    calcHeight(height: number | string): number\n  } {\n    return {\n      calcWidth(width: number | string): number {\n        return toPx(width, {\n          get full() {\n            const rect = context.getRect()\n            return rect.width\n          },\n          get em() {\n            return getFontSize(context.getContext(), font).width\n          },\n        })\n      },\n      calcHeight(height: number | string): number {\n        return toPx(height, {\n          get full() {\n            const rect = context.getRect()\n            return rect.height\n          },\n          get em() {\n            return getFontSize(context.getContext(), font).height\n          },\n        })\n      },\n    }\n  }\n  public getColor(\n    color: ColorPropertyDefine,\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D\n  ): ColorDef\n  public getColor(\n    color: ColorsPropertyDefine,\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D\n  ): ColorsDef\n  public getColor(\n    color: ColorPropertyDefine | ColorsPropertyDefine,\n    col: number,\n    row: number,\n    ctx: CanvasRenderingContext2D\n  ): ColorsDef {\n    return getColor(color, col, row, this._grid, ctx)\n  }\n  public toBoxArray(\n    obj: ColorsDef\n  ): [ColorDef | null, ColorDef | null, ColorDef | null, ColorDef | null] {\n    return style.toBoxArray(obj)\n  }\n  public toBoxPixelArray(\n    value: number | string | (number | string)[],\n    context: CellContext,\n    font: string | undefined\n  ): [number, number, number, number] {\n    if (typeof value === 'string' || Array.isArray(value)) {\n      const calculator = this.createCalculator(context, font)\n      const box = style.toBoxArray(value)\n      return [\n        calculator.calcHeight(box[0]),\n        calculator.calcWidth(box[1]),\n        calculator.calcHeight(box[2]),\n        calculator.calcWidth(box[3]),\n      ]\n    }\n    return style.toBoxArray(value)\n  }\n  public get theme(): RequiredThemeDefine {\n    return this._theme\n  }\n  public drawWithClip(\n    context: CellContext,\n    draw: (ctx: CanvasRenderingContext2D) => void\n  ): void {\n    const drawRect = context.getDrawRect()\n    if (!drawRect) {\n      return\n    }\n    const ctx = context.getContext()\n    if (ctx) {\n      ctx.save()\n      try {\n        ctx.beginPath()\n        ctx.rect(drawRect.left, drawRect.top, drawRect.width, drawRect.height)\n        // clip\n        ctx.clip()\n\n        draw(ctx)\n      } finally {\n        ctx.restore()\n      }\n    }\n  }\n  public drawBorderWithClip(\n    context: CellContext,\n    draw: (ctx: CanvasRenderingContext2D) => void\n  ): void {\n    const drawRect = context.getDrawRect()\n    if (!drawRect) {\n      return\n    }\n    const rect = context.getRect()\n    const ctx = context.getContext()\n    if (ctx) {\n      ctx.save()\n      try {\n        ctx.lineCap = 'square'\n\n        // 对于划线clip\n        ctx.beginPath()\n        let clipLeft = drawRect.left\n        let clipWidth = drawRect.width\n        if (drawRect.left === rect.left) {\n          clipLeft += -1\n          clipWidth += 1\n        }\n        let clipTop = drawRect.top\n        let clipHeight = drawRect.height\n        if (drawRect.top === rect.top) {\n          clipTop += -1\n          clipHeight += 1\n        }\n        ctx.rect(clipLeft, clipTop, clipWidth, clipHeight)\n        ctx.clip()\n\n        draw(ctx)\n      } finally {\n        ctx.restore()\n      }\n    }\n  }\n  public getTextRect(\n    text: string,\n    context: CellContext,\n    {\n      padding,\n      offset = 2,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      font,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      padding?: number | string | (number | string)[]\n      offset?: number\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ) {\n    let rect = context.getRect()\n    const drawRect = context.getDrawRect()\n    const ctx = context.getContext()\n\n    const { col, row } = context\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    if (drawRect && ctx) {\n      ctx.save()\n      try {\n        font = getFont(font, context.col, context.row, this._grid, ctx)\n        if (padding) {\n          const paddingNums = this.toBoxPixelArray(padding, context, font)\n          const left = rect.left + paddingNums[3]\n          const top = rect.top + paddingNums[0]\n          const width = rect.width - paddingNums[1] - paddingNums[3]\n          const height = rect.height - paddingNums[0] - paddingNums[2]\n          rect = new Rect(left, top, width, height)\n        }\n\n        // 文字style\n        ctx.textAlign = textAlign\n        ctx.textBaseline = textBaseline\n        ctx.font = font || ctx.font\n\n        let inlines = buildInlines(icons, text) as Inline[]\n        if (\n          isAllowOverflow(textOverflow) &&\n          isOverflowInlines(ctx, inlines, rect.width)\n        ) {\n          const truncInlines = truncateInlines(\n            ctx,\n            inlines,\n            rect.width,\n            offset,\n            textOverflow\n          ).inlines\n          inlines = truncInlines\n        }\n\n        const inlineWidths = inlines.map(\n          (inline) => (inline.width({ ctx }) || 0) - 0\n        )\n        const offsetBottom = 0\n        const offsetTop = 0\n        let offsetRight =\n          inlineWidths.length > 0 ? inlineWidths.reduce((a, b) => a + b) : 0\n        let offsetLeft = 0\n        let rectLeft = rect.right\n        let rectTop = rect.bottom\n        let rectRight = 0\n        let rectBottom = 0\n        inlines.forEach((inline, index) => {\n          const inlineWidth = inlineWidths[index]\n          offsetRight -= inlineWidth\n          ctx.font = inline.font() || ctx.font\n          const inlineHeight = getFontSize(ctx, ctx.font).height\n          const pos = calcStartPosition(\n            ctx,\n            {\n              bottom: rect.top + rect.height,\n              height: rect.height,\n              left: rect.left,\n              right: rect.left + rect.width,\n              top: rect.top,\n              width: rect.width,\n            },\n            inlineWidth,\n            inlineHeight,\n            {\n              offset: offset + 1,\n              padding: {\n                bottom: offsetBottom,\n                left: offsetLeft,\n                right: offsetRight,\n                top: offsetTop,\n              },\n            }\n          )\n          rectLeft = Math.floor(Math.min(rectLeft, pos.x))\n          rectTop = Math.floor(Math.min(rectTop, pos.y))\n          rectRight = Math.ceil(Math.max(rectRight, pos.x + inlineWidth))\n          rectBottom = Math.ceil(Math.max(rectBottom, pos.y + inlineHeight))\n\n          offsetLeft += inlineWidth\n        })\n        rect = new Rect(\n          Math.min(rectLeft, rectRight),\n          Math.min(rectTop, rectBottom),\n          Math.abs(rectRight - rectLeft),\n          Math.abs(rectBottom - rectTop)\n        )\n      } finally {\n        ctx.restore()\n      }\n    }\n    return rect\n  }\n  public text(\n    text: string,\n    context: CellContext,\n    {\n      padding,\n      offset = 2,\n      color,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      font,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      padding?: number | string | (number | string)[]\n      offset?: number\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ): void {\n    let rect = context.getRect()\n\n    const { col, row } = context\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    this.drawWithClip(context, (ctx) => {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      if (padding) {\n        const paddingNums = this.toBoxPixelArray(padding, context, font)\n        const left = rect.left + paddingNums[3]\n        const top = rect.top + paddingNums[0]\n        const width = rect.width - paddingNums[1] - paddingNums[3]\n        const height = rect.height - paddingNums[0] - paddingNums[2]\n        rect = new Rect(left, top, width, height)\n      }\n      _inlineRect(this._grid, ctx, text, rect, col, row, {\n        color,\n        font,\n        icons,\n        offset,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    })\n  }\n  public multilineText(\n    multilines: string[],\n    context: CellContext,\n    {\n      padding,\n      offset = 2,\n      color,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      font,\n      lineHeight = '1em',\n      autoWrapText = false,\n      lineClamp = 0,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      padding?: number | string | (number | string)[]\n      offset?: number\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n      lineHeight?: string | number\n      autoWrapText?: boolean\n      lineClamp?: LineClamp\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ): void {\n    let rect = context.getRect()\n\n    const { col, row } = context\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    this.drawWithClip(context, (ctx) => {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      if (padding) {\n        const paddingNums = this.toBoxPixelArray(padding, context, font)\n        const left = rect.left + paddingNums[3]\n        const top = rect.top + paddingNums[0]\n        const width = rect.width - paddingNums[1] - paddingNums[3]\n        const height = rect.height - paddingNums[0] - paddingNums[2]\n        rect = new Rect(left, top, width, height)\n      }\n      const calculator = this.createCalculator(context, font)\n      lineHeight = calculator.calcHeight(lineHeight)\n      _multiInlineRect(this._grid, ctx, multilines, rect, col, row, {\n        autoWrapText,\n        color,\n        font,\n        icons,\n        lineClamp,\n        lineHeight,\n        offset,\n        textAlign,\n        textBaseline,\n        textOverflow,\n      })\n    })\n  }\n  public fillText(\n    text: string,\n    x: number,\n    y: number,\n    context: CellContext,\n    {\n      color,\n      textAlign = 'left',\n      textBaseline = 'top',\n      font,\n    }: {\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      font?: FontPropertyDefine\n    } = {}\n  ): void {\n    const { col, row } = context\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    const ctx = context.getContext()\n    ctx.save()\n    try {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      ctx.fillStyle = getColor(color, col, row, this._grid, ctx)\n      ctx.textAlign = textAlign\n      ctx.textBaseline = textBaseline\n      ctx.font = font || ctx.font\n      ctx.fillText(text, x, y)\n    } finally {\n      ctx.restore()\n    }\n  }\n  public clearCell(context: CellContext): void {\n    const rect = context.getRect()\n    this.drawWithClip(context, (ctx) => {\n      ctx.clearRect(rect.left, rect.top, rect.width, rect.height)\n    })\n  }\n  public fillCell(\n    context: CellContext,\n    {\n      fillColor = this.theme.defaultBgColor,\n      selectionColor,\n    }: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ): void {\n    const rect = context.getRect()\n\n    this.drawWithClip(context, (ctx) => {\n      const col = context.col\n      const row = context.row\n      ctx.fillStyle = getColor(fillColor, col, row, this._grid, ctx)\n\n      ctx.beginPath()\n      ctx.clearRect(rect.left, rect.top, rect.width, rect.height)\n      ctx.rect(rect.left, rect.top, rect.width, rect.height)\n      ctx.fill()\n      if (selectionColor) {\n        ctx.fillStyle = getColor(selectionColor, col, row, this._grid, ctx)\n        ctx.fill()\n      }\n    })\n  }\n  public fillCellWithState(\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n      isEditing?: boolean\n    } = {}\n  ): void {\n    option.fillColor = this.getFillColorState(context, option)\n    if (option.isEditing) {\n      delete option.selectionColor\n      delete option.isEditing\n    } else {\n      option.selectionColor = this.getSelectionColorState(context, option)\n    }\n    this.fillCell(context, option)\n  }\n  public fillRect(\n    rect: RectProps,\n    context: CellContext,\n    {\n      fillColor = this.theme.defaultBgColor,\n      selectionColor,\n    }: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ) {\n    const ctx = context.getContext()\n    ctx.save()\n    try {\n      const col = context.col\n      const row = context.row\n      ctx.fillStyle = getColor(fillColor, col, row, this._grid, ctx)\n\n      ctx.beginPath()\n      ctx.rect(rect.left, rect.top, rect.width, rect.height)\n      ctx.fill()\n      if (selectionColor) {\n        ctx.fillStyle = getColor(selectionColor, col, row, this._grid, ctx)\n        ctx.fill()\n      }\n    } finally {\n      ctx.restore()\n    }\n  }\n  public fillRectWithState(\n    rect: RectProps,\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ) {\n    option.fillColor = this.getFillColorState(context, option)\n    option.selectionColor = this.getSelectionColorState(context, option)\n    this.fillRect(rect, context, option)\n  }\n  public getSelectionColorState(\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ): ColorPropertyDefine | undefined {\n    const sel = context.getSelection()\n    const { col, row } = context\n    if (option.selectionColor) {\n      return option.selectionColor\n    } else if (sel.dragged) {\n      return this.theme.selectionDragBgColor\n    } else if (\n      !cellInRange(context.range, sel.select.col, sel.select.row) &&\n      cellInRange(sel.range, col, row)\n    ) {\n      return this.theme.selectionBgColor\n    } else if (\n      cellInRange(context.range, sel.select.col, sel.select.row) &&\n      cellInRange(sel.range, col, row)\n    ) {\n      return this.theme.focusBgColor\n    } else {\n      return undefined\n    }\n  }\n  public getFillColorState(\n    context: CellContext,\n    option: {\n      fillColor?: ColorPropertyDefine\n      selectionColor?: ColorPropertyDefine\n    } = {}\n  ): ColorPropertyDefine {\n    const sel = context.getSelection()\n    const { col, row } = context\n    if (\n      !cellInRange(context.range, sel.select.col, sel.select.row) &&\n      cellInRange(sel.range, col, row)\n    ) {\n      return this.theme.selectionBgColor\n    }\n    if (option.fillColor) {\n      return option.fillColor\n    }\n    if (cellInRange(context.range, sel.select.col, sel.select.row)) {\n      return this.theme.highlightBgColor\n    }\n    const isFrozenCell = this._grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      return this.theme.frozenRowsBgColor\n    }\n    return this.theme.defaultBgColor\n  }\n  public border(\n    context: CellContext,\n    {\n      borderColor = this.theme.borderColor,\n      lineWidth = 1,\n    }: { borderColor?: ColorsPropertyDefine; lineWidth?: number } = {}\n  ): void {\n    const rect = context.getRect()\n\n    this.drawBorderWithClip(context, (ctx) => {\n      const col = context.col\n      const row = context.row\n      let left = rect.left\n      let top = rect.top\n      let width = rect.width\n      let height = rect.height\n      if (col === 0) {\n        left += lineWidth\n        width -= lineWidth\n      }\n      if (row === 0) {\n        top += lineWidth\n        height -= lineWidth\n      }\n      const borderColors = getColor(borderColor, col, row, this._grid, ctx)\n\n      if (lineWidth === 1) {\n        ctx.lineWidth = 1\n        strokeRect(ctx, borderColors, left - 0.5, top - 0.5, width, height)\n      } else if (lineWidth === 2) {\n        ctx.lineWidth = 2\n        strokeRect(ctx, borderColors, left, top, width - 1, height - 1)\n      } else {\n        ctx.lineWidth = lineWidth\n        const startOffset = lineWidth / 2 - 1\n        strokeRect(\n          ctx,\n          borderColors,\n          left + startOffset,\n          top + startOffset,\n          width - lineWidth + 1,\n          height - lineWidth + 1\n        )\n      }\n    })\n  }\n  public borderSelection(\n    context: CellContext,\n    option: {\n      borderColor?: ColorsPropertyDefine\n      lineWidth?: number\n      highlightBorderWidth?: number\n      isEditing?: boolean\n    } = {}\n  ) {\n    const col = context.col\n    const row = context.row\n    const border = context.getSelection().border\n    const rect = context.getRect()\n    const drawRect = context.getDrawRect() || rect\n\n    // header color\n    const isFrozenCell = this._grid.isFrozenCell(col, row)\n    if (isFrozenCell && isFrozenCell.row) {\n      option.borderColor = this.theme.frozenRowsBorderColor\n    }\n\n    option.lineWidth = 1\n    this.border(context, option)\n\n    // 编辑中不绘制选择边框\n    if (option.isEditing) {\n      return\n    }\n\n    let highlightBorderWidth = 1\n    if (option.highlightBorderWidth !== undefined) {\n      highlightBorderWidth = option.highlightBorderWidth\n    }\n\n    // 画边框\n    if (border.top || border.right || border.bottom || border.left) {\n      this.drawBorderWithClip(context, (ctx) => {\n        const borderColor = getColor(\n          this.theme.highlightBorderColor,\n          col,\n          row,\n          this._grid,\n          ctx\n        )\n        const borderColors = style.toBoxArray(borderColor)\n        ctx.lineWidth = highlightBorderWidth\n        if (ctx.lineWidth > 0) {\n          const offset = ctx.lineWidth / 2\n          if (row === 0) {\n            rect.top += offset\n          }\n          if (col === 0) {\n            rect.left += offset\n          }\n          if (border.top) {\n            ctx.strokeStyle = borderColors[0] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.left, rect.top)\n            ctx.lineTo(rect.right - offset, rect.top)\n            ctx.stroke()\n          }\n          if (border.right) {\n            ctx.strokeStyle = borderColors[1] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.right - offset, rect.top)\n            ctx.lineTo(rect.right - offset, rect.bottom - offset)\n            ctx.stroke()\n          }\n          if (border.bottom) {\n            ctx.strokeStyle = borderColors[2] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.right - offset, rect.bottom - offset)\n            ctx.lineTo(rect.left, rect.bottom - offset)\n            ctx.stroke()\n          }\n          if (border.left) {\n            ctx.strokeStyle = borderColors[3] || ctx.strokeStyle\n            ctx.beginPath()\n            ctx.moveTo(rect.left, rect.bottom - offset)\n            ctx.lineTo(rect.left, rect.top)\n            ctx.stroke()\n          }\n        }\n\n        if (border.right && border.bottom && this._grid.canDragSelection) {\n          // 右下角拖动点\n          const x = drawRect.right\n          const y = drawRect.bottom\n          ctx.lineWidth = 1\n          ctx.strokeStyle =\n            borderColors[1] || borderColors[2] || ctx.strokeStyle\n          ctx.beginPath()\n          ctx.moveTo(x - 8, y - 3)\n          ctx.lineTo(x - 3, y - 8)\n          ctx.moveTo(x - 5, y - 3)\n          ctx.lineTo(x - 3, y - 5)\n          ctx.stroke()\n        }\n      })\n    }\n\n    // 额外处理\n    const range = this._grid.selection.range\n    if (\n      range.start.row <= row &&\n      range.end.row >= row &&\n      range.end.col === col - 1\n    ) {\n      // 左边被选中\n      this.drawBorderWithClip(context, (ctx) => {\n        const borderColor = getColor(\n          this.theme.highlightBorderColor,\n          col - 1,\n          row,\n          this._grid,\n          ctx\n        )\n        const borderColors = style.toBoxArray(borderColor)\n        ctx.lineWidth = 1\n        ctx.strokeStyle = borderColors[1] || ctx.strokeStyle\n        ctx.beginPath()\n        ctx.moveTo(rect.left - 0.5, rect.top)\n        ctx.lineTo(rect.left - 0.5, rect.bottom)\n        ctx.stroke()\n      })\n    } else if (\n      range.start.col <= col &&\n      range.end.col >= col &&\n      range.end.row === row - 1\n    ) {\n      // 顶部被选中\n      this.drawBorderWithClip(context, (ctx) => {\n        const borderColor = getColor(\n          this.theme.highlightBorderColor,\n          col,\n          row - 1,\n          this._grid,\n          ctx\n        )\n        const borderColors = style.toBoxArray(borderColor)\n        ctx.lineWidth = 1\n        ctx.strokeStyle = borderColors[0] || ctx.strokeStyle\n        ctx.beginPath()\n        ctx.moveTo(rect.left, rect.top - 0.5)\n        ctx.lineTo(rect.right, rect.top - 0.5)\n        ctx.stroke()\n      })\n    }\n  }\n  // public borderWithState(\n  //   context: CellContext,\n  //   option: { borderColor?: ColorsPropertyDefine; lineWidth?: number } = {}\n  // ): void {\n  //   const rect = context.getRect()\n  //   const state = context.getSelectState()\n  //   const { col, row } = context\n\n  //   // 划线\n  //   if (state.selected) {\n  //     option.borderColor = this.theme.highlightBorderColor\n  //     option.lineWidth = 2\n  //     this.border(context, option)\n  //   } else {\n  //     // header color\n  //     const isFrozenCell = this._grid.isFrozenCell(col, row)\n  //     if (isFrozenCell && isFrozenCell.row) {\n  //       option.borderColor = this.theme.frozenRowsBorderColor\n  //     }\n\n  //     option.lineWidth = 1\n  //     this.border(context, option)\n\n  //     // 额外处理\n  //     const sel = this._grid.selection.select\n  //     if (sel.col + 1 === col && sel.row === row) {\n  //       // 左边被选中\n  //       this.drawBorderWithClip(context, ctx => {\n  //         const borderColors = style.toBoxArray(\n  //           getColor(\n  //             this.theme.highlightBorderColor,\n  //             sel.col,\n  //             sel.row,\n  //             this._grid,\n  //             ctx\n  //           )\n  //         )\n  //         ctx.lineWidth = 1\n  //         ctx.strokeStyle = borderColors[1] || ctx.strokeStyle\n  //         ctx.beginPath()\n  //         ctx.moveTo(rect.left - 0.5, rect.top)\n  //         ctx.lineTo(rect.left - 0.5, rect.bottom)\n  //         ctx.stroke()\n  //       })\n  //     } else if (sel.col === col && sel.row + 1 === row) {\n  //       // 顶部被选中\n  //       this.drawBorderWithClip(context, ctx => {\n  //         const borderColors = style.toBoxArray(\n  //           getColor(\n  //             this.theme.highlightBorderColor,\n  //             sel.col,\n  //             sel.row,\n  //             this._grid,\n  //             ctx\n  //           )\n  //         )\n  //         ctx.lineWidth = 1\n  //         ctx.strokeStyle = borderColors[0] || ctx.strokeStyle\n  //         ctx.beginPath()\n  //         ctx.moveTo(rect.left, rect.top - 0.5)\n  //         ctx.lineTo(rect.right, rect.top - 0.5)\n  //         ctx.stroke()\n  //       })\n  //     }\n  //   }\n  // }\n  public buildCheckBoxInline(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): InlineDrawer {\n    const self = this\n    const boxWidth = canvasHelper.measureCheckbox(context.getContext()).width\n\n    function draw(info: InlineDrawOption): void {\n      const col = context.col\n      const row = context.row\n      gridDrawCheckbox(info.ctx, info.rect, col, row, check, self, option, {\n        offset: info.offset + 1,\n        padding: {\n          bottom: info.offsetBottom,\n          left: info.offsetLeft + 1,\n          right: info.offsetRight,\n          top: info.offsetTop,\n        },\n      })\n    }\n    return new InlineDrawer({\n      color: undefined,\n      draw,\n      height: boxWidth + 1,\n      width: boxWidth + 3,\n    })\n  }\n  public buildSwitchBtnInline(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): InlineDrawer {\n    const self = this\n    const btnSize = getSwitchBtnSize(context.getRect())\n\n    function draw(info: InlineDrawOption) {\n      const col = context.col\n      const row = context.row\n      gridDrawSwitchBtn(info.ctx, info.rect, col, row, check, self, option, {\n        offset: info.offset + 1,\n        padding: {\n          bottom: info.offsetBottom,\n          left: info.offsetLeft + 1,\n          right: info.offsetRight,\n          top: info.offsetTop,\n        },\n      })\n    }\n    return new InlineDrawer({\n      color: undefined,\n      draw,\n      height: btnSize.height + 1,\n      width: btnSize.width + 3,\n    })\n  }\n  public checkbox(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): void {\n    this.drawWithClip(context, (ctx) => {\n      const { col, row } = context\n      gridDrawCheckbox(ctx, context.getRect(), col, row, check, this, option)\n    })\n  }\n  public radioButton(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      checkColor?: ColorPropertyDefine\n      uncheckBorderColor?: ColorPropertyDefine\n      checkBorderColor?: ColorPropertyDefine\n      bgColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): void {\n    this.drawWithClip(context, (ctx) => {\n      const { col, row } = context\n      gridDrawRadioButton(ctx, context.getRect(), col, row, check, this, option)\n    })\n  }\n  public switch(\n    check: boolean,\n    context: CellContext,\n    option: {\n      animElapsedTime?: number\n      uncheckBgColor?: ColorPropertyDefine\n      checkBgColor?: ColorPropertyDefine\n      borderColor?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n    } = {}\n  ): void {\n    this.drawWithClip(context, (ctx) => {\n      const col = context.col\n      const row = context.row\n      gridDrawSwitchBtn(ctx, context.getRect(), col, row, check, this, option)\n    })\n  }\n  public button(\n    caption: string,\n    context: CellContext,\n    {\n      bgColor = this.theme.button.bgColor,\n      padding,\n      offset = 2,\n      color = this.theme.button.color,\n      textAlign = 'center',\n      textBaseline = 'middle',\n      shadow,\n      font,\n      textOverflow = 'clip',\n      icons,\n    }: {\n      bgColor?: ColorPropertyDefine\n      padding?: number | string | (number | string)[]\n      offset?: number\n      color?: ColorPropertyDefine\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      shadow?: DrawButtonOption['shadow']\n      font?: FontPropertyDefine\n      textOverflow?: TextOverflow\n      icons?: SimpleColumnIconOption[]\n    } = {}\n  ): void {\n    const rect = context.getRect()\n\n    this.drawWithClip(context, (ctx) => {\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      const col = context.col\n      const row = context.row\n      const paddingNums = this.toBoxPixelArray(\n        padding || rect.height / 8,\n        context,\n        font\n      )\n      const left = rect.left + paddingNums[3]\n      const top = rect.top + paddingNums[0]\n      const width = rect.width - paddingNums[1] - paddingNums[3]\n      const height = rect.height - paddingNums[0] - paddingNums[2]\n\n      bgColor = getColor(bgColor, context.col, context.row, this._grid, ctx)\n\n      canvasHelper.drawButton(ctx, left, top, width, height, {\n        bgColor,\n        // offset,\n        radius: rect.height / 8,\n        shadow,\n      })\n      _inlineRect(\n        this._grid,\n        ctx,\n        caption,\n        new Rect(left, top, width, height),\n        col,\n        row,\n        {\n          color,\n          font,\n          icons,\n          offset,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        }\n      )\n    })\n  }\n  public testFontLoad(\n    font: string | undefined,\n    value: string,\n    context: CellContext\n  ): boolean {\n    return testFontLoad(font, value, context, this._grid)\n  }\n  public tree(\n    text: string,\n    context: CellContext,\n    {\n      font,\n      offset = 2,\n      color,\n      lineColor = this.theme.tree.lineColor,\n      buttonColor = this.theme.tree.buttonColor,\n      buttonBgColor = this.theme.tree.buttonBgColor,\n      buttonBorderColor = this.theme.tree.buttonBorderColor,\n      icons,\n      padding,\n      textAlign = 'left',\n      textBaseline = 'middle',\n      textOverflow = 'clip',\n      treeInfo,\n      treeNodeSpace = 0,\n      isMultilineText = false,\n      autoWrapText = false,\n      lineHeight = '1em',\n      lineClamp = 0,\n    }: {\n      font?: FontPropertyDefine\n      offset?: number\n      color?: ColorPropertyDefine\n      lineColor?: ColorPropertyDefine\n      buttonColor?: ColorPropertyDefine\n      buttonBgColor?: ColorPropertyDefine\n      buttonBorderColor?: ColorPropertyDefine\n      icons?: SimpleColumnIconOption[]\n      padding?: number | string | (number | string)[]\n      textAlign?: CanvasTextAlign\n      textBaseline?: CanvasTextBaseline\n      textOverflow?: TextOverflow\n      treeInfo?: TreeInfo\n      treeNodeSpace?: number\n      isMultilineText?: boolean\n      autoWrapText?: boolean\n      lineHeight?: string | number\n      lineClamp?: LineClamp\n    } = {}\n  ): void {\n    let rect = context.getRect()\n\n    const col = context.col\n    const row = context.row\n\n    color = getGridThemeColor(this._grid, this.theme, col, row, color)\n    font = getGridThemeFont(this._grid, this.theme, col, row, font)\n\n    this.drawWithClip(context, (ctx) => {\n      let xOffset = rect.left\n      let lineNodeSpace = 0\n      if (treeInfo) {\n        const info = treeInfo as TreeInfo\n        const nodeRadius = 5\n        const rectTop = rect.top\n        const rectMiddle = rectTop + rect.height / 2\n        const rectBottom = rectTop + rect.height\n        lineNodeSpace = treeNodeSpace\n        ctx.strokeStyle = this.getColor(lineColor, col, row, ctx)\n        ctx.beginPath()\n        for (let i = 0; i < info.level; i++) {\n          xOffset += lineNodeSpace\n          const isLastLevel = i === info.level - 1\n          const isLastRecord = info.levelLast[i]\n          if (isLastLevel || !isLastRecord) {\n            ctx.moveTo(xOffset, rectTop)\n            if (isLastRecord) {\n              ctx.lineTo(xOffset, rectMiddle)\n            } else {\n              ctx.lineTo(xOffset, rectBottom)\n            }\n            if (isLastLevel) {\n              ctx.moveTo(xOffset, rectMiddle)\n              ctx.lineTo(xOffset + lineNodeSpace - nodeRadius, rectMiddle)\n            }\n          }\n        }\n        ctx.stroke()\n        if (!info.isLeaf) {\n          ctx.beginPath()\n          ctx.strokeStyle = this.getColor(buttonBorderColor, col, row, ctx)\n          ctx.moveTo(xOffset + lineNodeSpace + nodeRadius, rectMiddle)\n          ctx.arc(\n            xOffset + lineNodeSpace,\n            rectMiddle,\n            nodeRadius,\n            0,\n            2 * Math.PI\n          )\n          ctx.fillStyle = this.getColor(buttonBgColor, col, row, ctx)\n          ctx.fill()\n          ctx.stroke()\n\n          if (info.expanded) {\n            ctx.beginPath()\n            ctx.strokeStyle = this.getColor(lineColor, col, row, ctx)\n            ctx.moveTo(xOffset + lineNodeSpace, rectMiddle + nodeRadius)\n            ctx.lineTo(xOffset + lineNodeSpace, rectBottom)\n            ctx.stroke()\n          }\n\n          // 减号\n          const symbolRadius = nodeRadius - 2\n          ctx.beginPath()\n          ctx.lineWidth = 2\n          ctx.strokeStyle = this.getColor(buttonColor, col, row, ctx)\n          ctx.moveTo(xOffset + lineNodeSpace - symbolRadius, rectMiddle)\n          ctx.lineTo(xOffset + lineNodeSpace + symbolRadius, rectMiddle)\n          if (!info.expanded) {\n            // 加号\n            ctx.moveTo(xOffset + lineNodeSpace, rectMiddle - symbolRadius)\n            ctx.lineTo(xOffset + lineNodeSpace, rectMiddle + symbolRadius)\n          }\n          ctx.stroke()\n        }\n      }\n      rect.left = xOffset + lineNodeSpace * 2\n      font = getFont(font, context.col, context.row, this._grid, ctx)\n      if (padding) {\n        const paddingNums = this.toBoxPixelArray(padding, context, font)\n        const left = rect.left + paddingNums[3]\n        const top = rect.top + paddingNums[0]\n        const width = rect.width - paddingNums[1] - paddingNums[3]\n        const height = rect.height - paddingNums[0] - paddingNums[2]\n        rect = new Rect(left, top, width, height)\n      }\n      if (!isMultilineText) {\n        _inlineRect(this._grid, ctx, text, rect, col, row, {\n          color,\n          font,\n          icons,\n          offset,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      } else {\n        text = isDef(text) ? text + '' : ''\n        const multiInlines = text\n          .replace(/\\r?\\n/g, '\\n')\n          .replace(/\\r/g, '\\n')\n          .split('\\n')\n        const calculator = this.createCalculator(context, font)\n        lineHeight = calculator.calcHeight(lineHeight)\n        _multiInlineRect(this._grid, ctx, multiInlines, rect, col, row, {\n          autoWrapText,\n          color,\n          font,\n          icons,\n          lineClamp,\n          lineHeight,\n          offset,\n          textAlign,\n          textBaseline,\n          textOverflow,\n        })\n      }\n    })\n  }\n  public attachArea(rect: RectProps, context: CellContext): void {\n    this.drawWithClip(context, (ctx) => {\n      const sel = context.getSelection()\n      const { col, row } = context\n      if (!cellInRange(sel.range, col, row)) {\n        ctx.setLineDash([4, 4])\n      }\n      ctx.strokeStyle = '#D9D9D9'\n      ctx.lineWidth = 1\n      const r = 2\n      const x = rect.left\n      const y = rect.top\n      const width = rect.width\n      const height = rect.height\n      ctx.beginPath()\n      ctx.moveTo(x + r, y)\n      ctx.arcTo(x + width, y, x + width, y + r, r)\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r)\n      ctx.arcTo(x, y + height, x, y + height - r, r)\n      ctx.arcTo(x, y, x + r, y, r)\n      ctx.stroke()\n    })\n  }\n}\n","import { ListGridAPI } from '../ts-types'\nimport { TooltipElement } from './internal/TooltipElement'\n\nexport abstract class BaseTooltip<T> {\n  private _grid: ListGridAPI<T>\n  private _tooltipElement?: TooltipElement<T>\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n  }\n  public dispose() {\n    this.detachTooltipElement()\n    if (this._tooltipElement) {\n      this._tooltipElement.dispose()\n    }\n    delete this._tooltipElement\n  }\n  public attachTooltipElement(col: number, row: number, content: string) {\n    const tooltipElement = this._getTooltipElement()\n    tooltipElement.attach(this._grid, col, row, content)\n  }\n  public moveTooltipElement(col: number, row: number) {\n    const tooltipElement = this._getTooltipElement()\n    tooltipElement.move(this._grid, col, row)\n  }\n  public detachTooltipElement() {\n    const tooltipElement = this._getTooltipElement()\n    tooltipElement.detach()\n  }\n  public abstract createTooltipElementInternal(): TooltipElement<T>\n  private _getTooltipElement(): TooltipElement<T> {\n    return (\n      this._tooltipElement ||\n      (this._tooltipElement = this.createTooltipElementInternal())\n    )\n  }\n}\n","import { ListGridAPI } from '../../ts-types'\nimport { createElement } from '../../internal/dom'\nimport { EventHandler } from '../../internal/EventHandler'\nimport style from '../../internal/style'\n\nimport tooltipElementCss from './TooltipElement.css'\n\nconst CLASS_NAME = 'kaka-grid__tooltip-element'\nconst CONTENT_CLASS_NAME = `${CLASS_NAME}__content`\nconst HIDDEN_CLASS_NAME = `${CLASS_NAME}--hidden`\nconst SHOWN_CLASS_NAME = `${CLASS_NAME}--shown`\n\nexport class TooltipElement<T> {\n  private _handler: EventHandler\n  private _rootElement: HTMLDivElement\n  private _messageElement: HTMLElement | null\n  public constructor() {\n    this._handler = new EventHandler()\n    this._rootElement = this.createTooltipDomElement()\n    this._messageElement = this.createTooltipMessageElement(\n      this._rootElement,\n      CONTENT_CLASS_NAME\n    )\n  }\n  public dispose() {\n    this.detach()\n\n    const rootElement = this._rootElement\n    if (rootElement.parentElement) {\n      rootElement.parentElement.removeChild(rootElement)\n    }\n\n    this._handler.dispose()\n    this._messageElement = null\n  }\n  public attach(\n    grid: ListGridAPI<T>,\n    col: number,\n    row: number,\n    content: string\n  ) {\n    const rootElement = this._rootElement\n    const messageElement = this._messageElement\n\n    rootElement.classList.remove(SHOWN_CLASS_NAME)\n    rootElement.classList.add(HIDDEN_CLASS_NAME)\n\n    if (messageElement) {\n      this.doSetContent(messageElement, content)\n    }\n\n    if (this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASS_NAME)\n      rootElement.classList.remove(HIDDEN_CLASS_NAME)\n    } else {\n      this._detach()\n    }\n  }\n  public move(grid: ListGridAPI<T>, col: number, row: number) {\n    const rootElement = this._rootElement\n    if (this._attachCell(grid, col, row)) {\n      rootElement.classList.add(SHOWN_CLASS_NAME)\n      rootElement.classList.remove(HIDDEN_CLASS_NAME)\n    } else {\n      this._detach()\n    }\n  }\n  public detach() {\n    this._detach()\n  }\n  protected createTooltipDomElement() {\n    style.inject('tooltipElement', tooltipElementCss)\n    const rootElement = createElement('div', {\n      classList: [CLASS_NAME, HIDDEN_CLASS_NAME],\n    })\n    return rootElement\n  }\n  protected createTooltipMessageElement(\n    rootElement: HTMLDivElement,\n    cls: string\n  ): HTMLElement {\n    const messageElement = createElement('pre', { classList: [cls] })\n    rootElement.appendChild(messageElement)\n    return messageElement\n  }\n  protected doSetContent(element: Element, content: string) {\n    element.textContent = content\n  }\n  private _detach() {\n    const rootElement = this._rootElement\n    if (rootElement.parentElement) {\n      // rootElement.parentElement.removeChild(rootElement);\n      rootElement.classList.remove(SHOWN_CLASS_NAME)\n      rootElement.classList.add(HIDDEN_CLASS_NAME)\n    }\n  }\n  private _attachCell(grid: ListGridAPI<T>, col: number, row: number) {\n    const rootElement = this._rootElement\n    const { element, rect } = grid.getAttachCellsArea(\n      grid.getCellRange(col, row)\n    )\n\n    const top = rect.top\n    const right = rect.right\n    const bottom = rect.bottom\n    const left = rect.left\n    const width = rect.width\n\n    const frozenRowCount = grid.frozenRowCount\n    const frozenColCount = grid.frozenColCount\n    if (row >= frozenRowCount && frozenRowCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(col, frozenRowCount - 1)\n      )\n      if (bottom < frozenRect.bottom) {\n        return false // 超出范围\n      }\n    } else {\n      if (bottom < 0) {\n        return false // 超出范围\n      }\n    }\n    if (col >= frozenColCount && frozenColCount > 0) {\n      const { rect: frozenRect } = grid.getAttachCellsArea(\n        grid.getCellRange(frozenColCount - 1, row)\n      )\n      if (right < frozenRect.right) {\n        return false // 超出范围\n      }\n    } else {\n      if (right < 0) {\n        return false // 超出范围\n      }\n    }\n    const offsetHeight = element.offsetHeight\n    const offsetWidth = element.offsetWidth\n    if (offsetHeight < top) {\n      return false // 超出范围\n    }\n    if (offsetWidth < left) {\n      return false // 超出范围\n    }\n\n    const rootTop = bottom\n    const rootLeft = left + width / 2\n    rootElement.style.top = `${rootTop.toFixed()}px`\n    rootElement.style.left = `${rootLeft.toFixed()}px`\n    rootElement.style.minWidth = `${width.toFixed()}px`\n    if (rootElement.parentElement !== element) {\n      element.appendChild(rootElement)\n    }\n\n    const rootHeight = rootElement.offsetHeight\n    const rootWidth = rootElement.offsetWidth\n    // 底部越界\n    if (rootTop + rootHeight > offsetHeight) {\n      const bTop = top - rootHeight\n      rootElement.style.top = `${bTop.toFixed()}px`\n    }\n    // 左右越界\n    if (rootLeft - rootWidth / 2 < 0) {\n      // 左\n      const lLeft = rootWidth / 2\n      rootElement.style.left = `${lLeft.toFixed()}px`\n    } else if (rootLeft + rootWidth / 2 > offsetWidth) {\n      // 右\n      const rLeft = offsetWidth - rootWidth / 2\n      rootElement.style.left = `${rLeft.toFixed()}px`\n    }\n\n    return true\n  }\n}\n","import { BaseTooltip } from './BaseTooltip'\nimport { TooltipElement } from './internal/TooltipElement'\n\nexport class Tooltip<T> extends BaseTooltip<T> {\n  public createTooltipElementInternal(): TooltipElement<T> {\n    return new TooltipElement()\n  }\n}\n","import { createElement } from '../../internal/dom'\nimport { TooltipElement } from './TooltipElement'\n\nexport class HtmlTooltipElement<T> extends TooltipElement<T> {\n  protected createTooltipMessageElement(\n    rootElement: HTMLDivElement,\n    cls: string\n  ): HTMLElement {\n    const messageElement = createElement('div', { classList: [cls] })\n    rootElement.appendChild(messageElement)\n    return messageElement\n  }\n  protected doSetContent(element: Element, content: string) {\n    element.innerHTML = content\n  }\n}\n","import { BaseTooltip } from './BaseTooltip'\nimport { HtmlTooltipElement } from './internal/HtmlTooltipElement'\n\nexport class HtmlTooltip<T> extends BaseTooltip<T> {\n  public createTooltipElementInternal(): HtmlTooltipElement<T> {\n    return new HtmlTooltipElement()\n  }\n}\n","import { ListGridAPI, CellRange } from '../ts-types'\nimport { LG_EVENT_TYPE } from '../list-grid/LG_EVENT_TYPE'\nimport { BaseTooltip } from './BaseTooltip'\nimport { Tooltip } from './Tooltip'\nimport { HtmlTooltip } from './HtmlTooltip'\nimport { cellInRange } from '../internal/utils'\n\nconst TOOLTIP_INSTANCE_FACTORY: {\n  [key: string]: <T>(grid: ListGridAPI<T>) => BaseTooltip<T>\n} = {\n  'overflow-html': <T>(grid: ListGridAPI<T>) => {\n    return new HtmlTooltip(grid)\n  },\n  'overflow-text': <T>(grid: ListGridAPI<T>) => {\n    return new Tooltip(grid)\n  },\n}\n\nfunction getTooltipInstanceInfo<T>(\n  grid: ListGridAPI<T>,\n  col: number,\n  row: number\n) {\n  // overflow text tooltip\n  const overflowText = grid.getCellOverflowText(col, row)\n  if (overflowText) {\n    const overflowType = grid.getCellOverflowType(col, row)\n    return {\n      content: overflowText,\n      type: overflowType || 'overflow-text',\n    }\n  }\n  return null\n}\n\ntype AttachInfo<T> = {\n  instance: BaseTooltip<T>\n  range: CellRange\n}\n\nclass TooltipHandler<T> {\n  private _grid: ListGridAPI<T>\n  private _tooltipInstances: { [type: string]: BaseTooltip<T> }\n  private _attachInfo?: AttachInfo<T> | null\n  public constructor(grid: ListGridAPI<T>) {\n    this._grid = grid\n    this._tooltipInstances = {}\n    this._bindGridEvent(grid)\n  }\n  public dispose(): void {\n    const tooltipInstances = this._tooltipInstances\n    for (const k in tooltipInstances) {\n      tooltipInstances[k].dispose()\n    }\n    this._attachInfo = null\n  }\n  private _attach(col: number, row: number): void {\n    const info = this._attachInfo\n    const instanceInfo = this._getTooltipInstanceInfo(col, row)\n    if (info && (!instanceInfo || info.instance !== instanceInfo.instance)) {\n      info.instance.detachTooltipElement()\n      this._attachInfo = null\n    }\n    if (!instanceInfo) {\n      return\n    }\n    const { instance } = instanceInfo\n    instance.attachTooltipElement(col, row, instanceInfo.content)\n    const range = this._grid.getCellRange(col, row)\n    this._attachInfo = { range, instance }\n  }\n  private _move(col: number, row: number) {\n    const info = this._attachInfo\n    if (!info || !cellInRange(info.range, col, row)) {\n      return\n    }\n    const { instance } = info\n    instance.moveTooltipElement(col, row)\n  }\n  private _detach() {\n    const info = this._attachInfo\n    if (!info) {\n      return\n    }\n    const { instance } = info\n    instance.detachTooltipElement()\n    this._attachInfo = null\n  }\n  private _isAttachCell(col: number, row: number) {\n    const info = this._attachInfo\n    if (!info) {\n      return false\n    }\n    return cellInRange(info.range, col, row)\n  }\n  private _bindGridEvent(grid: ListGridAPI<T>) {\n    grid.listen(LG_EVENT_TYPE.MOUSEOVER_CELL, (e) => {\n      if (e.related) {\n        if (this._isAttachCell(e.col, e.row)) {\n          return\n        }\n      }\n      this._attach(e.col, e.row)\n    })\n    grid.listen(LG_EVENT_TYPE.MOUSEOUT_CELL, (e) => {\n      if (e.related) {\n        if (this._isAttachCell(e.related.col, e.related.row)) {\n          return\n        }\n      }\n      this._detach()\n    })\n    grid.listen(LG_EVENT_TYPE.SELECTED_CELL, (e) => {\n      if (this._isAttachCell(e.col, e.row)) {\n        this._detach()\n      }\n    })\n    grid.listen(LG_EVENT_TYPE.SCROLL, () => {\n      const info = this._attachInfo\n      if (!info) {\n        return\n      }\n      this._move(info.range.start.col, info.range.start.row)\n    })\n    grid.listen(LG_EVENT_TYPE.CHANGED_VALUE, (e) => {\n      if (this._isAttachCell(e.col, e.row)) {\n        this._detach()\n        this._attach(e.col, e.row)\n      }\n    })\n  }\n  private _getTooltipInstanceInfo(\n    col: number,\n    row: number\n  ): {\n    instance: Tooltip<T>\n    type: string\n    content: string\n  } | null {\n    const grid = this._grid\n    const tooltipInstances = this._tooltipInstances\n    const info = getTooltipInstanceInfo(grid, col, row)\n    if (!info) {\n      return null\n    }\n    const type = info.type\n    const instance =\n      tooltipInstances[type] ||\n      (tooltipInstances[type] = TOOLTIP_INSTANCE_FACTORY[type](grid))\n    return {\n      instance,\n      type,\n      content: info.content,\n    }\n  }\n}\n\nexport default TooltipHandler\n","import {\n  CellAddress,\n  CellContext,\n  CellRange,\n  ColorPropertyDefine,\n  ColumnIconOption,\n  ColumnStyleOption,\n  EventListenerId,\n  FieldData,\n  FieldDef,\n  HeaderValues,\n  LayoutObjectId,\n  ListGridAPI,\n  ListGridEventHandlersEventMap,\n  ListGridEventHandlersReturnMap,\n  MaybePromise,\n  MaybePromiseOrUndef,\n  Message,\n  SortState,\n  ThemeDefine,\n  PasteCellEvent,\n  SelectedCellEvent,\n  SetPasteValueTestData,\n  ColumnTypeAPI,\n  ListGridSpanBodyOptions,\n} from './ts-types'\nimport { DrawCellInfo } from './ts-types-internal'\nimport {\n  ColumnData,\n  ColumnDefine,\n  HeaderDefine,\n  HeadersDefine,\n  LayoutDefine,\n  LayoutMapAPI,\n  MultiLayoutMap,\n  SimpleHeaderLayoutMap,\n} from './list-grid/layout-map'\nimport { LayoutMap } from './list-grid/LayoutMap'\nimport {\n  DrawGrid,\n  DrawGridConstructorOptions,\n  DrawGridProtected,\n} from './core/DrawGrid'\nimport {\n  isDef,\n  obj,\n  then,\n  isPromise,\n  getOrApply,\n  event,\n  cellEquals,\n  cellMerge,\n  omit,\n} from './internal/utils'\nimport { BaseColumn } from './columns/type/BaseColumn'\nimport { icons } from './internal/icons'\nimport { columns } from './columns'\nimport { themes } from './themes'\nimport { MessageHandler } from './columns/message/MessageHandler'\nimport { createCellRange } from './core/draw-grid/DrawCellContext'\nimport { CachedDataSource } from './data/CachedDataSource'\nimport { DataSource } from './data/DataSource'\nimport { GridCanvasHelper } from './GridCanvasHelper'\nimport { BaseAction } from './header/action/BaseAction'\nimport { BaseStyle as HeaderBaseStyle } from './header/style'\nimport { EventHandler } from './internal/EventHandler'\nimport Rect from './internal/Rect'\nimport { Theme } from './themes/theme'\nimport TooltipHandler from './tooltip/TooltipHandler'\nimport { LG_EVENT_TYPE } from './list-grid/LG_EVENT_TYPE'\nimport { parsePasteRangeBoxValues } from './internal/paste-utils'\nimport { toPx } from './internal/calc'\nimport { getInlineEditingState } from './columns/utils'\n// protected symbol\nimport { getListGridSymbol } from './internal/symbolManager'\n\nconst _ = getListGridSymbol()\n\n// private methods\nfunction _arrayEqual(a: any[], b: any[]): boolean {\n  if (a.length !== b.length) {\n    return false\n  } else {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false\n      }\n    }\n    return true\n  }\n}\nfunction _getCellValues<T>(\n  grid: ListGrid<T>,\n  startCol: number,\n  endCol: number,\n  row: number\n): any[] {\n  const values = []\n  if (startCol <= endCol) {\n    for (let col = startCol; col <= endCol; col++) {\n      values.push(_getCellValue(grid, col, row))\n    }\n  } else {\n    for (let col = startCol; col >= endCol; col--) {\n      values.push(_getCellValue(grid, col, row))\n    }\n  }\n  return values\n}\nfunction _getBodyCellRange<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): CellRange | null {\n  let cellRange = null\n  const { spanBodyOptions, layoutMap } = grid[_]\n  if (spanBodyOptions && row >= layoutMap.headerRowCount) {\n    let startRow = row\n    let endRow = row\n    const { startCol, endCol } = spanBodyOptions\n    if (\n      (startCol <= col && col <= endCol) ||\n      (endCol <= col && col <= startCol)\n    ) {\n      const values = _getCellValues(grid, startCol, col, row)\n      while (startRow > layoutMap.headerRowCount) {\n        const pValues = _getCellValues(grid, startCol, col, startRow - 1)\n        if (_arrayEqual(values, pValues)) {\n          startRow--\n        } else {\n          break\n        }\n      }\n      while (endRow < grid.rowCount) {\n        const nValues = _getCellValues(grid, startCol, col, endRow + 1)\n        if (_arrayEqual(values, nValues)) {\n          endRow++\n        } else {\n          break\n        }\n      }\n    }\n    cellRange = {\n      start: {\n        col,\n        row: Math.min(startRow, endRow),\n      },\n      end: {\n        col,\n        row: Math.max(startRow, endRow),\n      },\n    }\n  }\n  return cellRange\n}\nfunction _getCellRange<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): CellRange {\n  const { layoutMap } = grid[_]\n  let cellRange = layoutMap.getCellRange(col, row)\n  const bodyCellRange = _getBodyCellRange(grid, col, row)\n  if (bodyCellRange) {\n    cellRange = cellMerge(cellRange, bodyCellRange)\n  }\n  const p = {\n    get col() {\n      return col\n    },\n    get row() {\n      return row\n    },\n    cellRange,\n  }\n  grid.fireListeners(LG_EVENT_TYPE.CELL_RANGE, p)\n  return p.cellRange\n}\nfunction _updateRect<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number,\n  context: CellContext\n): void {\n  context.setRectFilter((rect) => {\n    let { left, right, top, bottom } = rect\n    const {\n      start: { col: startCol, row: startRow },\n      end: { col: endCol, row: endRow },\n    } = _getCellRange(grid, col, row)\n    for (let c = col - 1; c >= startCol; c--) {\n      left -= grid.getColWidth(c)\n    }\n    for (let c = col + 1; c <= endCol; c++) {\n      right += grid.getColWidth(c)\n    }\n    for (let r = row - 1; r >= startRow; r--) {\n      top -= grid.getRowHeight(r)\n    }\n    for (let r = row + 1; r <= endRow; r++) {\n      bottom += grid.getRowHeight(r)\n    }\n    return Rect.bounds(left, top, right, bottom)\n  })\n  context.range = _getCellRange(grid, col, row) // !!! TODO\n}\nfunction _getCellValue<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): FieldData {\n  let cellValue\n  if (row < grid[_].layoutMap.headerRowCount) {\n    const { caption } = grid[_].layoutMap.getHeader(col, row)\n    cellValue = typeof caption === 'function' ? caption() : caption\n  } else {\n    const { field } = grid[_].layoutMap.getBody(col, row)\n    cellValue = _getField(grid, field, row)\n  }\n  const p = {\n    get col() {\n      return col\n    },\n    get row() {\n      return row\n    },\n    cellValue,\n  }\n  grid.fireListeners(LG_EVENT_TYPE.CELL_VALUE, p)\n  return p.cellValue\n}\nfunction _setCellValue<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number,\n  value: any\n): MaybePromise<boolean> {\n  if (row < grid[_].layoutMap.headerRowCount) {\n    // nop\n    return false\n  } else {\n    const { field } = grid[_].layoutMap.getBody(col, row)\n    if (field == null) {\n      return false\n    }\n    const index = _getRecordIndexByRow(grid, row)\n    return grid[_].dataSource.setField(index, field, value)\n  }\n}\nfunction _getContentHidden<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): boolean {\n  let contentHidden = false\n  if (row >= grid[_].layoutMap.headerRowCount) {\n    const column = grid[_].layoutMap.getBody(col, row)\n    if (column && column.contentHidden) {\n      contentHidden = getOrApply(\n        column.contentHidden,\n        grid.getRowRecord(row) as any\n      )\n    }\n  }\n  return contentHidden\n}\nfunction _getCellMessage<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): FieldData {\n  if (row < grid[_].layoutMap.headerRowCount) {\n    return null\n  } else {\n    const column = grid[_].layoutMap.getBody(col, row)\n    if (!column || !column.message) {\n      return null\n    }\n    return _getField(grid, column.message as FieldDef<T>, row)\n  }\n}\nfunction _getHeaderField<T>(grid: ListGrid<T>, field: any) {\n  if (typeof field === 'function') {\n    return field(grid.headerValues)\n  } else {\n    return grid.headerValues.get(field)\n  }\n}\nfunction _hasHeaderField<T>(grid: ListGrid<T>, field: any): boolean {\n  let has = false\n  grid[_].layoutMap.headerObjects.forEach((cell) => {\n    if (cell.field === field) {\n      has = true\n    }\n  })\n  return has\n}\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>\n): ColumnIconOption<T>\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>[]\n): ColumnIconOption<T>[]\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[]\n): ColumnIconOption<T> | ColumnIconOption<T>[]\nfunction _getCellIcon1<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[]\n): ColumnIconOption<T> | ColumnIconOption<T>[] {\n  if (Array.isArray(icon)) {\n    return icon.map((i) => _getCellIcon1(grid, i))\n  }\n  if (!obj.isObject(icon) || typeof icon === 'function') {\n    return _getHeaderField(grid, icon)\n  }\n  const retIcon: any = {}\n  const iconOpt: any = icon\n  icons.iconPropKeys.forEach((k) => {\n    if (iconOpt[k]) {\n      const f = _getHeaderField(grid, iconOpt[k])\n      if (isDef(f)) {\n        retIcon[k] = f\n      } else {\n        if (!_hasHeaderField(grid, iconOpt[k])) {\n          retIcon[k] = iconOpt[k]\n        }\n      }\n    }\n  })\n  return retIcon\n}\nfunction _getHeaderIcon<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[] | null {\n  const icon = grid[_].layoutMap.getHeader(col, row).icon\n  if (icon == null) {\n    return null\n  }\n  return _getCellIcon1(grid, icon)\n}\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>,\n  row: number\n): ColumnIconOption<T>\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T>[],\n  row: number\n): ColumnIconOption<T>[]\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[],\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[]\nfunction _getCellIcon0<T>(\n  grid: ListGrid<T>,\n  icon: ColumnIconOption<T> | ColumnIconOption<T>[],\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[] {\n  if (Array.isArray(icon)) {\n    return icon.map((i) => _getCellIcon0(grid, i, row))\n  }\n  if (!obj.isObject(icon) || typeof icon === 'function') {\n    return _getField(grid, icon, row)\n  }\n  const retIcon: any = {}\n  const iconOpt: any = icon\n  icons.iconPropKeys.forEach((k) => {\n    if (iconOpt[k]) {\n      const f = _getField(grid, iconOpt[k], row)\n      if (isDef(f)) {\n        retIcon[k] = f\n      } else {\n        if (!_hasField(grid, iconOpt[k], row)) {\n          retIcon[k] = iconOpt[k]\n        }\n      }\n    }\n  })\n  return retIcon\n}\nfunction _getCellIcon<T>(\n  grid: ListGrid<T>,\n  col: number,\n  row: number\n): ColumnIconOption<T> | ColumnIconOption<T>[] | null {\n  const icon = grid[_].layoutMap.getBody(col, row).icon\n  if (icon == null) {\n    return null\n  }\n  return _getCellIcon0(grid, icon, row)\n}\nfunction _getField<T>(\n  grid: ListGrid<T>,\n  field: FieldDef<T> | undefined,\n  row: number\n): FieldData {\n  if (!isDef(field)) {\n    return null\n  }\n\n  if (row < grid[_].layoutMap.headerRowCount) {\n    return null\n  } else {\n    const index = _getRecordIndexByRow(grid, row)\n    return grid[_].dataSource.getField(index, field)\n  }\n}\nfunction _hasField<T>(\n  grid: ListGrid<T>,\n  field: FieldDef<T>,\n  row: number\n): boolean {\n  if (!isDef(field)) {\n    return false\n  }\n  if (row < grid[_].layoutMap.headerRowCount) {\n    return false\n  } else {\n    const index = _getRecordIndexByRow(grid, row)\n    return grid[_].dataSource.hasField(index, field)\n  }\n}\nfunction _onDrawValue<T>(\n  grid: ListGrid<T>,\n  cellValue: MaybePromise<unknown>,\n  context: CellContext,\n  { col, row }: CellAddress,\n  style: ColumnStyleOption | null | undefined,\n  draw: BaseColumn<T, any>['onDrawCell']\n): MaybePromise<void> {\n  const helper = grid[_].gridCanvasHelper\n  const isEditing = !!getInlineEditingState(grid).cellRange\n\n  const drawCellBg = ({\n    bgColor,\n  }: { bgColor?: ColorPropertyDefine } = {}): void => {\n    const fillOpt = {\n      fillColor: bgColor,\n      isEditing,\n    }\n    // 绘制整个cell\n    helper.fillCellWithState(context, fillOpt)\n  }\n  const drawCellBorder = () => {\n    if (context.col === grid.frozenColCount - 1) {\n      // 固定列规则\n      const rect = context.getRect()\n      helper.drawWithClip(context, (ctx: CanvasRenderingContext2D) => {\n        const borderColor =\n          context.row >= grid.frozenRowCount\n            ? helper.theme.borderColor\n            : helper.theme.frozenRowsBorderColor\n\n        const borderColors = helper.toBoxArray(\n          helper.getColor(borderColor, context.col, context.row, ctx)\n        )\n        if (borderColors[1]) {\n          ctx.lineWidth = 1\n          ctx.strokeStyle = borderColors[1]\n          ctx.beginPath()\n          ctx.moveTo(rect.right - 2.5, rect.top)\n          ctx.lineTo(rect.right - 2.5, rect.bottom)\n          ctx.stroke()\n        }\n      })\n    }\n\n    helper.borderSelection(context, {\n      isEditing,\n      highlightBorderWidth: toPx(\n        grid.highlightBorderWidth,\n        grid[_].calcWidthContext\n      ),\n    }) // !!! TODO\n    // _borderWithState(grid, helper, context)\n  }\n  const clearCellBase = () => {\n    helper.clearCell(context)\n  }\n  const drawCellBase = ({\n    bgColor,\n  }: { bgColor?: ColorPropertyDefine } = {}): void => {\n    drawCellBg({ bgColor })\n    drawCellBorder()\n  }\n  const info: DrawCellInfo<T> = {\n    getRecord: () => grid.getRowRecord(row),\n    getIcon: () => _getCellIcon(grid, col, row),\n    getMessage: () => _getCellMessage(grid, col, row),\n    messageHandler: grid[_].messageHandler,\n    style,\n    clearCellBase,\n    drawCellBase,\n    drawCellBg,\n    drawCellBorder,\n    getCell: () => ({ col, row }),\n    getHeaderIcon: () => _getHeaderIcon(grid, col, row),\n    getContentHidden: () => _getContentHidden(grid, col, row),\n  }\n\n  return draw(cellValue, info, context, grid)\n}\n// function _borderWithState<T>(\n//   grid: ListGrid<T>,\n//   helper: GridCanvasHelper<T>,\n//   context: CellContext\n// ): void {\n//   const { col, row } = context;\n//   const sel = grid.selection.select;\n//   const { layoutMap } = grid[_];\n\n//   const rect = context.getRect();\n//   const option: { borderColor?: ColorsPropertyDefine; lineWidth?: number } = {};\n\n//   const selRecordIndex = layoutMap.getRecordIndexByRow(sel.row);\n//   const selId = layoutMap.getCellId(sel.col, sel.row);\n//   function isSelectCell(col: number, row: number): boolean {\n//     if (col === sel.col && row === sel.row) {\n//       return true;\n//     }\n//     return (\n//       selId != null &&\n//       layoutMap.getCellId(col, row) === selId &&\n//       layoutMap.getRecordIndexByRow(row) === selRecordIndex\n//     );\n//   }\n\n//   // 边线\n//   if (isSelectCell(col, row)) {\n//     option.borderColor = helper.theme.highlightBorderColor;\n//     option.lineWidth = 2;\n//     helper.border(context, option);\n//   } else {\n//     option.lineWidth = 1;\n//     // header color\n//     const isFrozenCell = grid.isFrozenCell(col, row);\n//     if (isFrozenCell?.row) {\n//       option.borderColor = helper.theme.frozenRowsBorderColor;\n//     }\n//     helper.border(context, option);\n\n//     // 额外处理\n//     if (col > 0 && isSelectCell(col - 1, row)) {\n//       // 右边被选中\n//       helper.drawBorderWithClip(context, ctx => {\n//         const borderColors = helper.toBoxArray(\n//           helper.getColor(\n//             helper.theme.highlightBorderColor,\n//             sel.col,\n//             sel.row,\n//             ctx\n//           )\n//         );\n//         if (borderColors[1]) {\n//           ctx.lineWidth = 1;\n//           ctx.strokeStyle = borderColors[1];\n//           ctx.beginPath();\n//           ctx.moveTo(rect.left - 0.5, rect.top);\n//           ctx.lineTo(rect.left - 0.5, rect.bottom);\n//           ctx.stroke();\n//         }\n//       });\n//     } else if (row > 0 && isSelectCell(col, row - 1)) {\n//       // 顶部被选中\n//       helper.drawBorderWithClip(context, ctx => {\n//         const borderColors = helper.toBoxArray(\n//           helper.getColor(\n//             helper.theme.highlightBorderColor,\n//             sel.col,\n//             sel.row,\n//             ctx\n//           )\n//         );\n//         if (borderColors[0]) {\n//           ctx.lineWidth = 1;\n//           ctx.strokeStyle = borderColors[0];\n//           ctx.beginPath();\n//           ctx.moveTo(rect.left, rect.top - 0.5);\n//           ctx.lineTo(rect.right, rect.top - 0.5);\n//           ctx.stroke();\n//         }\n//       });\n//     }\n//   }\n// }\n\nfunction _refreshHeader<T>(grid: ListGrid<T>): void {\n  const protectedSpace = grid[_]\n  if (protectedSpace.headerEvents) {\n    protectedSpace.headerEvents.forEach((id: number) => grid.unlisten(id))\n  }\n\n  const headerEvents: EventListenerId[] = (protectedSpace.headerEvents = [])\n\n  headerEvents.forEach((id) => grid.unlisten(id))\n\n  let layoutMap: LayoutMap<T>\n  if (\n    protectedSpace.layout &&\n    (!Array.isArray(protectedSpace.layout) || protectedSpace.layout.length > 0)\n  ) {\n    layoutMap = protectedSpace.layoutMap = new LayoutMap(\n      new MultiLayoutMap(protectedSpace.layout)\n    )\n  } else {\n    layoutMap = protectedSpace.layoutMap = new LayoutMap(\n      new SimpleHeaderLayoutMap(protectedSpace.header ?? [])\n    )\n  }\n  layoutMap.hiddenHeader = protectedSpace.hiddenHeader\n\n  if (!grid.hiddenHeader) {\n    layoutMap.headerObjects.forEach((cell) => {\n      const ids = cell.headerType.bindGridEvent(grid, cell.id)\n      headerEvents.push(...ids)\n      if (cell.style) {\n        if (cell.style instanceof HeaderBaseStyle) {\n          const id = cell.style.listen(\n            HeaderBaseStyle.EVENT_TYPE.CHANGE_STYLE,\n            () => {\n              grid.invalidate()\n            }\n          )\n          headerEvents.push(id)\n        }\n      }\n      if (cell.action) {\n        if (cell.action instanceof BaseAction) {\n          const ids = cell.action.bindGridEvent(grid, cell.id)\n          headerEvents.push(...ids)\n        }\n      }\n    })\n  }\n  layoutMap.columnObjects.forEach((col) => {\n    if (col.action) {\n      const ids = col.action.bindGridEvent(grid, col.id)\n      headerEvents.push(...ids)\n    }\n    if (col.columnType) {\n      const ids = col.columnType.bindGridEvent(grid, col.id)\n      headerEvents.push(...ids)\n    }\n    if (col.style) {\n      if (col.style instanceof columns.style.BaseStyle) {\n        const id = col.style.listen(\n          columns.style.EVENT_TYPE.CHANGE_STYLE,\n          () => {\n            grid.invalidate()\n          }\n        )\n        headerEvents.push(id)\n      }\n    }\n  })\n  for (let col = 0; col < layoutMap.columnWidths.length; col++) {\n    const column = layoutMap.columnWidths[col]\n    const { width, minWidth, maxWidth, disableResize } = column\n    if (width && (width > 0 || typeof width === 'string')) {\n      grid.setColWidth(col, width)\n    }\n    if (minWidth && (minWidth > 0 || typeof minWidth === 'string')) {\n      grid.setMinColWidth(col, minWidth)\n    }\n    if (maxWidth && (maxWidth > 0 || typeof maxWidth === 'string')) {\n      grid.setMaxColWidth(col, maxWidth)\n    }\n    if (typeof disableResize === 'boolean') {\n      grid.setColDisableResize(col, disableResize)\n    }\n  }\n  if (!grid.hiddenHeader) {\n    const headerRowHeight = grid[_].headerRowHeight\n    for (let row = 0; row < layoutMap.headerRowCount; row++) {\n      const height = Array.isArray(headerRowHeight)\n        ? headerRowHeight[row]\n        : headerRowHeight\n      if (height && height > 0) {\n        grid.setRowHeight(row, height)\n      }\n    }\n  }\n  grid.colCount = layoutMap.colCount\n  _refreshRowCount(grid)\n  grid.frozenRowCount = layoutMap.headerRowCount\n}\nfunction _refreshRowCount<T>(grid: ListGrid<T>): void {\n  const { layoutMap } = grid[_]\n  grid.rowCount =\n    grid[_].dataSource.length * layoutMap.bodyRowCount +\n    layoutMap.headerRowCount\n}\nfunction _tryWithUpdateDataSource<T>(\n  grid: ListGrid<T>,\n  fn: (grid: ListGrid<T>) => void\n): void {\n  if (grid[_].dataSourceEventIds) {\n    grid[_].dataSourceEventIds.forEach((id: number) => grid[_].handler.off(id))\n  }\n\n  fn(grid)\n\n  grid[_].dataSourceEventIds = [\n    grid[_].handler.on(\n      grid[_].dataSource as any,\n      DataSource.EVENT_TYPE.UPDATED_LENGTH,\n      () => {\n        _refreshRowCount(grid)\n        grid.selection.fireSelectedEvent()\n        grid.invalidate()\n      }\n    ),\n    grid[_].handler.on(\n      grid[_].dataSource as any,\n      DataSource.EVENT_TYPE.UPDATED_ORDER,\n      () => {\n        grid.selection.fireSelectedEvent()\n        grid.invalidate()\n      }\n    ),\n    grid[_].handler.on(\n      grid[_].dataSource as any,\n      DataSource.EVENT_TYPE.REFRESH_DATA,\n      () => {\n        grid.selection.fireSelectedEvent()\n        grid.invalidate()\n      }\n    ),\n  ]\n}\nfunction _setRecords<T>(grid: ListGrid<T>, records: T[] = []): void {\n  _tryWithUpdateDataSource(grid, () => {\n    grid[_].records = records\n    const newDataSource = (grid[_].dataSource = CachedDataSource.ofArray(\n      records\n    ))\n    grid.addDisposable(newDataSource)\n  })\n}\nfunction _setDataSource<T>(grid: ListGrid<T>, dataSource: DataSource<T>): void {\n  _tryWithUpdateDataSource(grid, () => {\n    if (dataSource) {\n      if (dataSource instanceof DataSource) {\n        grid[_].dataSource = dataSource\n      } else {\n        const newDataSource = (grid[_].dataSource = new CachedDataSource(\n          dataSource\n        ))\n        grid.addDisposable(newDataSource)\n      }\n    } else {\n      grid[_].dataSource = DataSource.EMPTY\n    }\n    grid[_].records = null\n  })\n}\nfunction _getRecordIndexByRow<T>(grid: ListGrid<T>, row: number): number {\n  const { layoutMap } = grid[_]\n  return layoutMap.getRecordIndexByRow(row)\n}\nfunction _onRangePaste<T>(\n  this: ListGrid<T>,\n  text: string,\n  test: (data: SetPasteValueTestData<T>) => boolean = (): boolean => true\n): void {\n  const { layoutMap } = this[_]\n  const selectionRange = this.selection.range\n  const { start } = this.getCellRange(\n    selectionRange.start.col,\n    selectionRange.start.row\n  )\n  const { end } = this.getCellRange(\n    selectionRange.end.col,\n    selectionRange.end.row\n  )\n  const values = parsePasteRangeBoxValues(text)\n\n  const pasteRowCount = Math.min(\n    Math.max(end.row - start.row + 1, values.rowCount),\n    this.rowCount - start.row\n  )\n  const pasteColCount = Math.min(\n    Math.max(end.col - start.col + 1, values.colCount),\n    this.colCount - start.col\n  )\n\n  let hasEditable = false\n  const actionColumnsBox: ColumnData<T>[][] = []\n  for (let bodyRow = 0; bodyRow < layoutMap.bodyRowCount; bodyRow++) {\n    const actionColumnsRow: ColumnData<T>[] = []\n    actionColumnsBox.push(actionColumnsRow)\n    for (let offsetCol = 0; offsetCol < pasteColCount; offsetCol++) {\n      const body = layoutMap.getBody(\n        start.col + offsetCol,\n        bodyRow + layoutMap.headerRowCount\n      )\n      actionColumnsRow[offsetCol] = body\n      if (!hasEditable && body.action?.editable) {\n        hasEditable = true\n      }\n    }\n  }\n  if (!hasEditable) {\n    return\n  }\n\n  const startRow = layoutMap.getRecordStartRowByRecordIndex(\n    layoutMap.getRecordIndexByRow(start.row)\n  )\n  const startRowOffset = start.row - startRow\n\n  let duplicate: { [key: number]: boolean } = {}\n  let actionRow = startRowOffset\n  let valuesRow = 0\n  for (let offsetRow = 0; offsetRow < pasteRowCount; offsetRow++) {\n    let valuesCol = 0\n    for (let offsetCol = 0; offsetCol < pasteColCount; offsetCol++) {\n      const { action, id } = actionColumnsBox[actionRow][offsetCol]\n      if (!duplicate[id as number] && action?.editable) {\n        duplicate[id as number] = true\n        const col = start.col + offsetCol\n        const row = start.row + offsetRow\n        const cellValue = values.getCellValue(valuesCol, valuesRow)\n\n        then(this.getRowRecord(row), (record) => {\n          then(_getCellValue(this, col, row), (oldValue) => {\n            if (\n              test({\n                grid: this,\n                record: record as T,\n                col,\n                row,\n                value: cellValue,\n                oldValue,\n              })\n            ) {\n              action.onPasteCellRangeBox(this, { col, row }, cellValue)\n            }\n          })\n        })\n      }\n      valuesCol++\n      if (valuesCol >= values.colCount) {\n        valuesCol = 0\n      }\n    }\n    actionRow++\n    if (actionRow >= layoutMap.bodyRowCount) {\n      actionRow = 0\n      duplicate = {}\n    }\n    valuesRow++\n    if (valuesRow >= values.rowCount) {\n      valuesRow = 0\n    }\n  }\n\n  const newEnd = {\n    col: start.col + pasteColCount - 1,\n    row: start.row + pasteRowCount - 1,\n  }\n  this.selection.range = {\n    start,\n    end: newEnd,\n  }\n  this.invalidateCellRange(this.selection.range)\n}\n\nfunction _onRangeDelete<T>(this: ListGrid<T>): void {\n  const { layoutMap } = this[_]\n  const selectionRange = this.selection.range\n  const { start } = this.getCellRange(\n    selectionRange.start.col,\n    selectionRange.start.row\n  )\n  const { end } = this.getCellRange(\n    selectionRange.end.col,\n    selectionRange.end.row\n  )\n\n  const deleteRowCount = Math.min(\n    end.row - start.row + 1,\n    this.rowCount - start.row\n  )\n  const deleteColCount = Math.min(\n    end.col - start.col + 1,\n    this.colCount - start.col\n  )\n\n  let hasEditable = false\n  const actionColumnsBox: ColumnData<T>[][] = []\n  for (let bodyRow = 0; bodyRow < layoutMap.bodyRowCount; bodyRow++) {\n    const actionColumnsRow: ColumnData<T>[] = []\n    actionColumnsBox.push(actionColumnsRow)\n    for (let offsetCol = 0; offsetCol < deleteColCount; offsetCol++) {\n      const body = layoutMap.getBody(\n        start.col + offsetCol,\n        bodyRow + layoutMap.headerRowCount\n      )\n      actionColumnsRow[offsetCol] = body\n      if (!hasEditable && body.action?.editable) {\n        hasEditable = true\n      }\n    }\n  }\n  if (!hasEditable) {\n    return\n  }\n\n  const startRow = layoutMap.getRecordStartRowByRecordIndex(\n    layoutMap.getRecordIndexByRow(start.row)\n  )\n  const startRowOffset = start.row - startRow\n\n  let duplicate: { [key: number]: boolean } = {}\n  let actionRow = startRowOffset\n  for (let offsetRow = 0; offsetRow < deleteRowCount; offsetRow++) {\n    for (let offsetCol = 0; offsetCol < deleteColCount; offsetCol++) {\n      const { action, id } = actionColumnsBox[actionRow][offsetCol]\n      if (!duplicate[id as number] && action?.editable) {\n        duplicate[id as number] = true\n        const col = start.col + offsetCol\n        const row = start.row + offsetRow\n\n        then(this.getRowRecord(row), (_record) => {\n          then(_getCellValue(this, col, row), (_oldValue) => {\n            action.onDeleteCellRangeBox(this, { col, row })\n          })\n        })\n      }\n    }\n    actionRow++\n    if (actionRow >= layoutMap.bodyRowCount) {\n      actionRow = 0\n      duplicate = {}\n    }\n  }\n\n  this.invalidateCellRange(selectionRange)\n}\n\n// end private methods\n\ninterface ListGridProtected<T> extends DrawGridProtected {\n  dataSourceEventIds: number[]\n  headerEvents: number[]\n  layoutMap: LayoutMapAPI<T>\n  headerValues: HeaderValues\n  tooltipHandler: TooltipHandler<T>\n  messageHandler: MessageHandler<T>\n  theme: Theme | null\n  headerRowHeight: number | number[]\n  header: HeadersDefine<T>\n  layout: LayoutDefine<T>\n  gridCanvasHelper: GridCanvasHelper<T>\n  sortState: SortState\n  hiddenHeader: boolean\n  dataSource: DataSource<T>\n  records?: T[] | null\n  allowRangePaste: boolean\n  handler: EventHandler\n  disabled: boolean | ((record: T) => boolean)\n  readOnly: boolean | ((record: T) => boolean)\n  spanBodyOptions?: ListGridSpanBodyOptions\n}\n\ninterface ListGridConstructorOptions<T> extends DrawGridConstructorOptions {\n  /**\n   * Simple header property\n   */\n  header?: HeadersDefine<T>\n  /**\n   * Layout property\n   */\n  layout?: LayoutDefine<T>\n  /**\n   * Header row height(s)\n   */\n  headerRowHeight?: number[] | number\n  /**\n   * Hidden header\n   */\n  hiddenHeader?: boolean\n  /**\n   * Records data source\n   */\n  dataSource?: DataSource<T>\n  /**\n   * Simple records data\n   */\n  records?: T[]\n  /**\n   * Theme\n   */\n  theme?: ThemeDefine | string\n  /**\n   * If set to true to allow pasting of ranges. default false\n   */\n  allowRangePaste?: boolean\n  /**\n   * @deprecated Cannot be used with ListGrid.\n   * @override\n   */\n  rowCount?: undefined\n  /**\n   * @deprecated Cannot be used with ListGrid.\n   * @override\n   */\n  colCount?: undefined\n  /**\n   * @deprecated Cannot be used with ListGrid.\n   * @override\n   */\n  frozenRowCount?: undefined\n  disabled?: boolean | ((record: T) => boolean)\n  readonly?: boolean | ((record: T) => boolean)\n  spanBodyOptions?: ListGridSpanBodyOptions\n  monitorResize?: boolean\n}\n\n/**\n * ListGrid\n */\nexport class ListGrid<T> extends DrawGrid implements ListGridAPI<T> {\n  public static get EVENT_TYPE(): typeof LG_EVENT_TYPE {\n    return LG_EVENT_TYPE\n  }\n  private [_]: ListGridProtected<T>\n  /**\n   * constructor\n   * @param options - Constructor options\n   */\n  public constructor(options: ListGridConstructorOptions<T> = {}) {\n    super(omit(options, ['colCount', 'rowCount', 'frozenRowCount']))\n    this[_] = {} as any\n    const protectedSpace = this[_]\n    protectedSpace.disabled = options.disabled || false\n    protectedSpace.readOnly = options.readonly || false\n    protectedSpace.header = options.header || []\n    protectedSpace.layout = options.layout || []\n    protectedSpace.headerRowHeight = options.headerRowHeight || []\n    protectedSpace.hiddenHeader = !!options.hiddenHeader\n    protectedSpace.spanBodyOptions = options.spanBodyOptions || undefined\n    protectedSpace.handler = new EventHandler()\n    protectedSpace.sortState = {\n      col: -1,\n      order: undefined,\n      row: -1,\n    }\n    protectedSpace.gridCanvasHelper = new GridCanvasHelper(this)\n    protectedSpace.theme = themes.of(options.theme)\n    protectedSpace.messageHandler = new MessageHandler(\n      this,\n      (col: number, row: number): Message => _getCellMessage(this, col, row)\n    )\n    protectedSpace.tooltipHandler = new TooltipHandler(this)\n    if (options.dataSource) {\n      _setDataSource(this, options.dataSource)\n    } else {\n      _setRecords(this, options.records)\n    }\n    protectedSpace.allowRangePaste = options.allowRangePaste ?? false\n    _refreshHeader(this)\n    this.selection.fireSelectedEvent()\n    this.invalidate()\n    if (!isDef(options.monitorResize) || options.monitorResize === true) {\n      protectedSpace.handler.on(window, 'resize', () => this.resize())\n    }\n  }\n  /**\n   * Dispose the grid instance.\n   * @returns\n   */\n  public dispose(): void {\n    const protectedSpace = this[_]\n    protectedSpace.handler.dispose()\n    protectedSpace.messageHandler.dispose()\n    protectedSpace.tooltipHandler.dispose()\n    super.dispose()\n  }\n\n  /**\n   * Define of the header with the given data.\n   * <pre>\n   * column options\n   * -----\n   * caption: header caption\n   * field: field name\n   * width: column width\n   * minWidth: column min width\n   * maxWidth: column max width\n   * disableResize: column disable resize\n   * icon: icon name\n   * message: message key name\n   * columnType: column type\n   * action: column action\n   * style: column style\n   * headerType: header type\n   * headerStyle: header style\n   * headerAction: header action\n   * headerField: header field name\n   * sort: define sort setting\n   * -----\n   *\n   * multiline header\n   * -----\n   * caption: header caption\n   * columns: columns define\n   * -----\n   * </pre>\n   */\n  public get header() {\n    return this[_].header\n  }\n  public set header(header) {\n    this[_].header = header\n    _refreshHeader(this)\n    const oldRange = this.selection.range\n    const newRange = this.updateSelectionRange(this.selection.range)\n    if (\n      oldRange.start.col !== newRange.start.col ||\n      oldRange.end.col !== newRange.end.col ||\n      oldRange.start.row !== newRange.start.row ||\n      oldRange.end.row !== newRange.end.row\n    ) {\n      this.selection._forceUpdateRange()\n      this.selection.fireSelectedEvent()\n    }\n  }\n  /**\n   * The define of the layout.\n   */\n  get layout(): LayoutDefine<T> {\n    return this[_].layout\n  }\n  set layout(layout) {\n    this[_].layout = layout\n    _refreshHeader(this)\n  }\n  /**\n   * Get the row count per record\n   */\n  get recordRowCount(): number {\n    return this[_].layoutMap.bodyRowCount\n  }\n  /**\n   * Records.\n   */\n  public get records(): T[] | null {\n    return this[_].records || null\n  }\n  public set records(records) {\n    if (records == null) {\n      return\n    }\n    _setRecords(this, records)\n    _refreshRowCount(this)\n    this.invalidate()\n  }\n  /**\n   * Data source.\n   */\n  public get dataSource(): DataSource<T> {\n    return this[_].dataSource\n  }\n  public set dataSource(dataSource) {\n    _setDataSource(this, dataSource)\n    _refreshRowCount(this)\n    this.invalidate()\n  }\n  /**\n   * Theme.\n   */\n  public get theme(): Theme | null {\n    return this[_].theme\n  }\n  public set theme(theme) {\n    this[_].theme = themes.of(theme)\n    this.invalidate()\n  }\n  /**\n   * If set to true to allow pasting of ranges.\n   */\n  get allowRangePaste(): boolean {\n    return this[_].allowRangePaste\n  }\n  set allowRangePaste(allowRangePaste) {\n    this[_].allowRangePaste = allowRangePaste\n  }\n  /**\n   * Sort state.\n   */\n  public get sortState() {\n    return this[_].sortState\n  }\n  public set sortState(sortState) {\n    const oldState = this.sortState\n    let oldField\n    if (oldState.col >= 0 && oldState.row >= 0) {\n      oldField = this.getHeaderField(oldState.col, oldState.row)\n    }\n\n    const newState = (this[_].sortState = isDef(sortState)\n      ? sortState\n      : {\n          col: -1,\n          row: -1,\n          order: undefined,\n        })\n\n    let newField\n    if (newState.col >= 0 && newState.row >= 0) {\n      newField = this.getHeaderField(newState.col, newState.row)\n    }\n\n    // bind header value\n    if (isDef(oldField) && oldField !== newField) {\n      this.setHeaderValue(oldState.col, oldState.row, undefined)\n    }\n    if (isDef(newField)) {\n      this.setHeaderValue(newState.col, newState.row, newState.order)\n    }\n  }\n  /**\n   * Header values.\n   */\n  public get headerValues(): HeaderValues {\n    return this[_].headerValues || (this[_].headerValues = new Map())\n  }\n  public set headerValues(headerValues) {\n    this[_].headerValues = headerValues || new Map()\n  }\n  /**\n   * Whether to hide the column header.\n   */\n  public get hiddenHeader() {\n    return this[_].hiddenHeader\n  }\n  public set hiddenHeader(hidden) {\n    this[_].hiddenHeader = hidden\n    _refreshHeader(this)\n    this.invalidate()\n  }\n  /**\n   * Disabled.\n   */\n  public get disabled() {\n    return this[_].disabled\n  }\n  public set disabled(disabled) {\n    this[_].disabled = disabled\n  }\n  /**\n   * Read Only.\n   */\n  public get readOnly() {\n    return this[_].readOnly\n  }\n  public set readOnly(readOnly) {\n    this[_].readOnly = readOnly\n  }\n  public get readonly() {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    return this.readOnly\n  }\n  public set readonly(readOnly) {\n    window.console.warn(\n      \"'readonly' is deprecated, please use 'readOnly' instead\"\n    )\n    this.readOnly = readOnly\n  }\n  /**\n   * Span Body\n   */\n  public get spanBodyOptions(): ListGridSpanBodyOptions | null {\n    return this[_].spanBodyOptions ?? null\n  }\n  public set spanBodyOptions(spanBodyOptions) {\n    this[_].spanBodyOptions = spanBodyOptions ?? undefined\n  }\n  /**\n   * Get the field of the given column index.\n   * @param col - The column index.\n   * @param row - The row index.\n   * @returns The field object.\n   */\n  public getField(col: number, row: number): FieldDef<T> | undefined {\n    return this[_].layoutMap.getBody(\n      col,\n      row ?? this[_].layoutMap.headerRowCount\n    ).field\n  }\n  /**\n   * Get the column define of the given column index.\n   * @param col - The column index.\n   * @param row - The row index.\n   * @returns The column define object.\n   */\n  public getColumnDefine(col: number, row: number): ColumnDefine<T> {\n    return this[_].layoutMap.getBody(\n      col,\n      row ?? this[_].layoutMap.headerRowCount\n    ).define\n  }\n  public getColumnType(col: number, row: number): ColumnTypeAPI {\n    return this[_].layoutMap.getBody(col, row).columnType\n  }\n  /**\n   * Get the header field of the given header cell.\n   * @param col - The column index.\n   * @param row - The header row index.\n   * @returns The field object.\n   */\n  public getHeaderField(col: number, row: number) {\n    const hd = this[_].layoutMap.getHeader(col, row)\n    return hd.field\n  }\n  /**\n   * Get the header define of the given header cell.\n   * @param col - The column index.\n   * @param row - The header row index.\n   * @returns The header define object.\n   */\n  public getHeaderDefine(col: number, row: number): HeaderDefine<T> {\n    const hd = this[_].layoutMap.getHeader(col, row)\n    return hd.define\n  }\n  /**\n   * Get the column of the given column index.\n   * @param col - The column index.\n   * @returns The field object.\n   */\n  public getColumn(col: number, row?: number): ColumnData<T> {\n    return this[_].layoutMap.getBody(col, row || 0)\n  }\n  /**\n   * Get the record of the given row index.\n   * @param row - The row index.\n   * @returns The record.\n   */\n  public getRowRecord(row: number): MaybePromiseOrUndef<T> {\n    if (row < this[_].layoutMap.headerRowCount) {\n      return undefined\n    } else {\n      return this[_].dataSource.get(_getRecordIndexByRow(this, row))\n    }\n  }\n  /**\n   * Get the record index of the given row index.\n   * @param row -  The row index.\n   * @returns The record index.\n   */\n  public getRecordIndexByRow(row: number): number {\n    return _getRecordIndexByRow(this, row)\n  }\n  /**\n   * Get the record index of the given row index.\n   * @param row - The row index.\n   * @returns The record index.\n   */\n  public getRowRecordIndex(row: number): number {\n    window.console.warn(\n      \"'getRowRecordIndex' is deprecated, please use 'getRecordIndexByRow' instead\"\n    )\n    return this.getRecordIndexByRow(row)\n  }\n  /**\n   * Gets the row index starting at the given record index.\n   * @param index - The record index.\n   */\n  public getRecordStartRowByRecordIndex(index: number): number {\n    return this[_].layoutMap.getRecordStartRowByRecordIndex(index)\n  }\n  /**\n   * Get the column index of the given field.\n   * @param field - The field.\n   * @returns The column index.\n   */\n  public getColumnIndexByField(field: FieldDef<T>): number | null {\n    const range = this.getCellRangeByField(field, 0)\n    return range?.start.col ?? null\n  }\n  /**\n   * Get the column index of the given field.\n   * @param field - The field.\n   * @param index - The record index\n   * @returns The column index.\n   */\n  public getCellRangeByField(\n    field: FieldDef<T>,\n    index: number\n  ): CellRange | null {\n    const { layoutMap } = this[_]\n    const colObj = layoutMap.columnObjects.find((col) => col.field === field)\n    if (colObj) {\n      const layoutRange = layoutMap.getBodyLayoutRangeById(colObj.id)\n      const startRow = layoutMap.getRecordStartRowByRecordIndex(index)\n      return {\n        start: {\n          col: layoutRange.start.col,\n          row: startRow + layoutRange.start.row,\n        },\n        end: {\n          col: layoutRange.end.col,\n          row: startRow + layoutRange.end.row,\n        },\n      }\n    }\n    return null\n  }\n  /**\n   * Focus the cell.\n   * @param field - The field.\n   * @param index - The record index\n   * @returns\n   */\n  public focusGridCell(field: any, index: number) {\n    const {\n      start: { col: startCol, row: startRow },\n      end: { col: endCol, row: endRow },\n    } = this.selection.range\n\n    const newFocus = this.getCellRangeByField(field, index)?.start\n    if (newFocus == null) {\n      return\n    }\n    this.focusCell(newFocus.col, newFocus.row)\n    this.selection.select = newFocus\n    this.invalidateGridRect(startCol, startRow, endCol, endRow)\n    this.invalidateCell(newFocus.col, newFocus.row)\n  }\n  /**\n   * Scroll to where cell is visible.\n   * @param field - The field.\n   * @param index - The record index\n   * @returns\n   */\n  public makeVisibleGridCell(field: any, index: number) {\n    const cell = this.getCellRangeByField(field, index)?.start\n    this.makeVisibleCell(\n      cell?.col ?? 0,\n      cell?.row ?? this[_].layoutMap.headerRowCount\n    )\n  }\n  /**\n   * Select cell range\n   */\n  public selectCellRange(\n    startCol: number,\n    startRow: number,\n    endCol: number,\n    endRow: number\n  ): void {\n    this.focusCell(startCol, startRow)\n    this.selection.range = createCellRange(startCol, startRow, endCol, endRow)\n    const {\n      start: { col: newStartCol, row: newStartRow },\n      end: { col: newEndCol, row: newEndRow },\n    } = this.selection.range\n    this.invalidateGridRect(newStartCol, newStartRow, newEndCol, newEndRow)\n  }\n  public getGridCanvasHelper(): GridCanvasHelper<T> {\n    return this[_].gridCanvasHelper\n  }\n  /**\n   * Get cell range information for a given cell.\n   * @param col - column index of the cell\n   * @param row - row index of the cell\n   * @returns cell range info\n   */\n  public getCellRange(col: number, row: number): CellRange {\n    return _getCellRange(this, col, row)\n  }\n  /**\n   * Get header range information for a given cell.\n   * @param col - column index of the cell\n   * @param row - row index of the cell\n   * @returns cell range info\n   */\n  public getHeaderCellRange(col: number, row: number) {\n    window.console.warn(\n      \"'getHeaderCellRange' is deprecated, please use 'getCellRange' instead\"\n    )\n    return this.getCellRange(col, row)\n  }\n  protected getCopyCellValue(\n    col: number,\n    row: number,\n    range?: CellRange\n  ): string {\n    const cellRange = _getCellRange(this, col, row)\n    const startCol = range\n      ? Math.max(range.start.col, cellRange.start.col)\n      : cellRange.start.col\n    const startRow = range\n      ? Math.max(range.start.row, cellRange.start.row)\n      : cellRange.start.row\n    if (startCol !== col || startRow !== row) {\n      return ''\n    }\n    const { layoutMap } = this[_]\n    let value = _getCellValue(this, col, row)\n    if (row >= layoutMap.headerRowCount) {\n      const columnType = layoutMap.getBody(col, row).columnType\n      value = columnType.getCopyCellValue(value, this, { col, row }) ?? value\n      value = columnType.convertCopyValue(value, { col, row }, this)\n    }\n    return value\n  }\n  protected onDrawCell(col: number, row: number, context: CellContext) {\n    const { layoutMap } = this[_]\n\n    let draw\n    let style\n    if (row < layoutMap.headerRowCount) {\n      const hd = layoutMap.getHeader(col, row)\n      draw = hd.headerType.onDrawCell\n      ;({ style } = hd)\n    } else {\n      const column = layoutMap.getBody(col, row)\n      draw = column.columnType.onDrawCell\n      ;({ style } = column)\n    }\n    _updateRect(this, col, row, context)\n    const cellValue = _getCellValue(this, col, row)\n    return _onDrawValue(\n      this,\n      cellValue,\n      context,\n      {\n        col,\n        row,\n      },\n      style,\n      draw\n    )\n  }\n  public doGetCellValue(\n    col: number,\n    row: number,\n    valueCallback: (value: any) => void\n  ) {\n    if (row < this[_].layoutMap.headerRowCount) {\n      // nop\n      return false\n    } else {\n      const value = _getCellValue(this, col, row)\n      if (isPromise(value)) {\n        // 在延迟期间被忽略\n        return false\n      }\n      valueCallback(value)\n    }\n    return true\n  }\n  public doChangeValue(\n    col: number,\n    row: number,\n    changeValueCallback: (before: any) => any\n  ) {\n    if (row < this[_].layoutMap.headerRowCount) {\n      // nop\n      return false\n    } else {\n      const record = this.getRowRecord(row)\n      if (isPromise(record)) {\n        // 在延迟期间被忽略\n        return false\n      }\n      const before = _getCellValue(this, col, row)\n      if (isPromise(before)) {\n        // 在延迟期间被忽略\n        return false\n      }\n      const after = changeValueCallback(before)\n      if (after === undefined) {\n        return false\n      }\n      return then(_setCellValue(this, col, row, after), (ret: any) => {\n        if (ret) {\n          const { field } = this[_].layoutMap.getBody(col, row)\n          this.fireListeners(LG_EVENT_TYPE.CHANGED_VALUE, {\n            col,\n            row,\n            field: field as FieldDef<T>,\n            record: record as T,\n            value: after,\n            oldValue: before,\n          })\n        }\n        return ret\n      })\n    }\n  }\n  public doSetPasteValue(\n    text: string,\n    test?: (data: SetPasteValueTestData<T>) => boolean\n  ): void {\n    _onRangePaste.call(\n      this,\n      text,\n      test as (data: SetPasteValueTestData<T>) => boolean\n    )\n  }\n  public getHeaderValue(col: number, row: number): any | undefined {\n    const field = this.getHeaderField(col, row)\n    return this.headerValues.get(field)\n  }\n  public setHeaderValue(col: number, row: number, newValue: any): void {\n    const field = this.getHeaderField(col, row)\n\n    const oldValue = this.headerValues.get(field)\n    this.headerValues.set(field, newValue)\n\n    this.fireListeners(LG_EVENT_TYPE.CHANGED_HEADER_VALUE, {\n      col,\n      field,\n      oldValue,\n      row,\n      value: newValue,\n    })\n  }\n  public getLayoutCellId(col: number, row: number): LayoutObjectId {\n    return this[_].layoutMap.getCellId(col, row)\n  }\n  public completeEdit() {\n    this.focus()\n  }\n  protected bindEventsInternal() {\n    this.listen(LG_EVENT_TYPE.SELECTED_CELL, (e: SelectedCellEvent) => {\n      if (e.selected) {\n        const beforeRange = _getCellRange(this, e.before.col, e.before.row)\n        const {\n          start: { col: beforeStartCol, row: beforeStartRow },\n          end: { col: beforeEndCol, row: beforeEndRow },\n        } = beforeRange\n        if (\n          beforeStartCol !== beforeEndCol ||\n          beforeStartRow !== beforeEndRow\n        ) {\n          this.invalidateGridRect(\n            beforeStartCol,\n            beforeStartRow,\n            beforeEndCol,\n            beforeEndRow\n          )\n        }\n\n        const range = _getCellRange(this, e.col, e.row)\n        const {\n          start: { col: startCol, row: startRow },\n          end: { col: endCol, row: endRow },\n        } = range\n        if (startCol !== endCol || startRow !== endRow) {\n          this.invalidateGridRect(startCol, startRow, endCol, endRow)\n        }\n      }\n    })\n    this.listen(LG_EVENT_TYPE.PASTE_CELL, (e: PasteCellEvent) => {\n      if (!this[_].allowRangePaste) {\n        return\n      }\n      const { start, end } = this.selection.range\n      if (!e.multi && cellEquals(start, end)) {\n        return\n      }\n      const { layoutMap } = this[_]\n\n      if (start.row < layoutMap.headerRowCount) {\n        return\n      }\n      event.cancel(e.event)\n      _onRangePaste.call(this, e.normalizeValue)\n    })\n    this.listen(LG_EVENT_TYPE.DELETE_CELL, (e) => {\n      const { start } = this.selection.range\n      const { layoutMap } = this[_]\n\n      if (start.row < layoutMap.headerRowCount) {\n        return\n      }\n      event.cancel(e.event)\n      _onRangeDelete.call(this)\n    })\n  }\n  protected getMoveLeftColByKeyDownInternal({ col, row }: CellAddress): number {\n    const {\n      start: { col: startCol },\n    } = _getCellRange(this, col, row)\n    col = startCol\n    return super.getMoveLeftColByKeyDownInternal({ col, row })\n  }\n  protected getMoveRightColByKeyDownInternal({\n    col,\n    row,\n  }: CellAddress): number {\n    const {\n      end: { col: endCol },\n    } = _getCellRange(this, col, row)\n    col = endCol\n    return super.getMoveRightColByKeyDownInternal({ col, row })\n  }\n  protected getMoveUpRowByKeyDownInternal({ col, row }: CellAddress): number {\n    const {\n      start: { row: startRow },\n    } = _getCellRange(this, col, row)\n    row = startRow\n    return super.getMoveUpRowByKeyDownInternal({ col, row })\n  }\n  protected getMoveDownRowByKeyDownInternal({ col, row }: CellAddress): number {\n    const {\n      end: { row: endRow },\n    } = _getCellRange(this, col, row)\n    row = endRow\n    return super.getMoveDownRowByKeyDownInternal({ col, row })\n  }\n  protected getOffsetInvalidateCells(): number {\n    return 1\n  }\n  protected getCopyRangeInternal(range: CellRange): CellRange {\n    const { start } = this.getCellRange(range.start.col, range.start.row)\n    const { end } = this.getCellRange(range.end.col, range.end.row)\n    return { start, end }\n  }\n  protected getAttachCellsAreaInternal(range: CellRange) {\n    const rect = super.getAttachCellsAreaInternal(range)\n    const {\n      start: { col, row },\n    } = this.getCellRange(range.start.col, range.start.row)\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      column.columnType.reviseAttachCellsArea(rect, row, this)\n    }\n    return rect\n  }\n  protected getAttachCellsPaddingInternal(\n    range: CellRange\n  ): [number, number, number, number] {\n    const padding = super.getAttachCellsPaddingInternal(range)\n    const {\n      start: { col, row },\n    } = this.getCellRange(range.start.col, range.start.row)\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      column.columnType.reviseAttachCellsPadding(padding, row, this)\n    }\n    return padding\n  }\n  protected getFocusRectInternal(col: number, row: number) {\n    const rect: Rect = super.getFocusRectInternal(col, row)\n    if (this[_] && row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      column.columnType.reviseFocusRect(rect, row, this)\n    }\n    return rect\n  }\n  protected getCellOverflowTextInternal(cell: CellAddress) {\n    const col = cell.col\n    const row = cell.row\n    let text = ''\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      const tooltip = column.tooltip\n      const record: any = this.getRowRecord(row)\n      if (record) {\n        if (typeof tooltip === 'function') {\n          text = tooltip.call(this, record)\n        } else if (typeof tooltip === 'string') {\n          text = record[tooltip]\n        }\n      }\n    } else {\n      const hd = this[_].layoutMap.getHeader(col, row)\n      if (hd) {\n        const tooltip = hd.tooltip\n        if (typeof tooltip === 'function') {\n          text = tooltip.call(this, {\n            cell: { col, row },\n            field: this.getHeaderField(col, row),\n          })\n        } else if (typeof tooltip === 'string') {\n          text = tooltip\n        }\n      }\n    }\n    return text || ''\n  }\n  protected getCellOverflowTypeInternal(cell: CellAddress) {\n    const col = cell.col\n    const row = cell.row\n    let type = ''\n    if (row >= this[_].layoutMap.headerRowCount) {\n      const column = this[_].layoutMap.getBody(col, row)\n      const tooltipType = column.tooltipType\n      const record = this.getRowRecord(row)\n      if (record) {\n        if (typeof tooltipType === 'function') {\n          type = tooltipType.call(this, record)\n        } else if (typeof tooltipType === 'string') {\n          type = tooltipType\n        }\n      }\n    } else {\n      const hd = this[_].layoutMap.getHeader(col, row)\n      if (hd) {\n        const tooltipType = hd.tooltipType\n        if (typeof tooltipType === 'function') {\n          type = tooltipType.call(this, {\n            cell: { col, row },\n            field: this.getHeaderField(col, row),\n          })\n        } else if (typeof tooltipType === 'string') {\n          type = tooltipType\n        }\n      }\n    }\n    return type || ''\n  }\n  protected getDefaultRowHeight() {\n    return (\n      (this[_] && this[_].gridCanvasHelper.theme.defaultRowHeight) ||\n      super.getDefaultRowHeight()\n    )\n  }\n  protected getDefaultColWidth() {\n    return (\n      (this[_] && this[_].gridCanvasHelper.theme.defaultColWidth) ||\n      super.getDefaultColWidth()\n    )\n  }\n  protected getHighlightBorderWidth() {\n    return (\n      (this[_] && this[_].gridCanvasHelper.theme.highlightBorderWidth) ||\n      super.getHighlightBorderWidth()\n    )\n  }\n  protected updateSelectionRange(range: CellRange) {\n    const oldStartCol = range.start.col\n    const oldStartRow = range.start.row\n    const oldEndCol = range.end.col\n    const oldEndRow = range.end.row\n    const startCol = Math.min(range.start.col, range.end.col)\n    const startRow = Math.min(range.start.row, range.end.row)\n    const endCol = Math.max(range.start.col, range.end.col)\n    const endRow = Math.max(range.start.row, range.end.row)\n    let newStartCol = startCol\n    let newStartRow = startRow\n    let newEndCol = endCol\n    let newEndRow = endRow\n    for (let row = startRow; row <= endRow; row++) {\n      for (let col = startCol; col <= endCol; col++) {\n        const r = this.getCellRange(col, row)\n        newStartCol = Math.min(r.start.col, newStartCol)\n        newStartRow = Math.min(r.start.row, newStartRow)\n        newEndCol = Math.max(r.end.col, newEndCol)\n        newEndRow = Math.max(r.end.row, newEndRow)\n      }\n    }\n    if (newStartCol < startCol) {\n      if (range.start.col > range.end.col) {\n        range.end.col = newStartCol\n      } else {\n        range.start.col = newStartCol\n      }\n    }\n    if (newStartRow < startRow) {\n      if (range.start.row > range.end.row) {\n        range.end.row = newStartRow\n      } else {\n        range.start.row = newStartRow\n      }\n    }\n    if (newEndCol > endCol) {\n      if (range.start.col > range.end.col) {\n        range.start.col = newEndCol\n      } else {\n        range.end.col = newEndCol\n      }\n    }\n    if (newEndRow > endRow) {\n      if (range.start.row > range.end.row) {\n        range.start.row = newEndRow\n      } else {\n        range.end.row = newEndRow\n      }\n    }\n    if (\n      oldStartCol !== range.start.col ||\n      oldStartRow !== range.start.row ||\n      oldEndCol !== range.end.col ||\n      oldEndRow !== range.end.row\n    ) {\n      range = this.updateSelectionRange(range)\n    }\n    return range\n  }\n  protected getDefaultFont(): string {\n    return this[_].gridCanvasHelper.theme.font\n  }\n  protected getDefaultUnderlayBackgroundColor(): string {\n    return this[_].gridCanvasHelper.theme.underlayBackgroundColor\n  }\n  protected getDefaultBorderColor(): string {\n    return this[_].gridCanvasHelper.theme.gridBorderColor\n  }\n  protected getDefaultBorderWidth(): number {\n    return this[_].gridCanvasHelper.theme.gridBorderWidth\n  }\n  fireListeners<TYPE extends keyof ListGridEventHandlersEventMap<T>>(\n    type: TYPE,\n    ...event: ListGridEventHandlersEventMap<T>[TYPE]\n  ): ListGridEventHandlersReturnMap[TYPE][] {\n    return super.fireListeners(type as any, ...event)\n  }\n}\n","import { IconDefine } from './ts-types'\nimport { Theme } from './themes/theme'\nimport { icons as iconPlugins } from './plugins/icons'\nimport { themes as themePlugins } from './plugins/themes'\n\nfunction registerPlugin<T>(\n  obj: { [key: string]: T },\n  name: string,\n  value: T\n): T {\n  const old = obj[name]\n  obj[name] = value\n  return old\n}\n\nfunction registerPlugins<T>(\n  obj: { [key: string]: T },\n  values: { [key: string]: T }\n): void {\n  for (const k in values) {\n    obj[k] = values[k]\n  }\n}\n\nfunction theme(name: string, theme?: Theme): Theme {\n  if (theme != null) {\n    return registerPlugin(themePlugins, name, theme)\n  } else {\n    return themePlugins[name]\n  }\n}\n\nfunction icon(name: string, icon?: IconDefine): IconDefine {\n  if (icon != null) {\n    return registerPlugin(iconPlugins, name, icon)\n  } else {\n    return iconPlugins[name]\n  }\n}\n\nfunction icons(icons: { [key: string]: IconDefine }): void {\n  return registerPlugins(iconPlugins, icons)\n}\n\nexport const register = {\n  theme,\n  icon,\n  icons,\n}\n","import { IconDefine } from './ts-types'\nimport { columns as _columns } from './columns'\nimport { core as _core } from './core'\nimport { data as _data } from './data'\nimport { headers as _headers } from './headers'\nimport { themes as _themes } from './themes'\nimport { tools as _tools } from './tools'\nimport { ListGrid as _ListGrid } from './ListGrid'\nimport { GridCanvasHelper as _GridCanvasHelper } from './GridCanvasHelper'\nimport { register as _register } from './register'\nimport { svgIcons } from './icons'\nimport { str } from './internal/utils'\n\n/**\n * Kaka Grid\n */\nconst _kakaGrid: {\n  version: string\n  core: typeof _core\n  tools: typeof _tools\n  ListGrid: typeof _ListGrid\n  columns: typeof _columns\n  data: typeof _data\n  headers: typeof _headers\n  themes: typeof _themes\n  GridCanvasHelper: typeof _GridCanvasHelper\n  readonly icons: {\n    [key: string]: IconDefine\n  }\n  template: typeof str.template\n  register: typeof _register\n} = {\n  version: 'VERSION',\n\n  core: _core,\n  tools: _tools,\n\n  // impl Grids\n  ListGrid: _ListGrid,\n\n  // objects\n  columns: _columns,\n  data: _data,\n  headers: _headers,\n  themes: _themes,\n\n  // helper\n  GridCanvasHelper: _GridCanvasHelper,\n  get icons() {\n    return svgIcons.get()\n  },\n  template: str.template,\n\n  // plugin registers\n  register: _register,\n}\n\nnamespace kakaGrid {\n  export const version: string = _kakaGrid.version\n  export class ListGrid<T> extends _kakaGrid.ListGrid<T> {}\n  export const core: typeof _kakaGrid.core = _kakaGrid.core\n  export const tools: typeof _kakaGrid.tools = _kakaGrid.tools\n  export const columns: typeof _kakaGrid.columns = _kakaGrid.columns\n  export const data: typeof _kakaGrid.data = _kakaGrid.data\n  export const headers: typeof _kakaGrid.headers = _kakaGrid.headers\n  export const themes: typeof _kakaGrid.themes = _kakaGrid.themes\n  export const GridCanvasHelper: typeof _kakaGrid.GridCanvasHelper =\n    _kakaGrid.GridCanvasHelper\n  export const icons: {\n    [key: string]: IconDefine\n  } = _kakaGrid.icons\n  export const template: typeof str.template = _kakaGrid.template\n  export const register: typeof _kakaGrid.register = _kakaGrid.register\n}\n\nexport default kakaGrid\n"],"names":["isNode","style","extend","styleContents.of","columnUtils.loadIcons","createInputElement","globalInlineInputBindGridCount","attachInput","detachInput","doChangeValue","setInputAttrs","getState","of","utils.customDraw","INLINE_INPUT_EDITOR_STATE_ID","columnUtils.reviseAttachCellsArea","columnUtils.reviseAttachCellsPadding","columnUtils.customDraw","columnUtils.getActionTextPadding","columnUtils.drawActionButton","columnUtils.drawAttachArea","BUTTON_COLUMN_STATE_ID","utils.loadIcons","CHECK_COLUMN_STATE_ID","SWITCH_COLUMN_STATE_ID","utils.drawActionButton","utils.getActionTextPadding","INLINE_LOOKUP_EDITOR_STATE_ID","INLINE_TEXTAREA_EDITOR_STATE_ID","sort\n            .sortPromise","COLUMN_ACTION_STATE_ID","RADIO_COLUMN_STATE_ID","ColumnAction","actionOf","ColumnStyle","styleOf","typeOf","MAX_SCROLL","_","bindCellClickAction","bindCellKeyAction","BaseAction","ACTIONS","BaseStyle","BaseStdStyle","Style","BaseCheckStyle","defaultMultilineTextStyle","CHECK_HEADER_STATE_ID","SWITCH_HEADER_STATE_ID","TYPES","ofCell","action","headerActionOf","headerActionOfCell","headerStyleOf","type","headerTypeOf","headerTypeOfCell","plugins","themes","seqId","icons","ELEMENT_NODE","ratio","parser","SwitchStyle","inlineUtils.of","buildInlines","inlineUtils.buildInlines","inlineUtils.string","HeaderBaseStyle","theme","themePlugins","iconPlugins","_core","_tools","_ListGrid","_columns","_data","_headers","_themes","_GridCanvasHelper","_register"],"mappings":"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"}